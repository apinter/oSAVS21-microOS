{
  "version": 3,
  "sources": ["../codemirror/mode/xml/xml.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n"],
  "mappings": "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",
  "names": []
}
