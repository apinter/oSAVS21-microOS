{
  "version": 3,
  "sources": ["browser-external:fs", "browser-external:path", "../resolve/lib/caller.js", "../path-parse/index.js", "../resolve/lib/node-modules-paths.js", "../resolve/lib/normalize-options.js", "../function-bind/implementation.js", "../function-bind/index.js", "../has/src/index.js", "../is-core-module/index.js", "../resolve/lib/async.js", "../resolve/lib/core.js", "../resolve/lib/is-core.js", "../resolve/lib/sync.js", "../resolve/index.js", "dep:resolve"],
  "sourcesContent": ["export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"fs\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"path\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "module.exports = function () {\n    // see https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n    var origPrepareStackTrace = Error.prepareStackTrace;\n    Error.prepareStackTrace = function (_, stack) { return stack; };\n    var stack = (new Error()).stack;\n    Error.prepareStackTrace = origPrepareStackTrace;\n    return stack[2].getFileName();\n};\n", "'use strict';\n\nvar isWindows = process.platform === 'win32';\n\n// Regex to split a windows path into into [dir, root, basename, name, ext]\nvar splitWindowsRe =\n    /^(((?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?[\\\\\\/]?)(?:[^\\\\\\/]*[\\\\\\/])*)((\\.{1,2}|[^\\\\\\/]+?|)(\\.[^.\\/\\\\]*|))[\\\\\\/]*$/;\n\nvar win32 = {};\n\nfunction win32SplitPath(filename) {\n  return splitWindowsRe.exec(filename).slice(1);\n}\n\nwin32.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = win32SplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  return {\n    root: allParts[1],\n    dir: allParts[0] === allParts[1] ? allParts[0] : allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3]\n  };\n};\n\n\n\n// Split a filename into [dir, root, basename, name, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^((\\/?)(?:[^\\/]*\\/)*)((\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))[\\/]*$/;\nvar posix = {};\n\n\nfunction posixSplitPath(filename) {\n  return splitPathRe.exec(filename).slice(1);\n}\n\n\nposix.parse = function(pathString) {\n  if (typeof pathString !== 'string') {\n    throw new TypeError(\n        \"Parameter 'pathString' must be a string, not \" + typeof pathString\n    );\n  }\n  var allParts = posixSplitPath(pathString);\n  if (!allParts || allParts.length !== 5) {\n    throw new TypeError(\"Invalid path '\" + pathString + \"'\");\n  }\n  \n  return {\n    root: allParts[1],\n    dir: allParts[0].slice(0, -1),\n    base: allParts[2],\n    ext: allParts[4],\n    name: allParts[3],\n  };\n};\n\n\nif (isWindows)\n  module.exports = win32.parse;\nelse /* posix */\n  module.exports = posix.parse;\n\nmodule.exports.posix = posix.parse;\nmodule.exports.win32 = win32.parse;\n", "var path = require('path');\nvar parse = path.parse || require('path-parse');\n\nvar getNodeModulesDirs = function getNodeModulesDirs(absoluteStart, modules) {\n    var prefix = '/';\n    if ((/^([A-Za-z]:)/).test(absoluteStart)) {\n        prefix = '';\n    } else if ((/^\\\\\\\\/).test(absoluteStart)) {\n        prefix = '\\\\\\\\';\n    }\n\n    var paths = [absoluteStart];\n    var parsed = parse(absoluteStart);\n    while (parsed.dir !== paths[paths.length - 1]) {\n        paths.push(parsed.dir);\n        parsed = parse(parsed.dir);\n    }\n\n    return paths.reduce(function (dirs, aPath) {\n        return dirs.concat(modules.map(function (moduleDir) {\n            return path.resolve(prefix, aPath, moduleDir);\n        }));\n    }, []);\n};\n\nmodule.exports = function nodeModulesPaths(start, opts, request) {\n    var modules = opts && opts.moduleDirectory\n        ? [].concat(opts.moduleDirectory)\n        : ['node_modules'];\n\n    if (opts && typeof opts.paths === 'function') {\n        return opts.paths(\n            request,\n            start,\n            function () { return getNodeModulesDirs(start, modules); },\n            opts\n        );\n    }\n\n    var dirs = getNodeModulesDirs(start, modules);\n    return opts && opts.paths ? dirs.concat(opts.paths) : dirs;\n};\n", "module.exports = function (x, opts) {\n    /**\n     * This file is purposefully a passthrough. It's expected that third-party\n     * environments will override it at runtime in order to inject special logic\n     * into `resolve` (by manipulating the options). One such example is the PnP\n     * code path in Yarn.\n     */\n\n    return opts || {};\n};\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n", "'use strict';\n\nvar has = require('has');\n\nfunction specifierIncluded(current, specifier) {\n\tvar nodeParts = current.split('.');\n\tvar parts = specifier.split(' ');\n\tvar op = parts.length > 1 ? parts[0] : '=';\n\tvar versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n\tfor (var i = 0; i < 3; ++i) {\n\t\tvar cur = parseInt(nodeParts[i] || 0, 10);\n\t\tvar ver = parseInt(versionParts[i] || 0, 10);\n\t\tif (cur === ver) {\n\t\t\tcontinue; // eslint-disable-line no-restricted-syntax, no-continue\n\t\t}\n\t\tif (op === '<') {\n\t\t\treturn cur < ver;\n\t\t}\n\t\tif (op === '>=') {\n\t\t\treturn cur >= ver;\n\t\t}\n\t\treturn false;\n\t}\n\treturn op === '>=';\n}\n\nfunction matchesRange(current, range) {\n\tvar specifiers = range.split(/ ?&& ?/);\n\tif (specifiers.length === 0) {\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < specifiers.length; ++i) {\n\t\tif (!specifierIncluded(current, specifiers[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction versionIncluded(nodeVersion, specifierValue) {\n\tif (typeof specifierValue === 'boolean') {\n\t\treturn specifierValue;\n\t}\n\n\tvar current = typeof nodeVersion === 'undefined'\n\t\t? process.versions && process.versions.node && process.versions.node\n\t\t: nodeVersion;\n\n\tif (typeof current !== 'string') {\n\t\tthrow new TypeError(typeof nodeVersion === 'undefined' ? 'Unable to determine current node version' : 'If provided, a valid node version is required');\n\t}\n\n\tif (specifierValue && typeof specifierValue === 'object') {\n\t\tfor (var i = 0; i < specifierValue.length; ++i) {\n\t\t\tif (matchesRange(current, specifierValue[i])) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn matchesRange(current, specifierValue);\n}\n\nvar data = require('./core.json');\n\nmodule.exports = function isCore(x, nodeVersion) {\n\treturn has(data, x) && versionIncluded(nodeVersion, data[x]);\n};\n", "var fs = require('fs');\nvar path = require('path');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\nvar isCore = require('is-core-module');\n\nvar realpathFS = fs.realpath && typeof fs.realpath.native === 'function' ? fs.realpath.native : fs.realpath;\n\nvar defaultIsFile = function isFile(file, cb) {\n    fs.stat(file, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isFile() || stat.isFIFO());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultIsDir = function isDirectory(dir, cb) {\n    fs.stat(dir, function (err, stat) {\n        if (!err) {\n            return cb(null, stat.isDirectory());\n        }\n        if (err.code === 'ENOENT' || err.code === 'ENOTDIR') return cb(null, false);\n        return cb(err);\n    });\n};\n\nvar defaultRealpath = function realpath(x, cb) {\n    realpathFS(x, function (realpathErr, realPath) {\n        if (realpathErr && realpathErr.code !== 'ENOENT') cb(realpathErr);\n        else cb(null, realpathErr ? x : realPath);\n    });\n};\n\nvar maybeRealpath = function maybeRealpath(realpath, x, opts, cb) {\n    if (opts && opts.preserveSymlinks === false) {\n        realpath(x, cb);\n    } else {\n        cb(null, x);\n    }\n};\n\nvar defaultReadPackage = function defaultReadPackage(readFile, pkgfile, cb) {\n    readFile(pkgfile, function (readFileErr, body) {\n        if (readFileErr) cb(readFileErr);\n        else {\n            try {\n                var pkg = JSON.parse(body);\n                cb(null, pkg);\n            } catch (jsonErr) {\n                cb(null);\n            }\n        }\n    });\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolve(x, options, callback) {\n    var cb = callback;\n    var opts = options;\n    if (typeof options === 'function') {\n        cb = opts;\n        opts = {};\n    }\n    if (typeof x !== 'string') {\n        var err = new TypeError('Path must be a string.');\n        return process.nextTick(function () {\n            cb(err);\n        });\n    }\n\n    opts = normalizeOptions(x, opts);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var readFile = opts.readFile || fs.readFile;\n    var realpath = opts.realpath || defaultRealpath;\n    var readPackage = opts.readPackage || defaultReadPackage;\n    if (opts.readFile && opts.readPackage) {\n        var conflictErr = new TypeError('`readFile` and `readPackage` are mutually exclusive.');\n        return process.nextTick(function () {\n            cb(conflictErr);\n        });\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || [];\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = path.resolve(basedir);\n\n    maybeRealpath(\n        realpath,\n        absoluteStart,\n        opts,\n        function (err, realStart) {\n            if (err) cb(err);\n            else init(realStart);\n        }\n    );\n\n    var res;\n    function init(basedir) {\n        if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n            res = path.resolve(basedir, x);\n            if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n            if ((/\\/$/).test(x) && res === basedir) {\n                loadAsDirectory(res, opts.package, onfile);\n            } else loadAsFile(res, opts.package, onfile);\n        } else if (includeCoreModules && isCore(x)) {\n            return cb(null, x);\n        } else loadNodeModules(x, basedir, function (err, n, pkg) {\n            if (err) cb(err);\n            else if (n) {\n                return maybeRealpath(realpath, n, opts, function (err, realN) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realN, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function onfile(err, m, pkg) {\n        if (err) cb(err);\n        else if (m) cb(null, m, pkg);\n        else loadAsDirectory(res, function (err, d, pkg) {\n            if (err) cb(err);\n            else if (d) {\n                maybeRealpath(realpath, d, opts, function (err, realD) {\n                    if (err) {\n                        cb(err);\n                    } else {\n                        cb(null, realD, pkg);\n                    }\n                });\n            } else {\n                var moduleError = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n                moduleError.code = 'MODULE_NOT_FOUND';\n                cb(moduleError);\n            }\n        });\n    }\n\n    function loadAsFile(x, thePackage, callback) {\n        var loadAsFilePackage = thePackage;\n        var cb = callback;\n        if (typeof loadAsFilePackage === 'function') {\n            cb = loadAsFilePackage;\n            loadAsFilePackage = undefined;\n        }\n\n        var exts = [''].concat(extensions);\n        load(exts, x, loadAsFilePackage);\n\n        function load(exts, x, loadPackage) {\n            if (exts.length === 0) return cb(null, undefined, loadPackage);\n            var file = x + exts[0];\n\n            var pkg = loadPackage;\n            if (pkg) onpkg(null, pkg);\n            else loadpkg(path.dirname(file), onpkg);\n\n            function onpkg(err, pkg_, dir) {\n                pkg = pkg_;\n                if (err) return cb(err);\n                if (dir && pkg && opts.pathFilter) {\n                    var rfile = path.relative(dir, file);\n                    var rel = rfile.slice(0, rfile.length - exts[0].length);\n                    var r = opts.pathFilter(pkg, x, rel);\n                    if (r) return load(\n                        [''].concat(extensions.slice()),\n                        path.resolve(dir, r),\n                        pkg\n                    );\n                }\n                isFile(file, onex);\n            }\n            function onex(err, ex) {\n                if (err) return cb(err);\n                if (ex) return cb(null, file, pkg);\n                load(exts.slice(1), x, pkg);\n            }\n        }\n    }\n\n    function loadpkg(dir, cb) {\n        if (dir === '' || dir === '/') return cb(null);\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return cb(null);\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return cb(null);\n\n        maybeRealpath(realpath, dir, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return loadpkg(path.dirname(dir), cb);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                // on err, ex is false\n                if (!ex) return loadpkg(path.dirname(dir), cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n                    cb(null, pkg, dir);\n                });\n            });\n        });\n    }\n\n    function loadAsDirectory(x, loadAsDirectoryPackage, callback) {\n        var cb = callback;\n        var fpkg = loadAsDirectoryPackage;\n        if (typeof fpkg === 'function') {\n            cb = fpkg;\n            fpkg = opts.package;\n        }\n\n        maybeRealpath(realpath, x, opts, function (unwrapErr, pkgdir) {\n            if (unwrapErr) return cb(unwrapErr);\n            var pkgfile = path.join(pkgdir, 'package.json');\n            isFile(pkgfile, function (err, ex) {\n                if (err) return cb(err);\n                if (!ex) return loadAsFile(path.join(x, 'index'), fpkg, cb);\n\n                readPackage(readFile, pkgfile, function (err, pkgParam) {\n                    if (err) return cb(err);\n\n                    var pkg = pkgParam;\n\n                    if (pkg && opts.packageFilter) {\n                        pkg = opts.packageFilter(pkg, pkgfile);\n                    }\n\n                    if (pkg && pkg.main) {\n                        if (typeof pkg.main !== 'string') {\n                            var mainError = new TypeError('package \u201C' + pkg.name + '\u201D `main` must be a string');\n                            mainError.code = 'INVALID_PACKAGE_MAIN';\n                            return cb(mainError);\n                        }\n                        if (pkg.main === '.' || pkg.main === './') {\n                            pkg.main = 'index';\n                        }\n                        loadAsFile(path.resolve(x, pkg.main), pkg, function (err, m, pkg) {\n                            if (err) return cb(err);\n                            if (m) return cb(null, m, pkg);\n                            if (!pkg) return loadAsFile(path.join(x, 'index'), pkg, cb);\n\n                            var dir = path.resolve(x, pkg.main);\n                            loadAsDirectory(dir, pkg, function (err, n, pkg) {\n                                if (err) return cb(err);\n                                if (n) return cb(null, n, pkg);\n                                loadAsFile(path.join(x, 'index'), pkg, cb);\n                            });\n                        });\n                        return;\n                    }\n\n                    loadAsFile(path.join(x, '/index'), pkg, cb);\n                });\n            });\n        });\n    }\n\n    function processDirs(cb, dirs) {\n        if (dirs.length === 0) return cb(null, undefined);\n        var dir = dirs[0];\n\n        isDirectory(path.dirname(dir), isdir);\n\n        function isdir(err, isdir) {\n            if (err) return cb(err);\n            if (!isdir) return processDirs(cb, dirs.slice(1));\n            loadAsFile(dir, opts.package, onfile);\n        }\n\n        function onfile(err, m, pkg) {\n            if (err) return cb(err);\n            if (m) return cb(null, m, pkg);\n            loadAsDirectory(dir, opts.package, ondir);\n        }\n\n        function ondir(err, n, pkg) {\n            if (err) return cb(err);\n            if (n) return cb(null, n, pkg);\n            processDirs(cb, dirs.slice(1));\n        }\n    }\n    function loadNodeModules(x, start, cb) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        processDirs(\n            cb,\n            packageIterator ? packageIterator(x, start, thunk, opts) : thunk()\n        );\n    }\n};\n", "var current = (process.versions && process.versions.node && process.versions.node.split('.')) || [];\n\nfunction specifierIncluded(specifier) {\n    var parts = specifier.split(' ');\n    var op = parts.length > 1 ? parts[0] : '=';\n    var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split('.');\n\n    for (var i = 0; i < 3; ++i) {\n        var cur = parseInt(current[i] || 0, 10);\n        var ver = parseInt(versionParts[i] || 0, 10);\n        if (cur === ver) {\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        }\n        if (op === '<') {\n            return cur < ver;\n        } else if (op === '>=') {\n            return cur >= ver;\n        } else {\n            return false;\n        }\n    }\n    return op === '>=';\n}\n\nfunction matchesRange(range) {\n    var specifiers = range.split(/ ?&& ?/);\n    if (specifiers.length === 0) { return false; }\n    for (var i = 0; i < specifiers.length; ++i) {\n        if (!specifierIncluded(specifiers[i])) { return false; }\n    }\n    return true;\n}\n\nfunction versionIncluded(specifierValue) {\n    if (typeof specifierValue === 'boolean') { return specifierValue; }\n    if (specifierValue && typeof specifierValue === 'object') {\n        for (var i = 0; i < specifierValue.length; ++i) {\n            if (matchesRange(specifierValue[i])) { return true; }\n        }\n        return false;\n    }\n    return matchesRange(specifierValue);\n}\n\nvar data = require('./core.json');\n\nvar core = {};\nfor (var mod in data) { // eslint-disable-line no-restricted-syntax\n    if (Object.prototype.hasOwnProperty.call(data, mod)) {\n        core[mod] = versionIncluded(data[mod]);\n    }\n}\nmodule.exports = core;\n", "var isCoreModule = require('is-core-module');\n\nmodule.exports = function isCore(x) {\n    return isCoreModule(x);\n};\n", "var isCore = require('is-core-module');\nvar fs = require('fs');\nvar path = require('path');\nvar caller = require('./caller');\nvar nodeModulesPaths = require('./node-modules-paths');\nvar normalizeOptions = require('./normalize-options');\n\nvar realpathFS = fs.realpathSync && typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n\nvar defaultIsFile = function isFile(file) {\n    try {\n        var stat = fs.statSync(file);\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return stat.isFile() || stat.isFIFO();\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n    try {\n        var stat = fs.statSync(dir);\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return stat.isDirectory();\n};\n\nvar defaultRealpathSync = function realpathSync(x) {\n    try {\n        return realpathFS(x);\n    } catch (realpathErr) {\n        if (realpathErr.code !== 'ENOENT') {\n            throw realpathErr;\n        }\n    }\n    return x;\n};\n\nvar maybeRealpathSync = function maybeRealpathSync(realpathSync, x, opts) {\n    if (opts && opts.preserveSymlinks === false) {\n        return realpathSync(x);\n    }\n    return x;\n};\n\nvar defaultReadPackageSync = function defaultReadPackageSync(readFileSync, pkgfile) {\n    var body = readFileSync(pkgfile);\n    try {\n        var pkg = JSON.parse(body);\n        return pkg;\n    } catch (jsonErr) {}\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolveSync(x, options) {\n    if (typeof x !== 'string') {\n        throw new TypeError('Path must be a string.');\n    }\n    var opts = normalizeOptions(x, options);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var readFileSync = opts.readFileSync || fs.readFileSync;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var realpathSync = opts.realpathSync || defaultRealpathSync;\n    var readPackageSync = opts.readPackageSync || defaultReadPackageSync;\n    if (opts.readFileSync && opts.readPackageSync) {\n        throw new TypeError('`readFileSync` and `readPackageSync` are mutually exclusive.');\n    }\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var includeCoreModules = opts.includeCoreModules !== false;\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || [];\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = maybeRealpathSync(realpathSync, path.resolve(basedir), opts);\n\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n        var res = path.resolve(absoluteStart, x);\n        if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n        if (m) return maybeRealpathSync(realpathSync, m, opts);\n    } else if (includeCoreModules && isCore(x)) {\n        return x;\n    } else {\n        var n = loadNodeModulesSync(x, absoluteStart);\n        if (n) return maybeRealpathSync(realpathSync, n, opts);\n    }\n\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n\n    function loadAsFileSync(x) {\n        var pkg = loadpkg(path.dirname(x));\n\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n            var rfile = path.relative(pkg.dir, x);\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\n            if (r) {\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n            }\n        }\n\n        if (isFile(x)) {\n            return x;\n        }\n\n        for (var i = 0; i < extensions.length; i++) {\n            var file = x + extensions[i];\n            if (isFile(file)) {\n                return file;\n            }\n        }\n    }\n\n    function loadpkg(dir) {\n        if (dir === '' || dir === '/') return;\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return;\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\n\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, dir, opts), 'package.json');\n\n        if (!isFile(pkgfile)) {\n            return loadpkg(path.dirname(dir));\n        }\n\n        var pkg = readPackageSync(readFileSync, pkgfile);\n\n        if (pkg && opts.packageFilter) {\n            // v2 will pass pkgfile\n            pkg = opts.packageFilter(pkg, /*pkgfile,*/ dir); // eslint-disable-line spaced-comment\n        }\n\n        return { pkg: pkg, dir: dir };\n    }\n\n    function loadAsDirectorySync(x) {\n        var pkgfile = path.join(maybeRealpathSync(realpathSync, x, opts), '/package.json');\n        if (isFile(pkgfile)) {\n            try {\n                var pkg = readPackageSync(readFileSync, pkgfile);\n            } catch (e) {}\n\n            if (pkg && opts.packageFilter) {\n                // v2 will pass pkgfile\n                pkg = opts.packageFilter(pkg, /*pkgfile,*/ x); // eslint-disable-line spaced-comment\n            }\n\n            if (pkg && pkg.main) {\n                if (typeof pkg.main !== 'string') {\n                    var mainError = new TypeError('package \u201C' + pkg.name + '\u201D `main` must be a string');\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\n                    throw mainError;\n                }\n                if (pkg.main === '.' || pkg.main === './') {\n                    pkg.main = 'index';\n                }\n                try {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                    var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n                    if (n) return n;\n                } catch (e) {}\n            }\n        }\n\n        return loadAsFileSync(path.join(x, '/index'));\n    }\n\n    function loadNodeModulesSync(x, start) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n\n        for (var i = 0; i < dirs.length; i++) {\n            var dir = dirs[i];\n            if (isDirectory(path.dirname(dir))) {\n                var m = loadAsFileSync(dir);\n                if (m) return m;\n                var n = loadAsDirectorySync(dir);\n                if (n) return n;\n            }\n        }\n    }\n};\n", "var async = require('./lib/async');\nasync.core = require('./lib/core');\nasync.isCore = require('./lib/is-core');\nasync.sync = require('./lib/sync');\n\nmodule.exports = async;\n", "export default require(\"./node_modules/resolve/index.js\");"],
  "mappings": "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",
  "names": []
}
