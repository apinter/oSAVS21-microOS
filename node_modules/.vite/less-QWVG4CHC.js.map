{
  "version": 3,
  "sources": ["../monaco-editor/esm/vs/basic-languages/less/less.js"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@#!.:]?[\\w-?]+%?)|[@#!.]/g,\r\n    comments: {\r\n        blockComment: ['/*', '*/'],\r\n        lineComment: '//'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/'),\r\n            end: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.less',\r\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\r\n    identifierPlus: '-?-?([a-zA-Z:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.bracket' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@nestedJSBegin' },\r\n            ['[ \\\\t\\\\r\\\\n]+', ''],\r\n            { include: '@comments' },\r\n            { include: '@keyword' },\r\n            { include: '@strings' },\r\n            { include: '@numbers' },\r\n            ['[*_]?[a-zA-Z\\\\-\\\\s]+(?=:.*(;|(\\\\\\\\$)))', 'attribute.name', '@attribute'],\r\n            ['url(\\\\-prefix)?\\\\(', { token: 'tag', next: '@urldeclaration' }],\r\n            ['[{}()\\\\[\\\\]]', '@brackets'],\r\n            ['[,:;]', 'delimiter'],\r\n            ['#@identifierPlus', 'tag.id'],\r\n            ['&', 'tag'],\r\n            ['\\\\.@identifierPlus(?=\\\\()', 'tag.class', '@attribute'],\r\n            ['\\\\.@identifierPlus', 'tag.class'],\r\n            ['@identifierPlus', 'tag'],\r\n            { include: '@operators' },\r\n            ['@(@identifier(?=[:,\\\\)]))', 'variable', '@attribute'],\r\n            ['@(@identifier)', 'variable'],\r\n            ['@', 'key', '@atRules']\r\n        ],\r\n        nestedJSBegin: [\r\n            ['``', 'delimiter.backtick'],\r\n            [\r\n                '`',\r\n                {\r\n                    token: 'delimiter.backtick',\r\n                    next: '@nestedJSEnd',\r\n                    nextEmbedded: 'text/javascript'\r\n                }\r\n            ]\r\n        ],\r\n        nestedJSEnd: [\r\n            [\r\n                '`',\r\n                {\r\n                    token: 'delimiter.backtick',\r\n                    next: '@pop',\r\n                    nextEmbedded: '@pop'\r\n                }\r\n            ]\r\n        ],\r\n        operators: [['[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~]', 'operator']],\r\n        keyword: [\r\n            [\r\n                '(@[\\\\s]*import|![\\\\s]*important|true|false|when|iscolor|isnumber|isstring|iskeyword|isurl|ispixel|ispercentage|isem|hue|saturation|lightness|alpha|lighten|darken|saturate|desaturate|fadein|fadeout|fade|spin|mix|round|ceil|floor|percentage)\\\\b',\r\n                'keyword'\r\n            ]\r\n        ],\r\n        urldeclaration: [\r\n            { include: '@strings' },\r\n            ['[^)\\r\\n]+', 'string'],\r\n            ['\\\\)', { token: 'tag', next: '@pop' }]\r\n        ],\r\n        attribute: [\r\n            { include: '@nestedJSBegin' },\r\n            { include: '@comments' },\r\n            { include: '@strings' },\r\n            { include: '@numbers' },\r\n            { include: '@keyword' },\r\n            ['[a-zA-Z\\\\-]+(?=\\\\()', 'attribute.value', '@attribute'],\r\n            ['>', 'operator', '@pop'],\r\n            ['@identifier', 'attribute.value'],\r\n            { include: '@operators' },\r\n            ['@(@identifier)', 'variable'],\r\n            ['[)\\\\}]', '@brackets', '@pop'],\r\n            ['[{}()\\\\[\\\\]>]', '@brackets'],\r\n            ['[;]', 'delimiter', '@pop'],\r\n            ['[,=:]', 'delimiter'],\r\n            ['\\\\s', ''],\r\n            ['.', 'attribute.value']\r\n        ],\r\n        comments: [\r\n            ['\\\\/\\\\*', 'comment', '@comment'],\r\n            ['\\\\/\\\\/+.*', 'comment']\r\n        ],\r\n        comment: [\r\n            ['\\\\*\\\\/', 'comment', '@pop'],\r\n            ['.', 'comment']\r\n        ],\r\n        numbers: [\r\n            [\r\n                '(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?',\r\n                { token: 'attribute.value.number', next: '@units' }\r\n            ],\r\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'attribute.value.hex']\r\n        ],\r\n        units: [\r\n            [\r\n                '(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?',\r\n                'attribute.value.unit',\r\n                '@pop'\r\n            ]\r\n        ],\r\n        strings: [\r\n            ['~?\"', { token: 'string.delimiter', next: '@stringsEndDoubleQuote' }],\r\n            [\"~?'\", { token: 'string.delimiter', next: '@stringsEndQuote' }]\r\n        ],\r\n        stringsEndDoubleQuote: [\r\n            ['\\\\\\\\\"', 'string'],\r\n            ['\"', { token: 'string.delimiter', next: '@popall' }],\r\n            ['.', 'string']\r\n        ],\r\n        stringsEndQuote: [\r\n            [\"\\\\\\\\'\", 'string'],\r\n            [\"'\", { token: 'string.delimiter', next: '@popall' }],\r\n            ['.', 'string']\r\n        ],\r\n        atRules: [\r\n            { include: '@comments' },\r\n            { include: '@strings' },\r\n            ['[()]', 'delimiter'],\r\n            ['[\\\\{;]', 'delimiter', '@pop'],\r\n            ['.', 'key']\r\n        ]\r\n    }\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
