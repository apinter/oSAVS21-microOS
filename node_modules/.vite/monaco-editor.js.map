{
  "version": 3,
  "sources": ["../monaco-editor/esm/vs/base/common/marked/marked.js", "../monaco-editor/esm/vs/language/css/monaco.contribution.js", "../monaco-editor/esm/vs/language/json/monaco.contribution.js", "../monaco-editor/esm/vs/language/html/monaco.contribution.js", "../monaco-editor/esm/vs/basic-languages/_.contribution.js", "../monaco-editor/esm/vs/basic-languages/abap/abap.contribution.js", "../monaco-editor/esm/vs/basic-languages/apex/apex.contribution.js", "../monaco-editor/esm/vs/basic-languages/azcli/azcli.contribution.js", "../monaco-editor/esm/vs/basic-languages/bat/bat.contribution.js", "../monaco-editor/esm/vs/basic-languages/bicep/bicep.contribution.js", "../monaco-editor/esm/vs/basic-languages/cameligo/cameligo.contribution.js", "../monaco-editor/esm/vs/basic-languages/clojure/clojure.contribution.js", "../monaco-editor/esm/vs/basic-languages/coffee/coffee.contribution.js", "../monaco-editor/esm/vs/basic-languages/cpp/cpp.contribution.js", "../monaco-editor/esm/vs/basic-languages/csharp/csharp.contribution.js", "../monaco-editor/esm/vs/basic-languages/csp/csp.contribution.js", "../monaco-editor/esm/vs/basic-languages/css/css.contribution.js", "../monaco-editor/esm/vs/basic-languages/dart/dart.contribution.js", "../monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.contribution.js", "../monaco-editor/esm/vs/basic-languages/ecl/ecl.contribution.js", "../monaco-editor/esm/vs/basic-languages/elixir/elixir.contribution.js", "../monaco-editor/esm/vs/basic-languages/fsharp/fsharp.contribution.js", "../monaco-editor/esm/vs/basic-languages/go/go.contribution.js", "../monaco-editor/esm/vs/basic-languages/graphql/graphql.contribution.js", "../monaco-editor/esm/vs/basic-languages/handlebars/handlebars.contribution.js", "../monaco-editor/esm/vs/basic-languages/hcl/hcl.contribution.js", "../monaco-editor/esm/vs/basic-languages/html/html.contribution.js", "../monaco-editor/esm/vs/basic-languages/ini/ini.contribution.js", "../monaco-editor/esm/vs/basic-languages/java/java.contribution.js", "../monaco-editor/esm/vs/basic-languages/javascript/javascript.contribution.js", "../monaco-editor/esm/vs/basic-languages/julia/julia.contribution.js", "../monaco-editor/esm/vs/basic-languages/kotlin/kotlin.contribution.js", "../monaco-editor/esm/vs/basic-languages/less/less.contribution.js", "../monaco-editor/esm/vs/basic-languages/lexon/lexon.contribution.js", "../monaco-editor/esm/vs/basic-languages/lua/lua.contribution.js", "../monaco-editor/esm/vs/basic-languages/liquid/liquid.contribution.js", "../monaco-editor/esm/vs/basic-languages/m3/m3.contribution.js", "../monaco-editor/esm/vs/basic-languages/markdown/markdown.contribution.js", "../monaco-editor/esm/vs/basic-languages/mips/mips.contribution.js", "../monaco-editor/esm/vs/basic-languages/msdax/msdax.contribution.js", "../monaco-editor/esm/vs/basic-languages/mysql/mysql.contribution.js", "../monaco-editor/esm/vs/basic-languages/objective-c/objective-c.contribution.js", "../monaco-editor/esm/vs/basic-languages/pascal/pascal.contribution.js", "../monaco-editor/esm/vs/basic-languages/pascaligo/pascaligo.contribution.js", "../monaco-editor/esm/vs/basic-languages/perl/perl.contribution.js", "../monaco-editor/esm/vs/basic-languages/pgsql/pgsql.contribution.js", "../monaco-editor/esm/vs/basic-languages/php/php.contribution.js", "../monaco-editor/esm/vs/basic-languages/postiats/postiats.contribution.js", "../monaco-editor/esm/vs/basic-languages/powerquery/powerquery.contribution.js", "../monaco-editor/esm/vs/basic-languages/powershell/powershell.contribution.js", "../monaco-editor/esm/vs/basic-languages/pug/pug.contribution.js", "../monaco-editor/esm/vs/basic-languages/python/python.contribution.js", "../monaco-editor/esm/vs/basic-languages/qsharp/qsharp.contribution.js", "../monaco-editor/esm/vs/basic-languages/r/r.contribution.js", "../monaco-editor/esm/vs/basic-languages/razor/razor.contribution.js", "../monaco-editor/esm/vs/basic-languages/redis/redis.contribution.js", "../monaco-editor/esm/vs/basic-languages/redshift/redshift.contribution.js", "../monaco-editor/esm/vs/basic-languages/restructuredtext/restructuredtext.contribution.js", "../monaco-editor/esm/vs/basic-languages/ruby/ruby.contribution.js", "../monaco-editor/esm/vs/basic-languages/rust/rust.contribution.js", "../monaco-editor/esm/vs/basic-languages/sb/sb.contribution.js", "../monaco-editor/esm/vs/basic-languages/scala/scala.contribution.js", "../monaco-editor/esm/vs/basic-languages/scheme/scheme.contribution.js", "../monaco-editor/esm/vs/basic-languages/scss/scss.contribution.js", "../monaco-editor/esm/vs/basic-languages/shell/shell.contribution.js", "../monaco-editor/esm/vs/basic-languages/solidity/solidity.contribution.js", "../monaco-editor/esm/vs/basic-languages/sophia/sophia.contribution.js", "../monaco-editor/esm/vs/basic-languages/sparql/sparql.contribution.js", "../monaco-editor/esm/vs/basic-languages/sql/sql.contribution.js", "../monaco-editor/esm/vs/basic-languages/st/st.contribution.js", "../monaco-editor/esm/vs/basic-languages/swift/swift.contribution.js", "../monaco-editor/esm/vs/basic-languages/systemverilog/systemverilog.contribution.js", "../monaco-editor/esm/vs/basic-languages/tcl/tcl.contribution.js", "../monaco-editor/esm/vs/basic-languages/twig/twig.contribution.js", "../monaco-editor/esm/vs/basic-languages/typescript/typescript.contribution.js", "../monaco-editor/esm/vs/basic-languages/vb/vb.contribution.js", "../monaco-editor/esm/vs/basic-languages/xml/xml.contribution.js", "../monaco-editor/esm/vs/basic-languages/yaml/yaml.contribution.js", "../monaco-editor/esm/vs/editor/contrib/anchorSelect/anchorSelect.js", "../monaco-editor/esm/vs/base/common/htmlContent.js", "../monaco-editor/esm/vs/editor/contrib/bracketMatching/bracketMatching.js", "../monaco-editor/esm/vs/editor/contrib/caretOperations/moveCaretCommand.js", "../monaco-editor/esm/vs/editor/contrib/caretOperations/caretOperations.js", "../monaco-editor/esm/vs/editor/contrib/caretOperations/transpose.js", "../monaco-editor/esm/vs/editor/contrib/clipboard/clipboard.js", "../monaco-editor/esm/vs/base/common/lazy.js", "../monaco-editor/esm/vs/editor/contrib/codeAction/types.js", "../monaco-editor/esm/vs/editor/contrib/codeAction/codeAction.js", "../monaco-editor/esm/vs/editor/contrib/message/messageController.js", "../monaco-editor/esm/vs/editor/contrib/codeAction/codeActionMenu.js", "../monaco-editor/esm/vs/editor/contrib/codeAction/lightBulbWidget.js", "../monaco-editor/esm/vs/editor/contrib/codeAction/codeActionUi.js", "../monaco-editor/esm/vs/editor/contrib/codeAction/codeActionModel.js", "../monaco-editor/esm/vs/editor/contrib/codeAction/codeActionCommands.js", "../monaco-editor/esm/vs/editor/contrib/codeAction/codeActionContributions.js", "../monaco-editor/esm/vs/editor/contrib/codelens/codelens.js", "../monaco-editor/esm/vs/editor/contrib/codelens/codelensWidget.js", "../monaco-editor/esm/vs/editor/contrib/codelens/codeLensCache.js", "../monaco-editor/esm/vs/editor/contrib/codelens/codelensController.js", "../monaco-editor/esm/vs/editor/contrib/colorPicker/color.js", "../monaco-editor/esm/vs/editor/contrib/colorPicker/colorDetector.js", "../monaco-editor/esm/vs/editor/contrib/hover/hoverOperation.js", "../monaco-editor/esm/vs/base/browser/ui/hover/hoverWidget.js", "../monaco-editor/esm/vs/editor/contrib/gotoError/gotoErrorWidget.js", "../monaco-editor/esm/vs/base/common/labels.js", "../monaco-editor/esm/vs/editor/contrib/peekView/peekView.js", "../monaco-editor/esm/vs/editor/browser/widget/embeddedCodeEditorWidget.js", "../monaco-editor/esm/vs/editor/contrib/zoneWidget/zoneWidget.js", "../monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js", "../monaco-editor/esm/vs/base/browser/ui/dropdown/dropdownActionViewItem.js", "../monaco-editor/esm/vs/base/browser/ui/dropdown/dropdown.js", "../monaco-editor/esm/vs/platform/severityIcon/common/severityIcon.js", "../monaco-editor/esm/vs/editor/contrib/gotoError/markerNavigationService.js", "../monaco-editor/esm/vs/editor/contrib/gotoError/gotoError.js", "../monaco-editor/esm/vs/editor/contrib/hover/markerHoverParticipant.js", "../monaco-editor/esm/vs/base/browser/markdownRenderer.js", "../monaco-editor/esm/vs/base/common/insane/insane.js", "../monaco-editor/esm/vs/editor/browser/core/markdownRenderer.js", "../monaco-editor/esm/vs/editor/contrib/hover/getHover.js", "../monaco-editor/esm/vs/editor/contrib/hover/markdownHoverParticipant.js", "../monaco-editor/esm/vs/editor/contrib/hover/hoverTypes.js", "../monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostTextWidget.js", "../monaco-editor/esm/vs/editor/contrib/inlineCompletions/utils.js", "../monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostText.js", "../monaco-editor/esm/vs/editor/contrib/inlineCompletions/inlineCompletionsModel.js", "../monaco-editor/esm/vs/editor/contrib/snippet/snippetParser.js", "../monaco-editor/esm/vs/editor/contrib/snippet/snippetSession.js", "../monaco-editor/esm/vs/platform/workspaces/common/workspaces.js", "../monaco-editor/esm/vs/base/common/uuid.js", "../monaco-editor/esm/vs/editor/contrib/snippet/snippetVariables.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggest.js", "../monaco-editor/esm/vs/editor/contrib/snippet/snippetController2.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestMemory.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestAlternatives.js", "../monaco-editor/esm/vs/editor/contrib/suggest/completionModel.js", "../monaco-editor/esm/vs/editor/contrib/smartSelect/bracketSelections.js", "../monaco-editor/esm/vs/editor/contrib/suggest/wordDistance.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestModel.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestWidget.js", "../monaco-editor/esm/vs/editor/contrib/symbolIcons/symbolIcons.js", "../monaco-editor/esm/vs/editor/contrib/suggest/resizable.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestWidgetDetails.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestWidgetStatus.js", "../monaco-editor/esm/vs/platform/files/common/files.js", "../monaco-editor/esm/vs/editor/common/services/getIconClasses.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestWidgetRenderer.js", "../monaco-editor/esm/vs/editor/contrib/suggest/wordContextKey.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestCommitCharacters.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestOvertypingCapturer.js", "../monaco-editor/esm/vs/editor/contrib/suggest/suggestController.js", "../monaco-editor/esm/vs/editor/contrib/inlineCompletions/suggestWidgetAdapterModel.js", "../monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostTextModel.js", "../monaco-editor/esm/vs/editor/contrib/inlineCompletions/ghostTextController.js", "../monaco-editor/esm/vs/editor/contrib/inlineCompletions/inlineCompletionsHoverParticipant.js", "../monaco-editor/esm/vs/editor/contrib/colorPicker/colorPickerModel.js", "../monaco-editor/esm/vs/editor/contrib/colorPicker/colorPickerWidget.js", "../monaco-editor/esm/vs/editor/contrib/hover/colorHoverParticipant.js", "../monaco-editor/esm/vs/editor/contrib/hover/modesContentHover.js", "../monaco-editor/esm/vs/editor/contrib/hover/hoverWidgets.js", "../monaco-editor/esm/vs/editor/contrib/hover/modesGlyphHover.js", "../monaco-editor/esm/vs/editor/contrib/gotoSymbol/link/goToDefinitionAtPosition.js", "../monaco-editor/esm/vs/editor/contrib/gotoSymbol/referencesModel.js", "../monaco-editor/esm/vs/editor/contrib/gotoSymbol/goToSymbol.js", "../monaco-editor/esm/vs/editor/contrib/gotoSymbol/peek/referencesWidget.js", "../monaco-editor/esm/vs/editor/contrib/gotoSymbol/peek/referencesTree.js", "../monaco-editor/esm/vs/editor/contrib/gotoSymbol/peek/referencesController.js", "../monaco-editor/esm/vs/editor/contrib/gotoSymbol/symbolNavigation.js", "../monaco-editor/esm/vs/editor/contrib/gotoSymbol/goToCommands.js", "../monaco-editor/esm/vs/editor/contrib/gotoSymbol/link/clickLinkGesture.js", "../monaco-editor/esm/vs/editor/contrib/hover/hover.js", "../monaco-editor/esm/vs/editor/contrib/colorPicker/colorContributions.js", "../monaco-editor/esm/vs/editor/contrib/comment/blockCommentCommand.js", "../monaco-editor/esm/vs/editor/contrib/comment/lineCommentCommand.js", "../monaco-editor/esm/vs/editor/contrib/comment/comment.js", "../monaco-editor/esm/vs/editor/contrib/contextmenu/contextmenu.js", "../monaco-editor/esm/vs/editor/contrib/cursorUndo/cursorUndo.js", "../monaco-editor/esm/vs/editor/contrib/dnd/dnd.js", "../monaco-editor/esm/vs/editor/contrib/dnd/dragAndDropCommand.js", "../monaco-editor/esm/vs/editor/contrib/find/findDecorations.js", "../monaco-editor/esm/vs/editor/contrib/find/replaceAllCommand.js", "../monaco-editor/esm/vs/base/common/search.js", "../monaco-editor/esm/vs/editor/contrib/find/replacePattern.js", "../monaco-editor/esm/vs/editor/contrib/find/findModel.js", "../monaco-editor/esm/vs/base/browser/ui/checkbox/checkbox.js", "../monaco-editor/esm/vs/base/browser/ui/findinput/findInputCheckboxes.js", "../monaco-editor/esm/vs/editor/contrib/find/findOptionsWidget.js", "../monaco-editor/esm/vs/editor/contrib/find/findState.js", "../monaco-editor/esm/vs/editor/contrib/find/findWidget.js", "../monaco-editor/esm/vs/base/browser/ui/findinput/findInput.js", "../monaco-editor/esm/vs/base/browser/ui/findinput/replaceInput.js", "../monaco-editor/esm/vs/platform/browser/contextScopedHistoryWidget.js", "../monaco-editor/esm/vs/editor/contrib/find/findController.js", "../monaco-editor/esm/vs/editor/contrib/folding/folding.js", "../monaco-editor/esm/vs/editor/contrib/folding/foldingRanges.js", "../monaco-editor/esm/vs/editor/contrib/folding/foldingModel.js", "../monaco-editor/esm/vs/editor/contrib/folding/foldingDecorations.js", "../monaco-editor/esm/vs/editor/contrib/folding/hiddenRangeModel.js", "../monaco-editor/esm/vs/editor/contrib/folding/indentRangeProvider.js", "../monaco-editor/esm/vs/editor/contrib/folding/syntaxRangeProvider.js", "../monaco-editor/esm/vs/editor/contrib/folding/intializingRangeProvider.js", "../monaco-editor/esm/vs/editor/contrib/fontZoom/fontZoom.js", "../monaco-editor/esm/vs/editor/contrib/format/formatActions.js", "../monaco-editor/esm/vs/editor/contrib/documentSymbols/outlineModel.js", "../monaco-editor/esm/vs/editor/contrib/documentSymbols/documentSymbols.js", "../monaco-editor/esm/vs/editor/contrib/indentation/indentUtils.js", "../monaco-editor/esm/vs/editor/contrib/indentation/indentation.js", "../monaco-editor/esm/vs/editor/contrib/inlayHints/inlayHintsController.js", "../monaco-editor/esm/vs/editor/contrib/inPlaceReplace/inPlaceReplaceCommand.js", "../monaco-editor/esm/vs/editor/contrib/inPlaceReplace/inPlaceReplace.js", "../monaco-editor/esm/vs/editor/common/commands/trimTrailingWhitespaceCommand.js", "../monaco-editor/esm/vs/editor/contrib/linesOperations/copyLinesCommand.js", "../monaco-editor/esm/vs/editor/contrib/linesOperations/moveLinesCommand.js", "../monaco-editor/esm/vs/editor/contrib/linesOperations/sortLinesCommand.js", "../monaco-editor/esm/vs/editor/contrib/linesOperations/linesOperations.js", "../monaco-editor/esm/vs/editor/contrib/linkedEditing/linkedEditing.js", "../monaco-editor/esm/vs/editor/contrib/links/links.js", "../monaco-editor/esm/vs/editor/contrib/links/getLinks.js", "../monaco-editor/esm/vs/editor/contrib/multicursor/multicursor.js", "../monaco-editor/esm/vs/editor/contrib/parameterHints/parameterHintsWidget.js", "../monaco-editor/esm/vs/editor/contrib/parameterHints/provideSignatureHelp.js", "../monaco-editor/esm/vs/editor/contrib/parameterHints/parameterHintsModel.js", "../monaco-editor/esm/vs/editor/contrib/parameterHints/parameterHints.js", "../monaco-editor/esm/vs/editor/contrib/rename/renameInputField.js", "../monaco-editor/esm/vs/editor/contrib/rename/rename.js", "../monaco-editor/esm/vs/editor/contrib/smartSelect/wordSelections.js", "../monaco-editor/esm/vs/editor/contrib/smartSelect/smartSelect.js", "../monaco-editor/esm/vs/editor/contrib/tokenization/tokenization.js", "../monaco-editor/esm/vs/editor/contrib/toggleTabFocusMode/toggleTabFocusMode.js", "../monaco-editor/esm/vs/editor/contrib/unusualLineTerminators/unusualLineTerminators.js", "../monaco-editor/esm/vs/editor/contrib/viewportSemanticTokens/viewportSemanticTokens.js", "../monaco-editor/esm/vs/editor/contrib/wordHighlighter/wordHighlighter.js", "../monaco-editor/esm/vs/editor/contrib/wordOperations/wordOperations.js", "../monaco-editor/esm/vs/editor/contrib/wordPartOperations/wordPartOperations.js", "../monaco-editor/esm/vs/editor/standalone/browser/accessibilityHelp/accessibilityHelp.js", "../monaco-editor/esm/vs/editor/standalone/browser/iPadShowKeyboard/iPadShowKeyboard.js", "../monaco-editor/esm/vs/editor/standalone/browser/inspectTokens/inspectTokens.js", "../monaco-editor/esm/vs/platform/quickinput/browser/helpQuickAccess.js", "../monaco-editor/esm/vs/editor/standalone/browser/quickAccess/standaloneHelpQuickAccess.js", "../monaco-editor/esm/vs/editor/contrib/quickAccess/editorNavigationQuickAccess.js", "../monaco-editor/esm/vs/editor/contrib/quickAccess/gotoLineQuickAccess.js", "../monaco-editor/esm/vs/editor/standalone/browser/quickAccess/standaloneGotoLineQuickAccess.js", "../monaco-editor/esm/vs/base/common/fuzzyScorer.js", "../monaco-editor/esm/vs/editor/contrib/quickAccess/gotoSymbolQuickAccess.js", "../monaco-editor/esm/vs/editor/standalone/browser/quickAccess/standaloneGotoSymbolQuickAccess.js", "../monaco-editor/esm/vs/platform/quickinput/browser/pickerQuickAccess.js", "../monaco-editor/esm/vs/base/common/errorMessage.js", "../monaco-editor/esm/vs/platform/quickinput/browser/commandsQuickAccess.js", "../monaco-editor/esm/vs/editor/contrib/quickAccess/commandsQuickAccess.js", "../monaco-editor/esm/vs/editor/standalone/browser/quickAccess/standaloneCommandsQuickAccess.js", "../monaco-editor/esm/vs/editor/standalone/browser/referenceSearch/standaloneReferenceSearch.js", "../monaco-editor/esm/vs/editor/standalone/browser/toggleHighContrast/toggleHighContrast.js"],
  "sourcesContent": ["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it;\n\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        return function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    it = o[Symbol.iterator]();\n    return it.next.bind(it);\n  }\n\n  function createCommonjsModule(fn) {\n    var module = { exports: {} };\n  \treturn fn(module, module.exports), module.exports;\n  }\n\n  var defaults = createCommonjsModule(function (module) {\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        tokenizer: null,\n        walkTokens: null,\n        xhtml: false\n      };\n    }\n\n    function changeDefaults(newDefaults) {\n      module.exports.defaults = newDefaults;\n    }\n\n    module.exports = {\n      defaults: getDefaults(),\n      getDefaults: getDefaults,\n      changeDefaults: changeDefaults\n    };\n  });\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape,\n    unescape: unescape,\n    edit: edit,\n    cleanUrl: cleanUrl,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest,\n    merge: merge,\n    splitCells: splitCells,\n    rtrim: rtrim,\n    findClosingBracket: findClosingBracket,\n    checkSanitizeDeprecation: checkSanitizeDeprecation,\n    repeatString: repeatString\n  };\n\n  var defaults$1 = defaults.defaults;\n  var rtrim$1 = helpers.rtrim,\n      splitCells$1 = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket$1 = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$1;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim$1(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim$1(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            bcurr,\n            bnext,\n            addBack,\n            loose,\n            istask,\n            ischecked;\n        var l = itemMatch.length;\n        bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item; // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n          if (i !== l - 1) {\n            bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\n\n            if (!this.options.pedantic ? bnext[1].length > bcurr[0].length || bnext[1].length > 3 : bnext[1].length > bcurr[1].length) {\n              // nested list\n              itemMatch.splice(i, 2, itemMatch[i] + '\\n' + itemMatch[i + 1]);\n              i--;\n              l--;\n              continue;\n            } else {\n              if ( // different bullet style\n              !this.options.pedantic || this.options.smartLists ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1] : isordered === (bnext[2].length === 1)) {\n                addBack = itemMatch.slice(i + 1).join('\\n');\n                list.raw = list.raw.substring(0, list.raw.length - addBack.length);\n                i = l - 1;\n              }\n            }\n\n            bcurr = bnext;\n          } // Remove the list item's bullet\n          // so it is seen as the next token.\n\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim$1(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket$1(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0]);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return;\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0;\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength); // Bump maskedSrc to same section of string as src (move to lexer?)\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // matched the first alternative in rules.js (skip the * in __abc*abc__)\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // If this is the last rDelimiter, remove extra characters. *a*** -> *a*\n\n          if (delimTotal + midDelimTotal - rLength <= 0 && !maskedSrc.slice(endReg.lastIndex).match(endReg)) {\n            rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n          }\n\n          if (Math.min(lLength, rLength) % 2) {\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(1, lLength + match.index + rLength)\n            };\n          }\n\n          if (Math.min(lLength, rLength) % 2 === 0) {\n            return {\n              type: 'strong',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(2, lLength + match.index + rLength - 1)\n            };\n          }\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest$1 = helpers.noopTest,\n      edit$1 = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest$1,\n    table: noopTest$1,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit$1(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;\n  block.item = edit$1(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.listItemStart = edit$1(/^( *)(bull)/).replace('bull', block.bullet).getRegex();\n  block.list = edit$1(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit$1(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit$1(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit$1(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge$1({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge$1({}, block.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.nptable = edit$1(block.gfm.nptable).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.table = edit$1(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge$1({}, block.normal, {\n    html: edit$1('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest$1,\n    // fences not supported\n    paragraph: edit$1(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest$1,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip other delimiter (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /\\_\\_[^_]*?\\*[^_]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /\\*\\*[^*]*?\\_[^*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest$1,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit$1(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit$1(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit$1(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit$1(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit$1(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit$1(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit$1(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit$1(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit$1(inline.reflink).replace('label', inline._label).getRegex();\n  inline.reflinkSearch = edit$1(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge$1({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge$1({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit$1(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit$1(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge$1({}, inline.normal, {\n    escape: edit$1(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit$1(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge$1({}, inline.gfm, {\n    br: edit$1(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit$1(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block,\n    inline: inline\n  };\n\n  var defaults$2 = defaults.defaults;\n  var block$1 = rules.block,\n      inline$1 = rules.inline;\n  var repeatString$1 = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$2;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer_1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block$1.normal,\n        inline: inline$1.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block$1.pedantic;\n        rules.inline = inline$1.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block$1.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline$1.breaks;\n        } else {\n          rules.inline = inline$1.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, i, l, lastToken;\n\n      while (src) {\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (token = this.tokenizer.paragraph(src))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      var token, lastToken; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // escape\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          var _lastToken = tokens[tokens.length - 1];\n\n          if (_lastToken && token.type === 'text' && _lastToken.type === 'text') {\n            _lastToken.raw += token.raw;\n            _lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          var _lastToken2 = tokens[tokens.length - 1];\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n            tokens.push(token);\n          } else if (_lastToken2 && token.type === 'text' && _lastToken2.type === 'text') {\n            _lastToken2.raw += token.raw;\n            _lastToken2.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block$1,\n          inline: inline$1\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$3 = defaults.defaults;\n  var cleanUrl$1 = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$3;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var defaults$4 = defaults.defaults;\n  var unescape$1 = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$4;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer_1();\n      this.slugger = new Slugger_1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape$1(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var merge$2 = helpers.merge,\n      checkSanitizeDeprecation$1 = helpers.checkSanitizeDeprecation,\n      escape$2 = helpers.escape;\n  var getDefaults = defaults.getDefaults,\n      changeDefaults = defaults.changeDefaults,\n      defaults$5 = defaults.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer_1.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            out = Parser_1.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer_1.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge$2(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults$5;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function (extension) {\n    var opts = merge$2({}, extension);\n\n    if (extension.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer_1();\n\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n\n          renderer[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            var ret = extension.renderer[prop].apply(renderer, args);\n\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.renderer) {\n          _loop(prop);\n        }\n\n        opts.renderer = renderer;\n      })();\n    }\n\n    if (extension.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer_1();\n\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n\n          tokenizer[prop] = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\n\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.tokenizer) {\n          _loop2(prop);\n        }\n\n        opts.tokenizer = tokenizer;\n      })();\n    }\n\n    if (extension.walkTokens) {\n      var walkTokens = marked.defaults.walkTokens;\n\n      opts.walkTokens = function (token) {\n        extension.walkTokens(token);\n\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n\n    marked.setOptions(opts);\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    try {\n      var tokens = Lexer_1.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser_1;\n  marked.parser = Parser_1.parse;\n  marked.Renderer = Renderer_1;\n  marked.TextRenderer = TextRenderer_1;\n  marked.Lexer = Lexer_1;\n  marked.lexer = Lexer_1.lex;\n  marked.Tokenizer = Tokenizer_1;\n  marked.Slugger = Slugger_1;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n", "import '../../editor/editor.api.js';\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { languages, Emitter } from './fillers/monaco-editor-core.js';\r\n// --- CSS configuration and defaults ---------\r\nvar LanguageServiceDefaultsImpl = /** @class */ (function () {\r\n    function LanguageServiceDefaultsImpl(languageId, options, modeConfiguration) {\r\n        this._onDidChange = new Emitter();\r\n        this._languageId = languageId;\r\n        this.setOptions(options);\r\n        this.setModeConfiguration(modeConfiguration);\r\n    }\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\r\n        get: function () {\r\n            return this._onDidChange.event;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"modeConfiguration\", {\r\n        get: function () {\r\n            return this._modeConfiguration;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"diagnosticsOptions\", {\r\n        get: function () {\r\n            return this.options;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"options\", {\r\n        get: function () {\r\n            return this._options;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    LanguageServiceDefaultsImpl.prototype.setOptions = function (options) {\r\n        this._options = options || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    LanguageServiceDefaultsImpl.prototype.setDiagnosticsOptions = function (options) {\r\n        this.setOptions(options);\r\n    };\r\n    LanguageServiceDefaultsImpl.prototype.setModeConfiguration = function (modeConfiguration) {\r\n        this._modeConfiguration = modeConfiguration || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    return LanguageServiceDefaultsImpl;\r\n}());\r\nvar optionsDefault = {\r\n    validate: true,\r\n    lint: {\r\n        compatibleVendorPrefixes: 'ignore',\r\n        vendorPrefix: 'warning',\r\n        duplicateProperties: 'warning',\r\n        emptyRules: 'warning',\r\n        importStatement: 'ignore',\r\n        boxModel: 'ignore',\r\n        universalSelector: 'ignore',\r\n        zeroUnits: 'ignore',\r\n        fontFaceProperties: 'warning',\r\n        hexColorLength: 'error',\r\n        argumentsInColorFunction: 'error',\r\n        unknownProperties: 'warning',\r\n        ieHack: 'ignore',\r\n        unknownVendorSpecificProperties: 'ignore',\r\n        propertyIgnoredDueToDisplay: 'warning',\r\n        important: 'ignore',\r\n        float: 'ignore',\r\n        idSelector: 'ignore'\r\n    },\r\n    data: { useDefaultDataProvider: true }\r\n};\r\nvar modeConfigurationDefault = {\r\n    completionItems: true,\r\n    hovers: true,\r\n    documentSymbols: true,\r\n    definitions: true,\r\n    references: true,\r\n    documentHighlights: true,\r\n    rename: true,\r\n    colors: true,\r\n    foldingRanges: true,\r\n    diagnostics: true,\r\n    selectionRanges: true\r\n};\r\nexport var cssDefaults = new LanguageServiceDefaultsImpl('css', optionsDefault, modeConfigurationDefault);\r\nexport var scssDefaults = new LanguageServiceDefaultsImpl('scss', optionsDefault, modeConfigurationDefault);\r\nexport var lessDefaults = new LanguageServiceDefaultsImpl('less', optionsDefault, modeConfigurationDefault);\r\n// export to the global based API\r\nlanguages.css = { cssDefaults: cssDefaults, lessDefaults: lessDefaults, scssDefaults: scssDefaults };\r\n// --- Registration to monaco editor ---\r\nfunction getMode() {\r\n    return import('./cssMode.js');\r\n}\r\nlanguages.onLanguage('less', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(lessDefaults); });\r\n});\r\nlanguages.onLanguage('scss', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(scssDefaults); });\r\n});\r\nlanguages.onLanguage('css', function () {\r\n    getMode().then(function (mode) { return mode.setupMode(cssDefaults); });\r\n});\r\n", "import '../../editor/editor.api.js';\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter, languages } from './fillers/monaco-editor-core.js';\nvar LanguageServiceDefaultsImpl = /** @class */ (function () {\n    function LanguageServiceDefaultsImpl(languageId, diagnosticsOptions, modeConfiguration) {\n        this._onDidChange = new Emitter();\n        this._languageId = languageId;\n        this.setDiagnosticsOptions(diagnosticsOptions);\n        this.setModeConfiguration(modeConfiguration);\n    }\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\n        get: function () {\n            return this._onDidChange.event;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"modeConfiguration\", {\n        get: function () {\n            return this._modeConfiguration;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"diagnosticsOptions\", {\n        get: function () {\n            return this._diagnosticsOptions;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LanguageServiceDefaultsImpl.prototype.setDiagnosticsOptions = function (options) {\n        this._diagnosticsOptions = options || Object.create(null);\n        this._onDidChange.fire(this);\n    };\n    LanguageServiceDefaultsImpl.prototype.setModeConfiguration = function (modeConfiguration) {\n        this._modeConfiguration = modeConfiguration || Object.create(null);\n        this._onDidChange.fire(this);\n    };\n    return LanguageServiceDefaultsImpl;\n}());\nvar diagnosticDefault = {\n    validate: true,\n    allowComments: true,\n    schemas: [],\n    enableSchemaRequest: false,\n    schemaRequest: 'warning',\n    schemaValidation: 'warning'\n};\nvar modeConfigurationDefault = {\n    documentFormattingEdits: true,\n    documentRangeFormattingEdits: true,\n    completionItems: true,\n    hovers: true,\n    documentSymbols: true,\n    tokens: true,\n    colors: true,\n    foldingRanges: true,\n    diagnostics: true,\n    selectionRanges: true\n};\nexport var jsonDefaults = new LanguageServiceDefaultsImpl('json', diagnosticDefault, modeConfigurationDefault);\n// export to the global based API\nlanguages.json = { jsonDefaults: jsonDefaults };\n// --- Registration to monaco editor ---\nfunction getMode() {\n    return import('./jsonMode.js');\n}\nlanguages.register({\n    id: 'json',\n    extensions: ['.json', '.bowerrc', '.jshintrc', '.jscsrc', '.eslintrc', '.babelrc', '.har'],\n    aliases: ['JSON', 'json'],\n    mimetypes: ['application/json']\n});\nlanguages.onLanguage('json', function () {\n    getMode().then(function (mode) { return mode.setupMode(jsonDefaults); });\n});\n", "import '../../editor/editor.api.js';\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { languages, Emitter } from './fillers/monaco-editor-core.js';\r\n// --- HTML configuration and defaults ---------\r\nvar LanguageServiceDefaultsImpl = /** @class */ (function () {\r\n    function LanguageServiceDefaultsImpl(languageId, options, modeConfiguration) {\r\n        this._onDidChange = new Emitter();\r\n        this._languageId = languageId;\r\n        this.setOptions(options);\r\n        this.setModeConfiguration(modeConfiguration);\r\n    }\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"onDidChange\", {\r\n        get: function () {\r\n            return this._onDidChange.event;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"options\", {\r\n        get: function () {\r\n            return this._options;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LanguageServiceDefaultsImpl.prototype, \"modeConfiguration\", {\r\n        get: function () {\r\n            return this._modeConfiguration;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    LanguageServiceDefaultsImpl.prototype.setOptions = function (options) {\r\n        this._options = options || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    LanguageServiceDefaultsImpl.prototype.setModeConfiguration = function (modeConfiguration) {\r\n        this._modeConfiguration = modeConfiguration || Object.create(null);\r\n        this._onDidChange.fire(this);\r\n    };\r\n    return LanguageServiceDefaultsImpl;\r\n}());\r\nvar formatDefaults = {\r\n    tabSize: 4,\r\n    insertSpaces: false,\r\n    wrapLineLength: 120,\r\n    unformatted: 'default\": \"a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd, label, map, object, q, samp, select, small, span, strong, sub, sup, textarea, tt, var',\r\n    contentUnformatted: 'pre',\r\n    indentInnerHtml: false,\r\n    preserveNewLines: true,\r\n    maxPreserveNewLines: null,\r\n    indentHandlebars: false,\r\n    endWithNewline: false,\r\n    extraLiners: 'head, body, /html',\r\n    wrapAttributes: 'auto'\r\n};\r\nvar optionsDefault = {\r\n    format: formatDefaults,\r\n    suggest: {},\r\n    data: { useDefaultDataProvider: true }\r\n};\r\nfunction getConfigurationDefault(languageId) {\r\n    return {\r\n        completionItems: true,\r\n        hovers: true,\r\n        documentSymbols: true,\r\n        links: true,\r\n        documentHighlights: true,\r\n        rename: true,\r\n        colors: true,\r\n        foldingRanges: true,\r\n        selectionRanges: true,\r\n        diagnostics: languageId === htmlLanguageId,\r\n        documentFormattingEdits: languageId === htmlLanguageId,\r\n        documentRangeFormattingEdits: languageId === htmlLanguageId // turned off for Razor and Handlebar\r\n    };\r\n}\r\nvar htmlLanguageId = 'html';\r\nvar handlebarsLanguageId = 'handlebars';\r\nvar razorLanguageId = 'razor';\r\nexport var htmlLanguageService = registerHTMLLanguageService(htmlLanguageId, optionsDefault, getConfigurationDefault(htmlLanguageId));\r\nexport var htmlDefaults = htmlLanguageService.defaults;\r\nexport var handlebarLanguageService = registerHTMLLanguageService(handlebarsLanguageId, optionsDefault, getConfigurationDefault(handlebarsLanguageId));\r\nexport var handlebarDefaults = handlebarLanguageService.defaults;\r\nexport var razorLanguageService = registerHTMLLanguageService(razorLanguageId, optionsDefault, getConfigurationDefault(razorLanguageId));\r\nexport var razorDefaults = razorLanguageService.defaults;\r\n// export to the global based API\r\nlanguages.html = { htmlDefaults: htmlDefaults, razorDefaults: razorDefaults, handlebarDefaults: handlebarDefaults, htmlLanguageService: htmlLanguageService, handlebarLanguageService: handlebarLanguageService, razorLanguageService: razorLanguageService, registerHTMLLanguageService: registerHTMLLanguageService };\r\n// --- Registration to monaco editor ---\r\nfunction getMode() {\r\n    return import('./htmlMode.js');\r\n}\r\n/**\r\n * Registers a new HTML language service for the languageId.\r\n * Note: 'html', 'handlebar' and 'razor' are registered by default.\r\n *\r\n * Use this method to register additional language ids with a HTML service.\r\n * The language server has to be registered before an editor model is opened.\r\n */\r\nexport function registerHTMLLanguageService(languageId, options, modeConfiguration) {\r\n    var _this = this;\r\n    if (options === void 0) { options = optionsDefault; }\r\n    if (modeConfiguration === void 0) { modeConfiguration = getConfigurationDefault(languageId); }\r\n    var defaults = new LanguageServiceDefaultsImpl(languageId, options, modeConfiguration);\r\n    var mode;\r\n    // delay the initalization of the mode until the language is accessed the first time\r\n    var onLanguageListener = languages.onLanguage(languageId, function () { return __awaiter(_this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getMode()];\r\n                case 1:\r\n                    mode = (_a.sent()).setupMode(defaults);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); });\r\n    return {\r\n        defaults: defaults,\r\n        dispose: function () {\r\n            onLanguageListener.dispose();\r\n            mode === null || mode === void 0 ? void 0 : mode.dispose();\r\n            mode = undefined;\r\n        }\r\n    };\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { languages } from './fillers/monaco-editor-core.js';\r\nvar languageDefinitions = {};\r\nvar lazyLanguageLoaders = {};\r\nvar LazyLanguageLoader = /** @class */ (function () {\r\n    function LazyLanguageLoader(languageId) {\r\n        var _this = this;\r\n        this._languageId = languageId;\r\n        this._loadingTriggered = false;\r\n        this._lazyLoadPromise = new Promise(function (resolve, reject) {\r\n            _this._lazyLoadPromiseResolve = resolve;\r\n            _this._lazyLoadPromiseReject = reject;\r\n        });\r\n    }\r\n    LazyLanguageLoader.getOrCreate = function (languageId) {\r\n        if (!lazyLanguageLoaders[languageId]) {\r\n            lazyLanguageLoaders[languageId] = new LazyLanguageLoader(languageId);\r\n        }\r\n        return lazyLanguageLoaders[languageId];\r\n    };\r\n    LazyLanguageLoader.prototype.whenLoaded = function () {\r\n        return this._lazyLoadPromise;\r\n    };\r\n    LazyLanguageLoader.prototype.load = function () {\r\n        var _this = this;\r\n        if (!this._loadingTriggered) {\r\n            this._loadingTriggered = true;\r\n            languageDefinitions[this._languageId].loader().then(function (mod) { return _this._lazyLoadPromiseResolve(mod); }, function (err) { return _this._lazyLoadPromiseReject(err); });\r\n        }\r\n        return this._lazyLoadPromise;\r\n    };\r\n    return LazyLanguageLoader;\r\n}());\r\nexport function loadLanguage(languageId) {\r\n    return LazyLanguageLoader.getOrCreate(languageId).load();\r\n}\r\nexport function registerLanguage(def) {\r\n    var languageId = def.id;\r\n    languageDefinitions[languageId] = def;\r\n    languages.register(def);\r\n    var lazyLanguageLoader = LazyLanguageLoader.getOrCreate(languageId);\r\n    languages.setMonarchTokensProvider(languageId, lazyLanguageLoader.whenLoaded().then(function (mod) { return mod.language; }));\r\n    languages.onLanguage(languageId, function () {\r\n        lazyLanguageLoader.load().then(function (mod) {\r\n            languages.setLanguageConfiguration(languageId, mod.conf);\r\n        });\r\n    });\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'abap',\r\n    extensions: ['.abap'],\r\n    aliases: ['abap', 'ABAP'],\r\n    loader: function () { return import('./abap.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'apex',\r\n    extensions: ['.cls'],\r\n    aliases: ['Apex', 'apex'],\r\n    mimetypes: ['text/x-apex-source', 'text/x-apex'],\r\n    loader: function () { return import('./apex.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'azcli',\r\n    extensions: ['.azcli'],\r\n    aliases: ['Azure CLI', 'azcli'],\r\n    loader: function () { return import('./azcli.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'bat',\r\n    extensions: ['.bat', '.cmd'],\r\n    aliases: ['Batch', 'bat'],\r\n    loader: function () { return import('./bat.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'bicep',\r\n    extensions: ['.bicep'],\r\n    aliases: ['Bicep'],\r\n    loader: function () { return import('./bicep.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'cameligo',\r\n    extensions: ['.mligo'],\r\n    aliases: ['Cameligo'],\r\n    loader: function () { return import('./cameligo.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'clojure',\r\n    extensions: ['.clj', '.cljs', '.cljc', '.edn'],\r\n    aliases: ['clojure', 'Clojure'],\r\n    loader: function () { return import('./clojure.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'coffeescript',\r\n    extensions: ['.coffee'],\r\n    aliases: ['CoffeeScript', 'coffeescript', 'coffee'],\r\n    mimetypes: ['text/x-coffeescript', 'text/coffeescript'],\r\n    loader: function () { return import('./coffee.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'c',\r\n    extensions: ['.c', '.h'],\r\n    aliases: ['C', 'c'],\r\n    loader: function () { return import('./cpp.js'); }\r\n});\r\nregisterLanguage({\r\n    id: 'cpp',\r\n    extensions: ['.cpp', '.cc', '.cxx', '.hpp', '.hh', '.hxx'],\r\n    aliases: ['C++', 'Cpp', 'cpp'],\r\n    loader: function () { return import('./cpp.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'csharp',\r\n    extensions: ['.cs', '.csx', '.cake'],\r\n    aliases: ['C#', 'csharp'],\r\n    loader: function () { return import('./csharp.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'csp',\r\n    extensions: [],\r\n    aliases: ['CSP', 'csp'],\r\n    loader: function () { return import('./csp.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'css',\r\n    extensions: ['.css'],\r\n    aliases: ['CSS', 'css'],\r\n    mimetypes: ['text/css'],\r\n    loader: function () { return import('./css.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'dart',\r\n    extensions: ['.dart'],\r\n    aliases: ['Dart', 'dart'],\r\n    mimetypes: ['text/x-dart-source', 'text/x-dart'],\r\n    loader: function () { return import('./dart.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'dockerfile',\r\n    extensions: ['.dockerfile'],\r\n    filenames: ['Dockerfile'],\r\n    aliases: ['Dockerfile'],\r\n    loader: function () { return import('./dockerfile.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'ecl',\r\n    extensions: ['.ecl'],\r\n    aliases: ['ECL', 'Ecl', 'ecl'],\r\n    loader: function () { return import('./ecl.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'elixir',\r\n    extensions: ['.ex', '.exs'],\r\n    aliases: ['Elixir', 'elixir', 'ex'],\r\n    loader: function () { return import('./elixir.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'fsharp',\r\n    extensions: ['.fs', '.fsi', '.ml', '.mli', '.fsx', '.fsscript'],\r\n    aliases: ['F#', 'FSharp', 'fsharp'],\r\n    loader: function () { return import('./fsharp.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'go',\r\n    extensions: ['.go'],\r\n    aliases: ['Go'],\r\n    loader: function () { return import('./go.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'graphql',\r\n    extensions: ['.graphql', '.gql'],\r\n    aliases: ['GraphQL', 'graphql', 'gql'],\r\n    mimetypes: ['application/graphql'],\r\n    loader: function () { return import('./graphql.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'handlebars',\r\n    extensions: ['.handlebars', '.hbs'],\r\n    aliases: ['Handlebars', 'handlebars', 'hbs'],\r\n    mimetypes: ['text/x-handlebars-template'],\r\n    loader: function () { return import('./handlebars.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'hcl',\r\n    extensions: ['.tf', '.tfvars', '.hcl'],\r\n    aliases: ['Terraform', 'tf', 'HCL', 'hcl'],\r\n    loader: function () { return import('./hcl.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'html',\r\n    extensions: ['.html', '.htm', '.shtml', '.xhtml', '.mdoc', '.jsp', '.asp', '.aspx', '.jshtm'],\r\n    aliases: ['HTML', 'htm', 'html', 'xhtml'],\r\n    mimetypes: ['text/html', 'text/x-jshtm', 'text/template', 'text/ng-template'],\r\n    loader: function () { return import('./html.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'ini',\r\n    extensions: ['.ini', '.properties', '.gitconfig'],\r\n    filenames: ['config', '.gitattributes', '.gitconfig', '.editorconfig'],\r\n    aliases: ['Ini', 'ini'],\r\n    loader: function () { return import('./ini.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'java',\r\n    extensions: ['.java', '.jav'],\r\n    aliases: ['Java', 'java'],\r\n    mimetypes: ['text/x-java-source', 'text/x-java'],\r\n    loader: function () { return import('./java.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'javascript',\r\n    extensions: ['.js', '.es6', '.jsx', '.mjs'],\r\n    firstLine: '^#!.*\\\\bnode',\r\n    filenames: ['jakefile'],\r\n    aliases: ['JavaScript', 'javascript', 'js'],\r\n    mimetypes: ['text/javascript'],\r\n    loader: function () { return import('./javascript.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'julia',\r\n    extensions: ['.jl'],\r\n    aliases: ['julia', 'Julia'],\r\n    loader: function () { return import('./julia.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'kotlin',\r\n    extensions: ['.kt'],\r\n    aliases: ['Kotlin', 'kotlin'],\r\n    mimetypes: ['text/x-kotlin-source', 'text/x-kotlin'],\r\n    loader: function () { return import('./kotlin.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'less',\r\n    extensions: ['.less'],\r\n    aliases: ['Less', 'less'],\r\n    mimetypes: ['text/x-less', 'text/less'],\r\n    loader: function () { return import('./less.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'lexon',\r\n    extensions: ['.lex'],\r\n    aliases: ['Lexon'],\r\n    loader: function () { return import('./lexon.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'lua',\r\n    extensions: ['.lua'],\r\n    aliases: ['Lua', 'lua'],\r\n    loader: function () { return import('./lua.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'liquid',\r\n    extensions: ['.liquid', '.html.liquid'],\r\n    aliases: ['Liquid', 'liquid'],\r\n    mimetypes: ['application/liquid'],\r\n    loader: function () { return import('./liquid.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'm3',\r\n    extensions: ['.m3', '.i3', '.mg', '.ig'],\r\n    aliases: ['Modula-3', 'Modula3', 'modula3', 'm3'],\r\n    loader: function () { return import('./m3.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'markdown',\r\n    extensions: ['.md', '.markdown', '.mdown', '.mkdn', '.mkd', '.mdwn', '.mdtxt', '.mdtext'],\r\n    aliases: ['Markdown', 'markdown'],\r\n    loader: function () { return import('./markdown.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'mips',\r\n    extensions: ['.s'],\r\n    aliases: ['MIPS', 'MIPS-V'],\r\n    mimetypes: ['text/x-mips', 'text/mips', 'text/plaintext'],\r\n    loader: function () { return import('./mips.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'msdax',\r\n    extensions: ['.dax', '.msdax'],\r\n    aliases: ['DAX', 'MSDAX'],\r\n    loader: function () { return import('./msdax.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'mysql',\r\n    extensions: [],\r\n    aliases: ['MySQL', 'mysql'],\r\n    loader: function () { return import('./mysql.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'objective-c',\r\n    extensions: ['.m'],\r\n    aliases: ['Objective-C'],\r\n    loader: function () { return import('./objective-c.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'pascal',\r\n    extensions: ['.pas', '.p', '.pp'],\r\n    aliases: ['Pascal', 'pas'],\r\n    mimetypes: ['text/x-pascal-source', 'text/x-pascal'],\r\n    loader: function () { return import('./pascal.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'pascaligo',\r\n    extensions: ['.ligo'],\r\n    aliases: ['Pascaligo', 'ligo'],\r\n    loader: function () { return import('./pascaligo.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'perl',\r\n    extensions: ['.pl'],\r\n    aliases: ['Perl', 'pl'],\r\n    loader: function () { return import('./perl.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'pgsql',\r\n    extensions: [],\r\n    aliases: ['PostgreSQL', 'postgres', 'pg', 'postgre'],\r\n    loader: function () { return import('./pgsql.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'php',\r\n    extensions: ['.php', '.php4', '.php5', '.phtml', '.ctp'],\r\n    aliases: ['PHP', 'php'],\r\n    mimetypes: ['application/x-php'],\r\n    loader: function () { return import('./php.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'postiats',\r\n    extensions: ['.dats', '.sats', '.hats'],\r\n    aliases: ['ATS', 'ATS/Postiats'],\r\n    loader: function () { return import('./postiats.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'powerquery',\r\n    extensions: ['.pq', '.pqm'],\r\n    aliases: ['PQ', 'M', 'Power Query', 'Power Query M'],\r\n    loader: function () { return import('./powerquery.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'powershell',\r\n    extensions: ['.ps1', '.psm1', '.psd1'],\r\n    aliases: ['PowerShell', 'powershell', 'ps', 'ps1'],\r\n    loader: function () { return import('./powershell.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'pug',\r\n    extensions: ['.jade', '.pug'],\r\n    aliases: ['Pug', 'Jade', 'jade'],\r\n    loader: function () { return import('./pug.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'python',\r\n    extensions: ['.py', '.rpy', '.pyw', '.cpy', '.gyp', '.gypi'],\r\n    aliases: ['Python', 'py'],\r\n    firstLine: '^#!/.*\\\\bpython[0-9.-]*\\\\b',\r\n    loader: function () { return import('./python.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'qsharp',\r\n    extensions: ['.qs'],\r\n    aliases: ['Q#', 'qsharp'],\r\n    loader: function () { return import('./qsharp.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'r',\r\n    extensions: ['.r', '.rhistory', '.rmd', '.rprofile', '.rt'],\r\n    aliases: ['R', 'r'],\r\n    loader: function () { return import('./r.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'razor',\r\n    extensions: ['.cshtml'],\r\n    aliases: ['Razor', 'razor'],\r\n    mimetypes: ['text/x-cshtml'],\r\n    loader: function () { return import('./razor.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'redis',\r\n    extensions: ['.redis'],\r\n    aliases: ['redis'],\r\n    loader: function () { return import('./redis.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'redshift',\r\n    extensions: [],\r\n    aliases: ['Redshift', 'redshift'],\r\n    loader: function () { return import('./redshift.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'restructuredtext',\r\n    extensions: ['.rst'],\r\n    aliases: ['reStructuredText', 'restructuredtext'],\r\n    loader: function () { return import('./restructuredtext.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'ruby',\r\n    extensions: ['.rb', '.rbx', '.rjs', '.gemspec', '.pp'],\r\n    filenames: ['rakefile', 'Gemfile'],\r\n    aliases: ['Ruby', 'rb'],\r\n    loader: function () { return import('./ruby.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'rust',\r\n    extensions: ['.rs', '.rlib'],\r\n    aliases: ['Rust', 'rust'],\r\n    loader: function () { return import('./rust.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'sb',\r\n    extensions: ['.sb'],\r\n    aliases: ['Small Basic', 'sb'],\r\n    loader: function () { return import('./sb.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'scala',\r\n    extensions: ['.scala', '.sc', '.sbt'],\r\n    aliases: ['Scala', 'scala', 'SBT', 'Sbt', 'sbt', 'Dotty', 'dotty'],\r\n    mimetypes: ['text/x-scala-source', 'text/x-scala', 'text/x-sbt', 'text/x-dotty'],\r\n    loader: function () { return import('./scala.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'scheme',\r\n    extensions: ['.scm', '.ss', '.sch', '.rkt'],\r\n    aliases: ['scheme', 'Scheme'],\r\n    loader: function () { return import('./scheme.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'scss',\r\n    extensions: ['.scss'],\r\n    aliases: ['Sass', 'sass', 'scss'],\r\n    mimetypes: ['text/x-scss', 'text/scss'],\r\n    loader: function () { return import('./scss.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'shell',\r\n    extensions: ['.sh', '.bash'],\r\n    aliases: ['Shell', 'sh'],\r\n    loader: function () { return import('./shell.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'sol',\r\n    extensions: ['.sol'],\r\n    aliases: ['sol', 'solidity', 'Solidity'],\r\n    loader: function () { return import('./solidity.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'aes',\r\n    extensions: ['.aes'],\r\n    aliases: ['aes', 'sophia', 'Sophia'],\r\n    loader: function () { return import('./sophia.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'sparql',\r\n    extensions: ['.rq'],\r\n    aliases: ['sparql', 'SPARQL'],\r\n    loader: function () { return import('./sparql.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'sql',\r\n    extensions: ['.sql'],\r\n    aliases: ['SQL'],\r\n    loader: function () { return import('./sql.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'st',\r\n    extensions: ['.st', '.iecst', '.iecplc', '.lc3lib'],\r\n    aliases: ['StructuredText', 'scl', 'stl'],\r\n    loader: function () { return import('./st.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'swift',\r\n    aliases: ['Swift', 'swift'],\r\n    extensions: ['.swift'],\r\n    mimetypes: ['text/swift'],\r\n    loader: function () { return import('./swift.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'systemverilog',\r\n    extensions: ['.sv', '.svh'],\r\n    aliases: ['SV', 'sv', 'SystemVerilog', 'systemverilog'],\r\n    loader: function () { return import('./systemverilog.js'); }\r\n});\r\nregisterLanguage({\r\n    id: 'verilog',\r\n    extensions: ['.v', '.vh'],\r\n    aliases: ['V', 'v', 'Verilog', 'verilog'],\r\n    loader: function () { return import('./systemverilog.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'tcl',\r\n    extensions: ['.tcl'],\r\n    aliases: ['tcl', 'Tcl', 'tcltk', 'TclTk', 'tcl/tk', 'Tcl/Tk'],\r\n    loader: function () { return import('./tcl.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'twig',\r\n    extensions: ['.twig'],\r\n    aliases: ['Twig', 'twig'],\r\n    mimetypes: ['text/x-twig'],\r\n    loader: function () { return import('./twig.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'typescript',\r\n    extensions: ['.ts', '.tsx'],\r\n    aliases: ['TypeScript', 'ts', 'typescript'],\r\n    mimetypes: ['text/typescript'],\r\n    loader: function () { return import('./typescript.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'vb',\r\n    extensions: ['.vb'],\r\n    aliases: ['Visual Basic', 'vb'],\r\n    loader: function () { return import('./vb.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'xml',\r\n    extensions: [\r\n        '.xml',\r\n        '.dtd',\r\n        '.ascx',\r\n        '.csproj',\r\n        '.config',\r\n        '.wxi',\r\n        '.wxl',\r\n        '.wxs',\r\n        '.xaml',\r\n        '.svg',\r\n        '.svgz',\r\n        '.opf',\r\n        '.xsl'\r\n    ],\r\n    firstLine: '(\\\\<\\\\?xml.*)|(\\\\<svg)|(\\\\<\\\\!doctype\\\\s+svg)',\r\n    aliases: ['XML', 'xml'],\r\n    mimetypes: ['text/xml', 'application/xml', 'application/xaml+xml', 'application/xml-dtd'],\r\n    loader: function () { return import('./xml.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerLanguage } from '../_.contribution.js';\r\nregisterLanguage({\r\n    id: 'yaml',\r\n    extensions: ['.yaml', '.yml'],\r\n    aliases: ['YAML', 'yaml', 'YML', 'yml'],\r\n    mimetypes: ['application/x-yaml', 'text/x-yaml'],\r\n    loader: function () { return import('./yaml.js'); }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './anchorSelect.css';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nexport const SelectionAnchorSet = new RawContextKey('selectionAnchorSet', false);\r\nlet SelectionAnchorController = class SelectionAnchorController {\r\n    constructor(editor, contextKeyService) {\r\n        this.editor = editor;\r\n        this.selectionAnchorSetContextKey = SelectionAnchorSet.bindTo(contextKeyService);\r\n        this.modelChangeListener = editor.onDidChangeModel(() => this.selectionAnchorSetContextKey.reset());\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SelectionAnchorController.ID);\r\n    }\r\n    setSelectionAnchor() {\r\n        if (this.editor.hasModel()) {\r\n            const position = this.editor.getPosition();\r\n            const previousDecorations = this.decorationId ? [this.decorationId] : [];\r\n            const newDecorationId = this.editor.deltaDecorations(previousDecorations, [{\r\n                    range: Selection.fromPositions(position, position),\r\n                    options: {\r\n                        description: 'selection-anchor',\r\n                        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n                        hoverMessage: new MarkdownString().appendText(localize('selectionAnchor', \"Selection Anchor\")),\r\n                        className: 'selection-anchor'\r\n                    }\r\n                }]);\r\n            this.decorationId = newDecorationId[0];\r\n            this.selectionAnchorSetContextKey.set(!!this.decorationId);\r\n            alert(localize('anchorSet', \"Anchor set at {0}:{1}\", position.lineNumber, position.column));\r\n        }\r\n    }\r\n    goToSelectionAnchor() {\r\n        if (this.editor.hasModel() && this.decorationId) {\r\n            const anchorPosition = this.editor.getModel().getDecorationRange(this.decorationId);\r\n            if (anchorPosition) {\r\n                this.editor.setPosition(anchorPosition.getStartPosition());\r\n            }\r\n        }\r\n    }\r\n    selectFromAnchorToCursor() {\r\n        if (this.editor.hasModel() && this.decorationId) {\r\n            const start = this.editor.getModel().getDecorationRange(this.decorationId);\r\n            if (start) {\r\n                const end = this.editor.getPosition();\r\n                this.editor.setSelection(Selection.fromPositions(start.getStartPosition(), end));\r\n                this.cancelSelectionAnchor();\r\n            }\r\n        }\r\n    }\r\n    cancelSelectionAnchor() {\r\n        if (this.decorationId) {\r\n            this.editor.deltaDecorations([this.decorationId], []);\r\n            this.decorationId = undefined;\r\n            this.selectionAnchorSetContextKey.set(false);\r\n        }\r\n    }\r\n    dispose() {\r\n        this.cancelSelectionAnchor();\r\n        this.modelChangeListener.dispose();\r\n    }\r\n};\r\nSelectionAnchorController.ID = 'editor.contrib.selectionAnchorController';\r\nSelectionAnchorController = __decorate([\r\n    __param(1, IContextKeyService)\r\n], SelectionAnchorController);\r\nclass SetSelectionAnchor extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.setSelectionAnchor',\r\n            label: localize('setSelectionAnchor', \"Set Selection Anchor\"),\r\n            alias: 'Set Selection Anchor',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 32 /* KEY_B */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = SelectionAnchorController.get(editor);\r\n            controller.setSelectionAnchor();\r\n        });\r\n    }\r\n}\r\nclass GoToSelectionAnchor extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.goToSelectionAnchor',\r\n            label: localize('goToSelectionAnchor', \"Go to Selection Anchor\"),\r\n            alias: 'Go to Selection Anchor',\r\n            precondition: SelectionAnchorSet,\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = SelectionAnchorController.get(editor);\r\n            controller.goToSelectionAnchor();\r\n        });\r\n    }\r\n}\r\nclass SelectFromAnchorToCursor extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.selectFromAnchorToCursor',\r\n            label: localize('selectFromAnchorToCursor', \"Select from Anchor to Cursor\"),\r\n            alias: 'Select from Anchor to Cursor',\r\n            precondition: SelectionAnchorSet,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 41 /* KEY_K */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = SelectionAnchorController.get(editor);\r\n            controller.selectFromAnchorToCursor();\r\n        });\r\n    }\r\n}\r\nclass CancelSelectionAnchor extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.cancelSelectionAnchor',\r\n            label: localize('cancelSelectionAnchor', \"Cancel Selection Anchor\"),\r\n            alias: 'Cancel Selection Anchor',\r\n            precondition: SelectionAnchorSet,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 9 /* Escape */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = SelectionAnchorController.get(editor);\r\n            controller.cancelSelectionAnchor();\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(SelectionAnchorController.ID, SelectionAnchorController);\r\nregisterEditorAction(SetSelectionAnchor);\r\nregisterEditorAction(GoToSelectionAnchor);\r\nregisterEditorAction(SelectFromAnchorToCursor);\r\nregisterEditorAction(CancelSelectionAnchor);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { escapeIcons } from './iconLabels.js';\r\nimport { illegalArgument } from './errors.js';\r\nexport class MarkdownString {\r\n    constructor(value = '', isTrustedOrOptions = false) {\r\n        var _a, _b;\r\n        this.value = value;\r\n        if (typeof this.value !== 'string') {\r\n            throw illegalArgument('value');\r\n        }\r\n        if (typeof isTrustedOrOptions === 'boolean') {\r\n            this.isTrusted = isTrustedOrOptions;\r\n            this.supportThemeIcons = false;\r\n        }\r\n        else {\r\n            this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\r\n            this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\r\n        }\r\n    }\r\n    appendText(value, newlineStyle = 0 /* Paragraph */) {\r\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\r\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length))\r\n            .replace(/^>/gm, '\\\\>')\r\n            .replace(/\\n/g, newlineStyle === 1 /* Break */ ? '\\\\\\n' : '\\n\\n');\r\n        return this;\r\n    }\r\n    appendMarkdown(value) {\r\n        this.value += value;\r\n        return this;\r\n    }\r\n    appendCodeblock(langId, code) {\r\n        this.value += '\\n```';\r\n        this.value += langId;\r\n        this.value += '\\n';\r\n        this.value += code;\r\n        this.value += '\\n```\\n';\r\n        return this;\r\n    }\r\n}\r\nexport function isEmptyMarkdownString(oneOrMany) {\r\n    if (isMarkdownString(oneOrMany)) {\r\n        return !oneOrMany.value;\r\n    }\r\n    else if (Array.isArray(oneOrMany)) {\r\n        return oneOrMany.every(isEmptyMarkdownString);\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\nexport function isMarkdownString(thing) {\r\n    if (thing instanceof MarkdownString) {\r\n        return true;\r\n    }\r\n    else if (thing && typeof thing === 'object') {\r\n        return typeof thing.value === 'string'\r\n            && (typeof thing.isTrusted === 'boolean' || thing.isTrusted === undefined)\r\n            && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\r\n    }\r\n    return false;\r\n}\r\nexport function escapeMarkdownSyntaxTokens(text) {\r\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&');\r\n}\r\nexport function removeMarkdownEscapes(text) {\r\n    if (!text) {\r\n        return text;\r\n    }\r\n    return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\r\n}\r\nexport function parseHrefAndDimensions(href) {\r\n    const dimensions = [];\r\n    const splitted = href.split('|').map(s => s.trim());\r\n    href = splitted[0];\r\n    const parameters = splitted[1];\r\n    if (parameters) {\r\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\r\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\r\n        const height = heightFromParams ? heightFromParams[1] : '';\r\n        const width = widthFromParams ? widthFromParams[1] : '';\r\n        const widthIsFinite = isFinite(parseInt(width));\r\n        const heightIsFinite = isFinite(parseInt(height));\r\n        if (widthIsFinite) {\r\n            dimensions.push(`width=\"${width}\"`);\r\n        }\r\n        if (heightIsFinite) {\r\n            dimensions.push(`height=\"${height}\"`);\r\n        }\r\n    }\r\n    return { href, dimensions };\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './bracketMatching.css';\r\nimport * as nls from '../../../nls.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { OverviewRulerLane } from '../../common/model.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { editorBracketMatchBackground, editorBracketMatchBorder } from '../../common/view/editorColorRegistry.js';\r\nimport { registerColor } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant, themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nimport { MenuRegistry, MenuId } from '../../../platform/actions/common/actions.js';\r\nconst overviewRulerBracketMatchForeground = registerColor('editorOverviewRuler.bracketMatchForeground', { dark: '#A0A0A0', light: '#A0A0A0', hc: '#A0A0A0' }, nls.localize('overviewRulerBracketMatchForeground', 'Overview ruler marker color for matching brackets.'));\r\nclass JumpToBracketAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.jumpToBracket',\r\n            label: nls.localize('smartSelect.jumpBracket', \"Go to Bracket\"),\r\n            alias: 'Go to Bracket',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 88 /* US_BACKSLASH */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let controller = BracketMatchingController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        controller.jumpToBracket();\r\n    }\r\n}\r\nclass SelectToBracketAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.selectToBracket',\r\n            label: nls.localize('smartSelect.selectToBracket', \"Select to Bracket\"),\r\n            alias: 'Select to Bracket',\r\n            precondition: undefined,\r\n            description: {\r\n                description: `Select to Bracket`,\r\n                args: [{\r\n                        name: 'args',\r\n                        schema: {\r\n                            type: 'object',\r\n                            properties: {\r\n                                'selectBrackets': {\r\n                                    type: 'boolean',\r\n                                    default: true\r\n                                }\r\n                            },\r\n                        }\r\n                    }]\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        const controller = BracketMatchingController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        let selectBrackets = true;\r\n        if (args && args.selectBrackets === false) {\r\n            selectBrackets = false;\r\n        }\r\n        controller.selectToBracket(selectBrackets);\r\n    }\r\n}\r\nclass BracketsData {\r\n    constructor(position, brackets, options) {\r\n        this.position = position;\r\n        this.brackets = brackets;\r\n        this.options = options;\r\n    }\r\n}\r\nexport class BracketMatchingController extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._editor = editor;\r\n        this._lastBracketsData = [];\r\n        this._lastVersionId = 0;\r\n        this._decorations = [];\r\n        this._updateBracketsSoon = this._register(new RunOnceScheduler(() => this._updateBrackets(), 50));\r\n        this._matchBrackets = this._editor.getOption(61 /* matchBrackets */);\r\n        this._updateBracketsSoon.schedule();\r\n        this._register(editor.onDidChangeCursorPosition((e) => {\r\n            if (this._matchBrackets === 'never') {\r\n                // Early exit if nothing needs to be done!\r\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n                return;\r\n            }\r\n            this._updateBracketsSoon.schedule();\r\n        }));\r\n        this._register(editor.onDidChangeModelContent((e) => {\r\n            this._updateBracketsSoon.schedule();\r\n        }));\r\n        this._register(editor.onDidChangeModel((e) => {\r\n            this._lastBracketsData = [];\r\n            this._decorations = [];\r\n            this._updateBracketsSoon.schedule();\r\n        }));\r\n        this._register(editor.onDidChangeModelLanguageConfiguration((e) => {\r\n            this._lastBracketsData = [];\r\n            this._updateBracketsSoon.schedule();\r\n        }));\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(61 /* matchBrackets */)) {\r\n                this._matchBrackets = this._editor.getOption(61 /* matchBrackets */);\r\n                this._decorations = this._editor.deltaDecorations(this._decorations, []);\r\n                this._lastBracketsData = [];\r\n                this._lastVersionId = 0;\r\n                this._updateBracketsSoon.schedule();\r\n            }\r\n        }));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(BracketMatchingController.ID);\r\n    }\r\n    jumpToBracket() {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const newSelections = this._editor.getSelections().map(selection => {\r\n            const position = selection.getStartPosition();\r\n            // find matching brackets if position is on a bracket\r\n            const brackets = model.matchBracket(position);\r\n            let newCursorPosition = null;\r\n            if (brackets) {\r\n                if (brackets[0].containsPosition(position)) {\r\n                    newCursorPosition = brackets[1].getStartPosition();\r\n                }\r\n                else if (brackets[1].containsPosition(position)) {\r\n                    newCursorPosition = brackets[0].getStartPosition();\r\n                }\r\n            }\r\n            else {\r\n                // find the enclosing brackets if the position isn't on a matching bracket\r\n                const enclosingBrackets = model.findEnclosingBrackets(position);\r\n                if (enclosingBrackets) {\r\n                    newCursorPosition = enclosingBrackets[0].getStartPosition();\r\n                }\r\n                else {\r\n                    // no enclosing brackets, try the very first next bracket\r\n                    const nextBracket = model.findNextBracket(position);\r\n                    if (nextBracket && nextBracket.range) {\r\n                        newCursorPosition = nextBracket.range.getStartPosition();\r\n                    }\r\n                }\r\n            }\r\n            if (newCursorPosition) {\r\n                return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\r\n            }\r\n            return new Selection(position.lineNumber, position.column, position.lineNumber, position.column);\r\n        });\r\n        this._editor.setSelections(newSelections);\r\n        this._editor.revealRange(newSelections[0]);\r\n    }\r\n    selectToBracket(selectBrackets) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const newSelections = [];\r\n        this._editor.getSelections().forEach(selection => {\r\n            const position = selection.getStartPosition();\r\n            let brackets = model.matchBracket(position);\r\n            if (!brackets) {\r\n                brackets = model.findEnclosingBrackets(position);\r\n                if (!brackets) {\r\n                    const nextBracket = model.findNextBracket(position);\r\n                    if (nextBracket && nextBracket.range) {\r\n                        brackets = model.matchBracket(nextBracket.range.getStartPosition());\r\n                    }\r\n                }\r\n            }\r\n            let selectFrom = null;\r\n            let selectTo = null;\r\n            if (brackets) {\r\n                brackets.sort(Range.compareRangesUsingStarts);\r\n                const [open, close] = brackets;\r\n                selectFrom = selectBrackets ? open.getStartPosition() : open.getEndPosition();\r\n                selectTo = selectBrackets ? close.getEndPosition() : close.getStartPosition();\r\n            }\r\n            if (selectFrom && selectTo) {\r\n                newSelections.push(new Selection(selectFrom.lineNumber, selectFrom.column, selectTo.lineNumber, selectTo.column));\r\n            }\r\n        });\r\n        if (newSelections.length > 0) {\r\n            this._editor.setSelections(newSelections);\r\n            this._editor.revealRange(newSelections[0]);\r\n        }\r\n    }\r\n    _updateBrackets() {\r\n        if (this._matchBrackets === 'never') {\r\n            return;\r\n        }\r\n        this._recomputeBrackets();\r\n        let newDecorations = [], newDecorationsLen = 0;\r\n        for (const bracketData of this._lastBracketsData) {\r\n            let brackets = bracketData.brackets;\r\n            if (brackets) {\r\n                newDecorations[newDecorationsLen++] = { range: brackets[0], options: bracketData.options };\r\n                newDecorations[newDecorationsLen++] = { range: brackets[1], options: bracketData.options };\r\n            }\r\n        }\r\n        this._decorations = this._editor.deltaDecorations(this._decorations, newDecorations);\r\n    }\r\n    _recomputeBrackets() {\r\n        if (!this._editor.hasModel()) {\r\n            // no model => no brackets!\r\n            this._lastBracketsData = [];\r\n            this._lastVersionId = 0;\r\n            return;\r\n        }\r\n        const selections = this._editor.getSelections();\r\n        if (selections.length > 100) {\r\n            // no bracket matching for high numbers of selections\r\n            this._lastBracketsData = [];\r\n            this._lastVersionId = 0;\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const versionId = model.getVersionId();\r\n        let previousData = [];\r\n        if (this._lastVersionId === versionId) {\r\n            // use the previous data only if the model is at the same version id\r\n            previousData = this._lastBracketsData;\r\n        }\r\n        let positions = [], positionsLen = 0;\r\n        for (let i = 0, len = selections.length; i < len; i++) {\r\n            let selection = selections[i];\r\n            if (selection.isEmpty()) {\r\n                // will bracket match a cursor only if the selection is collapsed\r\n                positions[positionsLen++] = selection.getStartPosition();\r\n            }\r\n        }\r\n        // sort positions for `previousData` cache hits\r\n        if (positions.length > 1) {\r\n            positions.sort(Position.compare);\r\n        }\r\n        let newData = [], newDataLen = 0;\r\n        let previousIndex = 0, previousLen = previousData.length;\r\n        for (let i = 0, len = positions.length; i < len; i++) {\r\n            let position = positions[i];\r\n            while (previousIndex < previousLen && previousData[previousIndex].position.isBefore(position)) {\r\n                previousIndex++;\r\n            }\r\n            if (previousIndex < previousLen && previousData[previousIndex].position.equals(position)) {\r\n                newData[newDataLen++] = previousData[previousIndex];\r\n            }\r\n            else {\r\n                let brackets = model.matchBracket(position);\r\n                let options = BracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER;\r\n                if (!brackets && this._matchBrackets === 'always') {\r\n                    brackets = model.findEnclosingBrackets(position, 20 /* give at most 20ms to compute */);\r\n                    options = BracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER;\r\n                }\r\n                newData[newDataLen++] = new BracketsData(position, brackets, options);\r\n            }\r\n        }\r\n        this._lastBracketsData = newData;\r\n        this._lastVersionId = versionId;\r\n    }\r\n}\r\nBracketMatchingController.ID = 'editor.contrib.bracketMatchingController';\r\nBracketMatchingController._DECORATION_OPTIONS_WITH_OVERVIEW_RULER = ModelDecorationOptions.register({\r\n    description: 'bracket-match-overview',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'bracket-match',\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerBracketMatchForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nBracketMatchingController._DECORATION_OPTIONS_WITHOUT_OVERVIEW_RULER = ModelDecorationOptions.register({\r\n    description: 'bracket-match-no-overview',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'bracket-match'\r\n});\r\nregisterEditorContribution(BracketMatchingController.ID, BracketMatchingController);\r\nregisterEditorAction(SelectToBracketAction);\r\nregisterEditorAction(JumpToBracketAction);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const bracketMatchBackground = theme.getColor(editorBracketMatchBackground);\r\n    if (bracketMatchBackground) {\r\n        collector.addRule(`.monaco-editor .bracket-match { background-color: ${bracketMatchBackground}; }`);\r\n    }\r\n    const bracketMatchBorder = theme.getColor(editorBracketMatchBorder);\r\n    if (bracketMatchBorder) {\r\n        collector.addRule(`.monaco-editor .bracket-match { border: 1px solid ${bracketMatchBorder}; }`);\r\n    }\r\n});\r\n// Go to menu\r\nMenuRegistry.appendMenuItem(MenuId.MenubarGoMenu, {\r\n    group: '5_infile_nav',\r\n    command: {\r\n        id: 'editor.action.jumpToBracket',\r\n        title: nls.localize({ key: 'miGoToBracket', comment: ['&& denotes a mnemonic'] }, \"Go to &&Bracket\")\r\n    },\r\n    order: 2\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nexport class MoveCaretCommand {\r\n    constructor(selection, isMovingLeft) {\r\n        this._selection = selection;\r\n        this._isMovingLeft = isMovingLeft;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        if (this._selection.startLineNumber !== this._selection.endLineNumber || this._selection.isEmpty()) {\r\n            return;\r\n        }\r\n        const lineNumber = this._selection.startLineNumber;\r\n        const startColumn = this._selection.startColumn;\r\n        const endColumn = this._selection.endColumn;\r\n        if (this._isMovingLeft && startColumn === 1) {\r\n            return;\r\n        }\r\n        if (!this._isMovingLeft && endColumn === model.getLineMaxColumn(lineNumber)) {\r\n            return;\r\n        }\r\n        if (this._isMovingLeft) {\r\n            const rangeBefore = new Range(lineNumber, startColumn - 1, lineNumber, startColumn);\r\n            const charBefore = model.getValueInRange(rangeBefore);\r\n            builder.addEditOperation(rangeBefore, null);\r\n            builder.addEditOperation(new Range(lineNumber, endColumn, lineNumber, endColumn), charBefore);\r\n        }\r\n        else {\r\n            const rangeAfter = new Range(lineNumber, endColumn, lineNumber, endColumn + 1);\r\n            const charAfter = model.getValueInRange(rangeAfter);\r\n            builder.addEditOperation(rangeAfter, null);\r\n            builder.addEditOperation(new Range(lineNumber, startColumn, lineNumber, startColumn), charAfter);\r\n        }\r\n    }\r\n    computeCursorState(model, helper) {\r\n        if (this._isMovingLeft) {\r\n            return new Selection(this._selection.startLineNumber, this._selection.startColumn - 1, this._selection.endLineNumber, this._selection.endColumn - 1);\r\n        }\r\n        else {\r\n            return new Selection(this._selection.startLineNumber, this._selection.startColumn + 1, this._selection.endLineNumber, this._selection.endColumn + 1);\r\n        }\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { MoveCaretCommand } from './moveCaretCommand.js';\r\nclass MoveCaretAction extends EditorAction {\r\n    constructor(left, opts) {\r\n        super(opts);\r\n        this.left = left;\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        let commands = [];\r\n        let selections = editor.getSelections();\r\n        for (const selection of selections) {\r\n            commands.push(new MoveCaretCommand(selection, this.left));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nclass MoveCaretLeftAction extends MoveCaretAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.moveCarretLeftAction',\r\n            label: nls.localize('caret.moveLeft', \"Move Selected Text Left\"),\r\n            alias: 'Move Selected Text Left',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nclass MoveCaretRightAction extends MoveCaretAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.moveCarretRightAction',\r\n            label: nls.localize('caret.moveRight', \"Move Selected Text Right\"),\r\n            alias: 'Move Selected Text Right',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nregisterEditorAction(MoveCaretLeftAction);\r\nregisterEditorAction(MoveCaretRightAction);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ReplaceCommand } from '../../common/commands/replaceCommand.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { MoveOperations } from '../../common/controller/cursorMoveOperations.js';\r\nclass TransposeLettersAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transposeLetters',\r\n            label: nls.localize('transposeLetters.label', \"Transpose Letters\"),\r\n            alias: 'Transpose Letters',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: {\r\n                    primary: 256 /* WinCtrl */ | 50 /* KEY_T */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        let model = editor.getModel();\r\n        let commands = [];\r\n        let selections = editor.getSelections();\r\n        for (let selection of selections) {\r\n            if (!selection.isEmpty()) {\r\n                continue;\r\n            }\r\n            let lineNumber = selection.startLineNumber;\r\n            let column = selection.startColumn;\r\n            let lastColumn = model.getLineMaxColumn(lineNumber);\r\n            if (lineNumber === 1 && (column === 1 || (column === 2 && lastColumn === 2))) {\r\n                // at beginning of file, nothing to do\r\n                continue;\r\n            }\r\n            // handle special case: when at end of line, transpose left two chars\r\n            // otherwise, transpose left and right chars\r\n            let endPosition = (column === lastColumn) ?\r\n                selection.getPosition() :\r\n                MoveOperations.rightPosition(model, selection.getPosition().lineNumber, selection.getPosition().column);\r\n            let middlePosition = MoveOperations.leftPosition(model, endPosition);\r\n            let beginPosition = MoveOperations.leftPosition(model, middlePosition);\r\n            let leftChar = model.getValueInRange(Range.fromPositions(beginPosition, middlePosition));\r\n            let rightChar = model.getValueInRange(Range.fromPositions(middlePosition, endPosition));\r\n            let replaceRange = Range.fromPositions(beginPosition, endPosition);\r\n            commands.push(new ReplaceCommand(replaceRange, rightChar + leftChar));\r\n        }\r\n        if (commands.length > 0) {\r\n            editor.pushUndoStop();\r\n            editor.executeCommands(this.id, commands);\r\n            editor.pushUndoStop();\r\n        }\r\n    }\r\n}\r\nregisterEditorAction(TransposeLettersAction);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as browser from '../../../base/browser/browser.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport { CopyOptions, InMemoryClipboardMetadataManager } from '../../browser/controller/textAreaInput.js';\r\nimport { EditorAction, registerEditorAction, MultiCommand } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { MenuRegistry, MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nconst CLIPBOARD_CONTEXT_MENU_GROUP = '9_cutcopypaste';\r\nconst supportsCut = (platform.isNative || document.queryCommandSupported('cut'));\r\nconst supportsCopy = (platform.isNative || document.queryCommandSupported('copy'));\r\n// Firefox only supports navigator.clipboard.readText() in browser extensions.\r\n// See https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/readText#Browser_compatibility\r\n// When loading over http, navigator.clipboard can be undefined. See https://github.com/microsoft/monaco-editor/issues/2313\r\nconst supportsPaste = (typeof navigator.clipboard === 'undefined' || browser.isFirefox) ? document.queryCommandSupported('paste') : true;\r\nfunction registerCommand(command) {\r\n    command.register();\r\n    return command;\r\n}\r\nexport const CutAction = supportsCut ? registerCommand(new MultiCommand({\r\n    id: 'editor.action.clipboardCutAction',\r\n    precondition: undefined,\r\n    kbOpts: (\r\n    // Do not bind cut keybindings in the browser,\r\n    // since browsers do that for us and it avoids security prompts\r\n    platform.isNative ? {\r\n        primary: 2048 /* CtrlCmd */ | 54 /* KEY_X */,\r\n        win: { primary: 2048 /* CtrlCmd */ | 54 /* KEY_X */, secondary: [1024 /* Shift */ | 20 /* Delete */] },\r\n        weight: 100 /* EditorContrib */\r\n    } : undefined),\r\n    menuOpts: [{\r\n            menuId: MenuId.MenubarEditMenu,\r\n            group: '2_ccp',\r\n            title: nls.localize({ key: 'miCut', comment: ['&& denotes a mnemonic'] }, \"Cu&&t\"),\r\n            order: 1\r\n        }, {\r\n            menuId: MenuId.EditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\r\n            when: EditorContextKeys.writable,\r\n            order: 1,\r\n        }, {\r\n            menuId: MenuId.CommandPalette,\r\n            group: '',\r\n            title: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\r\n            order: 1\r\n        }, {\r\n            menuId: MenuId.SimpleEditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.cutLabel', \"Cut\"),\r\n            when: EditorContextKeys.writable,\r\n            order: 1,\r\n        }]\r\n})) : undefined;\r\nexport const CopyAction = supportsCopy ? registerCommand(new MultiCommand({\r\n    id: 'editor.action.clipboardCopyAction',\r\n    precondition: undefined,\r\n    kbOpts: (\r\n    // Do not bind copy keybindings in the browser,\r\n    // since browsers do that for us and it avoids security prompts\r\n    platform.isNative ? {\r\n        primary: 2048 /* CtrlCmd */ | 33 /* KEY_C */,\r\n        win: { primary: 2048 /* CtrlCmd */ | 33 /* KEY_C */, secondary: [2048 /* CtrlCmd */ | 19 /* Insert */] },\r\n        weight: 100 /* EditorContrib */\r\n    } : undefined),\r\n    menuOpts: [{\r\n            menuId: MenuId.MenubarEditMenu,\r\n            group: '2_ccp',\r\n            title: nls.localize({ key: 'miCopy', comment: ['&& denotes a mnemonic'] }, \"&&Copy\"),\r\n            order: 2\r\n        }, {\r\n            menuId: MenuId.EditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\r\n            order: 2,\r\n        }, {\r\n            menuId: MenuId.CommandPalette,\r\n            group: '',\r\n            title: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\r\n            order: 1\r\n        }, {\r\n            menuId: MenuId.SimpleEditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.copyLabel', \"Copy\"),\r\n            order: 2,\r\n        }]\r\n})) : undefined;\r\nMenuRegistry.appendMenuItem(MenuId.MenubarEditMenu, { submenu: MenuId.MenubarCopy, title: { value: nls.localize('copy as', \"Copy As\"), original: 'Copy As', }, group: '2_ccp', order: 3 });\r\nMenuRegistry.appendMenuItem(MenuId.EditorContext, { submenu: MenuId.EditorContextCopy, title: { value: nls.localize('copy as', \"Copy As\"), original: 'Copy As', }, group: CLIPBOARD_CONTEXT_MENU_GROUP, order: 3 });\r\nexport const PasteAction = supportsPaste ? registerCommand(new MultiCommand({\r\n    id: 'editor.action.clipboardPasteAction',\r\n    precondition: undefined,\r\n    kbOpts: (\r\n    // Do not bind paste keybindings in the browser,\r\n    // since browsers do that for us and it avoids security prompts\r\n    platform.isNative ? {\r\n        primary: 2048 /* CtrlCmd */ | 52 /* KEY_V */,\r\n        win: { primary: 2048 /* CtrlCmd */ | 52 /* KEY_V */, secondary: [1024 /* Shift */ | 19 /* Insert */] },\r\n        linux: { primary: 2048 /* CtrlCmd */ | 52 /* KEY_V */, secondary: [1024 /* Shift */ | 19 /* Insert */] },\r\n        weight: 100 /* EditorContrib */\r\n    } : undefined),\r\n    menuOpts: [{\r\n            menuId: MenuId.MenubarEditMenu,\r\n            group: '2_ccp',\r\n            title: nls.localize({ key: 'miPaste', comment: ['&& denotes a mnemonic'] }, \"&&Paste\"),\r\n            order: 4\r\n        }, {\r\n            menuId: MenuId.EditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\r\n            when: EditorContextKeys.writable,\r\n            order: 4,\r\n        }, {\r\n            menuId: MenuId.CommandPalette,\r\n            group: '',\r\n            title: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\r\n            order: 1\r\n        }, {\r\n            menuId: MenuId.SimpleEditorContext,\r\n            group: CLIPBOARD_CONTEXT_MENU_GROUP,\r\n            title: nls.localize('actions.clipboard.pasteLabel', \"Paste\"),\r\n            when: EditorContextKeys.writable,\r\n            order: 4,\r\n        }]\r\n})) : undefined;\r\nclass ExecCommandCopyWithSyntaxHighlightingAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.clipboardCopyWithSyntaxHighlightingAction',\r\n            label: nls.localize('actions.clipboard.copyWithSyntaxHighlightingLabel', \"Copy With Syntax Highlighting\"),\r\n            alias: 'Copy With Syntax Highlighting',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const emptySelectionClipboard = editor.getOption(30 /* emptySelectionClipboard */);\r\n        if (!emptySelectionClipboard && editor.getSelection().isEmpty()) {\r\n            return;\r\n        }\r\n        CopyOptions.forceCopyWithSyntaxHighlighting = true;\r\n        editor.focus();\r\n        document.execCommand('copy');\r\n        CopyOptions.forceCopyWithSyntaxHighlighting = false;\r\n    }\r\n}\r\nfunction registerExecCommandImpl(target, browserCommand) {\r\n    if (!target) {\r\n        return;\r\n    }\r\n    // 1. handle case when focus is in editor.\r\n    target.addImplementation(10000, 'code-editor', (accessor, args) => {\r\n        // Only if editor text focus (i.e. not if editor has widget focus).\r\n        const focusedEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\r\n        if (focusedEditor && focusedEditor.hasTextFocus()) {\r\n            // Do not execute if there is no selection and empty selection clipboard is off\r\n            const emptySelectionClipboard = focusedEditor.getOption(30 /* emptySelectionClipboard */);\r\n            const selection = focusedEditor.getSelection();\r\n            if (selection && selection.isEmpty() && !emptySelectionClipboard) {\r\n                return true;\r\n            }\r\n            document.execCommand(browserCommand);\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n    // 2. (default) handle case when focus is somewhere else.\r\n    target.addImplementation(0, 'generic-dom', (accessor, args) => {\r\n        document.execCommand(browserCommand);\r\n        return true;\r\n    });\r\n}\r\nregisterExecCommandImpl(CutAction, 'cut');\r\nregisterExecCommandImpl(CopyAction, 'copy');\r\nif (PasteAction) {\r\n    // 1. Paste: handle case when focus is in editor.\r\n    PasteAction.addImplementation(10000, 'code-editor', (accessor, args) => {\r\n        const codeEditorService = accessor.get(ICodeEditorService);\r\n        const clipboardService = accessor.get(IClipboardService);\r\n        // Only if editor text focus (i.e. not if editor has widget focus).\r\n        const focusedEditor = codeEditorService.getFocusedCodeEditor();\r\n        if (focusedEditor && focusedEditor.hasTextFocus()) {\r\n            const result = document.execCommand('paste');\r\n            // Use the clipboard service if document.execCommand('paste') was not successful\r\n            if (!result && platform.isWeb) {\r\n                (() => __awaiter(void 0, void 0, void 0, function* () {\r\n                    const clipboardText = yield clipboardService.readText();\r\n                    if (clipboardText !== '') {\r\n                        const metadata = InMemoryClipboardMetadataManager.INSTANCE.get(clipboardText);\r\n                        let pasteOnNewLine = false;\r\n                        let multicursorText = null;\r\n                        let mode = null;\r\n                        if (metadata) {\r\n                            pasteOnNewLine = (focusedEditor.getOption(30 /* emptySelectionClipboard */) && !!metadata.isFromEmptySelection);\r\n                            multicursorText = (typeof metadata.multicursorText !== 'undefined' ? metadata.multicursorText : null);\r\n                            mode = metadata.mode;\r\n                        }\r\n                        focusedEditor.trigger('keyboard', \"paste\" /* Paste */, {\r\n                            text: clipboardText,\r\n                            pasteOnNewLine,\r\n                            multicursorText,\r\n                            mode\r\n                        });\r\n                    }\r\n                }))();\r\n                return true;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n    // 2. Paste: (default) handle case when focus is somewhere else.\r\n    PasteAction.addImplementation(0, 'generic-dom', (accessor, args) => {\r\n        document.execCommand('paste');\r\n        return true;\r\n    });\r\n}\r\nif (supportsCopy) {\r\n    registerEditorAction(ExecCommandCopyWithSyntaxHighlightingAction);\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class Lazy {\r\n    constructor(executor) {\r\n        this.executor = executor;\r\n        this._didRun = false;\r\n    }\r\n    /**\r\n     * Get the wrapped value.\r\n     *\r\n     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\r\n     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\r\n     */\r\n    getValue() {\r\n        if (!this._didRun) {\r\n            try {\r\n                this._value = this.executor();\r\n            }\r\n            catch (err) {\r\n                this._error = err;\r\n            }\r\n            finally {\r\n                this._didRun = true;\r\n            }\r\n        }\r\n        if (this._error) {\r\n            throw this._error;\r\n        }\r\n        return this._value;\r\n    }\r\n    /**\r\n     * Get the wrapped value without forcing evaluation.\r\n     */\r\n    get rawValue() { return this._value; }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class CodeActionKind {\r\n    constructor(value) {\r\n        this.value = value;\r\n    }\r\n    equals(other) {\r\n        return this.value === other.value;\r\n    }\r\n    contains(other) {\r\n        return this.equals(other) || this.value === '' || other.value.startsWith(this.value + CodeActionKind.sep);\r\n    }\r\n    intersects(other) {\r\n        return this.contains(other) || other.contains(this);\r\n    }\r\n    append(part) {\r\n        return new CodeActionKind(this.value + CodeActionKind.sep + part);\r\n    }\r\n}\r\nCodeActionKind.sep = '.';\r\nCodeActionKind.None = new CodeActionKind('@@none@@'); // Special code action that contains nothing\r\nCodeActionKind.Empty = new CodeActionKind('');\r\nCodeActionKind.QuickFix = new CodeActionKind('quickfix');\r\nCodeActionKind.Refactor = new CodeActionKind('refactor');\r\nCodeActionKind.Source = new CodeActionKind('source');\r\nCodeActionKind.SourceOrganizeImports = CodeActionKind.Source.append('organizeImports');\r\nCodeActionKind.SourceFixAll = CodeActionKind.Source.append('fixAll');\r\nexport function mayIncludeActionsOfKind(filter, providedKind) {\r\n    // A provided kind may be a subset or superset of our filtered kind.\r\n    if (filter.include && !filter.include.intersects(providedKind)) {\r\n        return false;\r\n    }\r\n    if (filter.excludes) {\r\n        if (filter.excludes.some(exclude => excludesAction(providedKind, exclude, filter.include))) {\r\n            return false;\r\n        }\r\n    }\r\n    // Don't return source actions unless they are explicitly requested\r\n    if (!filter.includeSourceActions && CodeActionKind.Source.contains(providedKind)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexport function filtersAction(filter, action) {\r\n    const actionKind = action.kind ? new CodeActionKind(action.kind) : undefined;\r\n    // Filter out actions by kind\r\n    if (filter.include) {\r\n        if (!actionKind || !filter.include.contains(actionKind)) {\r\n            return false;\r\n        }\r\n    }\r\n    if (filter.excludes) {\r\n        if (actionKind && filter.excludes.some(exclude => excludesAction(actionKind, exclude, filter.include))) {\r\n            return false;\r\n        }\r\n    }\r\n    // Don't return source actions unless they are explicitly requested\r\n    if (!filter.includeSourceActions) {\r\n        if (actionKind && CodeActionKind.Source.contains(actionKind)) {\r\n            return false;\r\n        }\r\n    }\r\n    if (filter.onlyIncludePreferredActions) {\r\n        if (!action.isPreferred) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction excludesAction(providedKind, exclude, include) {\r\n    if (!exclude.contains(providedKind)) {\r\n        return false;\r\n    }\r\n    if (include && exclude.contains(include)) {\r\n        // The include is more specific, don't filter out\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexport class CodeActionCommandArgs {\r\n    constructor(kind, apply, preferred) {\r\n        this.kind = kind;\r\n        this.apply = apply;\r\n        this.preferred = preferred;\r\n    }\r\n    static fromUser(arg, defaults) {\r\n        if (!arg || typeof arg !== 'object') {\r\n            return new CodeActionCommandArgs(defaults.kind, defaults.apply, false);\r\n        }\r\n        return new CodeActionCommandArgs(CodeActionCommandArgs.getKindFromUser(arg, defaults.kind), CodeActionCommandArgs.getApplyFromUser(arg, defaults.apply), CodeActionCommandArgs.getPreferredUser(arg));\r\n    }\r\n    static getApplyFromUser(arg, defaultAutoApply) {\r\n        switch (typeof arg.apply === 'string' ? arg.apply.toLowerCase() : '') {\r\n            case 'first': return \"first\" /* First */;\r\n            case 'never': return \"never\" /* Never */;\r\n            case 'ifsingle': return \"ifSingle\" /* IfSingle */;\r\n            default: return defaultAutoApply;\r\n        }\r\n    }\r\n    static getKindFromUser(arg, defaultKind) {\r\n        return typeof arg.kind === 'string'\r\n            ? new CodeActionKind(arg.kind)\r\n            : defaultKind;\r\n    }\r\n    static getPreferredUser(arg) {\r\n        return typeof arg.preferred === 'boolean'\r\n            ? arg.preferred\r\n            : false;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { equals, flatten, isNonEmptyArray, coalesce } from '../../../base/common/arrays.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { illegalArgument, isPromiseCanceledError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { TextModelCancellationTokenSource } from '../../browser/core/editorState.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CodeActionKind, filtersAction, mayIncludeActionsOfKind } from './types.js';\r\nimport { Progress } from '../../../platform/progress/common/progress.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nexport const codeActionCommandId = 'editor.action.codeAction';\r\nexport const refactorCommandId = 'editor.action.refactor';\r\nexport const sourceActionCommandId = 'editor.action.sourceAction';\r\nexport const organizeImportsCommandId = 'editor.action.organizeImports';\r\nexport const fixAllCommandId = 'editor.action.fixAll';\r\nexport class CodeActionItem {\r\n    constructor(action, provider) {\r\n        this.action = action;\r\n        this.provider = provider;\r\n    }\r\n    resolve(token) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (((_a = this.provider) === null || _a === void 0 ? void 0 : _a.resolveCodeAction) && !this.action.edit) {\r\n                let action;\r\n                try {\r\n                    action = yield this.provider.resolveCodeAction(this.action, token);\r\n                }\r\n                catch (err) {\r\n                    onUnexpectedExternalError(err);\r\n                }\r\n                if (action) {\r\n                    this.action.edit = action.edit;\r\n                }\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n}\r\nclass ManagedCodeActionSet extends Disposable {\r\n    constructor(actions, documentation, disposables) {\r\n        super();\r\n        this.documentation = documentation;\r\n        this._register(disposables);\r\n        this.allActions = [...actions].sort(ManagedCodeActionSet.codeActionsComparator);\r\n        this.validActions = this.allActions.filter(({ action }) => !action.disabled);\r\n    }\r\n    static codeActionsComparator({ action: a }, { action: b }) {\r\n        if (a.isPreferred && !b.isPreferred) {\r\n            return -1;\r\n        }\r\n        else if (!a.isPreferred && b.isPreferred) {\r\n            return 1;\r\n        }\r\n        if (isNonEmptyArray(a.diagnostics)) {\r\n            if (isNonEmptyArray(b.diagnostics)) {\r\n                return a.diagnostics[0].message.localeCompare(b.diagnostics[0].message);\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (isNonEmptyArray(b.diagnostics)) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0; // both have no diagnostics\r\n        }\r\n    }\r\n    get hasAutoFix() {\r\n        return this.validActions.some(({ action: fix }) => !!fix.kind && CodeActionKind.QuickFix.contains(new CodeActionKind(fix.kind)) && !!fix.isPreferred);\r\n    }\r\n}\r\nconst emptyCodeActionsResponse = { actions: [], documentation: undefined };\r\nexport function getCodeActions(model, rangeOrSelection, trigger, progress, token) {\r\n    var _a;\r\n    const filter = trigger.filter || {};\r\n    const codeActionContext = {\r\n        only: (_a = filter.include) === null || _a === void 0 ? void 0 : _a.value,\r\n        trigger: trigger.type,\r\n    };\r\n    const cts = new TextModelCancellationTokenSource(model, token);\r\n    const providers = getCodeActionProviders(model, filter);\r\n    const disposables = new DisposableStore();\r\n    const promises = providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            progress.report(provider);\r\n            const providedCodeActions = yield provider.provideCodeActions(model, rangeOrSelection, codeActionContext, cts.token);\r\n            if (providedCodeActions) {\r\n                disposables.add(providedCodeActions);\r\n            }\r\n            if (cts.token.isCancellationRequested) {\r\n                return emptyCodeActionsResponse;\r\n            }\r\n            const filteredActions = ((providedCodeActions === null || providedCodeActions === void 0 ? void 0 : providedCodeActions.actions) || []).filter(action => action && filtersAction(filter, action));\r\n            const documentation = getDocumentation(provider, filteredActions, filter.include);\r\n            return {\r\n                actions: filteredActions.map(action => new CodeActionItem(action, provider)),\r\n                documentation\r\n            };\r\n        }\r\n        catch (err) {\r\n            if (isPromiseCanceledError(err)) {\r\n                throw err;\r\n            }\r\n            onUnexpectedExternalError(err);\r\n            return emptyCodeActionsResponse;\r\n        }\r\n    }));\r\n    const listener = modes.CodeActionProviderRegistry.onDidChange(() => {\r\n        const newProviders = modes.CodeActionProviderRegistry.all(model);\r\n        if (!equals(newProviders, providers)) {\r\n            cts.cancel();\r\n        }\r\n    });\r\n    return Promise.all(promises).then(actions => {\r\n        const allActions = flatten(actions.map(x => x.actions));\r\n        const allDocumentation = coalesce(actions.map(x => x.documentation));\r\n        return new ManagedCodeActionSet(allActions, allDocumentation, disposables);\r\n    })\r\n        .finally(() => {\r\n        listener.dispose();\r\n        cts.dispose();\r\n    });\r\n}\r\nfunction getCodeActionProviders(model, filter) {\r\n    return modes.CodeActionProviderRegistry.all(model)\r\n        // Don't include providers that we know will not return code actions of interest\r\n        .filter(provider => {\r\n        if (!provider.providedCodeActionKinds) {\r\n            // We don't know what type of actions this provider will return.\r\n            return true;\r\n        }\r\n        return provider.providedCodeActionKinds.some(kind => mayIncludeActionsOfKind(filter, new CodeActionKind(kind)));\r\n    });\r\n}\r\nfunction getDocumentation(provider, providedCodeActions, only) {\r\n    if (!provider.documentation) {\r\n        return undefined;\r\n    }\r\n    const documentation = provider.documentation.map(entry => ({ kind: new CodeActionKind(entry.kind), command: entry.command }));\r\n    if (only) {\r\n        let currentBest;\r\n        for (const entry of documentation) {\r\n            if (entry.kind.contains(only)) {\r\n                if (!currentBest) {\r\n                    currentBest = entry;\r\n                }\r\n                else {\r\n                    // Take best match\r\n                    if (currentBest.kind.contains(entry.kind)) {\r\n                        currentBest = entry;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (currentBest) {\r\n            return currentBest === null || currentBest === void 0 ? void 0 : currentBest.command;\r\n        }\r\n    }\r\n    // Otherwise, check to see if any of the provided actions match.\r\n    for (const action of providedCodeActions) {\r\n        if (!action.kind) {\r\n            continue;\r\n        }\r\n        for (const entry of documentation) {\r\n            if (entry.kind.contains(new CodeActionKind(action.kind))) {\r\n                return entry.command;\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nCommandsRegistry.registerCommand('_executeCodeActionProvider', function (accessor, resource, rangeOrSelection, kind, itemResolveCount) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (!(resource instanceof URI)) {\r\n            throw illegalArgument();\r\n        }\r\n        const model = accessor.get(IModelService).getModel(resource);\r\n        if (!model) {\r\n            throw illegalArgument();\r\n        }\r\n        const validatedRangeOrSelection = Selection.isISelection(rangeOrSelection)\r\n            ? Selection.liftSelection(rangeOrSelection)\r\n            : Range.isIRange(rangeOrSelection)\r\n                ? model.validateRange(rangeOrSelection)\r\n                : undefined;\r\n        if (!validatedRangeOrSelection) {\r\n            throw illegalArgument();\r\n        }\r\n        const include = typeof kind === 'string' ? new CodeActionKind(kind) : undefined;\r\n        const codeActionSet = yield getCodeActions(model, validatedRangeOrSelection, { type: 1 /* Invoke */, filter: { includeSourceActions: true, include } }, Progress.None, CancellationToken.None);\r\n        const resolving = [];\r\n        const resolveCount = Math.min(codeActionSet.validActions.length, typeof itemResolveCount === 'number' ? itemResolveCount : 0);\r\n        for (let i = 0; i < resolveCount; i++) {\r\n            resolving.push(codeActionSet.validActions[i].resolve(CancellationToken.None));\r\n        }\r\n        try {\r\n            yield Promise.all(resolving);\r\n            return codeActionSet.validActions.map(item => item.action);\r\n        }\r\n        finally {\r\n            setTimeout(() => codeActionSet.dispose(), 100);\r\n        }\r\n    });\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './messageController.css';\r\nimport * as nls from '../../../nls.js';\r\nimport { TimeoutTimer } from '../../../base/common/async.js';\r\nimport { DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { registerEditorContribution, EditorCommand, registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport { IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { inputValidationInfoBorder, inputValidationInfoBackground, inputValidationInfoForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { ColorScheme } from '../../../platform/theme/common/theme.js';\r\nlet MessageController = class MessageController {\r\n    constructor(editor, contextKeyService) {\r\n        this._messageWidget = new MutableDisposable();\r\n        this._messageListeners = new DisposableStore();\r\n        this._editor = editor;\r\n        this._visible = MessageController.MESSAGE_VISIBLE.bindTo(contextKeyService);\r\n        this._editorListener = this._editor.onDidAttemptReadOnlyEdit(() => this._onDidAttemptReadOnlyEdit());\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(MessageController.ID);\r\n    }\r\n    dispose() {\r\n        this._editorListener.dispose();\r\n        this._messageListeners.dispose();\r\n        this._messageWidget.dispose();\r\n        this._visible.reset();\r\n    }\r\n    showMessage(message, position) {\r\n        alert(message);\r\n        this._visible.set(true);\r\n        this._messageWidget.clear();\r\n        this._messageListeners.clear();\r\n        this._messageWidget.value = new MessageWidget(this._editor, position, message);\r\n        // close on blur, cursor, model change, dispose\r\n        this._messageListeners.add(this._editor.onDidBlurEditorText(() => this.closeMessage()));\r\n        this._messageListeners.add(this._editor.onDidChangeCursorPosition(() => this.closeMessage()));\r\n        this._messageListeners.add(this._editor.onDidDispose(() => this.closeMessage()));\r\n        this._messageListeners.add(this._editor.onDidChangeModel(() => this.closeMessage()));\r\n        // 3sec\r\n        this._messageListeners.add(new TimeoutTimer(() => this.closeMessage(), 3000));\r\n        // close on mouse move\r\n        let bounds;\r\n        this._messageListeners.add(this._editor.onMouseMove(e => {\r\n            // outside the text area\r\n            if (!e.target.position) {\r\n                return;\r\n            }\r\n            if (!bounds) {\r\n                // define bounding box around position and first mouse occurance\r\n                bounds = new Range(position.lineNumber - 3, 1, e.target.position.lineNumber + 3, 1);\r\n            }\r\n            else if (!bounds.containsPosition(e.target.position)) {\r\n                // check if position is still in bounds\r\n                this.closeMessage();\r\n            }\r\n        }));\r\n    }\r\n    closeMessage() {\r\n        this._visible.reset();\r\n        this._messageListeners.clear();\r\n        if (this._messageWidget.value) {\r\n            this._messageListeners.add(MessageWidget.fadeOut(this._messageWidget.value));\r\n        }\r\n    }\r\n    _onDidAttemptReadOnlyEdit() {\r\n        if (this._editor.hasModel()) {\r\n            this.showMessage(nls.localize('editor.readonly', \"Cannot edit in read-only editor\"), this._editor.getPosition());\r\n        }\r\n    }\r\n};\r\nMessageController.ID = 'editor.contrib.messageController';\r\nMessageController.MESSAGE_VISIBLE = new RawContextKey('messageVisible', false, nls.localize('messageVisible', 'Whether the editor is currently showing an inline message'));\r\nMessageController = __decorate([\r\n    __param(1, IContextKeyService)\r\n], MessageController);\r\nexport { MessageController };\r\nconst MessageCommand = EditorCommand.bindToContribution(MessageController.get);\r\nregisterEditorCommand(new MessageCommand({\r\n    id: 'leaveEditorMessage',\r\n    precondition: MessageController.MESSAGE_VISIBLE,\r\n    handler: c => c.closeMessage(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        primary: 9 /* Escape */\r\n    }\r\n}));\r\nclass MessageWidget {\r\n    constructor(editor, { lineNumber, column }, text) {\r\n        // Editor.IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = true;\r\n        this.suppressMouseDown = false;\r\n        this._editor = editor;\r\n        this._editor.revealLinesInCenterIfOutsideViewport(lineNumber, lineNumber, 0 /* Smooth */);\r\n        this._position = { lineNumber, column: column - 1 };\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.classList.add('monaco-editor-overlaymessage');\r\n        const anchorTop = document.createElement('div');\r\n        anchorTop.classList.add('anchor', 'top');\r\n        this._domNode.appendChild(anchorTop);\r\n        const message = document.createElement('div');\r\n        message.classList.add('message');\r\n        message.textContent = text;\r\n        this._domNode.appendChild(message);\r\n        const anchorBottom = document.createElement('div');\r\n        anchorBottom.classList.add('anchor', 'below');\r\n        this._domNode.appendChild(anchorBottom);\r\n        this._editor.addContentWidget(this);\r\n        this._domNode.classList.add('fadeIn');\r\n    }\r\n    static fadeOut(messageWidget) {\r\n        let handle;\r\n        const dispose = () => {\r\n            messageWidget.dispose();\r\n            clearTimeout(handle);\r\n            messageWidget.getDomNode().removeEventListener('animationend', dispose);\r\n        };\r\n        handle = setTimeout(dispose, 110);\r\n        messageWidget.getDomNode().addEventListener('animationend', dispose);\r\n        messageWidget.getDomNode().classList.add('fadeOut');\r\n        return { dispose };\r\n    }\r\n    dispose() {\r\n        this._editor.removeContentWidget(this);\r\n    }\r\n    getId() {\r\n        return 'messageoverlay';\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return { position: this._position, preference: [1 /* ABOVE */, 2 /* BELOW */] };\r\n    }\r\n    afterRender(position) {\r\n        this._domNode.classList.toggle('below', position === 2 /* BELOW */);\r\n    }\r\n}\r\nregisterEditorContribution(MessageController.ID, MessageController);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const border = theme.getColor(inputValidationInfoBorder);\r\n    if (border) {\r\n        let borderWidth = theme.type === ColorScheme.HIGH_CONTRAST ? 2 : 1;\r\n        collector.addRule(`.monaco-editor .monaco-editor-overlaymessage .anchor.below { border-top-color: ${border}; }`);\r\n        collector.addRule(`.monaco-editor .monaco-editor-overlaymessage .anchor.top { border-bottom-color: ${border}; }`);\r\n        collector.addRule(`.monaco-editor .monaco-editor-overlaymessage .message { border: ${borderWidth}px solid ${border}; }`);\r\n    }\r\n    const background = theme.getColor(inputValidationInfoBackground);\r\n    if (background) {\r\n        collector.addRule(`.monaco-editor .monaco-editor-overlaymessage .message { background-color: ${background}; }`);\r\n    }\r\n    const foreground = theme.getColor(inputValidationInfoForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .monaco-editor-overlaymessage .message { color: ${foreground}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { getDomNodePagePosition } from '../../../base/browser/dom.js';\r\nimport { Action, Separator } from '../../../base/common/actions.js';\r\nimport { canceled } from '../../../base/common/errors.js';\r\nimport { Lazy } from '../../../base/common/lazy.js';\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { CodeActionProviderRegistry } from '../../common/modes.js';\r\nimport { codeActionCommandId, CodeActionItem, fixAllCommandId, organizeImportsCommandId, refactorCommandId, sourceActionCommandId } from './codeAction.js';\r\nimport { CodeActionCommandArgs, CodeActionKind } from './types.js';\r\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nclass CodeActionAction extends Action {\r\n    constructor(action, callback) {\r\n        super(action.command ? action.command.id : action.title, stripNewlines(action.title), undefined, !action.disabled, callback);\r\n        this.action = action;\r\n    }\r\n}\r\nfunction stripNewlines(str) {\r\n    return str.replace(/\\r\\n|\\r|\\n/g, ' ');\r\n}\r\nlet CodeActionMenu = class CodeActionMenu extends Disposable {\r\n    constructor(_editor, _delegate, _contextMenuService, keybindingService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._delegate = _delegate;\r\n        this._contextMenuService = _contextMenuService;\r\n        this._visible = false;\r\n        this._showingActions = this._register(new MutableDisposable());\r\n        this._keybindingResolver = new CodeActionKeybindingResolver({\r\n            getKeybindings: () => keybindingService.getKeybindings()\r\n        });\r\n    }\r\n    get isVisible() {\r\n        return this._visible;\r\n    }\r\n    show(trigger, codeActions, at, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const actionsToShow = options.includeDisabledActions ? codeActions.allActions : codeActions.validActions;\r\n            if (!actionsToShow.length) {\r\n                this._visible = false;\r\n                return;\r\n            }\r\n            if (!this._editor.getDomNode()) {\r\n                // cancel when editor went off-dom\r\n                this._visible = false;\r\n                throw canceled();\r\n            }\r\n            this._visible = true;\r\n            this._showingActions.value = codeActions;\r\n            const menuActions = this.getMenuActions(trigger, actionsToShow, codeActions.documentation);\r\n            const anchor = Position.isIPosition(at) ? this._toCoords(at) : at || { x: 0, y: 0 };\r\n            const resolver = this._keybindingResolver.getResolver();\r\n            const useShadowDOM = this._editor.getOption(112 /* useShadowDOM */);\r\n            this._contextMenuService.showContextMenu({\r\n                domForShadowRoot: useShadowDOM ? this._editor.getDomNode() : undefined,\r\n                getAnchor: () => anchor,\r\n                getActions: () => menuActions,\r\n                onHide: () => {\r\n                    this._visible = false;\r\n                    this._editor.focus();\r\n                },\r\n                autoSelectFirstItem: true,\r\n                getKeyBinding: action => action instanceof CodeActionAction ? resolver(action.action) : undefined,\r\n            });\r\n        });\r\n    }\r\n    getMenuActions(trigger, actionsToShow, documentation) {\r\n        var _a, _b;\r\n        const toCodeActionAction = (item) => new CodeActionAction(item.action, () => this._delegate.onSelectCodeAction(item));\r\n        const result = actionsToShow\r\n            .map(toCodeActionAction);\r\n        const allDocumentation = [...documentation];\r\n        const model = this._editor.getModel();\r\n        if (model && result.length) {\r\n            for (const provider of CodeActionProviderRegistry.all(model)) {\r\n                if (provider._getAdditionalMenuItems) {\r\n                    allDocumentation.push(...provider._getAdditionalMenuItems({ trigger: trigger.type, only: (_b = (_a = trigger.filter) === null || _a === void 0 ? void 0 : _a.include) === null || _b === void 0 ? void 0 : _b.value }, actionsToShow.map(item => item.action)));\r\n                }\r\n            }\r\n        }\r\n        if (allDocumentation.length) {\r\n            result.push(new Separator(), ...allDocumentation.map(command => toCodeActionAction(new CodeActionItem({\r\n                title: command.title,\r\n                command: command,\r\n            }, undefined))));\r\n        }\r\n        return result;\r\n    }\r\n    _toCoords(position) {\r\n        if (!this._editor.hasModel()) {\r\n            return { x: 0, y: 0 };\r\n        }\r\n        this._editor.revealPosition(position, 1 /* Immediate */);\r\n        this._editor.render();\r\n        // Translate to absolute editor position\r\n        const cursorCoords = this._editor.getScrolledVisiblePosition(position);\r\n        const editorCoords = getDomNodePagePosition(this._editor.getDomNode());\r\n        const x = editorCoords.left + cursorCoords.left;\r\n        const y = editorCoords.top + cursorCoords.top + cursorCoords.height;\r\n        return { x, y };\r\n    }\r\n};\r\nCodeActionMenu = __decorate([\r\n    __param(2, IContextMenuService),\r\n    __param(3, IKeybindingService)\r\n], CodeActionMenu);\r\nexport { CodeActionMenu };\r\nexport class CodeActionKeybindingResolver {\r\n    constructor(_keybindingProvider) {\r\n        this._keybindingProvider = _keybindingProvider;\r\n    }\r\n    getResolver() {\r\n        // Lazy since we may not actually ever read the value\r\n        const allCodeActionBindings = new Lazy(() => this._keybindingProvider.getKeybindings()\r\n            .filter(item => CodeActionKeybindingResolver.codeActionCommands.indexOf(item.command) >= 0)\r\n            .filter(item => item.resolvedKeybinding)\r\n            .map((item) => {\r\n            // Special case these commands since they come built-in with VS Code and don't use 'commandArgs'\r\n            let commandArgs = item.commandArgs;\r\n            if (item.command === organizeImportsCommandId) {\r\n                commandArgs = { kind: CodeActionKind.SourceOrganizeImports.value };\r\n            }\r\n            else if (item.command === fixAllCommandId) {\r\n                commandArgs = { kind: CodeActionKind.SourceFixAll.value };\r\n            }\r\n            return Object.assign({ resolvedKeybinding: item.resolvedKeybinding }, CodeActionCommandArgs.fromUser(commandArgs, {\r\n                kind: CodeActionKind.None,\r\n                apply: \"never\" /* Never */\r\n            }));\r\n        }));\r\n        return (action) => {\r\n            if (action.kind) {\r\n                const binding = this.bestKeybindingForCodeAction(action, allCodeActionBindings.getValue());\r\n                return binding === null || binding === void 0 ? void 0 : binding.resolvedKeybinding;\r\n            }\r\n            return undefined;\r\n        };\r\n    }\r\n    bestKeybindingForCodeAction(action, candidates) {\r\n        if (!action.kind) {\r\n            return undefined;\r\n        }\r\n        const kind = new CodeActionKind(action.kind);\r\n        return candidates\r\n            .filter(candidate => candidate.kind.contains(kind))\r\n            .filter(candidate => {\r\n            if (candidate.preferred) {\r\n                // If the candidate keybinding only applies to preferred actions, the this action must also be preferred\r\n                return action.isPreferred;\r\n            }\r\n            return true;\r\n        })\r\n            .reduceRight((currentBest, candidate) => {\r\n            if (!currentBest) {\r\n                return candidate;\r\n            }\r\n            // Select the more specific binding\r\n            return currentBest.kind.contains(candidate.kind) ? candidate : currentBest;\r\n        }, undefined);\r\n    }\r\n}\r\nCodeActionKeybindingResolver.codeActionCommands = [\r\n    refactorCommandId,\r\n    codeActionCommandId,\r\n    sourceActionCommandId,\r\n    organizeImportsCommandId,\r\n    fixAllCommandId\r\n];\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../../base/browser/globalMouseMoveMonitor.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport './lightBulbWidget.css';\r\nimport { TextModel } from '../../common/model/textModel.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { editorLightBulbForeground, editorLightBulbAutoFixForeground, editorBackground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { Gesture } from '../../../base/browser/touch.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nvar LightBulbState;\r\n(function (LightBulbState) {\r\n    LightBulbState.Hidden = { type: 0 /* Hidden */ };\r\n    class Showing {\r\n        constructor(actions, trigger, editorPosition, widgetPosition) {\r\n            this.actions = actions;\r\n            this.trigger = trigger;\r\n            this.editorPosition = editorPosition;\r\n            this.widgetPosition = widgetPosition;\r\n            this.type = 1 /* Showing */;\r\n        }\r\n    }\r\n    LightBulbState.Showing = Showing;\r\n})(LightBulbState || (LightBulbState = {}));\r\nlet LightBulbWidget = class LightBulbWidget extends Disposable {\r\n    constructor(_editor, _quickFixActionId, _preferredFixActionId, _keybindingService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._quickFixActionId = _quickFixActionId;\r\n        this._preferredFixActionId = _preferredFixActionId;\r\n        this._keybindingService = _keybindingService;\r\n        this._onClick = this._register(new Emitter());\r\n        this.onClick = this._onClick.event;\r\n        this._state = LightBulbState.Hidden;\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = Codicon.lightBulb.classNames;\r\n        this._editor.addContentWidget(this);\r\n        this._register(this._editor.onDidChangeModelContent(_ => {\r\n            // cancel when the line in question has been removed\r\n            const editorModel = this._editor.getModel();\r\n            if (this.state.type !== 1 /* Showing */ || !editorModel || this.state.editorPosition.lineNumber >= editorModel.getLineCount()) {\r\n                this.hide();\r\n            }\r\n        }));\r\n        Gesture.ignoreTarget(this._domNode);\r\n        this._register(dom.addStandardDisposableGenericMouseDownListner(this._domNode, e => {\r\n            if (this.state.type !== 1 /* Showing */) {\r\n                return;\r\n            }\r\n            // Make sure that focus / cursor location is not lost when clicking widget icon\r\n            this._editor.focus();\r\n            e.preventDefault();\r\n            // a bit of extra work to make sure the menu\r\n            // doesn't cover the line-text\r\n            const { top, height } = dom.getDomNodePagePosition(this._domNode);\r\n            const lineHeight = this._editor.getOption(56 /* lineHeight */);\r\n            let pad = Math.floor(lineHeight / 3);\r\n            if (this.state.widgetPosition.position !== null && this.state.widgetPosition.position.lineNumber < this.state.editorPosition.lineNumber) {\r\n                pad += lineHeight;\r\n            }\r\n            this._onClick.fire({\r\n                x: e.posx,\r\n                y: top + height + pad,\r\n                actions: this.state.actions,\r\n                trigger: this.state.trigger,\r\n            });\r\n        }));\r\n        this._register(dom.addDisposableListener(this._domNode, 'mouseenter', (e) => {\r\n            if ((e.buttons & 1) !== 1) {\r\n                return;\r\n            }\r\n            // mouse enters lightbulb while the primary/left button\r\n            // is being pressed -> hide the lightbulb and block future\r\n            // showings until mouse is released\r\n            this.hide();\r\n            const monitor = new GlobalMouseMoveMonitor();\r\n            monitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, () => { }, () => {\r\n                monitor.dispose();\r\n            });\r\n        }));\r\n        this._register(this._editor.onDidChangeConfiguration(e => {\r\n            // hide when told to do so\r\n            if (e.hasChanged(54 /* lightbulb */) && !this._editor.getOption(54 /* lightbulb */).enabled) {\r\n                this.hide();\r\n            }\r\n        }));\r\n        this._updateLightBulbTitleAndIcon();\r\n        this._register(this._keybindingService.onDidUpdateKeybindings(this._updateLightBulbTitleAndIcon, this));\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this._editor.removeContentWidget(this);\r\n    }\r\n    getId() {\r\n        return 'LightBulbWidget';\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return this._state.type === 1 /* Showing */ ? this._state.widgetPosition : null;\r\n    }\r\n    update(actions, trigger, atPosition) {\r\n        if (actions.validActions.length <= 0) {\r\n            return this.hide();\r\n        }\r\n        const options = this._editor.getOptions();\r\n        if (!options.get(54 /* lightbulb */).enabled) {\r\n            return this.hide();\r\n        }\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return this.hide();\r\n        }\r\n        const { lineNumber, column } = model.validatePosition(atPosition);\r\n        const tabSize = model.getOptions().tabSize;\r\n        const fontInfo = options.get(40 /* fontInfo */);\r\n        const lineContent = model.getLineContent(lineNumber);\r\n        const indent = TextModel.computeIndentLevel(lineContent, tabSize);\r\n        const lineHasSpace = fontInfo.spaceWidth * indent > 22;\r\n        const isFolded = (lineNumber) => {\r\n            return lineNumber > 2 && this._editor.getTopForLineNumber(lineNumber) === this._editor.getTopForLineNumber(lineNumber - 1);\r\n        };\r\n        let effectiveLineNumber = lineNumber;\r\n        if (!lineHasSpace) {\r\n            if (lineNumber > 1 && !isFolded(lineNumber - 1)) {\r\n                effectiveLineNumber -= 1;\r\n            }\r\n            else if (!isFolded(lineNumber + 1)) {\r\n                effectiveLineNumber += 1;\r\n            }\r\n            else if (column * fontInfo.spaceWidth < 22) {\r\n                // cannot show lightbulb above/below and showing\r\n                // it inline would overlay the cursor...\r\n                return this.hide();\r\n            }\r\n        }\r\n        this.state = new LightBulbState.Showing(actions, trigger, atPosition, {\r\n            position: { lineNumber: effectiveLineNumber, column: 1 },\r\n            preference: LightBulbWidget._posPref\r\n        });\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n    hide() {\r\n        this.state = LightBulbState.Hidden;\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n    get state() { return this._state; }\r\n    set state(value) {\r\n        this._state = value;\r\n        this._updateLightBulbTitleAndIcon();\r\n    }\r\n    _updateLightBulbTitleAndIcon() {\r\n        if (this.state.type === 1 /* Showing */ && this.state.actions.hasAutoFix) {\r\n            // update icon\r\n            this._domNode.classList.remove(...Codicon.lightBulb.classNamesArray);\r\n            this._domNode.classList.add(...Codicon.lightbulbAutofix.classNamesArray);\r\n            const preferredKb = this._keybindingService.lookupKeybinding(this._preferredFixActionId);\r\n            if (preferredKb) {\r\n                this.title = nls.localize('prefferedQuickFixWithKb', \"Show Fixes. Preferred Fix Available ({0})\", preferredKb.getLabel());\r\n                return;\r\n            }\r\n        }\r\n        // update icon\r\n        this._domNode.classList.remove(...Codicon.lightbulbAutofix.classNamesArray);\r\n        this._domNode.classList.add(...Codicon.lightBulb.classNamesArray);\r\n        const kb = this._keybindingService.lookupKeybinding(this._quickFixActionId);\r\n        if (kb) {\r\n            this.title = nls.localize('quickFixWithKb', \"Show Fixes ({0})\", kb.getLabel());\r\n        }\r\n        else {\r\n            this.title = nls.localize('quickFix', \"Show Fixes\");\r\n        }\r\n    }\r\n    set title(value) {\r\n        this._domNode.title = value;\r\n    }\r\n};\r\nLightBulbWidget._posPref = [0 /* EXACT */];\r\nLightBulbWidget = __decorate([\r\n    __param(3, IKeybindingService)\r\n], LightBulbWidget);\r\nexport { LightBulbWidget };\r\nregisterThemingParticipant((theme, collector) => {\r\n    var _a;\r\n    const editorBackgroundColor = (_a = theme.getColor(editorBackground)) === null || _a === void 0 ? void 0 : _a.transparent(0.7);\r\n    // Lightbulb Icon\r\n    const editorLightBulbForegroundColor = theme.getColor(editorLightBulbForeground);\r\n    if (editorLightBulbForegroundColor) {\r\n        collector.addRule(`\n\t\t.monaco-editor .contentWidgets ${Codicon.lightBulb.cssSelector} {\n\t\t\tcolor: ${editorLightBulbForegroundColor};\n\t\t\tbackground-color: ${editorBackgroundColor};\n\t\t}`);\r\n    }\r\n    // Lightbulb Auto Fix Icon\r\n    const editorLightBulbAutoFixForegroundColor = theme.getColor(editorLightBulbAutoFixForeground);\r\n    if (editorLightBulbAutoFixForegroundColor) {\r\n        collector.addRule(`\n\t\t.monaco-editor .contentWidgets ${Codicon.lightbulbAutofix.cssSelector} {\n\t\t\tcolor: ${editorLightBulbAutoFixForegroundColor};\n\t\t\tbackground-color: ${editorBackgroundColor};\n\t\t}`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _CodeActionUi_disposed;\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Lazy } from '../../../base/common/lazy.js';\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { MessageController } from '../message/messageController.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { CodeActionMenu } from './codeActionMenu.js';\r\nimport { LightBulbWidget } from './lightBulbWidget.js';\r\nlet CodeActionUi = class CodeActionUi extends Disposable {\r\n    constructor(_editor, quickFixActionId, preferredFixActionId, delegate, instantiationService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this.delegate = delegate;\r\n        this._activeCodeActions = this._register(new MutableDisposable());\r\n        _CodeActionUi_disposed.set(this, false);\r\n        this._codeActionWidget = new Lazy(() => {\r\n            return this._register(instantiationService.createInstance(CodeActionMenu, this._editor, {\r\n                onSelectCodeAction: (action) => __awaiter(this, void 0, void 0, function* () {\r\n                    this.delegate.applyCodeAction(action, /* retrigger */ true);\r\n                })\r\n            }));\r\n        });\r\n        this._lightBulbWidget = new Lazy(() => {\r\n            const widget = this._register(instantiationService.createInstance(LightBulbWidget, this._editor, quickFixActionId, preferredFixActionId));\r\n            this._register(widget.onClick(e => this.showCodeActionList(e.trigger, e.actions, e, { includeDisabledActions: false })));\r\n            return widget;\r\n        });\r\n    }\r\n    dispose() {\r\n        __classPrivateFieldSet(this, _CodeActionUi_disposed, true, \"f\");\r\n        super.dispose();\r\n    }\r\n    update(newState) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (newState.type !== 1 /* Triggered */) {\r\n                (_a = this._lightBulbWidget.rawValue) === null || _a === void 0 ? void 0 : _a.hide();\r\n                return;\r\n            }\r\n            let actions;\r\n            try {\r\n                actions = yield newState.actions;\r\n            }\r\n            catch (e) {\r\n                onUnexpectedError(e);\r\n                return;\r\n            }\r\n            if (__classPrivateFieldGet(this, _CodeActionUi_disposed, \"f\")) {\r\n                return;\r\n            }\r\n            this._lightBulbWidget.getValue().update(actions, newState.trigger, newState.position);\r\n            if (newState.trigger.type === 1 /* Invoke */) {\r\n                if ((_b = newState.trigger.filter) === null || _b === void 0 ? void 0 : _b.include) { // Triggered for specific scope\r\n                    // Check to see if we want to auto apply.\r\n                    const validActionToApply = this.tryGetValidActionToApply(newState.trigger, actions);\r\n                    if (validActionToApply) {\r\n                        try {\r\n                            yield this.delegate.applyCodeAction(validActionToApply, false);\r\n                        }\r\n                        finally {\r\n                            actions.dispose();\r\n                        }\r\n                        return;\r\n                    }\r\n                    // Check to see if there is an action that we would have applied were it not invalid\r\n                    if (newState.trigger.context) {\r\n                        const invalidAction = this.getInvalidActionThatWouldHaveBeenApplied(newState.trigger, actions);\r\n                        if (invalidAction && invalidAction.action.disabled) {\r\n                            MessageController.get(this._editor).showMessage(invalidAction.action.disabled, newState.trigger.context.position);\r\n                            actions.dispose();\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                const includeDisabledActions = !!((_c = newState.trigger.filter) === null || _c === void 0 ? void 0 : _c.include);\r\n                if (newState.trigger.context) {\r\n                    if (!actions.allActions.length || !includeDisabledActions && !actions.validActions.length) {\r\n                        MessageController.get(this._editor).showMessage(newState.trigger.context.notAvailableMessage, newState.trigger.context.position);\r\n                        this._activeCodeActions.value = actions;\r\n                        actions.dispose();\r\n                        return;\r\n                    }\r\n                }\r\n                this._activeCodeActions.value = actions;\r\n                this._codeActionWidget.getValue().show(newState.trigger, actions, newState.position, { includeDisabledActions });\r\n            }\r\n            else {\r\n                // auto magically triggered\r\n                if (this._codeActionWidget.getValue().isVisible) {\r\n                    // TODO: Figure out if we should update the showing menu?\r\n                    actions.dispose();\r\n                }\r\n                else {\r\n                    this._activeCodeActions.value = actions;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    getInvalidActionThatWouldHaveBeenApplied(trigger, actions) {\r\n        if (!actions.allActions.length) {\r\n            return undefined;\r\n        }\r\n        if ((trigger.autoApply === \"first\" /* First */ && actions.validActions.length === 0)\r\n            || (trigger.autoApply === \"ifSingle\" /* IfSingle */ && actions.allActions.length === 1)) {\r\n            return actions.allActions.find(({ action }) => action.disabled);\r\n        }\r\n        return undefined;\r\n    }\r\n    tryGetValidActionToApply(trigger, actions) {\r\n        if (!actions.validActions.length) {\r\n            return undefined;\r\n        }\r\n        if ((trigger.autoApply === \"first\" /* First */ && actions.validActions.length > 0)\r\n            || (trigger.autoApply === \"ifSingle\" /* IfSingle */ && actions.validActions.length === 1)) {\r\n            return actions.validActions[0];\r\n        }\r\n        return undefined;\r\n    }\r\n    showCodeActionList(trigger, actions, at, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._codeActionWidget.getValue().show(trigger, actions, at, options);\r\n        });\r\n    }\r\n};\r\n_CodeActionUi_disposed = new WeakMap();\r\nCodeActionUi = __decorate([\r\n    __param(4, IInstantiationService)\r\n], CodeActionUi);\r\nexport { CodeActionUi };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar _CodeActionModel_isDisposed;\r\nimport { createCancelablePromise, TimeoutTimer } from '../../../base/common/async.js';\r\nimport { isPromiseCanceledError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { isEqual } from '../../../base/common/resources.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { CodeActionProviderRegistry } from '../../common/modes.js';\r\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { Progress } from '../../../platform/progress/common/progress.js';\r\nimport { getCodeActions } from './codeAction.js';\r\nexport const SUPPORTED_CODE_ACTIONS = new RawContextKey('supportedCodeAction', '');\r\nclass CodeActionOracle extends Disposable {\r\n    constructor(_editor, _markerService, _signalChange, _delay = 250) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._markerService = _markerService;\r\n        this._signalChange = _signalChange;\r\n        this._delay = _delay;\r\n        this._autoTriggerTimer = this._register(new TimeoutTimer());\r\n        this._register(this._markerService.onMarkerChanged(e => this._onMarkerChanges(e)));\r\n        this._register(this._editor.onDidChangeCursorPosition(() => this._onCursorChange()));\r\n    }\r\n    trigger(trigger) {\r\n        const selection = this._getRangeOfSelectionUnlessWhitespaceEnclosed(trigger);\r\n        return this._createEventAndSignalChange(trigger, selection);\r\n    }\r\n    _onMarkerChanges(resources) {\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        if (resources.some(resource => isEqual(resource, model.uri))) {\r\n            this._autoTriggerTimer.cancelAndSet(() => {\r\n                this.trigger({ type: 2 /* Auto */ });\r\n            }, this._delay);\r\n        }\r\n    }\r\n    _onCursorChange() {\r\n        this._autoTriggerTimer.cancelAndSet(() => {\r\n            this.trigger({ type: 2 /* Auto */ });\r\n        }, this._delay);\r\n    }\r\n    _getRangeOfMarker(selection) {\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return undefined;\r\n        }\r\n        for (const marker of this._markerService.read({ resource: model.uri })) {\r\n            const markerRange = model.validateRange(marker);\r\n            if (Range.intersectRanges(markerRange, selection)) {\r\n                return Range.lift(markerRange);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    _getRangeOfSelectionUnlessWhitespaceEnclosed(trigger) {\r\n        if (!this._editor.hasModel()) {\r\n            return undefined;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const selection = this._editor.getSelection();\r\n        if (selection.isEmpty() && trigger.type === 2 /* Auto */) {\r\n            const { lineNumber, column } = selection.getPosition();\r\n            const line = model.getLineContent(lineNumber);\r\n            if (line.length === 0) {\r\n                // empty line\r\n                return undefined;\r\n            }\r\n            else if (column === 1) {\r\n                // look only right\r\n                if (/\\s/.test(line[0])) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            else if (column === model.getLineMaxColumn(lineNumber)) {\r\n                // look only left\r\n                if (/\\s/.test(line[line.length - 1])) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            else {\r\n                // look left and right\r\n                if (/\\s/.test(line[column - 2]) && /\\s/.test(line[column - 1])) {\r\n                    return undefined;\r\n                }\r\n            }\r\n        }\r\n        return selection;\r\n    }\r\n    _createEventAndSignalChange(trigger, selection) {\r\n        const model = this._editor.getModel();\r\n        if (!selection || !model) {\r\n            // cancel\r\n            this._signalChange(undefined);\r\n            return undefined;\r\n        }\r\n        const markerRange = this._getRangeOfMarker(selection);\r\n        const position = markerRange ? markerRange.getStartPosition() : selection.getStartPosition();\r\n        const e = {\r\n            trigger,\r\n            selection,\r\n            position\r\n        };\r\n        this._signalChange(e);\r\n        return e;\r\n    }\r\n}\r\nexport var CodeActionsState;\r\n(function (CodeActionsState) {\r\n    CodeActionsState.Empty = { type: 0 /* Empty */ };\r\n    class Triggered {\r\n        constructor(trigger, rangeOrSelection, position, _cancellablePromise) {\r\n            this.trigger = trigger;\r\n            this.rangeOrSelection = rangeOrSelection;\r\n            this.position = position;\r\n            this._cancellablePromise = _cancellablePromise;\r\n            this.type = 1 /* Triggered */;\r\n            this.actions = _cancellablePromise.catch((e) => {\r\n                if (isPromiseCanceledError(e)) {\r\n                    return emptyCodeActionSet;\r\n                }\r\n                throw e;\r\n            });\r\n        }\r\n        cancel() {\r\n            this._cancellablePromise.cancel();\r\n        }\r\n    }\r\n    CodeActionsState.Triggered = Triggered;\r\n})(CodeActionsState || (CodeActionsState = {}));\r\nconst emptyCodeActionSet = {\r\n    allActions: [],\r\n    validActions: [],\r\n    dispose: () => { },\r\n    documentation: [],\r\n    hasAutoFix: false\r\n};\r\nexport class CodeActionModel extends Disposable {\r\n    constructor(_editor, _markerService, contextKeyService, _progressService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._markerService = _markerService;\r\n        this._progressService = _progressService;\r\n        this._codeActionOracle = this._register(new MutableDisposable());\r\n        this._state = CodeActionsState.Empty;\r\n        this._onDidChangeState = this._register(new Emitter());\r\n        this.onDidChangeState = this._onDidChangeState.event;\r\n        _CodeActionModel_isDisposed.set(this, false);\r\n        this._supportedCodeActions = SUPPORTED_CODE_ACTIONS.bindTo(contextKeyService);\r\n        this._register(this._editor.onDidChangeModel(() => this._update()));\r\n        this._register(this._editor.onDidChangeModelLanguage(() => this._update()));\r\n        this._register(CodeActionProviderRegistry.onDidChange(() => this._update()));\r\n        this._update();\r\n    }\r\n    dispose() {\r\n        if (__classPrivateFieldGet(this, _CodeActionModel_isDisposed, \"f\")) {\r\n            return;\r\n        }\r\n        __classPrivateFieldSet(this, _CodeActionModel_isDisposed, true, \"f\");\r\n        super.dispose();\r\n        this.setState(CodeActionsState.Empty, true);\r\n    }\r\n    _update() {\r\n        if (__classPrivateFieldGet(this, _CodeActionModel_isDisposed, \"f\")) {\r\n            return;\r\n        }\r\n        this._codeActionOracle.value = undefined;\r\n        this.setState(CodeActionsState.Empty);\r\n        const model = this._editor.getModel();\r\n        if (model\r\n            && CodeActionProviderRegistry.has(model)\r\n            && !this._editor.getOption(78 /* readOnly */)) {\r\n            const supportedActions = [];\r\n            for (const provider of CodeActionProviderRegistry.all(model)) {\r\n                if (Array.isArray(provider.providedCodeActionKinds)) {\r\n                    supportedActions.push(...provider.providedCodeActionKinds);\r\n                }\r\n            }\r\n            this._supportedCodeActions.set(supportedActions.join(' '));\r\n            this._codeActionOracle.value = new CodeActionOracle(this._editor, this._markerService, trigger => {\r\n                var _a;\r\n                if (!trigger) {\r\n                    this.setState(CodeActionsState.Empty);\r\n                    return;\r\n                }\r\n                const actions = createCancelablePromise(token => getCodeActions(model, trigger.selection, trigger.trigger, Progress.None, token));\r\n                if (trigger.trigger.type === 1 /* Invoke */) {\r\n                    (_a = this._progressService) === null || _a === void 0 ? void 0 : _a.showWhile(actions, 250);\r\n                }\r\n                this.setState(new CodeActionsState.Triggered(trigger.trigger, trigger.selection, trigger.position, actions));\r\n            }, undefined);\r\n            this._codeActionOracle.value.trigger({ type: 2 /* Auto */ });\r\n        }\r\n        else {\r\n            this._supportedCodeActions.reset();\r\n        }\r\n    }\r\n    trigger(trigger) {\r\n        if (this._codeActionOracle.value) {\r\n            this._codeActionOracle.value.trigger(trigger);\r\n        }\r\n    }\r\n    setState(newState, skipNotify) {\r\n        if (newState === this._state) {\r\n            return;\r\n        }\r\n        // Cancel old request\r\n        if (this._state.type === 1 /* Triggered */) {\r\n            this._state.cancel();\r\n        }\r\n        this._state = newState;\r\n        if (!skipNotify && !__classPrivateFieldGet(this, _CodeActionModel_isDisposed, \"f\")) {\r\n            this._onDidChangeState.fire(newState);\r\n        }\r\n    }\r\n}\r\n_CodeActionModel_isDisposed = new WeakMap();\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { Lazy } from '../../../base/common/lazy.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { escapeRegExpCharacters } from '../../../base/common/strings.js';\r\nimport { EditorAction, EditorCommand } from '../../browser/editorExtensions.js';\r\nimport { IBulkEditService, ResourceEdit } from '../../browser/services/bulkEditService.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { codeActionCommandId, fixAllCommandId, organizeImportsCommandId, refactorCommandId, sourceActionCommandId } from './codeAction.js';\r\nimport { CodeActionUi } from './codeActionUi.js';\r\nimport { MessageController } from '../message/messageController.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\r\nimport { CodeActionModel, SUPPORTED_CODE_ACTIONS } from './codeActionModel.js';\r\nimport { CodeActionCommandArgs, CodeActionKind } from './types.js';\r\nfunction contextKeyForSupportedActions(kind) {\r\n    return ContextKeyExpr.regex(SUPPORTED_CODE_ACTIONS.keys()[0], new RegExp('(\\\\s|^)' + escapeRegExpCharacters(kind.value) + '\\\\b'));\r\n}\r\nconst argsSchema = {\r\n    type: 'object',\r\n    defaultSnippets: [{ body: { kind: '' } }],\r\n    properties: {\r\n        'kind': {\r\n            type: 'string',\r\n            description: nls.localize('args.schema.kind', \"Kind of the code action to run.\"),\r\n        },\r\n        'apply': {\r\n            type: 'string',\r\n            description: nls.localize('args.schema.apply', \"Controls when the returned actions are applied.\"),\r\n            default: \"ifSingle\" /* IfSingle */,\r\n            enum: [\"first\" /* First */, \"ifSingle\" /* IfSingle */, \"never\" /* Never */],\r\n            enumDescriptions: [\r\n                nls.localize('args.schema.apply.first', \"Always apply the first returned code action.\"),\r\n                nls.localize('args.schema.apply.ifSingle', \"Apply the first returned code action if it is the only one.\"),\r\n                nls.localize('args.schema.apply.never', \"Do not apply the returned code actions.\"),\r\n            ]\r\n        },\r\n        'preferred': {\r\n            type: 'boolean',\r\n            default: false,\r\n            description: nls.localize('args.schema.preferred', \"Controls if only preferred code actions should be returned.\"),\r\n        }\r\n    }\r\n};\r\nlet QuickFixController = class QuickFixController extends Disposable {\r\n    constructor(editor, markerService, contextKeyService, progressService, _instantiationService) {\r\n        super();\r\n        this._instantiationService = _instantiationService;\r\n        this._editor = editor;\r\n        this._model = this._register(new CodeActionModel(this._editor, markerService, contextKeyService, progressService));\r\n        this._register(this._model.onDidChangeState(newState => this.update(newState)));\r\n        this._ui = new Lazy(() => this._register(new CodeActionUi(editor, QuickFixAction.Id, AutoFixAction.Id, {\r\n            applyCodeAction: (action, retrigger) => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    yield this._applyCodeAction(action);\r\n                }\r\n                finally {\r\n                    if (retrigger) {\r\n                        this._trigger({ type: 2 /* Auto */, filter: {} });\r\n                    }\r\n                }\r\n            })\r\n        }, this._instantiationService)));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(QuickFixController.ID);\r\n    }\r\n    update(newState) {\r\n        this._ui.getValue().update(newState);\r\n    }\r\n    showCodeActions(trigger, actions, at) {\r\n        return this._ui.getValue().showCodeActionList(trigger, actions, at, { includeDisabledActions: false });\r\n    }\r\n    manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        MessageController.get(this._editor).closeMessage();\r\n        const triggerPosition = this._editor.getPosition();\r\n        this._trigger({ type: 1 /* Invoke */, filter, autoApply, context: { notAvailableMessage, position: triggerPosition } });\r\n    }\r\n    _trigger(trigger) {\r\n        return this._model.trigger(trigger);\r\n    }\r\n    _applyCodeAction(action) {\r\n        return this._instantiationService.invokeFunction(applyCodeAction, action, this._editor);\r\n    }\r\n};\r\nQuickFixController.ID = 'editor.contrib.quickFixController';\r\nQuickFixController = __decorate([\r\n    __param(1, IMarkerService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IEditorProgressService),\r\n    __param(4, IInstantiationService)\r\n], QuickFixController);\r\nexport { QuickFixController };\r\nexport function applyCodeAction(accessor, item, editor) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const bulkEditService = accessor.get(IBulkEditService);\r\n        const commandService = accessor.get(ICommandService);\r\n        const telemetryService = accessor.get(ITelemetryService);\r\n        const notificationService = accessor.get(INotificationService);\r\n        telemetryService.publicLog2('codeAction.applyCodeAction', {\r\n            codeActionTitle: item.action.title,\r\n            codeActionKind: item.action.kind,\r\n            codeActionIsPreferred: !!item.action.isPreferred,\r\n        });\r\n        yield item.resolve(CancellationToken.None);\r\n        if (item.action.edit) {\r\n            yield bulkEditService.apply(ResourceEdit.convert(item.action.edit), { editor, label: item.action.title });\r\n        }\r\n        if (item.action.command) {\r\n            try {\r\n                yield commandService.executeCommand(item.action.command.id, ...(item.action.command.arguments || []));\r\n            }\r\n            catch (err) {\r\n                const message = asMessage(err);\r\n                notificationService.error(typeof message === 'string'\r\n                    ? message\r\n                    : nls.localize('applyCodeActionFailed', \"An unknown error occurred while applying the code action\"));\r\n            }\r\n        }\r\n    });\r\n}\r\nfunction asMessage(err) {\r\n    if (typeof err === 'string') {\r\n        return err;\r\n    }\r\n    else if (err instanceof Error && typeof err.message === 'string') {\r\n        return err.message;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction triggerCodeActionsForEditorSelection(editor, notAvailableMessage, filter, autoApply) {\r\n    if (editor.hasModel()) {\r\n        const controller = QuickFixController.get(editor);\r\n        if (controller) {\r\n            controller.manualTriggerAtCurrentPosition(notAvailableMessage, filter, autoApply);\r\n        }\r\n    }\r\n}\r\nexport class QuickFixAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: QuickFixAction.Id,\r\n            label: nls.localize('quickfix.trigger.label', \"Quick Fix...\"),\r\n            alias: 'Quick Fix...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 84 /* US_DOT */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.quickFix.noneMessage', \"No code actions available\"), undefined, undefined);\r\n    }\r\n}\r\nQuickFixAction.Id = 'editor.action.quickFix';\r\nexport class CodeActionCommand extends EditorCommand {\r\n    constructor() {\r\n        super({\r\n            id: codeActionCommandId,\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            description: {\r\n                description: 'Trigger a code action',\r\n                args: [{ name: 'args', schema: argsSchema, }]\r\n            }\r\n        });\r\n    }\r\n    runEditorCommand(_accessor, editor, userArgs) {\r\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\r\n            kind: CodeActionKind.Empty,\r\n            apply: \"ifSingle\" /* IfSingle */,\r\n        });\r\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\r\n            ? args.preferred\r\n                ? nls.localize('editor.action.codeAction.noneMessage.preferred.kind', \"No preferred code actions for '{0}' available\", userArgs.kind)\r\n                : nls.localize('editor.action.codeAction.noneMessage.kind', \"No code actions for '{0}' available\", userArgs.kind)\r\n            : args.preferred\r\n                ? nls.localize('editor.action.codeAction.noneMessage.preferred', \"No preferred code actions available\")\r\n                : nls.localize('editor.action.codeAction.noneMessage', \"No code actions available\"), {\r\n            include: args.kind,\r\n            includeSourceActions: true,\r\n            onlyIncludePreferredActions: args.preferred,\r\n        }, args.apply);\r\n    }\r\n}\r\nexport class RefactorAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: refactorCommandId,\r\n            label: nls.localize('refactor.label', \"Refactor...\"),\r\n            alias: 'Refactor...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 48 /* KEY_R */,\r\n                mac: {\r\n                    primary: 256 /* WinCtrl */ | 1024 /* Shift */ | 48 /* KEY_R */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 2,\r\n                when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Refactor)),\r\n            },\r\n            description: {\r\n                description: 'Refactor...',\r\n                args: [{ name: 'args', schema: argsSchema }]\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor, userArgs) {\r\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\r\n            kind: CodeActionKind.Refactor,\r\n            apply: \"never\" /* Never */\r\n        });\r\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\r\n            ? args.preferred\r\n                ? nls.localize('editor.action.refactor.noneMessage.preferred.kind', \"No preferred refactorings for '{0}' available\", userArgs.kind)\r\n                : nls.localize('editor.action.refactor.noneMessage.kind', \"No refactorings for '{0}' available\", userArgs.kind)\r\n            : args.preferred\r\n                ? nls.localize('editor.action.refactor.noneMessage.preferred', \"No preferred refactorings available\")\r\n                : nls.localize('editor.action.refactor.noneMessage', \"No refactorings available\"), {\r\n            include: CodeActionKind.Refactor.contains(args.kind) ? args.kind : CodeActionKind.None,\r\n            onlyIncludePreferredActions: args.preferred,\r\n        }, args.apply);\r\n    }\r\n}\r\nexport class SourceAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: sourceActionCommandId,\r\n            label: nls.localize('source.label', \"Source Action...\"),\r\n            alias: 'Source Action...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCodeActionsProvider),\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 2.1,\r\n                when: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.Source)),\r\n            },\r\n            description: {\r\n                description: 'Source Action...',\r\n                args: [{ name: 'args', schema: argsSchema }]\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor, userArgs) {\r\n        const args = CodeActionCommandArgs.fromUser(userArgs, {\r\n            kind: CodeActionKind.Source,\r\n            apply: \"never\" /* Never */\r\n        });\r\n        return triggerCodeActionsForEditorSelection(editor, typeof (userArgs === null || userArgs === void 0 ? void 0 : userArgs.kind) === 'string'\r\n            ? args.preferred\r\n                ? nls.localize('editor.action.source.noneMessage.preferred.kind', \"No preferred source actions for '{0}' available\", userArgs.kind)\r\n                : nls.localize('editor.action.source.noneMessage.kind', \"No source actions for '{0}' available\", userArgs.kind)\r\n            : args.preferred\r\n                ? nls.localize('editor.action.source.noneMessage.preferred', \"No preferred source actions available\")\r\n                : nls.localize('editor.action.source.noneMessage', \"No source actions available\"), {\r\n            include: CodeActionKind.Source.contains(args.kind) ? args.kind : CodeActionKind.None,\r\n            includeSourceActions: true,\r\n            onlyIncludePreferredActions: args.preferred,\r\n        }, args.apply);\r\n    }\r\n}\r\nexport class OrganizeImportsAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: organizeImportsCommandId,\r\n            label: nls.localize('organizeImports.label', \"Organize Imports\"),\r\n            alias: 'Organize Imports',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceOrganizeImports)),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 45 /* KEY_O */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.organize.noneMessage', \"No organize imports action available\"), { include: CodeActionKind.SourceOrganizeImports, includeSourceActions: true }, \"ifSingle\" /* IfSingle */);\r\n    }\r\n}\r\nexport class FixAllAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: fixAllCommandId,\r\n            label: nls.localize('fixAll.label', \"Fix All\"),\r\n            alias: 'Fix All',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.SourceFixAll))\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('fixAll.noneMessage', \"No fix all action available\"), { include: CodeActionKind.SourceFixAll, includeSourceActions: true }, \"ifSingle\" /* IfSingle */);\r\n    }\r\n}\r\nexport class AutoFixAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: AutoFixAction.Id,\r\n            label: nls.localize('autoFix.label', \"Auto Fix...\"),\r\n            alias: 'Auto Fix...',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, contextKeyForSupportedActions(CodeActionKind.QuickFix)),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 84 /* US_DOT */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 84 /* US_DOT */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        return triggerCodeActionsForEditorSelection(editor, nls.localize('editor.action.autoFix.noneMessage', \"No auto fixes available\"), {\r\n            include: CodeActionKind.QuickFix,\r\n            onlyIncludePreferredActions: true\r\n        }, \"ifSingle\" /* IfSingle */);\r\n    }\r\n}\r\nAutoFixAction.Id = 'editor.action.autoFix';\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { CodeActionCommand, OrganizeImportsAction, QuickFixAction, QuickFixController, RefactorAction, SourceAction, AutoFixAction, FixAllAction } from './codeActionCommands.js';\r\nregisterEditorContribution(QuickFixController.ID, QuickFixController);\r\nregisterEditorAction(QuickFixAction);\r\nregisterEditorAction(RefactorAction);\r\nregisterEditorAction(SourceAction);\r\nregisterEditorAction(OrganizeImportsAction);\r\nregisterEditorAction(AutoFixAction);\r\nregisterEditorAction(FixAllAction);\r\nregisterEditorCommand(new CodeActionCommand());\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { illegalArgument, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { CodeLensProviderRegistry } from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nexport class CodeLensModel {\r\n    constructor() {\r\n        this.lenses = [];\r\n        this._disposables = new DisposableStore();\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n    }\r\n    add(list, provider) {\r\n        this._disposables.add(list);\r\n        for (const symbol of list.lenses) {\r\n            this.lenses.push({ symbol, provider });\r\n        }\r\n    }\r\n}\r\nexport function getCodeLensModel(model, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const provider = CodeLensProviderRegistry.ordered(model);\r\n        const providerRanks = new Map();\r\n        const result = new CodeLensModel();\r\n        const promises = provider.map((provider, i) => __awaiter(this, void 0, void 0, function* () {\r\n            providerRanks.set(provider, i);\r\n            try {\r\n                const list = yield Promise.resolve(provider.provideCodeLenses(model, token));\r\n                if (list) {\r\n                    result.add(list, provider);\r\n                }\r\n            }\r\n            catch (err) {\r\n                onUnexpectedExternalError(err);\r\n            }\r\n        }));\r\n        yield Promise.all(promises);\r\n        result.lenses = result.lenses.sort((a, b) => {\r\n            // sort by lineNumber, provider-rank, and column\r\n            if (a.symbol.range.startLineNumber < b.symbol.range.startLineNumber) {\r\n                return -1;\r\n            }\r\n            else if (a.symbol.range.startLineNumber > b.symbol.range.startLineNumber) {\r\n                return 1;\r\n            }\r\n            else if ((providerRanks.get(a.provider)) < (providerRanks.get(b.provider))) {\r\n                return -1;\r\n            }\r\n            else if ((providerRanks.get(a.provider)) > (providerRanks.get(b.provider))) {\r\n                return 1;\r\n            }\r\n            else if (a.symbol.range.startColumn < b.symbol.range.startColumn) {\r\n                return -1;\r\n            }\r\n            else if (a.symbol.range.startColumn > b.symbol.range.startColumn) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        });\r\n        return result;\r\n    });\r\n}\r\nCommandsRegistry.registerCommand('_executeCodeLensProvider', function (accessor, ...args) {\r\n    let [uri, itemResolveCount] = args;\r\n    assertType(URI.isUri(uri));\r\n    assertType(typeof itemResolveCount === 'number' || !itemResolveCount);\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        throw illegalArgument();\r\n    }\r\n    const result = [];\r\n    const disposables = new DisposableStore();\r\n    return getCodeLensModel(model, CancellationToken.None).then(value => {\r\n        disposables.add(value);\r\n        let resolve = [];\r\n        for (const item of value.lenses) {\r\n            if (itemResolveCount === undefined || itemResolveCount === null || Boolean(item.symbol.command)) {\r\n                result.push(item.symbol);\r\n            }\r\n            else if (itemResolveCount-- > 0 && item.provider.resolveCodeLens) {\r\n                resolve.push(Promise.resolve(item.provider.resolveCodeLens(model, item.symbol, CancellationToken.None)).then(symbol => result.push(symbol || item.symbol)));\r\n            }\r\n        }\r\n        return Promise.all(resolve);\r\n    }).then(() => {\r\n        return result;\r\n    }).finally(() => {\r\n        // make sure to return results, then (on next tick)\r\n        // dispose the results\r\n        setTimeout(() => disposables.dispose(), 100);\r\n    });\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './codelensWidget.css';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { editorCodeLensForeground } from '../../common/view/editorColorRegistry.js';\r\nimport { editorActiveLinkForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { renderLabelWithIcons } from '../../../base/browser/ui/iconLabel/iconLabels.js';\r\nclass CodeLensViewZone {\r\n    constructor(afterLineNumber, heightInPx, onHeight) {\r\n        this.afterLineNumber = afterLineNumber;\r\n        this.heightInPx = heightInPx;\r\n        this._onHeight = onHeight;\r\n        this.suppressMouseDown = true;\r\n        this.domNode = document.createElement('div');\r\n    }\r\n    onComputedHeight(height) {\r\n        if (this._lastHeight === undefined) {\r\n            this._lastHeight = height;\r\n        }\r\n        else if (this._lastHeight !== height) {\r\n            this._lastHeight = height;\r\n            this._onHeight();\r\n        }\r\n    }\r\n}\r\nclass CodeLensContentWidget {\r\n    constructor(editor, className, line) {\r\n        // Editor.IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = false;\r\n        this.suppressMouseDown = true;\r\n        this._commands = new Map();\r\n        this._isEmpty = true;\r\n        this._editor = editor;\r\n        this._id = `codelens.widget-${(CodeLensContentWidget._idPool++)}`;\r\n        this.updatePosition(line);\r\n        this._domNode = document.createElement('span');\r\n        this._domNode.className = `codelens-decoration ${className}`;\r\n    }\r\n    withCommands(lenses, animate) {\r\n        this._commands.clear();\r\n        let children = [];\r\n        let hasSymbol = false;\r\n        for (let i = 0; i < lenses.length; i++) {\r\n            const lens = lenses[i];\r\n            if (!lens) {\r\n                continue;\r\n            }\r\n            hasSymbol = true;\r\n            if (lens.command) {\r\n                const title = renderLabelWithIcons(lens.command.title.trim());\r\n                if (lens.command.id) {\r\n                    children.push(dom.$('a', { id: String(i), title: lens.command.tooltip }, ...title));\r\n                    this._commands.set(String(i), lens.command);\r\n                }\r\n                else {\r\n                    children.push(dom.$('span', { title: lens.command.tooltip }, ...title));\r\n                }\r\n                if (i + 1 < lenses.length) {\r\n                    children.push(dom.$('span', undefined, '\\u00a0|\\u00a0'));\r\n                }\r\n            }\r\n        }\r\n        if (!hasSymbol) {\r\n            // symbols but no commands\r\n            dom.reset(this._domNode, dom.$('span', undefined, 'no commands'));\r\n        }\r\n        else {\r\n            // symbols and commands\r\n            dom.reset(this._domNode, ...children);\r\n            if (this._isEmpty && animate) {\r\n                this._domNode.classList.add('fadein');\r\n            }\r\n            this._isEmpty = false;\r\n        }\r\n    }\r\n    getCommand(link) {\r\n        return link.parentElement === this._domNode\r\n            ? this._commands.get(link.id)\r\n            : undefined;\r\n    }\r\n    getId() {\r\n        return this._id;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    updatePosition(line) {\r\n        const column = this._editor.getModel().getLineFirstNonWhitespaceColumn(line);\r\n        this._widgetPosition = {\r\n            position: { lineNumber: line, column: column },\r\n            preference: [1 /* ABOVE */]\r\n        };\r\n    }\r\n    getPosition() {\r\n        return this._widgetPosition || null;\r\n    }\r\n}\r\nCodeLensContentWidget._idPool = 0;\r\nexport class CodeLensHelper {\r\n    constructor() {\r\n        this._removeDecorations = [];\r\n        this._addDecorations = [];\r\n        this._addDecorationsCallbacks = [];\r\n    }\r\n    addDecoration(decoration, callback) {\r\n        this._addDecorations.push(decoration);\r\n        this._addDecorationsCallbacks.push(callback);\r\n    }\r\n    removeDecoration(decorationId) {\r\n        this._removeDecorations.push(decorationId);\r\n    }\r\n    commit(changeAccessor) {\r\n        let resultingDecorations = changeAccessor.deltaDecorations(this._removeDecorations, this._addDecorations);\r\n        for (let i = 0, len = resultingDecorations.length; i < len; i++) {\r\n            this._addDecorationsCallbacks[i](resultingDecorations[i]);\r\n        }\r\n    }\r\n}\r\nexport class CodeLensWidget {\r\n    constructor(data, editor, className, helper, viewZoneChangeAccessor, heightInPx, updateCallback) {\r\n        this._isDisposed = false;\r\n        this._editor = editor;\r\n        this._className = className;\r\n        this._data = data;\r\n        // create combined range, track all ranges with decorations,\r\n        // check if there is already something to render\r\n        this._decorationIds = [];\r\n        let range;\r\n        let lenses = [];\r\n        this._data.forEach((codeLensData, i) => {\r\n            if (codeLensData.symbol.command) {\r\n                lenses.push(codeLensData.symbol);\r\n            }\r\n            helper.addDecoration({\r\n                range: codeLensData.symbol.range,\r\n                options: ModelDecorationOptions.EMPTY\r\n            }, id => this._decorationIds[i] = id);\r\n            // the range contains all lenses on this line\r\n            if (!range) {\r\n                range = Range.lift(codeLensData.symbol.range);\r\n            }\r\n            else {\r\n                range = Range.plusRange(range, codeLensData.symbol.range);\r\n            }\r\n        });\r\n        this._viewZone = new CodeLensViewZone(range.startLineNumber - 1, heightInPx, updateCallback);\r\n        this._viewZoneId = viewZoneChangeAccessor.addZone(this._viewZone);\r\n        if (lenses.length > 0) {\r\n            this._createContentWidgetIfNecessary();\r\n            this._contentWidget.withCommands(lenses, false);\r\n        }\r\n    }\r\n    _createContentWidgetIfNecessary() {\r\n        if (!this._contentWidget) {\r\n            this._contentWidget = new CodeLensContentWidget(this._editor, this._className, this._viewZone.afterLineNumber + 1);\r\n            this._editor.addContentWidget(this._contentWidget);\r\n        }\r\n        else {\r\n            this._editor.layoutContentWidget(this._contentWidget);\r\n        }\r\n    }\r\n    dispose(helper, viewZoneChangeAccessor) {\r\n        this._decorationIds.forEach(helper.removeDecoration, helper);\r\n        this._decorationIds = [];\r\n        if (viewZoneChangeAccessor) {\r\n            viewZoneChangeAccessor.removeZone(this._viewZoneId);\r\n        }\r\n        if (this._contentWidget) {\r\n            this._editor.removeContentWidget(this._contentWidget);\r\n            this._contentWidget = undefined;\r\n        }\r\n        this._isDisposed = true;\r\n    }\r\n    isDisposed() {\r\n        return this._isDisposed;\r\n    }\r\n    isValid() {\r\n        return this._decorationIds.some((id, i) => {\r\n            const range = this._editor.getModel().getDecorationRange(id);\r\n            const symbol = this._data[i].symbol;\r\n            return !!(range && Range.isEmpty(symbol.range) === range.isEmpty());\r\n        });\r\n    }\r\n    updateCodeLensSymbols(data, helper) {\r\n        this._decorationIds.forEach(helper.removeDecoration, helper);\r\n        this._decorationIds = [];\r\n        this._data = data;\r\n        this._data.forEach((codeLensData, i) => {\r\n            helper.addDecoration({\r\n                range: codeLensData.symbol.range,\r\n                options: ModelDecorationOptions.EMPTY\r\n            }, id => this._decorationIds[i] = id);\r\n        });\r\n    }\r\n    updateHeight(height, viewZoneChangeAccessor) {\r\n        this._viewZone.heightInPx = height;\r\n        viewZoneChangeAccessor.layoutZone(this._viewZoneId);\r\n        if (this._contentWidget) {\r\n            this._editor.layoutContentWidget(this._contentWidget);\r\n        }\r\n    }\r\n    computeIfNecessary(model) {\r\n        if (!this._viewZone.domNode.hasAttribute('monaco-visible-view-zone')) {\r\n            return null;\r\n        }\r\n        // Read editor current state\r\n        for (let i = 0; i < this._decorationIds.length; i++) {\r\n            const range = model.getDecorationRange(this._decorationIds[i]);\r\n            if (range) {\r\n                this._data[i].symbol.range = range;\r\n            }\r\n        }\r\n        return this._data;\r\n    }\r\n    updateCommands(symbols) {\r\n        this._createContentWidgetIfNecessary();\r\n        this._contentWidget.withCommands(symbols, true);\r\n        for (let i = 0; i < this._data.length; i++) {\r\n            const resolved = symbols[i];\r\n            if (resolved) {\r\n                const { symbol } = this._data[i];\r\n                symbol.command = resolved.command || symbol.command;\r\n            }\r\n        }\r\n    }\r\n    getCommand(link) {\r\n        var _a;\r\n        return (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.getCommand(link);\r\n    }\r\n    getLineNumber() {\r\n        const range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\r\n        if (range) {\r\n            return range.startLineNumber;\r\n        }\r\n        return -1;\r\n    }\r\n    update(viewZoneChangeAccessor) {\r\n        if (this.isValid()) {\r\n            const range = this._editor.getModel().getDecorationRange(this._decorationIds[0]);\r\n            if (range) {\r\n                this._viewZone.afterLineNumber = range.startLineNumber - 1;\r\n                viewZoneChangeAccessor.layoutZone(this._viewZoneId);\r\n                if (this._contentWidget) {\r\n                    this._contentWidget.updatePosition(range.startLineNumber);\r\n                    this._editor.layoutContentWidget(this._contentWidget);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getItems() {\r\n        return this._data;\r\n    }\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    const codeLensForeground = theme.getColor(editorCodeLensForeground);\r\n    if (codeLensForeground) {\r\n        collector.addRule(`.monaco-editor .codelens-decoration { color: ${codeLensForeground}; }`);\r\n        collector.addRule(`.monaco-editor .codelens-decoration .codicon { color: ${codeLensForeground}; }`);\r\n    }\r\n    const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\r\n    if (activeLinkForeground) {\r\n        collector.addRule(`.monaco-editor .codelens-decoration > a:hover { color: ${activeLinkForeground} !important; }`);\r\n        collector.addRule(`.monaco-editor .codelens-decoration > a:hover .codicon { color: ${activeLinkForeground} !important; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { CodeLensModel } from './codelens.js';\r\nimport { LRUCache } from '../../../base/common/map.js';\r\nimport { IStorageService, WillSaveStateReason } from '../../../platform/storage/common/storage.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { runWhenIdle } from '../../../base/common/async.js';\r\nimport { once } from '../../../base/common/functional.js';\r\nexport const ICodeLensCache = createDecorator('ICodeLensCache');\r\nclass CacheItem {\r\n    constructor(lineCount, data) {\r\n        this.lineCount = lineCount;\r\n        this.data = data;\r\n    }\r\n}\r\nlet CodeLensCache = class CodeLensCache {\r\n    constructor(storageService) {\r\n        this._fakeProvider = new class {\r\n            provideCodeLenses() {\r\n                throw new Error('not supported');\r\n            }\r\n        };\r\n        this._cache = new LRUCache(20, 0.75);\r\n        // remove old data\r\n        const oldkey = 'codelens/cache';\r\n        runWhenIdle(() => storageService.remove(oldkey, 1 /* WORKSPACE */));\r\n        // restore lens data on start\r\n        const key = 'codelens/cache2';\r\n        const raw = storageService.get(key, 1 /* WORKSPACE */, '{}');\r\n        this._deserialize(raw);\r\n        // store lens data on shutdown\r\n        once(storageService.onWillSaveState)(e => {\r\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\r\n                storageService.store(key, this._serialize(), 1 /* WORKSPACE */, 1 /* MACHINE */);\r\n            }\r\n        });\r\n    }\r\n    put(model, data) {\r\n        // create a copy of the model that is without command-ids\r\n        // but with comand-labels\r\n        const copyItems = data.lenses.map(item => {\r\n            var _a;\r\n            return {\r\n                range: item.symbol.range,\r\n                command: item.symbol.command && { id: '', title: (_a = item.symbol.command) === null || _a === void 0 ? void 0 : _a.title },\r\n            };\r\n        });\r\n        const copyModel = new CodeLensModel();\r\n        copyModel.add({ lenses: copyItems, dispose: () => { } }, this._fakeProvider);\r\n        const item = new CacheItem(model.getLineCount(), copyModel);\r\n        this._cache.set(model.uri.toString(), item);\r\n    }\r\n    get(model) {\r\n        const item = this._cache.get(model.uri.toString());\r\n        return item && item.lineCount === model.getLineCount() ? item.data : undefined;\r\n    }\r\n    delete(model) {\r\n        this._cache.delete(model.uri.toString());\r\n    }\r\n    // --- persistence\r\n    _serialize() {\r\n        const data = Object.create(null);\r\n        for (const [key, value] of this._cache) {\r\n            const lines = new Set();\r\n            for (const d of value.data.lenses) {\r\n                lines.add(d.symbol.range.startLineNumber);\r\n            }\r\n            data[key] = {\r\n                lineCount: value.lineCount,\r\n                lines: [...lines.values()]\r\n            };\r\n        }\r\n        return JSON.stringify(data);\r\n    }\r\n    _deserialize(raw) {\r\n        try {\r\n            const data = JSON.parse(raw);\r\n            for (const key in data) {\r\n                const element = data[key];\r\n                const lenses = [];\r\n                for (const line of element.lines) {\r\n                    lenses.push({ range: new Range(line, 1, line, 11) });\r\n                }\r\n                const model = new CodeLensModel();\r\n                model.add({ lenses, dispose() { } }, this._fakeProvider);\r\n                this._cache.set(key, new CacheItem(element.lineCount, model));\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // ignore...\r\n        }\r\n    }\r\n};\r\nCodeLensCache = __decorate([\r\n    __param(0, IStorageService)\r\n], CodeLensCache);\r\nexport { CodeLensCache };\r\nregisterSingleton(ICodeLensCache, CodeLensCache);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { RunOnceScheduler, createCancelablePromise, disposableTimeout } from '../../../base/common/async.js';\r\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { StableEditorScrollState } from '../../browser/core/editorState.js';\r\nimport { registerEditorContribution, registerEditorAction, EditorAction } from '../../browser/editorExtensions.js';\r\nimport { CodeLensProviderRegistry } from '../../common/modes.js';\r\nimport { getCodeLensModel } from './codelens.js';\r\nimport { CodeLensWidget, CodeLensHelper } from './codelensWidget.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { ICodeLensCache } from './codeLensCache.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { hash } from '../../../base/common/hash.js';\r\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\r\nlet CodeLensContribution = class CodeLensContribution {\r\n    constructor(_editor, _commandService, _notificationService, _codeLensCache) {\r\n        this._editor = _editor;\r\n        this._commandService = _commandService;\r\n        this._notificationService = _notificationService;\r\n        this._codeLensCache = _codeLensCache;\r\n        this._disposables = new DisposableStore();\r\n        this._localToDispose = new DisposableStore();\r\n        this._lenses = [];\r\n        this._getCodeLensModelDelays = new LanguageFeatureRequestDelays(CodeLensProviderRegistry, 250, 2500);\r\n        this._oldCodeLensModels = new DisposableStore();\r\n        this._resolveCodeLensesDelays = new LanguageFeatureRequestDelays(CodeLensProviderRegistry, 250, 2500);\r\n        this._resolveCodeLensesScheduler = new RunOnceScheduler(() => this._resolveCodeLensesInViewport(), this._resolveCodeLensesDelays.min);\r\n        this._disposables.add(this._editor.onDidChangeModel(() => this._onModelChange()));\r\n        this._disposables.add(this._editor.onDidChangeModelLanguage(() => this._onModelChange()));\r\n        this._disposables.add(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(40 /* fontInfo */) || e.hasChanged(14 /* codeLensFontSize */) || e.hasChanged(13 /* codeLensFontFamily */)) {\r\n                this._updateLensStyle();\r\n            }\r\n            if (e.hasChanged(12 /* codeLens */)) {\r\n                this._onModelChange();\r\n            }\r\n        }));\r\n        this._disposables.add(CodeLensProviderRegistry.onDidChange(this._onModelChange, this));\r\n        this._onModelChange();\r\n        this._styleClassName = '_' + hash(this._editor.getId()).toString(16);\r\n        this._styleElement = dom.createStyleSheet(dom.isInShadowDOM(this._editor.getContainerDomNode())\r\n            ? this._editor.getContainerDomNode()\r\n            : undefined);\r\n        this._updateLensStyle();\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._localDispose();\r\n        this._disposables.dispose();\r\n        this._oldCodeLensModels.dispose();\r\n        (_a = this._currentCodeLensModel) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._styleElement.remove();\r\n    }\r\n    _getLayoutInfo() {\r\n        let fontSize = this._editor.getOption(14 /* codeLensFontSize */);\r\n        let codeLensHeight;\r\n        if (!fontSize || fontSize < 5) {\r\n            fontSize = (this._editor.getOption(42 /* fontSize */) * .9) | 0;\r\n            codeLensHeight = this._editor.getOption(56 /* lineHeight */);\r\n        }\r\n        else {\r\n            codeLensHeight = (fontSize * Math.max(1.3, this._editor.getOption(56 /* lineHeight */) / this._editor.getOption(42 /* fontSize */))) | 0;\r\n        }\r\n        return { codeLensHeight, fontSize };\r\n    }\r\n    _updateLensStyle() {\r\n        const { codeLensHeight, fontSize } = this._getLayoutInfo();\r\n        const fontFamily = this._editor.getOption(13 /* codeLensFontFamily */);\r\n        const editorFontInfo = this._editor.getOption(40 /* fontInfo */);\r\n        const fontFamilyVar = `--codelens-font-family${this._styleClassName}`;\r\n        const fontFeaturesVar = `--codelens-font-features${this._styleClassName}`;\r\n        let newStyle = `\n\t\t.monaco-editor .codelens-decoration.${this._styleClassName} { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; padding-right: ${Math.round(fontSize * 0.5)}px; font-feature-settings: var(${fontFeaturesVar}) }\n\t\t.monaco-editor .codelens-decoration.${this._styleClassName} span.codicon { line-height: ${codeLensHeight}px; font-size: ${fontSize}px; }\n\t\t`;\r\n        if (fontFamily) {\r\n            newStyle += `.monaco-editor .codelens-decoration.${this._styleClassName} { font-family: var(${fontFamilyVar})}`;\r\n        }\r\n        this._styleElement.textContent = newStyle;\r\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily !== null && fontFamily !== void 0 ? fontFamily : 'inherit');\r\n        this._editor.getContainerDomNode().style.setProperty(fontFeaturesVar, editorFontInfo.fontFeatureSettings);\r\n        //\r\n        this._editor.changeViewZones(accessor => {\r\n            for (let lens of this._lenses) {\r\n                lens.updateHeight(codeLensHeight, accessor);\r\n            }\r\n        });\r\n    }\r\n    _localDispose() {\r\n        var _a, _b, _c;\r\n        (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\r\n        this._getCodeLensModelPromise = undefined;\r\n        (_b = this._resolveCodeLensesPromise) === null || _b === void 0 ? void 0 : _b.cancel();\r\n        this._resolveCodeLensesPromise = undefined;\r\n        this._localToDispose.clear();\r\n        this._oldCodeLensModels.clear();\r\n        (_c = this._currentCodeLensModel) === null || _c === void 0 ? void 0 : _c.dispose();\r\n    }\r\n    _onModelChange() {\r\n        this._localDispose();\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        if (!this._editor.getOption(12 /* codeLens */)) {\r\n            return;\r\n        }\r\n        const cachedLenses = this._codeLensCache.get(model);\r\n        if (cachedLenses) {\r\n            this._renderCodeLensSymbols(cachedLenses);\r\n        }\r\n        if (!CodeLensProviderRegistry.has(model)) {\r\n            // no provider -> return but check with\r\n            // cached lenses. they expire after 30 seconds\r\n            if (cachedLenses) {\r\n                this._localToDispose.add(disposableTimeout(() => {\r\n                    const cachedLensesNow = this._codeLensCache.get(model);\r\n                    if (cachedLenses === cachedLensesNow) {\r\n                        this._codeLensCache.delete(model);\r\n                        this._onModelChange();\r\n                    }\r\n                }, 30 * 1000));\r\n            }\r\n            return;\r\n        }\r\n        for (const provider of CodeLensProviderRegistry.all(model)) {\r\n            if (typeof provider.onDidChange === 'function') {\r\n                let registration = provider.onDidChange(() => scheduler.schedule());\r\n                this._localToDispose.add(registration);\r\n            }\r\n        }\r\n        const scheduler = new RunOnceScheduler(() => {\r\n            var _a;\r\n            const t1 = Date.now();\r\n            (_a = this._getCodeLensModelPromise) === null || _a === void 0 ? void 0 : _a.cancel();\r\n            this._getCodeLensModelPromise = createCancelablePromise(token => getCodeLensModel(model, token));\r\n            this._getCodeLensModelPromise.then(result => {\r\n                if (this._currentCodeLensModel) {\r\n                    this._oldCodeLensModels.add(this._currentCodeLensModel);\r\n                }\r\n                this._currentCodeLensModel = result;\r\n                // cache model to reduce flicker\r\n                this._codeLensCache.put(model, result);\r\n                // update moving average\r\n                const newDelay = this._getCodeLensModelDelays.update(model, Date.now() - t1);\r\n                scheduler.delay = newDelay;\r\n                // render lenses\r\n                this._renderCodeLensSymbols(result);\r\n                this._resolveCodeLensesInViewport();\r\n            }, onUnexpectedError);\r\n        }, this._getCodeLensModelDelays.get(model));\r\n        this._localToDispose.add(scheduler);\r\n        this._localToDispose.add(toDisposable(() => this._resolveCodeLensesScheduler.cancel()));\r\n        this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\r\n            this._editor.changeDecorations(decorationsAccessor => {\r\n                this._editor.changeViewZones(viewZonesAccessor => {\r\n                    let toDispose = [];\r\n                    let lastLensLineNumber = -1;\r\n                    this._lenses.forEach((lens) => {\r\n                        if (!lens.isValid() || lastLensLineNumber === lens.getLineNumber()) {\r\n                            // invalid -> lens collapsed, attach range doesn't exist anymore\r\n                            // line_number -> lenses should never be on the same line\r\n                            toDispose.push(lens);\r\n                        }\r\n                        else {\r\n                            lens.update(viewZonesAccessor);\r\n                            lastLensLineNumber = lens.getLineNumber();\r\n                        }\r\n                    });\r\n                    let helper = new CodeLensHelper();\r\n                    toDispose.forEach((l) => {\r\n                        l.dispose(helper, viewZonesAccessor);\r\n                        this._lenses.splice(this._lenses.indexOf(l), 1);\r\n                    });\r\n                    helper.commit(decorationsAccessor);\r\n                });\r\n            });\r\n            // Ask for all references again\r\n            scheduler.schedule();\r\n        }));\r\n        this._localToDispose.add(this._editor.onDidFocusEditorWidget(() => {\r\n            scheduler.schedule();\r\n        }));\r\n        this._localToDispose.add(this._editor.onDidScrollChange(e => {\r\n            if (e.scrollTopChanged && this._lenses.length > 0) {\r\n                this._resolveCodeLensesInViewportSoon();\r\n            }\r\n        }));\r\n        this._localToDispose.add(this._editor.onDidLayoutChange(() => {\r\n            this._resolveCodeLensesInViewportSoon();\r\n        }));\r\n        this._localToDispose.add(toDisposable(() => {\r\n            if (this._editor.getModel()) {\r\n                const scrollState = StableEditorScrollState.capture(this._editor);\r\n                this._editor.changeDecorations(decorationsAccessor => {\r\n                    this._editor.changeViewZones(viewZonesAccessor => {\r\n                        this._disposeAllLenses(decorationsAccessor, viewZonesAccessor);\r\n                    });\r\n                });\r\n                scrollState.restore(this._editor);\r\n            }\r\n            else {\r\n                // No accessors available\r\n                this._disposeAllLenses(undefined, undefined);\r\n            }\r\n        }));\r\n        this._localToDispose.add(this._editor.onMouseDown(e => {\r\n            if (e.target.type !== 9 /* CONTENT_WIDGET */) {\r\n                return;\r\n            }\r\n            let target = e.target.element;\r\n            if ((target === null || target === void 0 ? void 0 : target.tagName) === 'SPAN') {\r\n                target = target.parentElement;\r\n            }\r\n            if ((target === null || target === void 0 ? void 0 : target.tagName) === 'A') {\r\n                for (const lens of this._lenses) {\r\n                    let command = lens.getCommand(target);\r\n                    if (command) {\r\n                        this._commandService.executeCommand(command.id, ...(command.arguments || [])).catch(err => this._notificationService.error(err));\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n        scheduler.schedule();\r\n    }\r\n    _disposeAllLenses(decChangeAccessor, viewZoneChangeAccessor) {\r\n        const helper = new CodeLensHelper();\r\n        for (const lens of this._lenses) {\r\n            lens.dispose(helper, viewZoneChangeAccessor);\r\n        }\r\n        if (decChangeAccessor) {\r\n            helper.commit(decChangeAccessor);\r\n        }\r\n        this._lenses.length = 0;\r\n    }\r\n    _renderCodeLensSymbols(symbols) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        let maxLineNumber = this._editor.getModel().getLineCount();\r\n        let groups = [];\r\n        let lastGroup;\r\n        for (let symbol of symbols.lenses) {\r\n            let line = symbol.symbol.range.startLineNumber;\r\n            if (line < 1 || line > maxLineNumber) {\r\n                // invalid code lens\r\n                continue;\r\n            }\r\n            else if (lastGroup && lastGroup[lastGroup.length - 1].symbol.range.startLineNumber === line) {\r\n                // on same line as previous\r\n                lastGroup.push(symbol);\r\n            }\r\n            else {\r\n                // on later line as previous\r\n                lastGroup = [symbol];\r\n                groups.push(lastGroup);\r\n            }\r\n        }\r\n        const scrollState = StableEditorScrollState.capture(this._editor);\r\n        const layoutInfo = this._getLayoutInfo();\r\n        this._editor.changeDecorations(decorationsAccessor => {\r\n            this._editor.changeViewZones(viewZoneAccessor => {\r\n                const helper = new CodeLensHelper();\r\n                let codeLensIndex = 0;\r\n                let groupsIndex = 0;\r\n                while (groupsIndex < groups.length && codeLensIndex < this._lenses.length) {\r\n                    let symbolsLineNumber = groups[groupsIndex][0].symbol.range.startLineNumber;\r\n                    let codeLensLineNumber = this._lenses[codeLensIndex].getLineNumber();\r\n                    if (codeLensLineNumber < symbolsLineNumber) {\r\n                        this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\r\n                        this._lenses.splice(codeLensIndex, 1);\r\n                    }\r\n                    else if (codeLensLineNumber === symbolsLineNumber) {\r\n                        this._lenses[codeLensIndex].updateCodeLensSymbols(groups[groupsIndex], helper);\r\n                        groupsIndex++;\r\n                        codeLensIndex++;\r\n                    }\r\n                    else {\r\n                        this._lenses.splice(codeLensIndex, 0, new CodeLensWidget(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\r\n                        codeLensIndex++;\r\n                        groupsIndex++;\r\n                    }\r\n                }\r\n                // Delete extra code lenses\r\n                while (codeLensIndex < this._lenses.length) {\r\n                    this._lenses[codeLensIndex].dispose(helper, viewZoneAccessor);\r\n                    this._lenses.splice(codeLensIndex, 1);\r\n                }\r\n                // Create extra symbols\r\n                while (groupsIndex < groups.length) {\r\n                    this._lenses.push(new CodeLensWidget(groups[groupsIndex], this._editor, this._styleClassName, helper, viewZoneAccessor, layoutInfo.codeLensHeight, () => this._resolveCodeLensesInViewportSoon()));\r\n                    groupsIndex++;\r\n                }\r\n                helper.commit(decorationsAccessor);\r\n            });\r\n        });\r\n        scrollState.restore(this._editor);\r\n    }\r\n    _resolveCodeLensesInViewportSoon() {\r\n        const model = this._editor.getModel();\r\n        if (model) {\r\n            this._resolveCodeLensesScheduler.schedule();\r\n        }\r\n    }\r\n    _resolveCodeLensesInViewport() {\r\n        var _a;\r\n        (_a = this._resolveCodeLensesPromise) === null || _a === void 0 ? void 0 : _a.cancel();\r\n        this._resolveCodeLensesPromise = undefined;\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        const toResolve = [];\r\n        const lenses = [];\r\n        this._lenses.forEach((lens) => {\r\n            const request = lens.computeIfNecessary(model);\r\n            if (request) {\r\n                toResolve.push(request);\r\n                lenses.push(lens);\r\n            }\r\n        });\r\n        if (toResolve.length === 0) {\r\n            return;\r\n        }\r\n        const t1 = Date.now();\r\n        const resolvePromise = createCancelablePromise(token => {\r\n            const promises = toResolve.map((request, i) => {\r\n                const resolvedSymbols = new Array(request.length);\r\n                const promises = request.map((request, i) => {\r\n                    if (!request.symbol.command && typeof request.provider.resolveCodeLens === 'function') {\r\n                        return Promise.resolve(request.provider.resolveCodeLens(model, request.symbol, token)).then(symbol => {\r\n                            resolvedSymbols[i] = symbol;\r\n                        }, onUnexpectedExternalError);\r\n                    }\r\n                    else {\r\n                        resolvedSymbols[i] = request.symbol;\r\n                        return Promise.resolve(undefined);\r\n                    }\r\n                });\r\n                return Promise.all(promises).then(() => {\r\n                    if (!token.isCancellationRequested && !lenses[i].isDisposed()) {\r\n                        lenses[i].updateCommands(resolvedSymbols);\r\n                    }\r\n                });\r\n            });\r\n            return Promise.all(promises);\r\n        });\r\n        this._resolveCodeLensesPromise = resolvePromise;\r\n        this._resolveCodeLensesPromise.then(() => {\r\n            // update moving average\r\n            const newDelay = this._resolveCodeLensesDelays.update(model, Date.now() - t1);\r\n            this._resolveCodeLensesScheduler.delay = newDelay;\r\n            if (this._currentCodeLensModel) { // update the cached state with new resolved items\r\n                this._codeLensCache.put(model, this._currentCodeLensModel);\r\n            }\r\n            this._oldCodeLensModels.clear(); // dispose old models once we have updated the UI with the current model\r\n            if (resolvePromise === this._resolveCodeLensesPromise) {\r\n                this._resolveCodeLensesPromise = undefined;\r\n            }\r\n        }, err => {\r\n            onUnexpectedError(err); // can also be cancellation!\r\n            if (resolvePromise === this._resolveCodeLensesPromise) {\r\n                this._resolveCodeLensesPromise = undefined;\r\n            }\r\n        });\r\n    }\r\n    getLenses() {\r\n        return this._lenses;\r\n    }\r\n};\r\nCodeLensContribution.ID = 'css.editor.codeLens';\r\nCodeLensContribution = __decorate([\r\n    __param(1, ICommandService),\r\n    __param(2, INotificationService),\r\n    __param(3, ICodeLensCache)\r\n], CodeLensContribution);\r\nexport { CodeLensContribution };\r\nregisterEditorContribution(CodeLensContribution.ID, CodeLensContribution);\r\nregisterEditorAction(class ShowLensesInCurrentLine extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'codelens.showLensesInCurrentLine',\r\n            precondition: EditorContextKeys.hasCodeLensProvider,\r\n            label: localize('showLensOnLine', \"Show CodeLens Commands For Current Line\"),\r\n            alias: 'Show CodeLens Commands For Current Line',\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!editor.hasModel()) {\r\n                return;\r\n            }\r\n            const quickInputService = accessor.get(IQuickInputService);\r\n            const commandService = accessor.get(ICommandService);\r\n            const notificationService = accessor.get(INotificationService);\r\n            const lineNumber = editor.getSelection().positionLineNumber;\r\n            const codelensController = editor.getContribution(CodeLensContribution.ID);\r\n            const items = [];\r\n            for (let lens of codelensController.getLenses()) {\r\n                if (lens.getLineNumber() === lineNumber) {\r\n                    for (let item of lens.getItems()) {\r\n                        const { command } = item.symbol;\r\n                        if (command) {\r\n                            items.push({\r\n                                label: command.title,\r\n                                command: command\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (items.length === 0) {\r\n                // We dont want an empty picker\r\n                return;\r\n            }\r\n            const item = yield quickInputService.pick(items, { canPickMany: false });\r\n            if (!item) {\r\n                // Nothing picked\r\n                return;\r\n            }\r\n            try {\r\n                yield commandService.executeCommand(item.command.id, ...(item.command.arguments || []));\r\n            }\r\n            catch (err) {\r\n                notificationService.error(err);\r\n            }\r\n        });\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { illegalArgument } from '../../../base/common/errors.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ColorProviderRegistry } from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nexport function getColors(model, token) {\r\n    const colors = [];\r\n    const providers = ColorProviderRegistry.ordered(model).reverse();\r\n    const promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, token)).then(result => {\r\n        if (Array.isArray(result)) {\r\n            for (let colorInfo of result) {\r\n                colors.push({ colorInfo, provider });\r\n            }\r\n        }\r\n    }));\r\n    return Promise.all(promises).then(() => colors);\r\n}\r\nexport function getColorPresentations(model, colorInfo, provider, token) {\r\n    return Promise.resolve(provider.provideColorPresentations(model, colorInfo, token));\r\n}\r\nCommandsRegistry.registerCommand('_executeDocumentColorProvider', function (accessor, ...args) {\r\n    const [resource] = args;\r\n    if (!(resource instanceof URI)) {\r\n        throw illegalArgument();\r\n    }\r\n    const model = accessor.get(IModelService).getModel(resource);\r\n    if (!model) {\r\n        throw illegalArgument();\r\n    }\r\n    const rawCIs = [];\r\n    const providers = ColorProviderRegistry.ordered(model).reverse();\r\n    const promises = providers.map(provider => Promise.resolve(provider.provideDocumentColors(model, CancellationToken.None)).then(result => {\r\n        if (Array.isArray(result)) {\r\n            for (let ci of result) {\r\n                rawCIs.push({ range: ci.range, color: [ci.color.red, ci.color.green, ci.color.blue, ci.color.alpha] });\r\n            }\r\n        }\r\n    }));\r\n    return Promise.all(promises).then(() => rawCIs);\r\n});\r\nCommandsRegistry.registerCommand('_executeColorPresentationProvider', function (accessor, ...args) {\r\n    const [color, context] = args;\r\n    const { uri, range } = context;\r\n    if (!(uri instanceof URI) || !Array.isArray(color) || color.length !== 4 || !Range.isIRange(range)) {\r\n        throw illegalArgument();\r\n    }\r\n    const [red, green, blue, alpha] = color;\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        throw illegalArgument();\r\n    }\r\n    const colorInfo = {\r\n        range,\r\n        color: { red, green, blue, alpha }\r\n    };\r\n    const presentations = [];\r\n    const providers = ColorProviderRegistry.ordered(model).reverse();\r\n    const promises = providers.map(provider => Promise.resolve(provider.provideColorPresentations(model, colorInfo, CancellationToken.None)).then(result => {\r\n        if (Array.isArray(result)) {\r\n            presentations.push(...result);\r\n        }\r\n    }));\r\n    return Promise.all(promises).then(() => presentations);\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { TimeoutTimer, createCancelablePromise } from '../../../base/common/async.js';\r\nimport { RGBA } from '../../../base/common/color.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { hash } from '../../../base/common/hash.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { ColorProviderRegistry } from '../../common/modes.js';\r\nimport { getColors } from './color.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nconst MAX_DECORATORS = 500;\r\nlet ColorDetector = class ColorDetector extends Disposable {\r\n    constructor(_editor, _codeEditorService, _configurationService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._codeEditorService = _codeEditorService;\r\n        this._configurationService = _configurationService;\r\n        this._localToDispose = this._register(new DisposableStore());\r\n        this._decorationsIds = [];\r\n        this._colorDatas = new Map();\r\n        this._colorDecoratorIds = [];\r\n        this._decorationsTypes = new Set();\r\n        this._register(_editor.onDidChangeModel(() => {\r\n            this._isEnabled = this.isEnabled();\r\n            this.onModelChanged();\r\n        }));\r\n        this._register(_editor.onDidChangeModelLanguage(() => this.onModelChanged()));\r\n        this._register(ColorProviderRegistry.onDidChange(() => this.onModelChanged()));\r\n        this._register(_editor.onDidChangeConfiguration(() => {\r\n            let prevIsEnabled = this._isEnabled;\r\n            this._isEnabled = this.isEnabled();\r\n            if (prevIsEnabled !== this._isEnabled) {\r\n                if (this._isEnabled) {\r\n                    this.onModelChanged();\r\n                }\r\n                else {\r\n                    this.removeAllDecorations();\r\n                }\r\n            }\r\n        }));\r\n        this._timeoutTimer = null;\r\n        this._computePromise = null;\r\n        this._isEnabled = this.isEnabled();\r\n        this.onModelChanged();\r\n    }\r\n    isEnabled() {\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return false;\r\n        }\r\n        const languageId = model.getLanguageIdentifier();\r\n        // handle deprecated settings. [languageId].colorDecorators.enable\r\n        const deprecatedConfig = this._configurationService.getValue(languageId.language);\r\n        if (deprecatedConfig) {\r\n            const colorDecorators = deprecatedConfig['colorDecorators']; // deprecatedConfig.valueOf('.colorDecorators.enable');\r\n            if (colorDecorators && colorDecorators['enable'] !== undefined && !colorDecorators['enable']) {\r\n                return colorDecorators['enable'];\r\n            }\r\n        }\r\n        return this._editor.getOption(15 /* colorDecorators */);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(this.ID);\r\n    }\r\n    dispose() {\r\n        this.stop();\r\n        this.removeAllDecorations();\r\n        super.dispose();\r\n    }\r\n    onModelChanged() {\r\n        this.stop();\r\n        if (!this._isEnabled) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        if (!model || !ColorProviderRegistry.has(model)) {\r\n            return;\r\n        }\r\n        this._localToDispose.add(this._editor.onDidChangeModelContent(() => {\r\n            if (!this._timeoutTimer) {\r\n                this._timeoutTimer = new TimeoutTimer();\r\n                this._timeoutTimer.cancelAndSet(() => {\r\n                    this._timeoutTimer = null;\r\n                    this.beginCompute();\r\n                }, ColorDetector.RECOMPUTE_TIME);\r\n            }\r\n        }));\r\n        this.beginCompute();\r\n    }\r\n    beginCompute() {\r\n        this._computePromise = createCancelablePromise(token => {\r\n            const model = this._editor.getModel();\r\n            if (!model) {\r\n                return Promise.resolve([]);\r\n            }\r\n            return getColors(model, token);\r\n        });\r\n        this._computePromise.then((colorInfos) => {\r\n            this.updateDecorations(colorInfos);\r\n            this.updateColorDecorators(colorInfos);\r\n            this._computePromise = null;\r\n        }, onUnexpectedError);\r\n    }\r\n    stop() {\r\n        if (this._timeoutTimer) {\r\n            this._timeoutTimer.cancel();\r\n            this._timeoutTimer = null;\r\n        }\r\n        if (this._computePromise) {\r\n            this._computePromise.cancel();\r\n            this._computePromise = null;\r\n        }\r\n        this._localToDispose.clear();\r\n    }\r\n    updateDecorations(colorDatas) {\r\n        const decorations = colorDatas.map(c => ({\r\n            range: {\r\n                startLineNumber: c.colorInfo.range.startLineNumber,\r\n                startColumn: c.colorInfo.range.startColumn,\r\n                endLineNumber: c.colorInfo.range.endLineNumber,\r\n                endColumn: c.colorInfo.range.endColumn\r\n            },\r\n            options: ModelDecorationOptions.EMPTY\r\n        }));\r\n        this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, decorations);\r\n        this._colorDatas = new Map();\r\n        this._decorationsIds.forEach((id, i) => this._colorDatas.set(id, colorDatas[i]));\r\n    }\r\n    updateColorDecorators(colorData) {\r\n        let decorations = [];\r\n        let newDecorationsTypes = {};\r\n        for (let i = 0; i < colorData.length && decorations.length < MAX_DECORATORS; i++) {\r\n            const { red, green, blue, alpha } = colorData[i].colorInfo.color;\r\n            const rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\r\n            let subKey = hash(`rgba(${rgba.r},${rgba.g},${rgba.b},${rgba.a})`).toString(16);\r\n            let color = `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`;\r\n            let key = 'colorBox-' + subKey;\r\n            if (!this._decorationsTypes.has(key) && !newDecorationsTypes[key]) {\r\n                this._codeEditorService.registerDecorationType('color-detector-color', key, {\r\n                    before: {\r\n                        contentText: ' ',\r\n                        border: 'solid 0.1em #000',\r\n                        margin: '0.1em 0.2em 0 0.2em',\r\n                        width: '0.8em',\r\n                        height: '0.8em',\r\n                        backgroundColor: color\r\n                    },\r\n                    dark: {\r\n                        before: {\r\n                            border: 'solid 0.1em #eee'\r\n                        }\r\n                    }\r\n                }, undefined, this._editor);\r\n            }\r\n            newDecorationsTypes[key] = true;\r\n            decorations.push({\r\n                range: {\r\n                    startLineNumber: colorData[i].colorInfo.range.startLineNumber,\r\n                    startColumn: colorData[i].colorInfo.range.startColumn,\r\n                    endLineNumber: colorData[i].colorInfo.range.endLineNumber,\r\n                    endColumn: colorData[i].colorInfo.range.endColumn\r\n                },\r\n                options: this._codeEditorService.resolveDecorationOptions(key, true)\r\n            });\r\n        }\r\n        this._decorationsTypes.forEach(subType => {\r\n            if (!newDecorationsTypes[subType]) {\r\n                this._codeEditorService.removeDecorationType(subType);\r\n            }\r\n        });\r\n        this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, decorations);\r\n    }\r\n    removeAllDecorations() {\r\n        this._decorationsIds = this._editor.deltaDecorations(this._decorationsIds, []);\r\n        this._colorDecoratorIds = this._editor.deltaDecorations(this._colorDecoratorIds, []);\r\n        this._decorationsTypes.forEach(subType => {\r\n            this._codeEditorService.removeDecorationType(subType);\r\n        });\r\n    }\r\n    getColorData(position) {\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return null;\r\n        }\r\n        const decorations = model\r\n            .getDecorationsInRange(Range.fromPositions(position, position))\r\n            .filter(d => this._colorDatas.has(d.id));\r\n        if (decorations.length === 0) {\r\n            return null;\r\n        }\r\n        return this._colorDatas.get(decorations[0].id);\r\n    }\r\n};\r\nColorDetector.ID = 'editor.contrib.colorDetector';\r\nColorDetector.RECOMPUTE_TIME = 1000; // ms\r\nColorDetector = __decorate([\r\n    __param(1, ICodeEditorService),\r\n    __param(2, IConfigurationService)\r\n], ColorDetector);\r\nexport { ColorDetector };\r\nregisterEditorContribution(ColorDetector.ID, ColorDetector);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { RunOnceScheduler, createCancelablePromise } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nexport class HoverOperation {\r\n    constructor(computer, success, error, progress, hoverTime) {\r\n        this._computer = computer;\r\n        this._state = 0 /* IDLE */;\r\n        this._hoverTime = hoverTime;\r\n        this._firstWaitScheduler = new RunOnceScheduler(() => this._triggerAsyncComputation(), 0);\r\n        this._secondWaitScheduler = new RunOnceScheduler(() => this._triggerSyncComputation(), 0);\r\n        this._loadingMessageScheduler = new RunOnceScheduler(() => this._showLoadingMessage(), 0);\r\n        this._asyncComputationPromise = null;\r\n        this._asyncComputationPromiseDone = false;\r\n        this._completeCallback = success;\r\n        this._errorCallback = error;\r\n        this._progressCallback = progress;\r\n    }\r\n    setHoverTime(hoverTime) {\r\n        this._hoverTime = hoverTime;\r\n    }\r\n    _firstWaitTime() {\r\n        return this._hoverTime / 2;\r\n    }\r\n    _secondWaitTime() {\r\n        return this._hoverTime / 2;\r\n    }\r\n    _loadingMessageTime() {\r\n        return 3 * this._hoverTime;\r\n    }\r\n    _triggerAsyncComputation() {\r\n        this._state = 2 /* SECOND_WAIT */;\r\n        this._secondWaitScheduler.schedule(this._secondWaitTime());\r\n        if (this._computer.computeAsync) {\r\n            this._asyncComputationPromiseDone = false;\r\n            this._asyncComputationPromise = createCancelablePromise(token => this._computer.computeAsync(token));\r\n            this._asyncComputationPromise.then((asyncResult) => {\r\n                this._asyncComputationPromiseDone = true;\r\n                this._withAsyncResult(asyncResult);\r\n            }, (e) => this._onError(e));\r\n        }\r\n        else {\r\n            this._asyncComputationPromiseDone = true;\r\n        }\r\n    }\r\n    _triggerSyncComputation() {\r\n        if (this._computer.computeSync) {\r\n            this._computer.onResult(this._computer.computeSync(), true);\r\n        }\r\n        if (this._asyncComputationPromiseDone) {\r\n            this._state = 0 /* IDLE */;\r\n            this._onComplete(this._computer.getResult());\r\n        }\r\n        else {\r\n            this._state = 3 /* WAITING_FOR_ASYNC_COMPUTATION */;\r\n            this._onProgress(this._computer.getResult());\r\n        }\r\n    }\r\n    _showLoadingMessage() {\r\n        if (this._state === 3 /* WAITING_FOR_ASYNC_COMPUTATION */) {\r\n            this._onProgress(this._computer.getResultWithLoadingMessage());\r\n        }\r\n    }\r\n    _withAsyncResult(asyncResult) {\r\n        if (asyncResult) {\r\n            this._computer.onResult(asyncResult, false);\r\n        }\r\n        if (this._state === 3 /* WAITING_FOR_ASYNC_COMPUTATION */) {\r\n            this._state = 0 /* IDLE */;\r\n            this._onComplete(this._computer.getResult());\r\n        }\r\n    }\r\n    _onComplete(value) {\r\n        this._completeCallback(value);\r\n    }\r\n    _onError(error) {\r\n        if (this._errorCallback) {\r\n            this._errorCallback(error);\r\n        }\r\n        else {\r\n            onUnexpectedError(error);\r\n        }\r\n    }\r\n    _onProgress(value) {\r\n        this._progressCallback(value);\r\n    }\r\n    start(mode) {\r\n        if (mode === 0 /* Delayed */) {\r\n            if (this._state === 0 /* IDLE */) {\r\n                this._state = 1 /* FIRST_WAIT */;\r\n                this._firstWaitScheduler.schedule(this._firstWaitTime());\r\n                this._loadingMessageScheduler.schedule(this._loadingMessageTime());\r\n            }\r\n        }\r\n        else {\r\n            switch (this._state) {\r\n                case 0 /* IDLE */:\r\n                    this._triggerAsyncComputation();\r\n                    this._secondWaitScheduler.cancel();\r\n                    this._triggerSyncComputation();\r\n                    break;\r\n                case 2 /* SECOND_WAIT */:\r\n                    this._secondWaitScheduler.cancel();\r\n                    this._triggerSyncComputation();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    cancel() {\r\n        this._loadingMessageScheduler.cancel();\r\n        if (this._state === 1 /* FIRST_WAIT */) {\r\n            this._firstWaitScheduler.cancel();\r\n        }\r\n        if (this._state === 2 /* SECOND_WAIT */) {\r\n            this._secondWaitScheduler.cancel();\r\n            if (this._asyncComputationPromise) {\r\n                this._asyncComputationPromise.cancel();\r\n                this._asyncComputationPromise = null;\r\n            }\r\n        }\r\n        if (this._state === 3 /* WAITING_FOR_ASYNC_COMPUTATION */) {\r\n            if (this._asyncComputationPromise) {\r\n                this._asyncComputationPromise.cancel();\r\n                this._asyncComputationPromise = null;\r\n            }\r\n        }\r\n        this._state = 0 /* IDLE */;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './hover.css';\r\nimport * as dom from '../../dom.js';\r\nimport { Disposable } from '../../../common/lifecycle.js';\r\nimport { DomScrollableElement } from '../scrollbar/scrollableElement.js';\r\nconst $ = dom.$;\r\nexport class HoverWidget extends Disposable {\r\n    constructor() {\r\n        super();\r\n        this.containerDomNode = document.createElement('div');\r\n        this.containerDomNode.className = 'monaco-hover';\r\n        this.containerDomNode.tabIndex = 0;\r\n        this.containerDomNode.setAttribute('role', 'tooltip');\r\n        this.contentsDomNode = document.createElement('div');\r\n        this.contentsDomNode.className = 'monaco-hover-content';\r\n        this._scrollbar = this._register(new DomScrollableElement(this.contentsDomNode, {\r\n            consumeMouseWheelIfScrollbarIsNeeded: true\r\n        }));\r\n        this.containerDomNode.appendChild(this._scrollbar.getDomNode());\r\n    }\r\n    onContentsChanged() {\r\n        this._scrollbar.scanDomNode();\r\n    }\r\n}\r\nexport class HoverAction extends Disposable {\r\n    constructor(parent, actionOptions, keybindingLabel) {\r\n        super();\r\n        this.actionContainer = dom.append(parent, $('div.action-container'));\r\n        this.action = dom.append(this.actionContainer, $('a.action'));\r\n        this.action.setAttribute('href', '#');\r\n        this.action.setAttribute('role', 'button');\r\n        if (actionOptions.iconClass) {\r\n            dom.append(this.action, $(`span.icon.${actionOptions.iconClass}`));\r\n        }\r\n        const label = dom.append(this.action, $('span'));\r\n        label.textContent = keybindingLabel ? `${actionOptions.label} (${keybindingLabel})` : actionOptions.label;\r\n        this._register(dom.addDisposableListener(this.actionContainer, dom.EventType.CLICK, e => {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            actionOptions.run(this.actionContainer);\r\n        }));\r\n        this.setEnabled(true);\r\n    }\r\n    static render(parent, actionOptions, keybindingLabel) {\r\n        return new HoverAction(parent, actionOptions, keybindingLabel);\r\n    }\r\n    setEnabled(enabled) {\r\n        if (enabled) {\r\n            this.actionContainer.classList.remove('disabled');\r\n            this.actionContainer.removeAttribute('aria-disabled');\r\n        }\r\n        else {\r\n            this.actionContainer.classList.add('disabled');\r\n            this.actionContainer.setAttribute('aria-disabled', 'true');\r\n        }\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './media/gotoErrorWidget.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { MarkerSeverity } from '../../../platform/markers/common/markers.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { registerColor, oneOf, textLinkForeground, editorErrorForeground, editorErrorBorder, editorWarningForeground, editorWarningBorder, editorInfoForeground, editorInfoBorder } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { Color } from '../../../base/common/color.js';\r\nimport { ScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\r\nimport { getBaseLabel } from '../../../base/common/labels.js';\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { PeekViewWidget, peekViewTitleForeground, peekViewTitleInfoForeground } from '../peekView/peekView.js';\r\nimport { basename } from '../../../base/common/resources.js';\r\nimport { SeverityIcon } from '../../../platform/severityIcon/common/severityIcon.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { MenuId, IMenuService } from '../../../platform/actions/common/actions.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { createAndFillInActionBarActions } from '../../../platform/actions/browser/menuEntryActionViewItem.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { splitLines } from '../../../base/common/strings.js';\r\nimport { ILabelService } from '../../../platform/label/common/label.js';\r\nclass MessageWidget {\r\n    constructor(parent, editor, onRelatedInformation, _openerService, _labelService) {\r\n        this._openerService = _openerService;\r\n        this._labelService = _labelService;\r\n        this._lines = 0;\r\n        this._longestLineLength = 0;\r\n        this._relatedDiagnostics = new WeakMap();\r\n        this._disposables = new DisposableStore();\r\n        this._editor = editor;\r\n        const domNode = document.createElement('div');\r\n        domNode.className = 'descriptioncontainer';\r\n        this._messageBlock = document.createElement('div');\r\n        this._messageBlock.classList.add('message');\r\n        this._messageBlock.setAttribute('aria-live', 'assertive');\r\n        this._messageBlock.setAttribute('role', 'alert');\r\n        domNode.appendChild(this._messageBlock);\r\n        this._relatedBlock = document.createElement('div');\r\n        domNode.appendChild(this._relatedBlock);\r\n        this._disposables.add(dom.addStandardDisposableListener(this._relatedBlock, 'click', event => {\r\n            event.preventDefault();\r\n            const related = this._relatedDiagnostics.get(event.target);\r\n            if (related) {\r\n                onRelatedInformation(related);\r\n            }\r\n        }));\r\n        this._scrollable = new ScrollableElement(domNode, {\r\n            horizontal: 1 /* Auto */,\r\n            vertical: 1 /* Auto */,\r\n            useShadows: false,\r\n            horizontalScrollbarSize: 3,\r\n            verticalScrollbarSize: 3\r\n        });\r\n        parent.appendChild(this._scrollable.getDomNode());\r\n        this._disposables.add(this._scrollable.onScroll(e => {\r\n            domNode.style.left = `-${e.scrollLeft}px`;\r\n            domNode.style.top = `-${e.scrollTop}px`;\r\n        }));\r\n        this._disposables.add(this._scrollable);\r\n    }\r\n    dispose() {\r\n        dispose(this._disposables);\r\n    }\r\n    update(marker) {\r\n        const { source, message, relatedInformation, code } = marker;\r\n        let sourceAndCodeLength = ((source === null || source === void 0 ? void 0 : source.length) || 0) + '()'.length;\r\n        if (code) {\r\n            if (typeof code === 'string') {\r\n                sourceAndCodeLength += code.length;\r\n            }\r\n            else {\r\n                sourceAndCodeLength += code.value.length;\r\n            }\r\n        }\r\n        const lines = splitLines(message);\r\n        this._lines = lines.length;\r\n        this._longestLineLength = 0;\r\n        for (const line of lines) {\r\n            this._longestLineLength = Math.max(line.length + sourceAndCodeLength, this._longestLineLength);\r\n        }\r\n        dom.clearNode(this._messageBlock);\r\n        this._messageBlock.setAttribute('aria-label', this.getAriaLabel(marker));\r\n        this._editor.applyFontInfo(this._messageBlock);\r\n        let lastLineElement = this._messageBlock;\r\n        for (const line of lines) {\r\n            lastLineElement = document.createElement('div');\r\n            lastLineElement.innerText = line;\r\n            if (line === '') {\r\n                lastLineElement.style.height = this._messageBlock.style.lineHeight;\r\n            }\r\n            this._messageBlock.appendChild(lastLineElement);\r\n        }\r\n        if (source || code) {\r\n            const detailsElement = document.createElement('span');\r\n            detailsElement.classList.add('details');\r\n            lastLineElement.appendChild(detailsElement);\r\n            if (source) {\r\n                const sourceElement = document.createElement('span');\r\n                sourceElement.innerText = source;\r\n                sourceElement.classList.add('source');\r\n                detailsElement.appendChild(sourceElement);\r\n            }\r\n            if (code) {\r\n                if (typeof code === 'string') {\r\n                    const codeElement = document.createElement('span');\r\n                    codeElement.innerText = `(${code})`;\r\n                    codeElement.classList.add('code');\r\n                    detailsElement.appendChild(codeElement);\r\n                }\r\n                else {\r\n                    this._codeLink = dom.$('a.code-link');\r\n                    this._codeLink.setAttribute('href', `${code.target.toString()}`);\r\n                    this._codeLink.onclick = (e) => {\r\n                        this._openerService.open(code.target, { allowCommands: true });\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    };\r\n                    const codeElement = dom.append(this._codeLink, dom.$('span'));\r\n                    codeElement.innerText = code.value;\r\n                    detailsElement.appendChild(this._codeLink);\r\n                }\r\n            }\r\n        }\r\n        dom.clearNode(this._relatedBlock);\r\n        this._editor.applyFontInfo(this._relatedBlock);\r\n        if (isNonEmptyArray(relatedInformation)) {\r\n            const relatedInformationNode = this._relatedBlock.appendChild(document.createElement('div'));\r\n            relatedInformationNode.style.paddingTop = `${Math.floor(this._editor.getOption(56 /* lineHeight */) * 0.66)}px`;\r\n            this._lines += 1;\r\n            for (const related of relatedInformation) {\r\n                let container = document.createElement('div');\r\n                let relatedResource = document.createElement('a');\r\n                relatedResource.classList.add('filename');\r\n                relatedResource.innerText = `${getBaseLabel(related.resource)}(${related.startLineNumber}, ${related.startColumn}): `;\r\n                relatedResource.title = this._labelService.getUriLabel(related.resource);\r\n                this._relatedDiagnostics.set(relatedResource, related);\r\n                let relatedMessage = document.createElement('span');\r\n                relatedMessage.innerText = related.message;\r\n                container.appendChild(relatedResource);\r\n                container.appendChild(relatedMessage);\r\n                this._lines += 1;\r\n                relatedInformationNode.appendChild(container);\r\n            }\r\n        }\r\n        const fontInfo = this._editor.getOption(40 /* fontInfo */);\r\n        const scrollWidth = Math.ceil(fontInfo.typicalFullwidthCharacterWidth * this._longestLineLength * 0.75);\r\n        const scrollHeight = fontInfo.lineHeight * this._lines;\r\n        this._scrollable.setScrollDimensions({ scrollWidth, scrollHeight });\r\n    }\r\n    layout(height, width) {\r\n        this._scrollable.getDomNode().style.height = `${height}px`;\r\n        this._scrollable.getDomNode().style.width = `${width}px`;\r\n        this._scrollable.setScrollDimensions({ width, height });\r\n    }\r\n    getHeightInLines() {\r\n        return Math.min(17, this._lines);\r\n    }\r\n    getAriaLabel(marker) {\r\n        let severityLabel = '';\r\n        switch (marker.severity) {\r\n            case MarkerSeverity.Error:\r\n                severityLabel = nls.localize('Error', \"Error\");\r\n                break;\r\n            case MarkerSeverity.Warning:\r\n                severityLabel = nls.localize('Warning', \"Warning\");\r\n                break;\r\n            case MarkerSeverity.Info:\r\n                severityLabel = nls.localize('Info', \"Info\");\r\n                break;\r\n            case MarkerSeverity.Hint:\r\n                severityLabel = nls.localize('Hint', \"Hint\");\r\n                break;\r\n        }\r\n        let ariaLabel = nls.localize('marker aria', \"{0} at {1}. \", severityLabel, marker.startLineNumber + ':' + marker.startColumn);\r\n        const model = this._editor.getModel();\r\n        if (model && (marker.startLineNumber <= model.getLineCount()) && (marker.startLineNumber >= 1)) {\r\n            const lineContent = model.getLineContent(marker.startLineNumber);\r\n            ariaLabel = `${lineContent}, ${ariaLabel}`;\r\n        }\r\n        return ariaLabel;\r\n    }\r\n}\r\nlet MarkerNavigationWidget = class MarkerNavigationWidget extends PeekViewWidget {\r\n    constructor(editor, _themeService, _openerService, _menuService, instantiationService, _contextKeyService, _labelService) {\r\n        super(editor, { showArrow: true, showFrame: true, isAccessible: true }, instantiationService);\r\n        this._themeService = _themeService;\r\n        this._openerService = _openerService;\r\n        this._menuService = _menuService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._labelService = _labelService;\r\n        this._callOnDispose = new DisposableStore();\r\n        this._onDidSelectRelatedInformation = new Emitter();\r\n        this.onDidSelectRelatedInformation = this._onDidSelectRelatedInformation.event;\r\n        this._severity = MarkerSeverity.Warning;\r\n        this._backgroundColor = Color.white;\r\n        this._applyTheme(_themeService.getColorTheme());\r\n        this._callOnDispose.add(_themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\r\n        this.create();\r\n    }\r\n    _applyTheme(theme) {\r\n        this._backgroundColor = theme.getColor(editorMarkerNavigationBackground);\r\n        let colorId = editorMarkerNavigationError;\r\n        if (this._severity === MarkerSeverity.Warning) {\r\n            colorId = editorMarkerNavigationWarning;\r\n        }\r\n        else if (this._severity === MarkerSeverity.Info) {\r\n            colorId = editorMarkerNavigationInfo;\r\n        }\r\n        const frameColor = theme.getColor(colorId);\r\n        this.style({\r\n            arrowColor: frameColor,\r\n            frameColor: frameColor,\r\n            headerBackgroundColor: this._backgroundColor,\r\n            primaryHeadingColor: theme.getColor(peekViewTitleForeground),\r\n            secondaryHeadingColor: theme.getColor(peekViewTitleInfoForeground)\r\n        }); // style() will trigger _applyStyles\r\n    }\r\n    _applyStyles() {\r\n        if (this._parentContainer) {\r\n            this._parentContainer.style.backgroundColor = this._backgroundColor ? this._backgroundColor.toString() : '';\r\n        }\r\n        super._applyStyles();\r\n    }\r\n    dispose() {\r\n        this._callOnDispose.dispose();\r\n        super.dispose();\r\n    }\r\n    _fillHead(container) {\r\n        super._fillHead(container);\r\n        this._disposables.add(this._actionbarWidget.actionRunner.onBeforeRun(e => this.editor.focus()));\r\n        const actions = [];\r\n        const menu = this._menuService.createMenu(MarkerNavigationWidget.TitleMenu, this._contextKeyService);\r\n        createAndFillInActionBarActions(menu, undefined, actions);\r\n        this._actionbarWidget.push(actions, { label: false, icon: true, index: 0 });\r\n        menu.dispose();\r\n    }\r\n    _fillTitleIcon(container) {\r\n        this._icon = dom.append(container, dom.$(''));\r\n    }\r\n    _fillBody(container) {\r\n        this._parentContainer = container;\r\n        container.classList.add('marker-widget');\r\n        this._parentContainer.tabIndex = 0;\r\n        this._parentContainer.setAttribute('role', 'tooltip');\r\n        this._container = document.createElement('div');\r\n        container.appendChild(this._container);\r\n        this._message = new MessageWidget(this._container, this.editor, related => this._onDidSelectRelatedInformation.fire(related), this._openerService, this._labelService);\r\n        this._disposables.add(this._message);\r\n    }\r\n    show() {\r\n        throw new Error('call showAtMarker');\r\n    }\r\n    showAtMarker(marker, markerIdx, markerCount) {\r\n        // update:\r\n        // * title\r\n        // * message\r\n        this._container.classList.remove('stale');\r\n        this._message.update(marker);\r\n        // update frame color (only applied on 'show')\r\n        this._severity = marker.severity;\r\n        this._applyTheme(this._themeService.getColorTheme());\r\n        // show\r\n        let range = Range.lift(marker);\r\n        const editorPosition = this.editor.getPosition();\r\n        let position = editorPosition && range.containsPosition(editorPosition) ? editorPosition : range.getStartPosition();\r\n        super.show(position, this.computeRequiredHeight());\r\n        const model = this.editor.getModel();\r\n        if (model) {\r\n            const detail = markerCount > 1\r\n                ? nls.localize('problems', \"{0} of {1} problems\", markerIdx, markerCount)\r\n                : nls.localize('change', \"{0} of {1} problem\", markerIdx, markerCount);\r\n            this.setTitle(basename(model.uri), detail);\r\n        }\r\n        this._icon.className = `codicon ${SeverityIcon.className(MarkerSeverity.toSeverity(this._severity))}`;\r\n        this.editor.revealPositionNearTop(position, 0 /* Smooth */);\r\n        this.editor.focus();\r\n    }\r\n    updateMarker(marker) {\r\n        this._container.classList.remove('stale');\r\n        this._message.update(marker);\r\n    }\r\n    showStale() {\r\n        this._container.classList.add('stale');\r\n        this._relayout();\r\n    }\r\n    _doLayoutBody(heightInPixel, widthInPixel) {\r\n        super._doLayoutBody(heightInPixel, widthInPixel);\r\n        this._heightInPixel = heightInPixel;\r\n        this._message.layout(heightInPixel, widthInPixel);\r\n        this._container.style.height = `${heightInPixel}px`;\r\n    }\r\n    _onWidth(widthInPixel) {\r\n        this._message.layout(this._heightInPixel, widthInPixel);\r\n    }\r\n    _relayout() {\r\n        super._relayout(this.computeRequiredHeight());\r\n    }\r\n    computeRequiredHeight() {\r\n        return 3 + this._message.getHeightInLines();\r\n    }\r\n};\r\nMarkerNavigationWidget.TitleMenu = new MenuId('gotoErrorTitleMenu');\r\nMarkerNavigationWidget = __decorate([\r\n    __param(1, IThemeService),\r\n    __param(2, IOpenerService),\r\n    __param(3, IMenuService),\r\n    __param(4, IInstantiationService),\r\n    __param(5, IContextKeyService),\r\n    __param(6, ILabelService)\r\n], MarkerNavigationWidget);\r\nexport { MarkerNavigationWidget };\r\n// theming\r\nlet errorDefault = oneOf(editorErrorForeground, editorErrorBorder);\r\nlet warningDefault = oneOf(editorWarningForeground, editorWarningBorder);\r\nlet infoDefault = oneOf(editorInfoForeground, editorInfoBorder);\r\nexport const editorMarkerNavigationError = registerColor('editorMarkerNavigationError.background', { dark: errorDefault, light: errorDefault, hc: errorDefault }, nls.localize('editorMarkerNavigationError', 'Editor marker navigation widget error color.'));\r\nexport const editorMarkerNavigationWarning = registerColor('editorMarkerNavigationWarning.background', { dark: warningDefault, light: warningDefault, hc: warningDefault }, nls.localize('editorMarkerNavigationWarning', 'Editor marker navigation widget warning color.'));\r\nexport const editorMarkerNavigationInfo = registerColor('editorMarkerNavigationInfo.background', { dark: infoDefault, light: infoDefault, hc: infoDefault }, nls.localize('editorMarkerNavigationInfo', 'Editor marker navigation widget info color.'));\r\nexport const editorMarkerNavigationBackground = registerColor('editorMarkerNavigation.background', { dark: '#2D2D30', light: Color.white, hc: '#0C141F' }, nls.localize('editorMarkerNavigationBackground', 'Editor marker navigation widget background.'));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const linkFg = theme.getColor(textLinkForeground);\r\n    if (linkFg) {\r\n        collector.addRule(`.monaco-editor .marker-widget a { color: ${linkFg}; }`);\r\n        collector.addRule(`.monaco-editor .marker-widget a.code-link span:hover { color: ${linkFg}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { URI } from './uri.js';\r\nimport { Schemas } from './network.js';\r\nimport { isWindows } from './platform.js';\r\nimport { basename } from './resources.js';\r\nimport { hasDriveLetter, isRootOrDriveLetter } from './extpath.js';\r\nexport function getBaseLabel(resource) {\r\n    if (!resource) {\r\n        return undefined;\r\n    }\r\n    if (typeof resource === 'string') {\r\n        resource = URI.file(resource);\r\n    }\r\n    const base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\r\n    // convert c: => C:\r\n    if (isWindows && isRootOrDriveLetter(base)) {\r\n        return normalizeDriveLetter(base);\r\n    }\r\n    return base;\r\n}\r\nexport function normalizeDriveLetter(path) {\r\n    if (hasDriveLetter(path)) {\r\n        return path.charAt(0).toUpperCase() + path.slice(1);\r\n    }\r\n    return path;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './media/peekViewWidget.css';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\r\nimport { Action } from '../../../base/common/actions.js';\r\nimport { Color } from '../../../base/common/color.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { EmbeddedCodeEditorWidget } from '../../browser/widget/embeddedCodeEditorWidget.js';\r\nimport { ZoneWidget } from '../zoneWidget/zoneWidget.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { createDecorator, IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { registerColor, contrastBorder, activeContrastBorder } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { createActionViewItem } from '../../../platform/actions/browser/menuEntryActionViewItem.js';\r\nexport const IPeekViewService = createDecorator('IPeekViewService');\r\nregisterSingleton(IPeekViewService, class {\r\n    constructor() {\r\n        this._widgets = new Map();\r\n    }\r\n    addExclusiveWidget(editor, widget) {\r\n        const existing = this._widgets.get(editor);\r\n        if (existing) {\r\n            existing.listener.dispose();\r\n            existing.widget.dispose();\r\n        }\r\n        const remove = () => {\r\n            const data = this._widgets.get(editor);\r\n            if (data && data.widget === widget) {\r\n                data.listener.dispose();\r\n                this._widgets.delete(editor);\r\n            }\r\n        };\r\n        this._widgets.set(editor, { widget, listener: widget.onDidClose(remove) });\r\n    }\r\n});\r\nexport var PeekContext;\r\n(function (PeekContext) {\r\n    PeekContext.inPeekEditor = new RawContextKey('inReferenceSearchEditor', true, nls.localize('inReferenceSearchEditor', \"Whether the current code editor is embedded inside peek\"));\r\n    PeekContext.notInPeekEditor = PeekContext.inPeekEditor.toNegated();\r\n})(PeekContext || (PeekContext = {}));\r\nlet PeekContextController = class PeekContextController {\r\n    constructor(editor, contextKeyService) {\r\n        if (editor instanceof EmbeddedCodeEditorWidget) {\r\n            PeekContext.inPeekEditor.bindTo(contextKeyService);\r\n        }\r\n    }\r\n    dispose() { }\r\n};\r\nPeekContextController.ID = 'editor.contrib.referenceController';\r\nPeekContextController = __decorate([\r\n    __param(1, IContextKeyService)\r\n], PeekContextController);\r\nregisterEditorContribution(PeekContextController.ID, PeekContextController);\r\nexport function getOuterEditor(accessor) {\r\n    let editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\r\n    if (editor instanceof EmbeddedCodeEditorWidget) {\r\n        return editor.getParentEditor();\r\n    }\r\n    return editor;\r\n}\r\nconst defaultOptions = {\r\n    headerBackgroundColor: Color.white,\r\n    primaryHeadingColor: Color.fromHex('#333333'),\r\n    secondaryHeadingColor: Color.fromHex('#6c6c6cb3')\r\n};\r\nlet PeekViewWidget = class PeekViewWidget extends ZoneWidget {\r\n    constructor(editor, options, instantiationService) {\r\n        super(editor, options);\r\n        this.instantiationService = instantiationService;\r\n        this._onDidClose = new Emitter();\r\n        this.onDidClose = this._onDidClose.event;\r\n        objects.mixin(this.options, defaultOptions, false);\r\n    }\r\n    dispose() {\r\n        if (!this.disposed) {\r\n            this.disposed = true; // prevent consumers who dispose on onDidClose from looping\r\n            super.dispose();\r\n            this._onDidClose.fire(this);\r\n        }\r\n    }\r\n    style(styles) {\r\n        let options = this.options;\r\n        if (styles.headerBackgroundColor) {\r\n            options.headerBackgroundColor = styles.headerBackgroundColor;\r\n        }\r\n        if (styles.primaryHeadingColor) {\r\n            options.primaryHeadingColor = styles.primaryHeadingColor;\r\n        }\r\n        if (styles.secondaryHeadingColor) {\r\n            options.secondaryHeadingColor = styles.secondaryHeadingColor;\r\n        }\r\n        super.style(styles);\r\n    }\r\n    _applyStyles() {\r\n        super._applyStyles();\r\n        let options = this.options;\r\n        if (this._headElement && options.headerBackgroundColor) {\r\n            this._headElement.style.backgroundColor = options.headerBackgroundColor.toString();\r\n        }\r\n        if (this._primaryHeading && options.primaryHeadingColor) {\r\n            this._primaryHeading.style.color = options.primaryHeadingColor.toString();\r\n        }\r\n        if (this._secondaryHeading && options.secondaryHeadingColor) {\r\n            this._secondaryHeading.style.color = options.secondaryHeadingColor.toString();\r\n        }\r\n        if (this._bodyElement && options.frameColor) {\r\n            this._bodyElement.style.borderColor = options.frameColor.toString();\r\n        }\r\n    }\r\n    _fillContainer(container) {\r\n        this.setCssClass('peekview-widget');\r\n        this._headElement = dom.$('.head');\r\n        this._bodyElement = dom.$('.body');\r\n        this._fillHead(this._headElement);\r\n        this._fillBody(this._bodyElement);\r\n        container.appendChild(this._headElement);\r\n        container.appendChild(this._bodyElement);\r\n    }\r\n    _fillHead(container, noCloseAction) {\r\n        const titleElement = dom.$('.peekview-title');\r\n        dom.append(this._headElement, titleElement);\r\n        dom.addStandardDisposableListener(titleElement, 'click', event => this._onTitleClick(event));\r\n        this._fillTitleIcon(titleElement);\r\n        this._primaryHeading = dom.$('span.filename');\r\n        this._secondaryHeading = dom.$('span.dirname');\r\n        this._metaHeading = dom.$('span.meta');\r\n        dom.append(titleElement, this._primaryHeading, this._secondaryHeading, this._metaHeading);\r\n        const actionsContainer = dom.$('.peekview-actions');\r\n        dom.append(this._headElement, actionsContainer);\r\n        const actionBarOptions = this._getActionBarOptions();\r\n        this._actionbarWidget = new ActionBar(actionsContainer, actionBarOptions);\r\n        this._disposables.add(this._actionbarWidget);\r\n        if (!noCloseAction) {\r\n            this._actionbarWidget.push(new Action('peekview.close', nls.localize('label.close', \"Close\"), Codicon.close.classNames, true, () => {\r\n                this.dispose();\r\n                return Promise.resolve();\r\n            }), { label: false, icon: true });\r\n        }\r\n    }\r\n    _fillTitleIcon(container) {\r\n    }\r\n    _getActionBarOptions() {\r\n        return {\r\n            actionViewItemProvider: createActionViewItem.bind(undefined, this.instantiationService),\r\n            orientation: 0 /* HORIZONTAL */\r\n        };\r\n    }\r\n    _onTitleClick(event) {\r\n        // implement me\r\n    }\r\n    setTitle(primaryHeading, secondaryHeading) {\r\n        if (this._primaryHeading && this._secondaryHeading) {\r\n            this._primaryHeading.innerText = primaryHeading;\r\n            this._primaryHeading.setAttribute('title', primaryHeading);\r\n            if (secondaryHeading) {\r\n                this._secondaryHeading.innerText = secondaryHeading;\r\n            }\r\n            else {\r\n                dom.clearNode(this._secondaryHeading);\r\n            }\r\n        }\r\n    }\r\n    setMetaTitle(value) {\r\n        if (this._metaHeading) {\r\n            if (value) {\r\n                this._metaHeading.innerText = value;\r\n                dom.show(this._metaHeading);\r\n            }\r\n            else {\r\n                dom.hide(this._metaHeading);\r\n            }\r\n        }\r\n    }\r\n    _doLayout(heightInPixel, widthInPixel) {\r\n        if (!this._isShowing && heightInPixel < 0) {\r\n            // Looks like the view zone got folded away!\r\n            this.dispose();\r\n            return;\r\n        }\r\n        const headHeight = Math.ceil(this.editor.getOption(56 /* lineHeight */) * 1.2);\r\n        const bodyHeight = Math.round(heightInPixel - (headHeight + 2 /* the border-top/bottom width*/));\r\n        this._doLayoutHead(headHeight, widthInPixel);\r\n        this._doLayoutBody(bodyHeight, widthInPixel);\r\n    }\r\n    _doLayoutHead(heightInPixel, widthInPixel) {\r\n        if (this._headElement) {\r\n            this._headElement.style.height = `${heightInPixel}px`;\r\n            this._headElement.style.lineHeight = this._headElement.style.height;\r\n        }\r\n    }\r\n    _doLayoutBody(heightInPixel, widthInPixel) {\r\n        if (this._bodyElement) {\r\n            this._bodyElement.style.height = `${heightInPixel}px`;\r\n        }\r\n    }\r\n};\r\nPeekViewWidget = __decorate([\r\n    __param(2, IInstantiationService)\r\n], PeekViewWidget);\r\nexport { PeekViewWidget };\r\nexport const peekViewTitleBackground = registerColor('peekViewTitle.background', { dark: '#1E1E1E', light: '#FFFFFF', hc: '#0C141F' }, nls.localize('peekViewTitleBackground', 'Background color of the peek view title area.'));\r\nexport const peekViewTitleForeground = registerColor('peekViewTitleLabel.foreground', { dark: '#FFFFFF', light: '#333333', hc: '#FFFFFF' }, nls.localize('peekViewTitleForeground', 'Color of the peek view title.'));\r\nexport const peekViewTitleInfoForeground = registerColor('peekViewTitleDescription.foreground', { dark: '#ccccccb3', light: '#616161e6', hc: '#FFFFFF99' }, nls.localize('peekViewTitleInfoForeground', 'Color of the peek view title info.'));\r\nexport const peekViewBorder = registerColor('peekView.border', { dark: '#007acc', light: '#007acc', hc: contrastBorder }, nls.localize('peekViewBorder', 'Color of the peek view borders and arrow.'));\r\nexport const peekViewResultsBackground = registerColor('peekViewResult.background', { dark: '#252526', light: '#F3F3F3', hc: Color.black }, nls.localize('peekViewResultsBackground', 'Background color of the peek view result list.'));\r\nexport const peekViewResultsMatchForeground = registerColor('peekViewResult.lineForeground', { dark: '#bbbbbb', light: '#646465', hc: Color.white }, nls.localize('peekViewResultsMatchForeground', 'Foreground color for line nodes in the peek view result list.'));\r\nexport const peekViewResultsFileForeground = registerColor('peekViewResult.fileForeground', { dark: Color.white, light: '#1E1E1E', hc: Color.white }, nls.localize('peekViewResultsFileForeground', 'Foreground color for file nodes in the peek view result list.'));\r\nexport const peekViewResultsSelectionBackground = registerColor('peekViewResult.selectionBackground', { dark: '#3399ff33', light: '#3399ff33', hc: null }, nls.localize('peekViewResultsSelectionBackground', 'Background color of the selected entry in the peek view result list.'));\r\nexport const peekViewResultsSelectionForeground = registerColor('peekViewResult.selectionForeground', { dark: Color.white, light: '#6C6C6C', hc: Color.white }, nls.localize('peekViewResultsSelectionForeground', 'Foreground color of the selected entry in the peek view result list.'));\r\nexport const peekViewEditorBackground = registerColor('peekViewEditor.background', { dark: '#001F33', light: '#F2F8FC', hc: Color.black }, nls.localize('peekViewEditorBackground', 'Background color of the peek view editor.'));\r\nexport const peekViewEditorGutterBackground = registerColor('peekViewEditorGutter.background', { dark: peekViewEditorBackground, light: peekViewEditorBackground, hc: peekViewEditorBackground }, nls.localize('peekViewEditorGutterBackground', 'Background color of the gutter in the peek view editor.'));\r\nexport const peekViewResultsMatchHighlight = registerColor('peekViewResult.matchHighlightBackground', { dark: '#ea5c004d', light: '#ea5c004d', hc: null }, nls.localize('peekViewResultsMatchHighlight', 'Match highlight color in the peek view result list.'));\r\nexport const peekViewEditorMatchHighlight = registerColor('peekViewEditor.matchHighlightBackground', { dark: '#ff8f0099', light: '#f5d802de', hc: null }, nls.localize('peekViewEditorMatchHighlight', 'Match highlight color in the peek view editor.'));\r\nexport const peekViewEditorMatchHighlightBorder = registerColor('peekViewEditor.matchHighlightBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('peekViewEditorMatchHighlightBorder', 'Match highlight border in the peek view editor.'));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { ICodeEditorService } from '../services/codeEditorService.js';\r\nimport { CodeEditorWidget } from './codeEditorWidget.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\r\nlet EmbeddedCodeEditorWidget = class EmbeddedCodeEditorWidget extends CodeEditorWidget {\r\n    constructor(domElement, options, parentEditor, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService) {\r\n        super(domElement, Object.assign(Object.assign({}, parentEditor.getRawOptions()), { overflowWidgetsDomNode: parentEditor.getOverflowWidgetsDomNode() }), {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService);\r\n        this._parentEditor = parentEditor;\r\n        this._overwriteOptions = options;\r\n        // Overwrite parent's options\r\n        super.updateOptions(this._overwriteOptions);\r\n        this._register(parentEditor.onDidChangeConfiguration((e) => this._onParentConfigurationChanged(e)));\r\n    }\r\n    getParentEditor() {\r\n        return this._parentEditor;\r\n    }\r\n    _onParentConfigurationChanged(e) {\r\n        super.updateOptions(this._parentEditor.getRawOptions());\r\n        super.updateOptions(this._overwriteOptions);\r\n    }\r\n    updateOptions(newOptions) {\r\n        objects.mixin(this._overwriteOptions, newOptions, true);\r\n        super.updateOptions(this._overwriteOptions);\r\n    }\r\n};\r\nEmbeddedCodeEditorWidget = __decorate([\r\n    __param(3, IInstantiationService),\r\n    __param(4, ICodeEditorService),\r\n    __param(5, ICommandService),\r\n    __param(6, IContextKeyService),\r\n    __param(7, IThemeService),\r\n    __param(8, INotificationService),\r\n    __param(9, IAccessibilityService)\r\n], EmbeddedCodeEditorWidget);\r\nexport { EmbeddedCodeEditorWidget };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './zoneWidget.css';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\r\nimport { Color, RGBA } from '../../../base/common/color.js';\r\nimport { IdGenerator } from '../../../base/common/idGenerator.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport * as objects from '../../../base/common/objects.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nconst defaultColor = new Color(new RGBA(0, 122, 204));\r\nconst defaultOptions = {\r\n    showArrow: true,\r\n    showFrame: true,\r\n    className: '',\r\n    frameColor: defaultColor,\r\n    arrowColor: defaultColor,\r\n    keepEditorSelection: false\r\n};\r\nconst WIDGET_ID = 'vs.editor.contrib.zoneWidget';\r\nexport class ViewZoneDelegate {\r\n    constructor(domNode, afterLineNumber, afterColumn, heightInLines, onDomNodeTop, onComputedHeight) {\r\n        this.id = ''; // A valid zone id should be greater than 0\r\n        this.domNode = domNode;\r\n        this.afterLineNumber = afterLineNumber;\r\n        this.afterColumn = afterColumn;\r\n        this.heightInLines = heightInLines;\r\n        this._onDomNodeTop = onDomNodeTop;\r\n        this._onComputedHeight = onComputedHeight;\r\n    }\r\n    onDomNodeTop(top) {\r\n        this._onDomNodeTop(top);\r\n    }\r\n    onComputedHeight(height) {\r\n        this._onComputedHeight(height);\r\n    }\r\n}\r\nexport class OverlayWidgetDelegate {\r\n    constructor(id, domNode) {\r\n        this._id = id;\r\n        this._domNode = domNode;\r\n    }\r\n    getId() {\r\n        return this._id;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return null;\r\n    }\r\n}\r\nclass Arrow {\r\n    constructor(_editor) {\r\n        this._editor = _editor;\r\n        this._ruleName = Arrow._IdGenerator.nextId();\r\n        this._decorations = [];\r\n        this._color = null;\r\n        this._height = -1;\r\n        //\r\n    }\r\n    dispose() {\r\n        this.hide();\r\n        dom.removeCSSRulesContainingSelector(this._ruleName);\r\n    }\r\n    set color(value) {\r\n        if (this._color !== value) {\r\n            this._color = value;\r\n            this._updateStyle();\r\n        }\r\n    }\r\n    set height(value) {\r\n        if (this._height !== value) {\r\n            this._height = value;\r\n            this._updateStyle();\r\n        }\r\n    }\r\n    _updateStyle() {\r\n        dom.removeCSSRulesContainingSelector(this._ruleName);\r\n        dom.createCSSRule(`.monaco-editor ${this._ruleName}`, `border-style: solid; border-color: transparent; border-bottom-color: ${this._color}; border-width: ${this._height}px; bottom: -${this._height}px; margin-left: -${this._height}px; `);\r\n    }\r\n    show(where) {\r\n        this._decorations = this._editor.deltaDecorations(this._decorations, [{ range: Range.fromPositions(where), options: { description: 'zone-widget-arrow', className: this._ruleName, stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ } }]);\r\n    }\r\n    hide() {\r\n        this._editor.deltaDecorations(this._decorations, []);\r\n    }\r\n}\r\nArrow._IdGenerator = new IdGenerator('.arrow-decoration-');\r\nexport class ZoneWidget {\r\n    constructor(editor, options = {}) {\r\n        this._arrow = null;\r\n        this._overlayWidget = null;\r\n        this._resizeSash = null;\r\n        this._positionMarkerId = [];\r\n        this._viewZone = null;\r\n        this._disposables = new DisposableStore();\r\n        this.container = null;\r\n        this._isShowing = false;\r\n        this.editor = editor;\r\n        this.options = objects.deepClone(options);\r\n        objects.mixin(this.options, defaultOptions, false);\r\n        this.domNode = document.createElement('div');\r\n        if (!this.options.isAccessible) {\r\n            this.domNode.setAttribute('aria-hidden', 'true');\r\n            this.domNode.setAttribute('role', 'presentation');\r\n        }\r\n        this._disposables.add(this.editor.onDidLayoutChange((info) => {\r\n            const width = this._getWidth(info);\r\n            this.domNode.style.width = width + 'px';\r\n            this.domNode.style.left = this._getLeft(info) + 'px';\r\n            this._onWidth(width);\r\n        }));\r\n    }\r\n    dispose() {\r\n        if (this._overlayWidget) {\r\n            this.editor.removeOverlayWidget(this._overlayWidget);\r\n            this._overlayWidget = null;\r\n        }\r\n        if (this._viewZone) {\r\n            this.editor.changeViewZones(accessor => {\r\n                if (this._viewZone) {\r\n                    accessor.removeZone(this._viewZone.id);\r\n                }\r\n                this._viewZone = null;\r\n            });\r\n        }\r\n        this.editor.deltaDecorations(this._positionMarkerId, []);\r\n        this._positionMarkerId = [];\r\n        this._disposables.dispose();\r\n    }\r\n    create() {\r\n        this.domNode.classList.add('zone-widget');\r\n        if (this.options.className) {\r\n            this.domNode.classList.add(this.options.className);\r\n        }\r\n        this.container = document.createElement('div');\r\n        this.container.classList.add('zone-widget-container');\r\n        this.domNode.appendChild(this.container);\r\n        if (this.options.showArrow) {\r\n            this._arrow = new Arrow(this.editor);\r\n            this._disposables.add(this._arrow);\r\n        }\r\n        this._fillContainer(this.container);\r\n        this._initSash();\r\n        this._applyStyles();\r\n    }\r\n    style(styles) {\r\n        if (styles.frameColor) {\r\n            this.options.frameColor = styles.frameColor;\r\n        }\r\n        if (styles.arrowColor) {\r\n            this.options.arrowColor = styles.arrowColor;\r\n        }\r\n        this._applyStyles();\r\n    }\r\n    _applyStyles() {\r\n        if (this.container && this.options.frameColor) {\r\n            let frameColor = this.options.frameColor.toString();\r\n            this.container.style.borderTopColor = frameColor;\r\n            this.container.style.borderBottomColor = frameColor;\r\n        }\r\n        if (this._arrow && this.options.arrowColor) {\r\n            let arrowColor = this.options.arrowColor.toString();\r\n            this._arrow.color = arrowColor;\r\n        }\r\n    }\r\n    _getWidth(info) {\r\n        return info.width - info.minimap.minimapWidth - info.verticalScrollbarWidth;\r\n    }\r\n    _getLeft(info) {\r\n        // If minimap is to the left, we move beyond it\r\n        if (info.minimap.minimapWidth > 0 && info.minimap.minimapLeft === 0) {\r\n            return info.minimap.minimapWidth;\r\n        }\r\n        return 0;\r\n    }\r\n    _onViewZoneTop(top) {\r\n        this.domNode.style.top = top + 'px';\r\n    }\r\n    _onViewZoneHeight(height) {\r\n        this.domNode.style.height = `${height}px`;\r\n        if (this.container) {\r\n            let containerHeight = height - this._decoratingElementsHeight();\r\n            this.container.style.height = `${containerHeight}px`;\r\n            const layoutInfo = this.editor.getLayoutInfo();\r\n            this._doLayout(containerHeight, this._getWidth(layoutInfo));\r\n        }\r\n        if (this._resizeSash) {\r\n            this._resizeSash.layout();\r\n        }\r\n    }\r\n    get position() {\r\n        const [id] = this._positionMarkerId;\r\n        if (!id) {\r\n            return undefined;\r\n        }\r\n        const model = this.editor.getModel();\r\n        if (!model) {\r\n            return undefined;\r\n        }\r\n        const range = model.getDecorationRange(id);\r\n        if (!range) {\r\n            return undefined;\r\n        }\r\n        return range.getStartPosition();\r\n    }\r\n    show(rangeOrPos, heightInLines) {\r\n        const range = Range.isIRange(rangeOrPos) ? Range.lift(rangeOrPos) : Range.fromPositions(rangeOrPos);\r\n        this._isShowing = true;\r\n        this._showImpl(range, heightInLines);\r\n        this._isShowing = false;\r\n        this._positionMarkerId = this.editor.deltaDecorations(this._positionMarkerId, [{ range, options: ModelDecorationOptions.EMPTY }]);\r\n    }\r\n    hide() {\r\n        if (this._viewZone) {\r\n            this.editor.changeViewZones(accessor => {\r\n                if (this._viewZone) {\r\n                    accessor.removeZone(this._viewZone.id);\r\n                }\r\n            });\r\n            this._viewZone = null;\r\n        }\r\n        if (this._overlayWidget) {\r\n            this.editor.removeOverlayWidget(this._overlayWidget);\r\n            this._overlayWidget = null;\r\n        }\r\n        if (this._arrow) {\r\n            this._arrow.hide();\r\n        }\r\n    }\r\n    _decoratingElementsHeight() {\r\n        let lineHeight = this.editor.getOption(56 /* lineHeight */);\r\n        let result = 0;\r\n        if (this.options.showArrow) {\r\n            let arrowHeight = Math.round(lineHeight / 3);\r\n            result += 2 * arrowHeight;\r\n        }\r\n        if (this.options.showFrame) {\r\n            let frameThickness = Math.round(lineHeight / 9);\r\n            result += 2 * frameThickness;\r\n        }\r\n        return result;\r\n    }\r\n    _showImpl(where, heightInLines) {\r\n        const position = where.getStartPosition();\r\n        const layoutInfo = this.editor.getLayoutInfo();\r\n        const width = this._getWidth(layoutInfo);\r\n        this.domNode.style.width = `${width}px`;\r\n        this.domNode.style.left = this._getLeft(layoutInfo) + 'px';\r\n        // Render the widget as zone (rendering) and widget (lifecycle)\r\n        const viewZoneDomNode = document.createElement('div');\r\n        viewZoneDomNode.style.overflow = 'hidden';\r\n        const lineHeight = this.editor.getOption(56 /* lineHeight */);\r\n        // adjust heightInLines to viewport\r\n        const maxHeightInLines = Math.max(12, (this.editor.getLayoutInfo().height / lineHeight) * 0.8);\r\n        heightInLines = Math.min(heightInLines, maxHeightInLines);\r\n        let arrowHeight = 0;\r\n        let frameThickness = 0;\r\n        // Render the arrow one 1/3 of an editor line height\r\n        if (this._arrow && this.options.showArrow) {\r\n            arrowHeight = Math.round(lineHeight / 3);\r\n            this._arrow.height = arrowHeight;\r\n            this._arrow.show(position);\r\n        }\r\n        // Render the frame as 1/9 of an editor line height\r\n        if (this.options.showFrame) {\r\n            frameThickness = Math.round(lineHeight / 9);\r\n        }\r\n        // insert zone widget\r\n        this.editor.changeViewZones((accessor) => {\r\n            if (this._viewZone) {\r\n                accessor.removeZone(this._viewZone.id);\r\n            }\r\n            if (this._overlayWidget) {\r\n                this.editor.removeOverlayWidget(this._overlayWidget);\r\n                this._overlayWidget = null;\r\n            }\r\n            this.domNode.style.top = '-1000px';\r\n            this._viewZone = new ViewZoneDelegate(viewZoneDomNode, position.lineNumber, position.column, heightInLines, (top) => this._onViewZoneTop(top), (height) => this._onViewZoneHeight(height));\r\n            this._viewZone.id = accessor.addZone(this._viewZone);\r\n            this._overlayWidget = new OverlayWidgetDelegate(WIDGET_ID + this._viewZone.id, this.domNode);\r\n            this.editor.addOverlayWidget(this._overlayWidget);\r\n        });\r\n        if (this.container && this.options.showFrame) {\r\n            const width = this.options.frameWidth ? this.options.frameWidth : frameThickness;\r\n            this.container.style.borderTopWidth = width + 'px';\r\n            this.container.style.borderBottomWidth = width + 'px';\r\n        }\r\n        let containerHeight = heightInLines * lineHeight - this._decoratingElementsHeight();\r\n        if (this.container) {\r\n            this.container.style.top = arrowHeight + 'px';\r\n            this.container.style.height = containerHeight + 'px';\r\n            this.container.style.overflow = 'hidden';\r\n        }\r\n        this._doLayout(containerHeight, width);\r\n        if (!this.options.keepEditorSelection) {\r\n            this.editor.setSelection(where);\r\n        }\r\n        const model = this.editor.getModel();\r\n        if (model) {\r\n            const revealLine = where.endLineNumber + 1;\r\n            if (revealLine <= model.getLineCount()) {\r\n                // reveal line below the zone widget\r\n                this.revealLine(revealLine, false);\r\n            }\r\n            else {\r\n                // reveal last line atop\r\n                this.revealLine(model.getLineCount(), true);\r\n            }\r\n        }\r\n    }\r\n    revealLine(lineNumber, isLastLine) {\r\n        if (isLastLine) {\r\n            this.editor.revealLineInCenter(lineNumber, 0 /* Smooth */);\r\n        }\r\n        else {\r\n            this.editor.revealLine(lineNumber, 0 /* Smooth */);\r\n        }\r\n    }\r\n    setCssClass(className, classToReplace) {\r\n        if (!this.container) {\r\n            return;\r\n        }\r\n        if (classToReplace) {\r\n            this.container.classList.remove(classToReplace);\r\n        }\r\n        this.container.classList.add(className);\r\n    }\r\n    _onWidth(widthInPixel) {\r\n        // implement in subclass\r\n    }\r\n    _doLayout(heightInPixel, widthInPixel) {\r\n        // implement in subclass\r\n    }\r\n    _relayout(newHeightInLines) {\r\n        if (this._viewZone && this._viewZone.heightInLines !== newHeightInLines) {\r\n            this.editor.changeViewZones(accessor => {\r\n                if (this._viewZone) {\r\n                    this._viewZone.heightInLines = newHeightInLines;\r\n                    accessor.layoutZone(this._viewZone.id);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    // --- sash\r\n    _initSash() {\r\n        if (this._resizeSash) {\r\n            return;\r\n        }\r\n        this._resizeSash = this._disposables.add(new Sash(this.domNode, this, { orientation: 1 /* HORIZONTAL */ }));\r\n        if (!this.options.isResizeable) {\r\n            this._resizeSash.hide();\r\n            this._resizeSash.state = 0 /* Disabled */;\r\n        }\r\n        let data;\r\n        this._disposables.add(this._resizeSash.onDidStart((e) => {\r\n            if (this._viewZone) {\r\n                data = {\r\n                    startY: e.startY,\r\n                    heightInLines: this._viewZone.heightInLines,\r\n                };\r\n            }\r\n        }));\r\n        this._disposables.add(this._resizeSash.onDidEnd(() => {\r\n            data = undefined;\r\n        }));\r\n        this._disposables.add(this._resizeSash.onDidChange((evt) => {\r\n            if (data) {\r\n                let lineDelta = (evt.currentY - data.startY) / this.editor.getOption(56 /* lineHeight */);\r\n                let roundedLineDelta = lineDelta < 0 ? Math.ceil(lineDelta) : Math.floor(lineDelta);\r\n                let newHeightInLines = data.heightInLines + roundedLineDelta;\r\n                if (newHeightInLines > 5 && newHeightInLines < 35) {\r\n                    this._relayout(newHeightInLines);\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    getHorizontalSashLeft() {\r\n        return 0;\r\n    }\r\n    getHorizontalSashTop() {\r\n        return (this.domNode.style.height === null ? 0 : parseInt(this.domNode.style.height)) - (this._decoratingElementsHeight() / 2);\r\n    }\r\n    getHorizontalSashWidth() {\r\n        const layoutInfo = this.editor.getLayoutInfo();\r\n        return layoutInfo.width - layoutInfo.minimap.minimapWidth;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './menuEntryActionViewItem.css';\r\nimport { addDisposableListener, asCSSUrl, ModifierKeyEmitter } from '../../../base/browser/dom.js';\r\nimport { Separator, SubmenuAction } from '../../../base/common/actions.js';\r\nimport { toDisposable, MutableDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { MenuItemAction, SubmenuItemAction } from '../common/actions.js';\r\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\r\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\r\nimport { UILabelProvider } from '../../../base/common/keybindingLabels.js';\r\nimport { INotificationService } from '../../notification/common/notification.js';\r\nimport { ThemeIcon } from '../../theme/common/themeService.js';\r\nimport { ActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\r\nimport { DropdownMenuActionViewItem } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\r\nimport { isWindows, isLinux, OS } from '../../../base/common/platform.js';\r\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\r\nexport function createAndFillInActionBarActions(menu, options, target, primaryGroup, primaryMaxCount, shouldInlineSubmenu, useSeparatorsInPrimaryActions) {\r\n    const groups = menu.getActions(options);\r\n    const isPrimaryAction = typeof primaryGroup === 'string' ? (actionGroup) => actionGroup === primaryGroup : primaryGroup;\r\n    // Action bars handle alternative actions on their own so the alternative actions should be ignored\r\n    fillInActions(groups, target, false, isPrimaryAction, primaryMaxCount, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\r\n    return asDisposable(groups);\r\n}\r\nfunction asDisposable(groups) {\r\n    const disposables = new DisposableStore();\r\n    for (const [, actions] of groups) {\r\n        for (const action of actions) {\r\n            disposables.add(action);\r\n        }\r\n    }\r\n    return disposables;\r\n}\r\nfunction fillInActions(groups, target, useAlternativeActions, isPrimaryAction = actionGroup => actionGroup === 'navigation', primaryMaxCount = Number.MAX_SAFE_INTEGER, shouldInlineSubmenu = () => false, useSeparatorsInPrimaryActions = false) {\r\n    let primaryBucket;\r\n    let secondaryBucket;\r\n    if (Array.isArray(target)) {\r\n        primaryBucket = target;\r\n        secondaryBucket = target;\r\n    }\r\n    else {\r\n        primaryBucket = target.primary;\r\n        secondaryBucket = target.secondary;\r\n    }\r\n    const submenuInfo = new Set();\r\n    for (const [group, actions] of groups) {\r\n        let target;\r\n        if (isPrimaryAction(group)) {\r\n            target = primaryBucket;\r\n            if (target.length > 0 && useSeparatorsInPrimaryActions) {\r\n                target.push(new Separator());\r\n            }\r\n        }\r\n        else {\r\n            target = secondaryBucket;\r\n            if (target.length > 0) {\r\n                target.push(new Separator());\r\n            }\r\n        }\r\n        for (let action of actions) {\r\n            if (useAlternativeActions) {\r\n                action = action instanceof MenuItemAction && action.alt ? action.alt : action;\r\n            }\r\n            const newLen = target.push(action);\r\n            // keep submenu info for later inlining\r\n            if (action instanceof SubmenuAction) {\r\n                submenuInfo.add({ group, action, index: newLen - 1 });\r\n            }\r\n        }\r\n    }\r\n    // ask the outside if submenu should be inlined or not. only ask when\r\n    // there would be enough space\r\n    for (const { group, action, index } of submenuInfo) {\r\n        const target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\r\n        // inlining submenus with length 0 or 1 is easy,\r\n        // larger submenus need to be checked with the overall limit\r\n        const submenuActions = action.actions;\r\n        if ((submenuActions.length <= 1 || target.length + submenuActions.length - 2 <= primaryMaxCount) && shouldInlineSubmenu(action, group, target.length)) {\r\n            target.splice(index, 1, ...submenuActions);\r\n        }\r\n    }\r\n    // overflow items from the primary group into the secondary bucket\r\n    if (primaryBucket !== secondaryBucket && primaryBucket.length > primaryMaxCount) {\r\n        const overflow = primaryBucket.splice(primaryMaxCount, primaryBucket.length - primaryMaxCount);\r\n        secondaryBucket.unshift(...overflow, new Separator());\r\n    }\r\n}\r\nlet MenuEntryActionViewItem = class MenuEntryActionViewItem extends ActionViewItem {\r\n    constructor(_action, options, _keybindingService, _notificationService, _contextKeyService) {\r\n        super(undefined, _action, { icon: !!(_action.class || _action.item.icon), label: !_action.class && !_action.item.icon, draggable: options === null || options === void 0 ? void 0 : options.draggable });\r\n        this._keybindingService = _keybindingService;\r\n        this._notificationService = _notificationService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._wantsAltCommand = false;\r\n        this._itemClassDispose = this._register(new MutableDisposable());\r\n        this._altKey = ModifierKeyEmitter.getInstance();\r\n    }\r\n    get _menuItemAction() {\r\n        return this._action;\r\n    }\r\n    get _commandAction() {\r\n        return this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\r\n    }\r\n    onClick(event) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            try {\r\n                yield this.actionRunner.run(this._commandAction, this._context);\r\n            }\r\n            catch (err) {\r\n                this._notificationService.error(err);\r\n            }\r\n        });\r\n    }\r\n    render(container) {\r\n        super.render(container);\r\n        container.classList.add('menu-entry');\r\n        this._updateItemClass(this._menuItemAction.item);\r\n        let mouseOver = false;\r\n        let alternativeKeyDown = this._altKey.keyStatus.altKey || ((isWindows || isLinux) && this._altKey.keyStatus.shiftKey);\r\n        const updateAltState = () => {\r\n            const wantsAltCommand = mouseOver && alternativeKeyDown;\r\n            if (wantsAltCommand !== this._wantsAltCommand) {\r\n                this._wantsAltCommand = wantsAltCommand;\r\n                this.updateLabel();\r\n                this.updateTooltip();\r\n                this.updateClass();\r\n            }\r\n        };\r\n        if (this._menuItemAction.alt) {\r\n            this._register(this._altKey.event(value => {\r\n                alternativeKeyDown = value.altKey || ((isWindows || isLinux) && value.shiftKey);\r\n                updateAltState();\r\n            }));\r\n        }\r\n        this._register(addDisposableListener(container, 'mouseleave', _ => {\r\n            mouseOver = false;\r\n            updateAltState();\r\n        }));\r\n        this._register(addDisposableListener(container, 'mouseenter', _ => {\r\n            mouseOver = true;\r\n            updateAltState();\r\n        }));\r\n    }\r\n    updateLabel() {\r\n        if (this.options.label && this.label) {\r\n            this.label.textContent = this._commandAction.label;\r\n        }\r\n    }\r\n    updateTooltip() {\r\n        if (this.label) {\r\n            const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);\r\n            const keybindingLabel = keybinding && keybinding.getLabel();\r\n            const tooltip = this._commandAction.tooltip || this._commandAction.label;\r\n            let title = keybindingLabel\r\n                ? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\r\n                : tooltip;\r\n            if (!this._wantsAltCommand && this._menuItemAction.alt) {\r\n                const altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\r\n                const altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);\r\n                const altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\r\n                const altTitleSection = altKeybindingLabel\r\n                    ? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel)\r\n                    : altTooltip;\r\n                title += `\\n[${UILabelProvider.modifierLabels[OS].altKey}] ${altTitleSection}`;\r\n            }\r\n            this.label.title = title;\r\n        }\r\n    }\r\n    updateClass() {\r\n        if (this.options.icon) {\r\n            if (this._commandAction !== this._menuItemAction) {\r\n                if (this._menuItemAction.alt) {\r\n                    this._updateItemClass(this._menuItemAction.alt.item);\r\n                }\r\n            }\r\n            else if (this._menuItemAction.alt) {\r\n                this._updateItemClass(this._menuItemAction.item);\r\n            }\r\n        }\r\n    }\r\n    _updateItemClass(item) {\r\n        var _a;\r\n        this._itemClassDispose.value = undefined;\r\n        const { element, label } = this;\r\n        if (!element || !label) {\r\n            return;\r\n        }\r\n        const icon = this._commandAction.checked && ((_a = item.toggled) === null || _a === void 0 ? void 0 : _a.icon) ? item.toggled.icon : item.icon;\r\n        if (!icon) {\r\n            return;\r\n        }\r\n        if (ThemeIcon.isThemeIcon(icon)) {\r\n            // theme icons\r\n            const iconClasses = ThemeIcon.asClassNameArray(icon);\r\n            label.classList.add(...iconClasses);\r\n            this._itemClassDispose.value = toDisposable(() => {\r\n                label.classList.remove(...iconClasses);\r\n            });\r\n        }\r\n        else {\r\n            // icon path/url\r\n            if (icon.light) {\r\n                label.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\r\n            }\r\n            if (icon.dark) {\r\n                label.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\r\n            }\r\n            label.classList.add('icon');\r\n            this._itemClassDispose.value = toDisposable(() => {\r\n                label.classList.remove('icon');\r\n                label.style.removeProperty('--menu-entry-icon-light');\r\n                label.style.removeProperty('--menu-entry-icon-dark');\r\n            });\r\n        }\r\n    }\r\n};\r\nMenuEntryActionViewItem = __decorate([\r\n    __param(2, IKeybindingService),\r\n    __param(3, INotificationService),\r\n    __param(4, IContextKeyService)\r\n], MenuEntryActionViewItem);\r\nexport { MenuEntryActionViewItem };\r\nlet SubmenuEntryActionViewItem = class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\r\n    constructor(action, contextMenuService) {\r\n        super(action, { getActions: () => action.actions }, contextMenuService, {\r\n            menuAsChild: true,\r\n            classNames: ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined,\r\n        });\r\n    }\r\n    render(container) {\r\n        super.render(container);\r\n        if (this.element) {\r\n            container.classList.add('menu-entry');\r\n            const { icon } = this._action.item;\r\n            if (icon && !ThemeIcon.isThemeIcon(icon)) {\r\n                this.element.classList.add('icon');\r\n                if (icon.light) {\r\n                    this.element.style.setProperty('--menu-entry-icon-light', asCSSUrl(icon.light));\r\n                }\r\n                if (icon.dark) {\r\n                    this.element.style.setProperty('--menu-entry-icon-dark', asCSSUrl(icon.dark));\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nSubmenuEntryActionViewItem = __decorate([\r\n    __param(1, IContextMenuService)\r\n], SubmenuEntryActionViewItem);\r\nexport { SubmenuEntryActionViewItem };\r\n/**\r\n * Creates action view items for menu actions or submenu actions.\r\n */\r\nexport function createActionViewItem(instaService, action) {\r\n    if (action instanceof MenuItemAction) {\r\n        return instaService.createInstance(MenuEntryActionViewItem, action, undefined);\r\n    }\r\n    else if (action instanceof SubmenuItemAction) {\r\n        return instaService.createInstance(SubmenuEntryActionViewItem, action);\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './dropdown.css';\r\nimport { append, $ } from '../../dom.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport { BaseActionViewItem } from '../actionbar/actionViewItems.js';\r\nimport { DropdownMenu } from './dropdown.js';\r\nexport class DropdownMenuActionViewItem extends BaseActionViewItem {\r\n    constructor(action, menuActionsOrProvider, contextMenuProvider, options = Object.create(null)) {\r\n        super(null, action, options);\r\n        this.actionItem = null;\r\n        this._onDidChangeVisibility = this._register(new Emitter());\r\n        this.menuActionsOrProvider = menuActionsOrProvider;\r\n        this.contextMenuProvider = contextMenuProvider;\r\n        this.options = options;\r\n        if (this.options.actionRunner) {\r\n            this.actionRunner = this.options.actionRunner;\r\n        }\r\n    }\r\n    render(container) {\r\n        this.actionItem = container;\r\n        const labelRenderer = (el) => {\r\n            this.element = append(el, $('a.action-label'));\r\n            let classNames = [];\r\n            if (typeof this.options.classNames === 'string') {\r\n                classNames = this.options.classNames.split(/\\s+/g).filter(s => !!s);\r\n            }\r\n            else if (this.options.classNames) {\r\n                classNames = this.options.classNames;\r\n            }\r\n            // todo@aeschli: remove codicon, should come through `this.options.classNames`\r\n            if (!classNames.find(c => c === 'icon')) {\r\n                classNames.push('codicon');\r\n            }\r\n            this.element.classList.add(...classNames);\r\n            this.element.setAttribute('role', 'button');\r\n            this.element.setAttribute('aria-haspopup', 'true');\r\n            this.element.setAttribute('aria-expanded', 'false');\r\n            this.element.title = this._action.label || '';\r\n            return null;\r\n        };\r\n        const isActionsArray = Array.isArray(this.menuActionsOrProvider);\r\n        const options = {\r\n            contextMenuProvider: this.contextMenuProvider,\r\n            labelRenderer: labelRenderer,\r\n            menuAsChild: this.options.menuAsChild,\r\n            actions: isActionsArray ? this.menuActionsOrProvider : undefined,\r\n            actionProvider: isActionsArray ? undefined : this.menuActionsOrProvider\r\n        };\r\n        this.dropdownMenu = this._register(new DropdownMenu(container, options));\r\n        this._register(this.dropdownMenu.onDidChangeVisibility(visible => {\r\n            var _a;\r\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.setAttribute('aria-expanded', `${visible}`);\r\n            this._onDidChangeVisibility.fire(visible);\r\n        }));\r\n        this.dropdownMenu.menuOptions = {\r\n            actionViewItemProvider: this.options.actionViewItemProvider,\r\n            actionRunner: this.actionRunner,\r\n            getKeyBinding: this.options.keybindingProvider,\r\n            context: this._context\r\n        };\r\n        if (this.options.anchorAlignmentProvider) {\r\n            const that = this;\r\n            this.dropdownMenu.menuOptions = Object.assign(Object.assign({}, this.dropdownMenu.menuOptions), { get anchorAlignment() {\r\n                    return that.options.anchorAlignmentProvider();\r\n                } });\r\n        }\r\n        this.updateEnabled();\r\n    }\r\n    setActionContext(newContext) {\r\n        super.setActionContext(newContext);\r\n        if (this.dropdownMenu) {\r\n            if (this.dropdownMenu.menuOptions) {\r\n                this.dropdownMenu.menuOptions.context = newContext;\r\n            }\r\n            else {\r\n                this.dropdownMenu.menuOptions = { context: newContext };\r\n            }\r\n        }\r\n    }\r\n    updateEnabled() {\r\n        var _a, _b;\r\n        const disabled = !this.getAction().enabled;\r\n        (_a = this.actionItem) === null || _a === void 0 ? void 0 : _a.classList.toggle('disabled', disabled);\r\n        (_b = this.element) === null || _b === void 0 ? void 0 : _b.classList.toggle('disabled', disabled);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './dropdown.css';\r\nimport { Gesture, EventType as GestureEventType } from '../../touch.js';\r\nimport { ActionRunner } from '../../../common/actions.js';\r\nimport { EventHelper, EventType, append, $, addDisposableListener } from '../../dom.js';\r\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nexport class BaseDropdown extends ActionRunner {\r\n    constructor(container, options) {\r\n        super();\r\n        this._onDidChangeVisibility = new Emitter();\r\n        this.onDidChangeVisibility = this._onDidChangeVisibility.event;\r\n        this._element = append(container, $('.monaco-dropdown'));\r\n        this._label = append(this._element, $('.dropdown-label'));\r\n        let labelRenderer = options.labelRenderer;\r\n        if (!labelRenderer) {\r\n            labelRenderer = (container) => {\r\n                container.textContent = options.label || '';\r\n                return null;\r\n            };\r\n        }\r\n        for (const event of [EventType.CLICK, EventType.MOUSE_DOWN, GestureEventType.Tap]) {\r\n            this._register(addDisposableListener(this.element, event, e => EventHelper.stop(e, true))); // prevent default click behaviour to trigger\r\n        }\r\n        for (const event of [EventType.MOUSE_DOWN, GestureEventType.Tap]) {\r\n            this._register(addDisposableListener(this._label, event, e => {\r\n                if (e instanceof MouseEvent && e.detail > 1) {\r\n                    return; // prevent multiple clicks to open multiple context menus (https://github.com/microsoft/vscode/issues/41363)\r\n                }\r\n                if (this.visible) {\r\n                    this.hide();\r\n                }\r\n                else {\r\n                    this.show();\r\n                }\r\n            }));\r\n        }\r\n        this._register(addDisposableListener(this._label, EventType.KEY_UP, e => {\r\n            const event = new StandardKeyboardEvent(e);\r\n            if (event.equals(3 /* Enter */) || event.equals(10 /* Space */)) {\r\n                EventHelper.stop(e, true); // https://github.com/microsoft/vscode/issues/57997\r\n                if (this.visible) {\r\n                    this.hide();\r\n                }\r\n                else {\r\n                    this.show();\r\n                }\r\n            }\r\n        }));\r\n        const cleanupFn = labelRenderer(this._label);\r\n        if (cleanupFn) {\r\n            this._register(cleanupFn);\r\n        }\r\n        this._register(Gesture.addTarget(this._label));\r\n    }\r\n    get element() {\r\n        return this._element;\r\n    }\r\n    show() {\r\n        if (!this.visible) {\r\n            this.visible = true;\r\n            this._onDidChangeVisibility.fire(true);\r\n        }\r\n    }\r\n    hide() {\r\n        if (this.visible) {\r\n            this.visible = false;\r\n            this._onDidChangeVisibility.fire(false);\r\n        }\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.hide();\r\n        if (this.boxContainer) {\r\n            this.boxContainer.remove();\r\n            this.boxContainer = undefined;\r\n        }\r\n        if (this.contents) {\r\n            this.contents.remove();\r\n            this.contents = undefined;\r\n        }\r\n        if (this._label) {\r\n            this._label.remove();\r\n            this._label = undefined;\r\n        }\r\n    }\r\n}\r\nexport class DropdownMenu extends BaseDropdown {\r\n    constructor(container, options) {\r\n        super(container, options);\r\n        this._actions = [];\r\n        this._contextMenuProvider = options.contextMenuProvider;\r\n        this.actions = options.actions || [];\r\n        this.actionProvider = options.actionProvider;\r\n        this.menuClassName = options.menuClassName || '';\r\n        this.menuAsChild = !!options.menuAsChild;\r\n    }\r\n    set menuOptions(options) {\r\n        this._menuOptions = options;\r\n    }\r\n    get menuOptions() {\r\n        return this._menuOptions;\r\n    }\r\n    get actions() {\r\n        if (this.actionProvider) {\r\n            return this.actionProvider.getActions();\r\n        }\r\n        return this._actions;\r\n    }\r\n    set actions(actions) {\r\n        this._actions = actions;\r\n    }\r\n    show() {\r\n        super.show();\r\n        this.element.classList.add('active');\r\n        this._contextMenuProvider.showContextMenu({\r\n            getAnchor: () => this.element,\r\n            getActions: () => this.actions,\r\n            getActionsContext: () => this.menuOptions ? this.menuOptions.context : null,\r\n            getActionViewItem: action => this.menuOptions && this.menuOptions.actionViewItemProvider ? this.menuOptions.actionViewItemProvider(action) : undefined,\r\n            getKeyBinding: action => this.menuOptions && this.menuOptions.getKeyBinding ? this.menuOptions.getKeyBinding(action) : undefined,\r\n            getMenuClassName: () => this.menuClassName,\r\n            onHide: () => this.onHide(),\r\n            actionRunner: this.menuOptions ? this.menuOptions.actionRunner : undefined,\r\n            anchorAlignment: this.menuOptions ? this.menuOptions.anchorAlignment : 0 /* LEFT */,\r\n            domForShadowRoot: this.menuAsChild ? this.element : undefined\r\n        });\r\n    }\r\n    hide() {\r\n        super.hide();\r\n    }\r\n    onHide() {\r\n        this.hide();\r\n        this.element.classList.remove('active');\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport Severity from '../../../base/common/severity.js';\r\nimport { registerThemingParticipant } from '../../theme/common/themeService.js';\r\nimport { problemsErrorIconForeground, problemsInfoIconForeground, problemsWarningIconForeground } from '../../theme/common/colorRegistry.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nexport var SeverityIcon;\r\n(function (SeverityIcon) {\r\n    function className(severity) {\r\n        switch (severity) {\r\n            case Severity.Ignore:\r\n                return 'severity-ignore ' + Codicon.info.classNames;\r\n            case Severity.Info:\r\n                return Codicon.info.classNames;\r\n            case Severity.Warning:\r\n                return Codicon.warning.classNames;\r\n            case Severity.Error:\r\n                return Codicon.error.classNames;\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n    SeverityIcon.className = className;\r\n})(SeverityIcon || (SeverityIcon = {}));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const errorIconForeground = theme.getColor(problemsErrorIconForeground);\r\n    if (errorIconForeground) {\r\n        const errorCodiconSelector = Codicon.error.cssSelector;\r\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${errorCodiconSelector},\n\t\t\t.markers-panel .marker-icon${errorCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${errorCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${errorCodiconSelector} {\n\t\t\t\tcolor: ${errorIconForeground};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const warningIconForeground = theme.getColor(problemsWarningIconForeground);\r\n    if (warningIconForeground) {\r\n        const warningCodiconSelector = Codicon.warning.cssSelector;\r\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${warningCodiconSelector},\n\t\t\t.markers-panel .marker-icon${warningCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${warningCodiconSelector},\n\t\t\t.extension-editor ${warningCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${warningCodiconSelector},\n\t\t\t.preferences-editor ${warningCodiconSelector} {\n\t\t\t\tcolor: ${warningIconForeground};\n\t\t\t}\n\t\t`);\r\n    }\r\n    const infoIconForeground = theme.getColor(problemsInfoIconForeground);\r\n    if (infoIconForeground) {\r\n        const infoCodiconSelector = Codicon.info.cssSelector;\r\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${infoCodiconSelector},\n\t\t\t.markers-panel .marker-icon${infoCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${infoCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${infoCodiconSelector},\n\t\t\t.extension-editor ${infoCodiconSelector} {\n\t\t\t\tcolor: ${infoIconForeground};\n\t\t\t}\n\t\t`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { IMarkerService, MarkerSeverity } from '../../../platform/markers/common/markers.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { compare } from '../../../base/common/strings.js';\r\nimport { binarySearch } from '../../../base/common/arrays.js';\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { LinkedList } from '../../../base/common/linkedList.js';\r\nexport class MarkerCoordinate {\r\n    constructor(marker, index, total) {\r\n        this.marker = marker;\r\n        this.index = index;\r\n        this.total = total;\r\n    }\r\n}\r\nlet MarkerList = class MarkerList {\r\n    constructor(resourceFilter, _markerService) {\r\n        this._markerService = _markerService;\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._dispoables = new DisposableStore();\r\n        this._markers = [];\r\n        this._nextIdx = -1;\r\n        if (URI.isUri(resourceFilter)) {\r\n            this._resourceFilter = uri => uri.toString() === resourceFilter.toString();\r\n        }\r\n        else if (resourceFilter) {\r\n            this._resourceFilter = resourceFilter;\r\n        }\r\n        const updateMarker = () => {\r\n            this._markers = this._markerService.read({\r\n                resource: URI.isUri(resourceFilter) ? resourceFilter : undefined,\r\n                severities: MarkerSeverity.Error | MarkerSeverity.Warning | MarkerSeverity.Info\r\n            });\r\n            if (typeof resourceFilter === 'function') {\r\n                this._markers = this._markers.filter(m => this._resourceFilter(m.resource));\r\n            }\r\n            this._markers.sort(MarkerList._compareMarker);\r\n        };\r\n        updateMarker();\r\n        this._dispoables.add(_markerService.onMarkerChanged(uris => {\r\n            if (!this._resourceFilter || uris.some(uri => this._resourceFilter(uri))) {\r\n                updateMarker();\r\n                this._nextIdx = -1;\r\n                this._onDidChange.fire();\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._dispoables.dispose();\r\n        this._onDidChange.dispose();\r\n    }\r\n    matches(uri) {\r\n        if (!this._resourceFilter && !uri) {\r\n            return true;\r\n        }\r\n        if (!this._resourceFilter || !uri) {\r\n            return false;\r\n        }\r\n        return this._resourceFilter(uri);\r\n    }\r\n    get selected() {\r\n        const marker = this._markers[this._nextIdx];\r\n        return marker && new MarkerCoordinate(marker, this._nextIdx + 1, this._markers.length);\r\n    }\r\n    _initIdx(model, position, fwd) {\r\n        let found = false;\r\n        let idx = this._markers.findIndex(marker => marker.resource.toString() === model.uri.toString());\r\n        if (idx < 0) {\r\n            idx = binarySearch(this._markers, { resource: model.uri }, (a, b) => compare(a.resource.toString(), b.resource.toString()));\r\n            if (idx < 0) {\r\n                idx = ~idx;\r\n            }\r\n        }\r\n        for (let i = idx; i < this._markers.length; i++) {\r\n            let range = Range.lift(this._markers[i]);\r\n            if (range.isEmpty()) {\r\n                const word = model.getWordAtPosition(range.getStartPosition());\r\n                if (word) {\r\n                    range = new Range(range.startLineNumber, word.startColumn, range.startLineNumber, word.endColumn);\r\n                }\r\n            }\r\n            if (position && (range.containsPosition(position) || position.isBeforeOrEqual(range.getStartPosition()))) {\r\n                this._nextIdx = i;\r\n                found = true;\r\n                break;\r\n            }\r\n            if (this._markers[i].resource.toString() !== model.uri.toString()) {\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            // after the last change\r\n            this._nextIdx = fwd ? 0 : this._markers.length - 1;\r\n        }\r\n        if (this._nextIdx < 0) {\r\n            this._nextIdx = this._markers.length - 1;\r\n        }\r\n    }\r\n    resetIndex() {\r\n        this._nextIdx = -1;\r\n    }\r\n    move(fwd, model, position) {\r\n        if (this._markers.length === 0) {\r\n            return false;\r\n        }\r\n        let oldIdx = this._nextIdx;\r\n        if (this._nextIdx === -1) {\r\n            this._initIdx(model, position, fwd);\r\n        }\r\n        else if (fwd) {\r\n            this._nextIdx = (this._nextIdx + 1) % this._markers.length;\r\n        }\r\n        else if (!fwd) {\r\n            this._nextIdx = (this._nextIdx - 1 + this._markers.length) % this._markers.length;\r\n        }\r\n        if (oldIdx !== this._nextIdx) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    find(uri, position) {\r\n        let idx = this._markers.findIndex(marker => marker.resource.toString() === uri.toString());\r\n        if (idx < 0) {\r\n            return undefined;\r\n        }\r\n        for (; idx < this._markers.length; idx++) {\r\n            if (Range.containsPosition(this._markers[idx], position)) {\r\n                return new MarkerCoordinate(this._markers[idx], idx + 1, this._markers.length);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    static _compareMarker(a, b) {\r\n        let res = compare(a.resource.toString(), b.resource.toString());\r\n        if (res === 0) {\r\n            res = MarkerSeverity.compare(a.severity, b.severity);\r\n        }\r\n        if (res === 0) {\r\n            res = Range.compareRangesUsingStarts(a, b);\r\n        }\r\n        return res;\r\n    }\r\n};\r\nMarkerList = __decorate([\r\n    __param(1, IMarkerService)\r\n], MarkerList);\r\nexport { MarkerList };\r\nexport const IMarkerNavigationService = createDecorator('IMarkerNavigationService');\r\nlet MarkerNavigationService = class MarkerNavigationService {\r\n    constructor(_markerService) {\r\n        this._markerService = _markerService;\r\n        this._provider = new LinkedList();\r\n    }\r\n    getMarkerList(resource) {\r\n        for (let provider of this._provider) {\r\n            const result = provider.getMarkerList(resource);\r\n            if (result) {\r\n                return result;\r\n            }\r\n        }\r\n        // default\r\n        return new MarkerList(resource, this._markerService);\r\n    }\r\n};\r\nMarkerNavigationService = __decorate([\r\n    __param(0, IMarkerService)\r\n], MarkerNavigationService);\r\nregisterSingleton(IMarkerNavigationService, MarkerNavigationService, true);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { registerEditorAction, registerEditorContribution, EditorAction, EditorCommand, registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { MarkerNavigationWidget } from './gotoErrorWidget.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { IMarkerNavigationService } from './markerNavigationService.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nlet MarkerController = class MarkerController {\r\n    constructor(editor, _markerNavigationService, _contextKeyService, _editorService, _instantiationService) {\r\n        this._markerNavigationService = _markerNavigationService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._editorService = _editorService;\r\n        this._instantiationService = _instantiationService;\r\n        this._sessionDispoables = new DisposableStore();\r\n        this._editor = editor;\r\n        this._widgetVisible = CONTEXT_MARKERS_NAVIGATION_VISIBLE.bindTo(this._contextKeyService);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(MarkerController.ID);\r\n    }\r\n    dispose() {\r\n        this._cleanUp();\r\n        this._sessionDispoables.dispose();\r\n    }\r\n    _cleanUp() {\r\n        this._widgetVisible.reset();\r\n        this._sessionDispoables.clear();\r\n        this._widget = undefined;\r\n        this._model = undefined;\r\n    }\r\n    _getOrCreateModel(uri) {\r\n        if (this._model && this._model.matches(uri)) {\r\n            return this._model;\r\n        }\r\n        let reusePosition = false;\r\n        if (this._model) {\r\n            reusePosition = true;\r\n            this._cleanUp();\r\n        }\r\n        this._model = this._markerNavigationService.getMarkerList(uri);\r\n        if (reusePosition) {\r\n            this._model.move(true, this._editor.getModel(), this._editor.getPosition());\r\n        }\r\n        this._widget = this._instantiationService.createInstance(MarkerNavigationWidget, this._editor);\r\n        this._widget.onDidClose(() => this.close(), this, this._sessionDispoables);\r\n        this._widgetVisible.set(true);\r\n        this._sessionDispoables.add(this._model);\r\n        this._sessionDispoables.add(this._widget);\r\n        // follow cursor\r\n        this._sessionDispoables.add(this._editor.onDidChangeCursorPosition(e => {\r\n            var _a, _b, _c;\r\n            if (!((_a = this._model) === null || _a === void 0 ? void 0 : _a.selected) || !Range.containsPosition((_b = this._model) === null || _b === void 0 ? void 0 : _b.selected.marker, e.position)) {\r\n                (_c = this._model) === null || _c === void 0 ? void 0 : _c.resetIndex();\r\n            }\r\n        }));\r\n        // update markers\r\n        this._sessionDispoables.add(this._model.onDidChange(() => {\r\n            if (!this._widget || !this._widget.position || !this._model) {\r\n                return;\r\n            }\r\n            const info = this._model.find(this._editor.getModel().uri, this._widget.position);\r\n            if (info) {\r\n                this._widget.updateMarker(info.marker);\r\n            }\r\n            else {\r\n                this._widget.showStale();\r\n            }\r\n        }));\r\n        // open related\r\n        this._sessionDispoables.add(this._widget.onDidSelectRelatedInformation(related => {\r\n            this._editorService.openCodeEditor({\r\n                resource: related.resource,\r\n                options: { pinned: true, revealIfOpened: true, selection: Range.lift(related).collapseToStart() }\r\n            }, this._editor);\r\n            this.close(false);\r\n        }));\r\n        this._sessionDispoables.add(this._editor.onDidChangeModel(() => this._cleanUp()));\r\n        return this._model;\r\n    }\r\n    close(focusEditor = true) {\r\n        this._cleanUp();\r\n        if (focusEditor) {\r\n            this._editor.focus();\r\n        }\r\n    }\r\n    showAtMarker(marker) {\r\n        if (this._editor.hasModel()) {\r\n            const model = this._getOrCreateModel(this._editor.getModel().uri);\r\n            model.resetIndex();\r\n            model.move(true, this._editor.getModel(), new Position(marker.startLineNumber, marker.startColumn));\r\n            if (model.selected) {\r\n                this._widget.showAtMarker(model.selected.marker, model.selected.index, model.selected.total);\r\n            }\r\n        }\r\n    }\r\n    nagivate(next, multiFile) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._editor.hasModel()) {\r\n                const model = this._getOrCreateModel(multiFile ? undefined : this._editor.getModel().uri);\r\n                model.move(next, this._editor.getModel(), this._editor.getPosition());\r\n                if (!model.selected) {\r\n                    return;\r\n                }\r\n                if (model.selected.marker.resource.toString() !== this._editor.getModel().uri.toString()) {\r\n                    // show in different editor\r\n                    this._cleanUp();\r\n                    const otherEditor = yield this._editorService.openCodeEditor({\r\n                        resource: model.selected.marker.resource,\r\n                        options: { pinned: false, revealIfOpened: true, selectionRevealType: 2 /* NearTop */, selection: model.selected.marker }\r\n                    }, this._editor);\r\n                    if (otherEditor) {\r\n                        MarkerController.get(otherEditor).close();\r\n                        MarkerController.get(otherEditor).nagivate(next, multiFile);\r\n                    }\r\n                }\r\n                else {\r\n                    // show in this editor\r\n                    this._widget.showAtMarker(model.selected.marker, model.selected.index, model.selected.total);\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\nMarkerController.ID = 'editor.contrib.markerController';\r\nMarkerController = __decorate([\r\n    __param(1, IMarkerNavigationService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, ICodeEditorService),\r\n    __param(4, IInstantiationService)\r\n], MarkerController);\r\nexport { MarkerController };\r\nclass MarkerNavigationAction extends EditorAction {\r\n    constructor(_next, _multiFile, opts) {\r\n        super(opts);\r\n        this._next = _next;\r\n        this._multiFile = _multiFile;\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (editor.hasModel()) {\r\n                MarkerController.get(editor).nagivate(this._next, this._multiFile);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class NextMarkerAction extends MarkerNavigationAction {\r\n    constructor() {\r\n        super(true, false, {\r\n            id: NextMarkerAction.ID,\r\n            label: NextMarkerAction.LABEL,\r\n            alias: 'Go to Next Problem (Error, Warning, Info)',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 512 /* Alt */ | 66 /* F8 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MarkerNavigationWidget.TitleMenu,\r\n                title: NextMarkerAction.LABEL,\r\n                icon: registerIcon('marker-navigation-next', Codicon.chevronDown, nls.localize('nextMarkerIcon', 'Icon for goto next marker.')),\r\n                group: 'navigation',\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n}\r\nNextMarkerAction.ID = 'editor.action.marker.next';\r\nNextMarkerAction.LABEL = nls.localize('markerAction.next.label', \"Go to Next Problem (Error, Warning, Info)\");\r\nclass PrevMarkerAction extends MarkerNavigationAction {\r\n    constructor() {\r\n        super(false, false, {\r\n            id: PrevMarkerAction.ID,\r\n            label: PrevMarkerAction.LABEL,\r\n            alias: 'Go to Previous Problem (Error, Warning, Info)',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 66 /* F8 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MarkerNavigationWidget.TitleMenu,\r\n                title: NextMarkerAction.LABEL,\r\n                icon: registerIcon('marker-navigation-previous', Codicon.chevronUp, nls.localize('previousMarkerIcon', 'Icon for goto previous marker.')),\r\n                group: 'navigation',\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n}\r\nPrevMarkerAction.ID = 'editor.action.marker.prev';\r\nPrevMarkerAction.LABEL = nls.localize('markerAction.previous.label', \"Go to Previous Problem (Error, Warning, Info)\");\r\nclass NextMarkerInFilesAction extends MarkerNavigationAction {\r\n    constructor() {\r\n        super(true, true, {\r\n            id: 'editor.action.marker.nextInFiles',\r\n            label: nls.localize('markerAction.nextInFiles.label', \"Go to Next Problem in Files (Error, Warning, Info)\"),\r\n            alias: 'Go to Next Problem in Files (Error, Warning, Info)',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 66 /* F8 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarGoMenu,\r\n                title: nls.localize({ key: 'miGotoNextProblem', comment: ['&& denotes a mnemonic'] }, \"Next &&Problem\"),\r\n                group: '6_problem_nav',\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n}\r\nclass PrevMarkerInFilesAction extends MarkerNavigationAction {\r\n    constructor() {\r\n        super(false, true, {\r\n            id: 'editor.action.marker.prevInFiles',\r\n            label: nls.localize('markerAction.previousInFiles.label', \"Go to Previous Problem in Files (Error, Warning, Info)\"),\r\n            alias: 'Go to Previous Problem in Files (Error, Warning, Info)',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 1024 /* Shift */ | 66 /* F8 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarGoMenu,\r\n                title: nls.localize({ key: 'miGotoPreviousProblem', comment: ['&& denotes a mnemonic'] }, \"Previous &&Problem\"),\r\n                group: '6_problem_nav',\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(MarkerController.ID, MarkerController);\r\nregisterEditorAction(NextMarkerAction);\r\nregisterEditorAction(PrevMarkerAction);\r\nregisterEditorAction(NextMarkerInFilesAction);\r\nregisterEditorAction(PrevMarkerInFilesAction);\r\nconst CONTEXT_MARKERS_NAVIGATION_VISIBLE = new RawContextKey('markersNavigationVisible', false);\r\nconst MarkerCommand = EditorCommand.bindToContribution(MarkerController.get);\r\nregisterEditorCommand(new MarkerCommand({\r\n    id: 'closeMarkersNavigation',\r\n    precondition: CONTEXT_MARKERS_NAVIGATION_VISIBLE,\r\n    handler: x => x.close(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 50,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { toDisposable, DisposableStore, Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { IMarkerData, MarkerSeverity } from '../../../platform/markers/common/markers.js';\r\nimport { basename } from '../../../base/common/resources.js';\r\nimport { IMarkerDecorationsService } from '../../common/services/markersDecorationService.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { MarkerController, NextMarkerAction } from '../gotoError/gotoError.js';\r\nimport { createCancelablePromise, disposableTimeout } from '../../../base/common/async.js';\r\nimport { getCodeActions } from '../codeAction/codeAction.js';\r\nimport { QuickFixAction, QuickFixController } from '../codeAction/codeActionCommands.js';\r\nimport { CodeActionKind } from '../codeAction/types.js';\r\nimport { Progress } from '../../../platform/progress/common/progress.js';\r\nconst $ = dom.$;\r\nexport class MarkerHover {\r\n    constructor(owner, range, marker) {\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.marker = marker;\r\n    }\r\n    isValidForHoverAnchor(anchor) {\r\n        return (anchor.type === 1 /* Range */\r\n            && this.range.startColumn <= anchor.range.startColumn\r\n            && this.range.endColumn >= anchor.range.endColumn);\r\n    }\r\n}\r\nconst markerCodeActionTrigger = {\r\n    type: 1 /* Invoke */,\r\n    filter: { include: CodeActionKind.QuickFix }\r\n};\r\nlet MarkerHoverParticipant = class MarkerHoverParticipant {\r\n    constructor(_editor, _hover, _markerDecorationsService, _openerService) {\r\n        this._editor = _editor;\r\n        this._hover = _hover;\r\n        this._markerDecorationsService = _markerDecorationsService;\r\n        this._openerService = _openerService;\r\n        this.recentMarkerCodeActionsInfo = undefined;\r\n    }\r\n    computeSync(anchor, lineDecorations) {\r\n        if (!this._editor.hasModel() || anchor.type !== 1 /* Range */) {\r\n            return [];\r\n        }\r\n        const model = this._editor.getModel();\r\n        const lineNumber = anchor.range.startLineNumber;\r\n        const maxColumn = model.getLineMaxColumn(lineNumber);\r\n        const result = [];\r\n        for (const d of lineDecorations) {\r\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\r\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\r\n            const marker = this._markerDecorationsService.getMarker(model.uri, d);\r\n            if (!marker) {\r\n                continue;\r\n            }\r\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\r\n            result.push(new MarkerHover(this, range, marker));\r\n        }\r\n        return result;\r\n    }\r\n    renderHoverParts(hoverParts, fragment, statusBar) {\r\n        if (!hoverParts.length) {\r\n            return Disposable.None;\r\n        }\r\n        const disposables = new DisposableStore();\r\n        hoverParts.forEach(msg => fragment.appendChild(this.renderMarkerHover(msg, disposables)));\r\n        const markerHoverForStatusbar = hoverParts.length === 1 ? hoverParts[0] : hoverParts.sort((a, b) => MarkerSeverity.compare(a.marker.severity, b.marker.severity))[0];\r\n        this.renderMarkerStatusbar(markerHoverForStatusbar, statusBar, disposables);\r\n        return disposables;\r\n    }\r\n    renderMarkerHover(markerHover, disposables) {\r\n        const hoverElement = $('div.hover-row');\r\n        const markerElement = dom.append(hoverElement, $('div.marker.hover-contents'));\r\n        const { source, message, code, relatedInformation } = markerHover.marker;\r\n        this._editor.applyFontInfo(markerElement);\r\n        const messageElement = dom.append(markerElement, $('span'));\r\n        messageElement.style.whiteSpace = 'pre-wrap';\r\n        messageElement.innerText = message;\r\n        if (source || code) {\r\n            // Code has link\r\n            if (code && typeof code !== 'string') {\r\n                const sourceAndCodeElement = $('span');\r\n                if (source) {\r\n                    const sourceElement = dom.append(sourceAndCodeElement, $('span'));\r\n                    sourceElement.innerText = source;\r\n                }\r\n                const codeLink = dom.append(sourceAndCodeElement, $('a.code-link'));\r\n                codeLink.setAttribute('href', code.target.toString());\r\n                disposables.add(dom.addDisposableListener(codeLink, 'click', (e) => {\r\n                    this._openerService.open(code.target, { allowCommands: true });\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                }));\r\n                const codeElement = dom.append(codeLink, $('span'));\r\n                codeElement.innerText = code.value;\r\n                const detailsElement = dom.append(markerElement, sourceAndCodeElement);\r\n                detailsElement.style.opacity = '0.6';\r\n                detailsElement.style.paddingLeft = '6px';\r\n            }\r\n            else {\r\n                const detailsElement = dom.append(markerElement, $('span'));\r\n                detailsElement.style.opacity = '0.6';\r\n                detailsElement.style.paddingLeft = '6px';\r\n                detailsElement.innerText = source && code ? `${source}(${code})` : source ? source : `(${code})`;\r\n            }\r\n        }\r\n        if (isNonEmptyArray(relatedInformation)) {\r\n            for (const { message, resource, startLineNumber, startColumn } of relatedInformation) {\r\n                const relatedInfoContainer = dom.append(markerElement, $('div'));\r\n                relatedInfoContainer.style.marginTop = '8px';\r\n                const a = dom.append(relatedInfoContainer, $('a'));\r\n                a.innerText = `${basename(resource)}(${startLineNumber}, ${startColumn}): `;\r\n                a.style.cursor = 'pointer';\r\n                disposables.add(dom.addDisposableListener(a, 'click', (e) => {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    if (this._openerService) {\r\n                        this._openerService.open(resource, {\r\n                            fromUserGesture: true,\r\n                            editorOptions: { selection: { startLineNumber, startColumn } }\r\n                        }).catch(onUnexpectedError);\r\n                    }\r\n                }));\r\n                const messageElement = dom.append(relatedInfoContainer, $('span'));\r\n                messageElement.innerText = message;\r\n                this._editor.applyFontInfo(messageElement);\r\n            }\r\n        }\r\n        return hoverElement;\r\n    }\r\n    renderMarkerStatusbar(markerHover, statusBar, disposables) {\r\n        if (markerHover.marker.severity === MarkerSeverity.Error || markerHover.marker.severity === MarkerSeverity.Warning || markerHover.marker.severity === MarkerSeverity.Info) {\r\n            statusBar.addAction({\r\n                label: nls.localize('view problem', \"View Problem\"),\r\n                commandId: NextMarkerAction.ID,\r\n                run: () => {\r\n                    this._hover.hide();\r\n                    MarkerController.get(this._editor).showAtMarker(markerHover.marker);\r\n                    this._editor.focus();\r\n                }\r\n            });\r\n        }\r\n        if (!this._editor.getOption(78 /* readOnly */)) {\r\n            const quickfixPlaceholderElement = statusBar.append($('div'));\r\n            if (this.recentMarkerCodeActionsInfo) {\r\n                if (IMarkerData.makeKey(this.recentMarkerCodeActionsInfo.marker) === IMarkerData.makeKey(markerHover.marker)) {\r\n                    if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\r\n                        quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\r\n                    }\r\n                }\r\n                else {\r\n                    this.recentMarkerCodeActionsInfo = undefined;\r\n                }\r\n            }\r\n            const updatePlaceholderDisposable = this.recentMarkerCodeActionsInfo && !this.recentMarkerCodeActionsInfo.hasCodeActions ? Disposable.None : disposables.add(disposableTimeout(() => quickfixPlaceholderElement.textContent = nls.localize('checkingForQuickFixes', \"Checking for quick fixes...\"), 200));\r\n            if (!quickfixPlaceholderElement.textContent) {\r\n                // Have some content in here to avoid flickering\r\n                quickfixPlaceholderElement.textContent = String.fromCharCode(0xA0); // &nbsp;\r\n            }\r\n            const codeActionsPromise = this.getCodeActions(markerHover.marker);\r\n            disposables.add(toDisposable(() => codeActionsPromise.cancel()));\r\n            codeActionsPromise.then(actions => {\r\n                updatePlaceholderDisposable.dispose();\r\n                this.recentMarkerCodeActionsInfo = { marker: markerHover.marker, hasCodeActions: actions.validActions.length > 0 };\r\n                if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\r\n                    actions.dispose();\r\n                    quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\r\n                    return;\r\n                }\r\n                quickfixPlaceholderElement.style.display = 'none';\r\n                let showing = false;\r\n                disposables.add(toDisposable(() => {\r\n                    if (!showing) {\r\n                        actions.dispose();\r\n                    }\r\n                }));\r\n                statusBar.addAction({\r\n                    label: nls.localize('quick fixes', \"Quick Fix...\"),\r\n                    commandId: QuickFixAction.Id,\r\n                    run: (target) => {\r\n                        showing = true;\r\n                        const controller = QuickFixController.get(this._editor);\r\n                        const elementPosition = dom.getDomNodePagePosition(target);\r\n                        // Hide the hover pre-emptively, otherwise the editor can close the code actions\r\n                        // context menu as well when using keyboard navigation\r\n                        this._hover.hide();\r\n                        controller.showCodeActions(markerCodeActionTrigger, actions, {\r\n                            x: elementPosition.left + 6,\r\n                            y: elementPosition.top + elementPosition.height + 6\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n    getCodeActions(marker) {\r\n        return createCancelablePromise(cancellationToken => {\r\n            return getCodeActions(this._editor.getModel(), new Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn), markerCodeActionTrigger, Progress.None, cancellationToken);\r\n        });\r\n    }\r\n};\r\nMarkerHoverParticipant = __decorate([\r\n    __param(2, IMarkerDecorationsService),\r\n    __param(3, IOpenerService)\r\n], MarkerHoverParticipant);\r\nexport { MarkerHoverParticipant };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _a;\r\nimport * as DOM from './dom.js';\r\nimport { createElement } from './formattedTextRenderer.js';\r\nimport { onUnexpectedError } from '../common/errors.js';\r\nimport { parseHrefAndDimensions, removeMarkdownEscapes } from '../common/htmlContent.js';\r\nimport { defaultGenerator } from '../common/idGenerator.js';\r\nimport * as marked from '../common/marked/marked.js';\r\nimport { insane } from '../common/insane/insane.js';\r\nimport { parse } from '../common/marshalling.js';\r\nimport { cloneAndChange } from '../common/objects.js';\r\nimport { escape } from '../common/strings.js';\r\nimport { URI } from '../common/uri.js';\r\nimport { FileAccess, Schemas } from '../common/network.js';\r\nimport { markdownEscapeEscapedIcons } from '../common/iconLabels.js';\r\nimport { resolvePath } from '../common/resources.js';\r\nimport { StandardMouseEvent } from './mouseEvent.js';\r\nimport { renderLabelWithIcons } from './ui/iconLabel/iconLabels.js';\r\nimport { Event } from '../common/event.js';\r\nimport { DomEmitter } from './event.js';\r\nconst _ttpInsane = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('insane', {\r\n    createHTML(value, options) {\r\n        return insane(value, options);\r\n    }\r\n});\r\n/**\r\n * Low-level way create a html element from a markdown string.\r\n *\r\n * **Note** that for most cases you should be using [`MarkdownRenderer`](./src/vs/editor/browser/core/markdownRenderer.ts)\r\n * which comes with support for pretty code block rendering and which uses the default way of handling links.\r\n */\r\nexport function renderMarkdown(markdown, options = {}, markedOptions = {}) {\r\n    var _a;\r\n    const element = createElement(options);\r\n    const _uriMassage = function (part) {\r\n        let data;\r\n        try {\r\n            data = parse(decodeURIComponent(part));\r\n        }\r\n        catch (e) {\r\n            // ignore\r\n        }\r\n        if (!data) {\r\n            return part;\r\n        }\r\n        data = cloneAndChange(data, value => {\r\n            if (markdown.uris && markdown.uris[value]) {\r\n                return URI.revive(markdown.uris[value]);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        });\r\n        return encodeURIComponent(JSON.stringify(data));\r\n    };\r\n    const _href = function (href, isDomUri) {\r\n        const data = markdown.uris && markdown.uris[href];\r\n        if (!data) {\r\n            return href; // no uri exists\r\n        }\r\n        let uri = URI.revive(data);\r\n        if (URI.parse(href).toString() === uri.toString()) {\r\n            return href; // no tranformation performed\r\n        }\r\n        if (isDomUri) {\r\n            // this URI will end up as \"src\"-attribute of a dom node\r\n            // and because of that special rewriting needs to be done\r\n            // so that the URI uses a protocol that's understood by\r\n            // browsers (like http or https)\r\n            return FileAccess.asBrowserUri(uri).toString(true);\r\n        }\r\n        if (uri.query) {\r\n            uri = uri.with({ query: _uriMassage(uri.query) });\r\n        }\r\n        return uri.toString();\r\n    };\r\n    // signal to code-block render that the\r\n    // element has been created\r\n    let signalInnerHTML;\r\n    const withInnerHTML = new Promise(c => signalInnerHTML = c);\r\n    const renderer = new marked.Renderer();\r\n    renderer.image = (href, title, text) => {\r\n        let dimensions = [];\r\n        let attributes = [];\r\n        if (href) {\r\n            ({ href, dimensions } = parseHrefAndDimensions(href));\r\n            href = _href(href, true);\r\n            try {\r\n                const hrefAsUri = URI.parse(href);\r\n                if (options.baseUrl && hrefAsUri.scheme === Schemas.file) { // absolute or relative local path, or file: uri\r\n                    href = resolvePath(options.baseUrl, href).toString();\r\n                }\r\n            }\r\n            catch (err) { }\r\n            attributes.push(`src=\"${href}\"`);\r\n        }\r\n        if (text) {\r\n            attributes.push(`alt=\"${text}\"`);\r\n        }\r\n        if (title) {\r\n            attributes.push(`title=\"${title}\"`);\r\n        }\r\n        if (dimensions.length) {\r\n            attributes = attributes.concat(dimensions);\r\n        }\r\n        return '<img ' + attributes.join(' ') + '>';\r\n    };\r\n    renderer.link = (href, title, text) => {\r\n        // Remove markdown escapes. Workaround for https://github.com/chjj/marked/issues/829\r\n        if (href === text) { // raw link case\r\n            text = removeMarkdownEscapes(text);\r\n        }\r\n        href = _href(href, false);\r\n        if (options.baseUrl) {\r\n            const hasScheme = /^\\w[\\w\\d+.-]*:/.test(href);\r\n            if (!hasScheme) {\r\n                href = resolvePath(options.baseUrl, href).toString();\r\n            }\r\n        }\r\n        title = removeMarkdownEscapes(title);\r\n        href = removeMarkdownEscapes(href);\r\n        if (!href\r\n            || href.match(/^data:|javascript:/i)\r\n            || (href.match(/^command:/i) && !markdown.isTrusted)\r\n            || href.match(/^command:(\\/\\/\\/)?_workbench\\.downloadResource/i)) {\r\n            // drop the link\r\n            return text;\r\n        }\r\n        else {\r\n            // HTML Encode href\r\n            href = href.replace(/&/g, '&amp;')\r\n                .replace(/</g, '&lt;')\r\n                .replace(/>/g, '&gt;')\r\n                .replace(/\"/g, '&quot;')\r\n                .replace(/'/g, '&#39;');\r\n            return `<a href=\"#\" data-href=\"${href}\" title=\"${title || href}\">${text}</a>`;\r\n        }\r\n    };\r\n    renderer.paragraph = (text) => {\r\n        if (markdown.supportThemeIcons) {\r\n            const elements = renderLabelWithIcons(text);\r\n            text = elements.map(e => typeof e === 'string' ? e : e.outerHTML).join('');\r\n        }\r\n        return `<p>${text}</p>`;\r\n    };\r\n    if (options.codeBlockRenderer) {\r\n        renderer.code = (code, lang) => {\r\n            const value = options.codeBlockRenderer(lang, code);\r\n            // when code-block rendering is async we return sync\r\n            // but update the node with the real result later.\r\n            const id = defaultGenerator.nextId();\r\n            const promise = Promise.all([value, withInnerHTML]).then(values => {\r\n                const span = element.querySelector(`div[data-code=\"${id}\"]`);\r\n                if (span) {\r\n                    DOM.reset(span, values[0]);\r\n                }\r\n            }).catch(_err => {\r\n                // ignore\r\n            });\r\n            if (options.asyncRenderCallback) {\r\n                promise.then(options.asyncRenderCallback);\r\n            }\r\n            return `<div class=\"code\" data-code=\"${id}\">${escape(code)}</div>`;\r\n        };\r\n    }\r\n    if (options.actionHandler) {\r\n        const onClick = options.actionHandler.disposeables.add(new DomEmitter(element, 'click'));\r\n        const onAuxClick = options.actionHandler.disposeables.add(new DomEmitter(element, 'auxclick'));\r\n        options.actionHandler.disposeables.add(Event.any(onClick.event, onAuxClick.event)(e => {\r\n            const mouseEvent = new StandardMouseEvent(e);\r\n            if (!mouseEvent.leftButton && !mouseEvent.middleButton) {\r\n                return;\r\n            }\r\n            let target = mouseEvent.target;\r\n            if (target.tagName !== 'A') {\r\n                target = target.parentElement;\r\n                if (!target || target.tagName !== 'A') {\r\n                    return;\r\n                }\r\n            }\r\n            try {\r\n                const href = target.dataset['href'];\r\n                if (href) {\r\n                    options.actionHandler.callback(href, mouseEvent);\r\n                }\r\n            }\r\n            catch (err) {\r\n                onUnexpectedError(err);\r\n            }\r\n            finally {\r\n                mouseEvent.preventDefault();\r\n            }\r\n        }));\r\n    }\r\n    // Use our own sanitizer so that we can let through only spans.\r\n    // Otherwise, we'd be letting all html be rendered.\r\n    // If we want to allow markdown permitted tags, then we can delete sanitizer and sanitize.\r\n    // We always pass the output through insane after this so that we don't rely on\r\n    // marked for sanitization.\r\n    markedOptions.sanitizer = (html) => {\r\n        const match = markdown.isTrusted ? html.match(/^(<span[^>]+>)|(<\\/\\s*span>)$/) : undefined;\r\n        return match ? html : '';\r\n    };\r\n    markedOptions.sanitize = true;\r\n    markedOptions.silent = true;\r\n    markedOptions.renderer = renderer;\r\n    // values that are too long will freeze the UI\r\n    let value = (_a = markdown.value) !== null && _a !== void 0 ? _a : '';\r\n    if (value.length > 100000) {\r\n        value = `${value.substr(0, 100000)}\u2026`;\r\n    }\r\n    // escape theme icons\r\n    if (markdown.supportThemeIcons) {\r\n        value = markdownEscapeEscapedIcons(value);\r\n    }\r\n    const renderedMarkdown = marked.parse(value, markedOptions);\r\n    // sanitize with insane\r\n    element.innerHTML = sanitizeRenderedMarkdown(markdown, renderedMarkdown);\r\n    // signal that async code blocks can be now be inserted\r\n    signalInnerHTML();\r\n    // signal size changes for image tags\r\n    if (options.asyncRenderCallback) {\r\n        for (const img of element.getElementsByTagName('img')) {\r\n            const listener = DOM.addDisposableListener(img, 'load', () => {\r\n                listener.dispose();\r\n                options.asyncRenderCallback();\r\n            });\r\n        }\r\n    }\r\n    return element;\r\n}\r\nfunction sanitizeRenderedMarkdown(options, renderedMarkdown) {\r\n    var _a;\r\n    const insaneOptions = getInsaneOptions(options);\r\n    return (_a = _ttpInsane === null || _ttpInsane === void 0 ? void 0 : _ttpInsane.createHTML(renderedMarkdown, insaneOptions)) !== null && _a !== void 0 ? _a : insane(renderedMarkdown, insaneOptions);\r\n}\r\nfunction getInsaneOptions(options) {\r\n    const allowedSchemes = [\r\n        Schemas.http,\r\n        Schemas.https,\r\n        Schemas.mailto,\r\n        Schemas.data,\r\n        Schemas.file,\r\n        Schemas.vscodeRemote,\r\n        Schemas.vscodeRemoteResource,\r\n    ];\r\n    if (options.isTrusted) {\r\n        allowedSchemes.push(Schemas.command);\r\n    }\r\n    return {\r\n        allowedSchemes,\r\n        // allowedTags should included everything that markdown renders to.\r\n        // Since we have our own sanitize function for marked, it's possible we missed some tag so let insane make sure.\r\n        // HTML tags that can result from markdown are from reading https://spec.commonmark.org/0.29/\r\n        // HTML table tags that can result from markdown are from https://github.github.com/gfm/#tables-extension-\r\n        allowedTags: ['ul', 'li', 'p', 'code', 'blockquote', 'ol', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'em', 'pre', 'table', 'thead', 'tbody', 'tr', 'th', 'td', 'div', 'del', 'a', 'strong', 'br', 'img', 'span'],\r\n        allowedAttributes: {\r\n            'a': ['href', 'name', 'target', 'data-href'],\r\n            'img': ['src', 'title', 'alt', 'width', 'height'],\r\n            'div': ['class', 'data-code'],\r\n            'span': ['class', 'style'],\r\n            // https://github.com/microsoft/vscode/issues/95937\r\n            'th': ['align'],\r\n            'td': ['align']\r\n        },\r\n        filter(token) {\r\n            if (token.tag === 'span' && options.isTrusted) {\r\n                if (token.attrs['style'] && (Object.keys(token.attrs).length === 1)) {\r\n                    return !!token.attrs['style'].match(/^(color\\:#[0-9a-fA-F]+;)?(background-color\\:#[0-9a-fA-F]+;)?$/);\r\n                }\r\n                else if (token.attrs['class']) {\r\n                    // The class should match codicon rendering in src\\vs\\base\\common\\codicons.ts\r\n                    return !!token.attrs['class'].match(/^codicon codicon-[a-z\\-]+( codicon-modifier-[a-z\\-]+)?$/);\r\n                }\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n}\r\n", "/*\nThe MIT License (MIT)\n\nCopyright \u00A9 2015 Nicolas Bevacqua\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nlet __insane_func;\n\n(function () { function r(e, n, t) { function o(i, f) { if (!n[i]) { if (!e[i]) { var c = \"function\" == typeof require && require; if (!f && c) return c(i, !0); if (u) return u(i, !0); var a = new Error(\"Cannot find module '\" + i + \"'\"); throw a.code = \"MODULE_NOT_FOUND\", a } var p = n[i] = { exports: {} }; e[i][0].call(p.exports, function (r) { var n = e[i][1][r]; return o(n || r) }, p, p.exports, r, e, n, t) } return n[i].exports } for (var u = \"function\" == typeof require && require, i = 0; i < t.length; i++)o(t[i]); return o } return r })()({\n\t1: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar toMap = require('./toMap');\n\t\tvar uris = ['background', 'base', 'cite', 'href', 'longdesc', 'src', 'usemap'];\n\n\t\tmodule.exports = {\n\t\t\turis: toMap(uris) // attributes that have an href and hence need to be sanitized\n\t\t};\n\n\t}, { \"./toMap\": 10 }], 2: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar defaults = {\n\t\t\tallowedAttributes: {\n\t\t\t\t'*': ['title', 'accesskey'],\n\t\t\t\ta: ['href', 'name', 'target', 'aria-label'],\n\t\t\t\tiframe: ['allowfullscreen', 'frameborder', 'src'],\n\t\t\t\timg: ['src', 'alt', 'title', 'aria-label']\n\t\t\t},\n\t\t\tallowedClasses: {},\n\t\t\tallowedSchemes: ['http', 'https', 'mailto'],\n\t\t\tallowedTags: [\n\t\t\t\t'a', 'abbr', 'article', 'b', 'blockquote', 'br', 'caption', 'code', 'del', 'details', 'div', 'em',\n\t\t\t\t'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'i', 'img', 'ins', 'kbd', 'li', 'main', 'mark',\n\t\t\t\t'ol', 'p', 'pre', 'section', 'span', 'strike', 'strong', 'sub', 'summary', 'sup', 'table',\n\t\t\t\t'tbody', 'td', 'th', 'thead', 'tr', 'u', 'ul'\n\t\t\t],\n\t\t\tfilter: null\n\t\t};\n\n\t\tmodule.exports = defaults;\n\n\t}, {}], 3: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar toMap = require('./toMap');\n\t\tvar voids = ['area', 'br', 'col', 'hr', 'img', 'wbr', 'input', 'base', 'basefont', 'link', 'meta'];\n\n\t\tmodule.exports = {\n\t\t\tvoids: toMap(voids)\n\t\t};\n\n\t}, { \"./toMap\": 10 }], 4: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar he = require('he');\n\t\tvar assign = require('assignment');\n\t\tvar parser = require('./parser');\n\t\tvar sanitizer = require('./sanitizer');\n\t\tvar defaults = require('./defaults');\n\n\t\tfunction insane(html, options, strict) {\n\t\t\tvar buffer = [];\n\t\t\tvar configuration = strict === true ? options : assign({}, defaults, options);\n\t\t\tvar handler = sanitizer(buffer, configuration);\n\n\t\t\tparser(html, handler);\n\n\t\t\treturn buffer.join('');\n\t\t}\n\n\t\tinsane.defaults = defaults;\n\t\tmodule.exports = insane;\n\t\t__insane_func = insane;\n\n\t}, { \"./defaults\": 2, \"./parser\": 7, \"./sanitizer\": 8, \"assignment\": 6, \"he\": 9 }], 5: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tmodule.exports = function lowercase(string) {\n\t\t\treturn typeof string === 'string' ? string.toLowerCase() : string;\n\t\t};\n\n\t}, {}], 6: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tfunction assignment(result) {\n\t\t\tvar stack = Array.prototype.slice.call(arguments, 1);\n\t\t\tvar item;\n\t\t\tvar key;\n\t\t\twhile (stack.length) {\n\t\t\t\titem = stack.shift();\n\t\t\t\tfor (key in item) {\n\t\t\t\t\tif (item.hasOwnProperty(key)) {\n\t\t\t\t\t\tif (Object.prototype.toString.call(result[key]) === '[object Object]') {\n\t\t\t\t\t\t\tresult[key] = assignment(result[key], item[key]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult[key] = item[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tmodule.exports = assignment;\n\n\t}, {}], 7: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar he = require('he');\n\t\tvar lowercase = require('./lowercase');\n\t\tvar attributes = require('./attributes');\n\t\tvar elements = require('./elements');\n\t\tvar rstart = /^<\\s*([\\w:-]+)((?:\\s+[\\w:-]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)\\s*>/;\n\t\tvar rend = /^<\\s*\\/\\s*([\\w:-]+)[^>]*>/;\n\t\tvar rattrs = /([\\w:-]+)(?:\\s*=\\s*(?:(?:\"((?:[^\"])*)\")|(?:'((?:[^'])*)')|([^>\\s]+)))?/g;\n\t\tvar rtag = /^</;\n\t\tvar rtagend = /^<\\s*\\//;\n\n\t\tfunction createStack() {\n\t\t\tvar stack = [];\n\t\t\tstack.lastItem = function lastItem() {\n\t\t\t\treturn stack[stack.length - 1];\n\t\t\t};\n\t\t\treturn stack;\n\t\t}\n\n\t\tfunction parser(html, handler) {\n\t\t\tvar stack = createStack();\n\t\t\tvar last = html;\n\t\t\tvar chars;\n\n\t\t\twhile (html) {\n\t\t\t\tparsePart();\n\t\t\t}\n\t\t\tparseEndTag(); // clean up any remaining tags\n\n\t\t\tfunction parsePart() {\n\t\t\t\tchars = true;\n\t\t\t\tparseTag();\n\n\t\t\t\tvar same = html === last;\n\t\t\t\tlast = html;\n\n\t\t\t\tif (same) { // discard, because it's invalid\n\t\t\t\t\thtml = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseTag() {\n\t\t\t\tif (html.substr(0, 4) === '<!--') { // comments\n\t\t\t\t\tparseComment();\n\t\t\t\t} else if (rtagend.test(html)) {\n\t\t\t\t\tparseEdge(rend, parseEndTag);\n\t\t\t\t} else if (rtag.test(html)) {\n\t\t\t\t\tparseEdge(rstart, parseStartTag);\n\t\t\t\t}\n\t\t\t\tparseTagDecode();\n\t\t\t}\n\n\t\t\tfunction parseEdge(regex, parser) {\n\t\t\t\tvar match = html.match(regex);\n\t\t\t\tif (match) {\n\t\t\t\t\thtml = html.substring(match[0].length);\n\t\t\t\t\tmatch[0].replace(regex, parser);\n\t\t\t\t\tchars = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseComment() {\n\t\t\t\tvar index = html.indexOf('-->');\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tif (handler.comment) {\n\t\t\t\t\t\thandler.comment(html.substring(4, index));\n\t\t\t\t\t}\n\t\t\t\t\thtml = html.substring(index + 3);\n\t\t\t\t\tchars = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseTagDecode() {\n\t\t\t\tif (!chars) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar text;\n\t\t\t\tvar index = html.indexOf('<');\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\ttext = html.substring(0, index);\n\t\t\t\t\thtml = html.substring(index);\n\t\t\t\t} else {\n\t\t\t\t\ttext = html;\n\t\t\t\t\thtml = '';\n\t\t\t\t}\n\t\t\t\tif (handler.chars) {\n\t\t\t\t\thandler.chars(text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseStartTag(tag, tagName, rest, unary) {\n\t\t\t\tvar attrs = {};\n\t\t\t\tvar low = lowercase(tagName);\n\t\t\t\tvar u = elements.voids[low] || !!unary;\n\n\t\t\t\trest.replace(rattrs, attrReplacer);\n\n\t\t\t\tif (!u) {\n\t\t\t\t\tstack.push(low);\n\t\t\t\t}\n\t\t\t\tif (handler.start) {\n\t\t\t\t\thandler.start(low, attrs, u);\n\t\t\t\t}\n\n\t\t\t\tfunction attrReplacer(match, name, doubleQuotedValue, singleQuotedValue, unquotedValue) {\n\t\t\t\t\tif (doubleQuotedValue === void 0 && singleQuotedValue === void 0 && unquotedValue === void 0) {\n\t\t\t\t\t\tattrs[name] = void 0; // attribute is like <button disabled></button>\n\t\t\t\t\t} else {\n\t\t\t\t\t\tattrs[name] = he.decode(doubleQuotedValue || singleQuotedValue || unquotedValue || '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction parseEndTag(tag, tagName) {\n\t\t\t\tvar i;\n\t\t\t\tvar pos = 0;\n\t\t\t\tvar low = lowercase(tagName);\n\t\t\t\tif (low) {\n\t\t\t\t\tfor (pos = stack.length - 1; pos >= 0; pos--) {\n\t\t\t\t\t\tif (stack[pos] === low) {\n\t\t\t\t\t\t\tbreak; // find the closest opened tag of the same type\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pos >= 0) {\n\t\t\t\t\tfor (i = stack.length - 1; i >= pos; i--) {\n\t\t\t\t\t\tif (handler.end) { // close all the open elements, up the stack\n\t\t\t\t\t\t\thandler.end(stack[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tstack.length = pos;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmodule.exports = parser;\n\n\t}, { \"./attributes\": 1, \"./elements\": 3, \"./lowercase\": 5, \"he\": 9 }], 8: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar he = require('he');\n\t\tvar lowercase = require('./lowercase');\n\t\tvar attributes = require('./attributes');\n\t\tvar elements = require('./elements');\n\n\t\tfunction sanitizer(buffer, options) {\n\t\t\tvar last;\n\t\t\tvar context;\n\t\t\tvar o = options || {};\n\n\t\t\treset();\n\n\t\t\treturn {\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tchars: chars\n\t\t\t};\n\n\t\t\tfunction out(value) {\n\t\t\t\tbuffer.push(value);\n\t\t\t}\n\n\t\t\tfunction start(tag, attrs, unary) {\n\t\t\t\tvar low = lowercase(tag);\n\n\t\t\t\tif (context.ignoring) {\n\t\t\t\t\tignore(low); return;\n\t\t\t\t}\n\t\t\t\tif ((o.allowedTags || []).indexOf(low) === -1) {\n\t\t\t\t\tignore(low); return;\n\t\t\t\t}\n\t\t\t\tif (o.filter && !o.filter({ tag: low, attrs: attrs })) {\n\t\t\t\t\tignore(low); return;\n\t\t\t\t}\n\n\t\t\t\tout('<');\n\t\t\t\tout(low);\n\t\t\t\tObject.keys(attrs).forEach(parse);\n\t\t\t\tout(unary ? '/>' : '>');\n\n\t\t\t\tfunction parse(key) {\n\t\t\t\t\tvar value = attrs[key];\n\t\t\t\t\tvar classesOk = (o.allowedClasses || {})[low] || [];\n\t\t\t\t\tvar attrsOk = (o.allowedAttributes || {})[low] || [];\n\t\t\t\t\tattrsOk = attrsOk.concat((o.allowedAttributes || {})['*'] || []);\n\t\t\t\t\tvar valid;\n\t\t\t\t\tvar lkey = lowercase(key);\n\t\t\t\t\tif (lkey === 'class' && attrsOk.indexOf(lkey) === -1) {\n\t\t\t\t\t\tvalue = value.split(' ').filter(isValidClass).join(' ').trim();\n\t\t\t\t\t\tvalid = value.length;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalid = attrsOk.indexOf(lkey) !== -1 && (attributes.uris[lkey] !== true || testUrl(value));\n\t\t\t\t\t}\n\t\t\t\t\tif (valid) {\n\t\t\t\t\t\tout(' ');\n\t\t\t\t\t\tout(key);\n\t\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\t\tout('=\"');\n\t\t\t\t\t\t\tout(he.encode(value));\n\t\t\t\t\t\t\tout('\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfunction isValidClass(className) {\n\t\t\t\t\t\treturn classesOk && classesOk.indexOf(className) !== -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction end(tag) {\n\t\t\t\tvar low = lowercase(tag);\n\t\t\t\tvar allowed = (o.allowedTags || []).indexOf(low) !== -1;\n\t\t\t\tif (allowed) {\n\t\t\t\t\tif (context.ignoring === false) {\n\t\t\t\t\t\tout('</');\n\t\t\t\t\t\tout(low);\n\t\t\t\t\t\tout('>');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tunignore(low);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tunignore(low);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction testUrl(text) {\n\t\t\t\tvar start = text[0];\n\t\t\t\tif (start === '#' || start === '/') {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tvar colon = text.indexOf(':');\n\t\t\t\tif (colon === -1) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tvar questionmark = text.indexOf('?');\n\t\t\t\tif (questionmark !== -1 && colon > questionmark) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tvar hash = text.indexOf('#');\n\t\t\t\tif (hash !== -1 && colon > hash) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn o.allowedSchemes.some(matches);\n\n\t\t\t\tfunction matches(scheme) {\n\t\t\t\t\treturn text.indexOf(scheme + ':') === 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction chars(text) {\n\t\t\t\tif (context.ignoring === false) {\n\t\t\t\t\tout(o.transformText ? o.transformText(text) : text);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction ignore(tag) {\n\t\t\t\tif (elements.voids[tag]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (context.ignoring === false) {\n\t\t\t\t\tcontext = { ignoring: tag, depth: 1 };\n\t\t\t\t} else if (context.ignoring === tag) {\n\t\t\t\t\tcontext.depth++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction unignore(tag) {\n\t\t\t\tif (context.ignoring === tag) {\n\t\t\t\t\tif (--context.depth <= 0) {\n\t\t\t\t\t\treset();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction reset() {\n\t\t\t\tcontext = { ignoring: false, depth: 0 };\n\t\t\t}\n\t\t}\n\n\t\tmodule.exports = sanitizer;\n\n\t}, { \"./attributes\": 1, \"./elements\": 3, \"./lowercase\": 5, \"he\": 9 }], 9: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tvar escapes = {\n\t\t\t'&': '&amp;',\n\t\t\t'<': '&lt;',\n\t\t\t'>': '&gt;',\n\t\t\t'\"': '&quot;',\n\t\t\t\"'\": '&#39;'\n\t\t};\n\t\tvar unescapes = {\n\t\t\t'&amp;': '&',\n\t\t\t'&lt;': '<',\n\t\t\t'&gt;': '>',\n\t\t\t'&quot;': '\"',\n\t\t\t'&#39;': \"'\"\n\t\t};\n\t\tvar rescaped = /(&amp;|&lt;|&gt;|&quot;|&#39;)/g;\n\t\tvar runescaped = /[&<>\"']/g;\n\n\t\tfunction escapeHtmlChar(match) {\n\t\t\treturn escapes[match];\n\t\t}\n\t\tfunction unescapeHtmlChar(match) {\n\t\t\treturn unescapes[match];\n\t\t}\n\n\t\tfunction escapeHtml(text) {\n\t\t\treturn text == null ? '' : String(text).replace(runescaped, escapeHtmlChar);\n\t\t}\n\n\t\tfunction unescapeHtml(html) {\n\t\t\treturn html == null ? '' : String(html).replace(rescaped, unescapeHtmlChar);\n\t\t}\n\n\t\tescapeHtml.options = unescapeHtml.options = {};\n\n\t\tmodule.exports = {\n\t\t\tencode: escapeHtml,\n\t\t\tescape: escapeHtml,\n\t\t\tdecode: unescapeHtml,\n\t\t\tunescape: unescapeHtml,\n\t\t\tversion: '1.0.0-browser'\n\t\t};\n\n\t}, {}], 10: [function (require, module, exports) {\n\t\t'use strict';\n\n\t\tfunction toMap(list) {\n\t\t\treturn list.reduce(asKey, {});\n\t\t}\n\n\t\tfunction asKey(accumulator, item) {\n\t\t\taccumulator[item] = true;\n\t\t\treturn accumulator;\n\t\t}\n\n\t\tmodule.exports = toMap;\n\n\t}, {}]\n}, {}, [4]);\n\n// ESM-comment-begin\n// define(function() { return { insane: __insane_func }; });\n// ESM-comment-end\n\n// ESM-uncomment-begin\nexport var insane = __insane_func;\n// ESM-uncomment-end\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar _a;\r\nimport { renderMarkdown } from '../../../base/browser/markdownRenderer.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { tokenizeToString } from '../../common/modes/textToHtmlTokenizer.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { TokenizationRegistry } from '../../common/modes.js';\r\n/**\r\n * Markdown renderer that can render codeblocks with the editor mechanics. This\r\n * renderer should always be preferred.\r\n */\r\nlet MarkdownRenderer = class MarkdownRenderer {\r\n    constructor(_options, _modeService, _openerService) {\r\n        this._options = _options;\r\n        this._modeService = _modeService;\r\n        this._openerService = _openerService;\r\n        this._onDidRenderAsync = new Emitter();\r\n        this.onDidRenderAsync = this._onDidRenderAsync.event;\r\n    }\r\n    dispose() {\r\n        this._onDidRenderAsync.dispose();\r\n    }\r\n    render(markdown, options, markedOptions) {\r\n        const disposables = new DisposableStore();\r\n        let element;\r\n        if (!markdown) {\r\n            element = document.createElement('span');\r\n        }\r\n        else {\r\n            element = renderMarkdown(markdown, Object.assign(Object.assign({}, this._getRenderOptions(markdown, disposables)), options), markedOptions);\r\n        }\r\n        return {\r\n            element,\r\n            dispose: () => disposables.dispose()\r\n        };\r\n    }\r\n    _getRenderOptions(markdown, disposeables) {\r\n        return {\r\n            baseUrl: this._options.baseUrl,\r\n            codeBlockRenderer: (languageAlias, value) => __awaiter(this, void 0, void 0, function* () {\r\n                var _a, _b, _c, _d;\r\n                // In markdown,\r\n                // it is possible that we stumble upon language aliases (e.g.js instead of javascript)\r\n                // it is possible no alias is given in which case we fall back to the current editor lang\r\n                let modeId;\r\n                if (languageAlias) {\r\n                    modeId = this._modeService.getModeIdForLanguageName(languageAlias);\r\n                }\r\n                else if (this._options.editor) {\r\n                    modeId = (_a = this._options.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getLanguageIdentifier().language;\r\n                }\r\n                if (!modeId) {\r\n                    modeId = 'plaintext';\r\n                }\r\n                this._modeService.triggerMode(modeId);\r\n                const tokenization = (_b = yield TokenizationRegistry.getPromise(modeId)) !== null && _b !== void 0 ? _b : undefined;\r\n                const element = document.createElement('span');\r\n                element.innerHTML = ((_d = (_c = MarkdownRenderer._ttpTokenizer) === null || _c === void 0 ? void 0 : _c.createHTML(value, tokenization)) !== null && _d !== void 0 ? _d : tokenizeToString(value, tokenization));\r\n                // use \"good\" font\r\n                let fontFamily = this._options.codeBlockFontFamily;\r\n                if (this._options.editor) {\r\n                    fontFamily = this._options.editor.getOption(40 /* fontInfo */).fontFamily;\r\n                }\r\n                if (fontFamily) {\r\n                    element.style.fontFamily = fontFamily;\r\n                }\r\n                return element;\r\n            }),\r\n            asyncRenderCallback: () => this._onDidRenderAsync.fire(),\r\n            actionHandler: {\r\n                callback: (content) => this._openerService.open(content, { fromUserGesture: true, allowContributedOpeners: true, allowCommands: markdown.isTrusted }).catch(onUnexpectedError),\r\n                disposeables\r\n            }\r\n        };\r\n    }\r\n};\r\nMarkdownRenderer._ttpTokenizer = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('tokenizeToString', {\r\n    createHTML(value, tokenizer) {\r\n        return tokenizeToString(value, tokenizer);\r\n    }\r\n});\r\nMarkdownRenderer = __decorate([\r\n    __param(1, IModeService),\r\n    __param(2, IOpenerService)\r\n], MarkdownRenderer);\r\nexport { MarkdownRenderer };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { coalesce } from '../../../base/common/arrays.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { registerModelAndPositionCommand } from '../../browser/editorExtensions.js';\r\nimport { HoverProviderRegistry } from '../../common/modes.js';\r\nexport function getHover(model, position, token) {\r\n    const supports = HoverProviderRegistry.ordered(model);\r\n    const promises = supports.map(support => {\r\n        return Promise.resolve(support.provideHover(model, position, token)).then(hover => {\r\n            return hover && isValid(hover) ? hover : undefined;\r\n        }, err => {\r\n            onUnexpectedExternalError(err);\r\n            return undefined;\r\n        });\r\n    });\r\n    return Promise.all(promises).then(coalesce);\r\n}\r\nregisterModelAndPositionCommand('_executeHoverProvider', (model, position) => getHover(model, position, CancellationToken.None));\r\nfunction isValid(result) {\r\n    const hasRange = (typeof result.range !== 'undefined');\r\n    const hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\r\n    return hasRange && hasHtmlContent;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { MarkdownString, isEmptyMarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { MarkdownRenderer } from '../../browser/core/markdownRenderer.js';\r\nimport { asArray } from '../../../base/common/arrays.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { HoverProviderRegistry } from '../../common/modes.js';\r\nimport { getHover } from './getHover.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nconst $ = dom.$;\r\nexport class MarkdownHover {\r\n    constructor(owner, range, contents) {\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.contents = contents;\r\n    }\r\n    isValidForHoverAnchor(anchor) {\r\n        return (anchor.type === 1 /* Range */\r\n            && this.range.startColumn <= anchor.range.startColumn\r\n            && this.range.endColumn >= anchor.range.endColumn);\r\n    }\r\n}\r\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\r\n    constructor(_editor, _hover, _modeService, _openerService, _configurationService) {\r\n        this._editor = _editor;\r\n        this._hover = _hover;\r\n        this._modeService = _modeService;\r\n        this._openerService = _openerService;\r\n        this._configurationService = _configurationService;\r\n    }\r\n    createLoadingMessage(anchor) {\r\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))]);\r\n    }\r\n    computeSync(anchor, lineDecorations) {\r\n        if (!this._editor.hasModel() || anchor.type !== 1 /* Range */) {\r\n            return [];\r\n        }\r\n        const model = this._editor.getModel();\r\n        const lineNumber = anchor.range.startLineNumber;\r\n        const maxColumn = model.getLineMaxColumn(lineNumber);\r\n        const result = [];\r\n        for (const d of lineDecorations) {\r\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\r\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\r\n            const hoverMessage = d.options.hoverMessage;\r\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\r\n                continue;\r\n            }\r\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\r\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage)));\r\n        }\r\n        const lineLength = this._editor.getModel().getLineLength(lineNumber);\r\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength');\r\n        if (lineLength >= maxTokenizationLineLength) {\r\n            result.push(new MarkdownHover(this, new Range(lineNumber, 1, lineNumber, lineLength + 1), [{\r\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\r\n                }]));\r\n        }\r\n        return result;\r\n    }\r\n    computeAsync(anchor, lineDecorations, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel() || anchor.type !== 1 /* Range */) {\r\n                return Promise.resolve([]);\r\n            }\r\n            const model = this._editor.getModel();\r\n            if (!HoverProviderRegistry.has(model)) {\r\n                return Promise.resolve([]);\r\n            }\r\n            const hovers = yield getHover(model, new Position(anchor.range.startLineNumber, anchor.range.startColumn), token);\r\n            const result = [];\r\n            for (const hover of hovers) {\r\n                if (isEmptyMarkdownString(hover.contents)) {\r\n                    continue;\r\n                }\r\n                const rng = hover.range ? Range.lift(hover.range) : anchor.range;\r\n                result.push(new MarkdownHover(this, rng, hover.contents));\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    renderHoverParts(hoverParts, fragment, statusBar) {\r\n        const disposables = new DisposableStore();\r\n        for (const hoverPart of hoverParts) {\r\n            for (const contents of hoverPart.contents) {\r\n                if (isEmptyMarkdownString(contents)) {\r\n                    continue;\r\n                }\r\n                const markdownHoverElement = $('div.hover-row.markdown-hover');\r\n                const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\r\n                const renderer = disposables.add(new MarkdownRenderer({ editor: this._editor }, this._modeService, this._openerService));\r\n                disposables.add(renderer.onDidRenderAsync(() => {\r\n                    hoverContentsElement.className = 'hover-contents code-hover-contents';\r\n                    this._hover.onContentsChanged();\r\n                }));\r\n                const renderedContents = disposables.add(renderer.render(contents));\r\n                hoverContentsElement.appendChild(renderedContents.element);\r\n                fragment.appendChild(markdownHoverElement);\r\n            }\r\n        }\r\n        return disposables;\r\n    }\r\n};\r\nMarkdownHoverParticipant = __decorate([\r\n    __param(2, IModeService),\r\n    __param(3, IOpenerService),\r\n    __param(4, IConfigurationService)\r\n], MarkdownHoverParticipant);\r\nexport { MarkdownHoverParticipant };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class HoverRangeAnchor {\r\n    constructor(priority, range) {\r\n        this.priority = priority;\r\n        this.range = range;\r\n        this.type = 1 /* Range */;\r\n    }\r\n    equals(other) {\r\n        return (other.type === 1 /* Range */ && this.range.equalsRange(other.range));\r\n    }\r\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\r\n        return (lastAnchor.type === 1 /* Range */ && showAtPosition.lineNumber === this.range.startLineNumber);\r\n    }\r\n}\r\nexport class HoverForeignElementAnchor {\r\n    constructor(priority, owner, range) {\r\n        this.priority = priority;\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.type = 2 /* ForeignElement */;\r\n    }\r\n    equals(other) {\r\n        return (other.type === 2 /* ForeignElement */ && this.owner === other.owner);\r\n    }\r\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\r\n        return (lastAnchor.type === 2 /* ForeignElement */ && this.owner === lastAnchor.owner);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar _a;\r\nimport './ghostText.css';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Disposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\r\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\r\nimport { createStringBuilder } from '../../common/core/stringBuilder.js';\r\nimport { Configuration } from '../../browser/config/configuration.js';\r\nimport { LineTokens } from '../../common/core/lineTokens.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { ghostTextBorder, ghostTextForeground } from '../../common/view/editorColorRegistry.js';\r\nimport { RGBA, Color } from '../../../base/common/color.js';\r\nimport { CursorColumns } from '../../common/controller/cursorCommon.js';\r\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\r\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorGhostText', { createHTML: value => value });\r\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\r\n    constructor(editor, model, codeEditorService, themeService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.model = model;\r\n        this.codeEditorService = codeEditorService;\r\n        this.themeService = themeService;\r\n        this.disposed = false;\r\n        this.partsWidget = this._register(new DecorationsWidget(this.editor, this.codeEditorService, this.themeService));\r\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor));\r\n        this.viewMoreContentWidget = undefined;\r\n        this._register(this.editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(27 /* disableMonospaceOptimizations */)\r\n                || e.hasChanged(103 /* stopRenderingLineAfter */)\r\n                || e.hasChanged(86 /* renderWhitespace */)\r\n                || e.hasChanged(80 /* renderControlCharacters */)\r\n                || e.hasChanged(41 /* fontLigatures */)\r\n                || e.hasChanged(40 /* fontInfo */)\r\n                || e.hasChanged(56 /* lineHeight */)) {\r\n                this.update();\r\n            }\r\n        }));\r\n        this._register(toDisposable(() => {\r\n            var _a;\r\n            this.disposed = true;\r\n            this.update();\r\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n            this.viewMoreContentWidget = undefined;\r\n        }));\r\n        this._register(model.onDidChange(() => {\r\n            this.update();\r\n        }));\r\n        this.update();\r\n    }\r\n    shouldShowHoverAtViewZone(viewZoneId) {\r\n        return (this.additionalLinesWidget.viewZoneId === viewZoneId);\r\n    }\r\n    update() {\r\n        var _a;\r\n        const ghostText = this.model.ghostText;\r\n        if (!this.editor.hasModel() || !ghostText || this.disposed) {\r\n            this.partsWidget.clear();\r\n            this.additionalLinesWidget.clear();\r\n            return;\r\n        }\r\n        const inlineTexts = new Array();\r\n        const additionalLines = new Array();\r\n        function addToAdditionalLines(lines, className) {\r\n            if (additionalLines.length > 0) {\r\n                const lastLine = additionalLines[additionalLines.length - 1];\r\n                if (className) {\r\n                    lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* Regular */));\r\n                }\r\n                lastLine.content += lines[0];\r\n                lines = lines.slice(1);\r\n            }\r\n            for (const line of lines) {\r\n                additionalLines.push({\r\n                    content: line,\r\n                    decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* Regular */)] : []\r\n                });\r\n            }\r\n        }\r\n        const textBufferLine = this.editor.getModel().getLineContent(ghostText.lineNumber);\r\n        this.editor.getModel().getLineTokens(ghostText.lineNumber);\r\n        let hiddenTextStartColumn = undefined;\r\n        let lastIdx = 0;\r\n        for (const part of ghostText.parts) {\r\n            let lines = part.lines;\r\n            if (hiddenTextStartColumn === undefined) {\r\n                inlineTexts.push({\r\n                    column: part.column,\r\n                    text: lines[0],\r\n                });\r\n                lines = lines.slice(1);\r\n            }\r\n            else {\r\n                addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\r\n            }\r\n            if (lines.length > 0) {\r\n                addToAdditionalLines(lines, 'ghost-text');\r\n                if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\r\n                    hiddenTextStartColumn = part.column;\r\n                }\r\n            }\r\n            lastIdx = part.column - 1;\r\n        }\r\n        if (hiddenTextStartColumn !== undefined) {\r\n            addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\r\n        }\r\n        this.partsWidget.setParts(ghostText.lineNumber, inlineTexts, hiddenTextStartColumn !== undefined ? { column: hiddenTextStartColumn, length: textBufferLine.length + 1 - hiddenTextStartColumn } : undefined);\r\n        this.additionalLinesWidget.updateLines(ghostText.lineNumber, additionalLines, ghostText.additionalReservedLineCount);\r\n        if (ghostText.parts.some(p => p.lines.length < 0)) {\r\n            // Not supported at the moment, condition is always false.\r\n            this.viewMoreContentWidget = this.renderViewMoreLines(new Position(ghostText.lineNumber, this.editor.getModel().getLineMaxColumn(ghostText.lineNumber)), '', 0);\r\n        }\r\n        else {\r\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n            this.viewMoreContentWidget = undefined;\r\n        }\r\n    }\r\n    renderViewMoreLines(position, firstLineText, remainingLinesLength) {\r\n        const fontInfo = this.editor.getOption(40 /* fontInfo */);\r\n        const domNode = document.createElement('div');\r\n        domNode.className = 'suggest-preview-additional-widget';\r\n        Configuration.applyFontInfoSlow(domNode, fontInfo);\r\n        const spacer = document.createElement('span');\r\n        spacer.className = 'content-spacer';\r\n        spacer.append(firstLineText);\r\n        domNode.append(spacer);\r\n        const newline = document.createElement('span');\r\n        newline.className = 'content-newline suggest-preview-text';\r\n        newline.append('\u23CE  ');\r\n        domNode.append(newline);\r\n        const disposableStore = new DisposableStore();\r\n        const button = document.createElement('div');\r\n        button.className = 'button suggest-preview-text';\r\n        button.append(`+${remainingLinesLength} lines\u2026`);\r\n        disposableStore.add(dom.addStandardDisposableListener(button, 'mousedown', (e) => {\r\n            var _a;\r\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.setExpanded(true);\r\n            e.preventDefault();\r\n            this.editor.focus();\r\n        }));\r\n        domNode.append(button);\r\n        return new ViewMoreLinesContentWidget(this.editor, position, domNode, disposableStore);\r\n    }\r\n};\r\nGhostTextWidget = __decorate([\r\n    __param(2, ICodeEditorService),\r\n    __param(3, IThemeService)\r\n], GhostTextWidget);\r\nexport { GhostTextWidget };\r\nlet DecorationsWidget = class DecorationsWidget {\r\n    constructor(editor, codeEditorService, themeService) {\r\n        this.editor = editor;\r\n        this.codeEditorService = codeEditorService;\r\n        this.themeService = themeService;\r\n        this.decorationIds = [];\r\n        this.disposableStore = new DisposableStore();\r\n    }\r\n    dispose() {\r\n        this.clear();\r\n        this.disposableStore.dispose();\r\n    }\r\n    clear() {\r\n        this.editor.deltaDecorations(this.decorationIds, []);\r\n        this.disposableStore.clear();\r\n    }\r\n    setParts(lineNumber, parts, hiddenText) {\r\n        this.disposableStore.clear();\r\n        const colorTheme = this.themeService.getColorTheme();\r\n        const foreground = colorTheme.getColor(ghostTextForeground);\r\n        let opacity = undefined;\r\n        let color = undefined;\r\n        if (foreground) {\r\n            opacity = String(foreground.rgba.a);\r\n            color = Color.Format.CSS.format(opaque(foreground));\r\n        }\r\n        const borderColor = colorTheme.getColor(ghostTextBorder);\r\n        let border = undefined;\r\n        if (borderColor) {\r\n            border = `2px dashed ${borderColor}`;\r\n        }\r\n        const textModel = this.editor.getModel();\r\n        if (!textModel) {\r\n            return;\r\n        }\r\n        const { tabSize } = textModel.getOptions();\r\n        const line = textModel.getLineContent(lineNumber) || '';\r\n        let lastIndex = 0;\r\n        let currentLinePrefix = '';\r\n        const hiddenTextDecorations = new Array();\r\n        if (hiddenText) {\r\n            hiddenTextDecorations.push({\r\n                range: Range.fromPositions(new Position(lineNumber, hiddenText.column), new Position(lineNumber, hiddenText.column + hiddenText.length)),\r\n                options: {\r\n                    inlineClassName: 'ghost-text-hidden',\r\n                    description: 'ghost-text-hidden'\r\n                }\r\n            });\r\n        }\r\n        this.decorationIds = this.editor.deltaDecorations(this.decorationIds, parts.map(p => {\r\n            currentLinePrefix += line.substring(lastIndex, p.column - 1);\r\n            lastIndex = p.column - 1;\r\n            // To avoid visual confusion, we don't want to render visible whitespace\r\n            const contentText = this.renderSingleLineText(p.text, currentLinePrefix, tabSize, false);\r\n            const decorationType = this.disposableStore.add(registerDecorationType(this.codeEditorService, 'ghost-text', '0-ghost-text-', {\r\n                after: {\r\n                    // TODO: escape?\r\n                    contentText,\r\n                    opacity,\r\n                    color,\r\n                    border,\r\n                },\r\n            }));\r\n            return ({\r\n                range: Range.fromPositions(new Position(lineNumber, p.column)),\r\n                options: Object.assign({}, decorationType.resolve())\r\n            });\r\n        }).concat(hiddenTextDecorations));\r\n    }\r\n    renderSingleLineText(text, lineStart, tabSize, renderWhitespace) {\r\n        const newLine = lineStart + text;\r\n        const visibleColumnsByColumns = CursorColumns.visibleColumnsByColumns(newLine, tabSize);\r\n        let contentText = '';\r\n        let curCol = lineStart.length + 1;\r\n        for (const c of text) {\r\n            if (c === '\\t') {\r\n                const width = visibleColumnsByColumns[curCol + 1] - visibleColumnsByColumns[curCol];\r\n                if (renderWhitespace) {\r\n                    contentText += '\u2192';\r\n                    for (let i = 1; i < width; i++) {\r\n                        contentText += '\\xa0';\r\n                    }\r\n                }\r\n                else {\r\n                    for (let i = 0; i < width; i++) {\r\n                        contentText += '\\xa0';\r\n                    }\r\n                }\r\n            }\r\n            else if (c === ' ') {\r\n                if (renderWhitespace) {\r\n                    contentText += '\u00B7';\r\n                }\r\n                else {\r\n                    contentText += '\\xa0';\r\n                }\r\n            }\r\n            else {\r\n                contentText += c;\r\n            }\r\n            curCol += 1;\r\n        }\r\n        return contentText;\r\n    }\r\n};\r\nDecorationsWidget = __decorate([\r\n    __param(1, ICodeEditorService),\r\n    __param(2, IThemeService)\r\n], DecorationsWidget);\r\nfunction opaque(color) {\r\n    const { r, b, g } = color.rgba;\r\n    return new Color(new RGBA(r, g, b, 255));\r\n}\r\nclass AdditionalLinesWidget {\r\n    constructor(editor) {\r\n        this.editor = editor;\r\n        this._viewZoneId = undefined;\r\n    }\r\n    get viewZoneId() { return this._viewZoneId; }\r\n    dispose() {\r\n        this.clear();\r\n    }\r\n    clear() {\r\n        this.editor.changeViewZones((changeAccessor) => {\r\n            if (this._viewZoneId) {\r\n                changeAccessor.removeZone(this._viewZoneId);\r\n                this._viewZoneId = undefined;\r\n            }\r\n        });\r\n    }\r\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\r\n        const textModel = this.editor.getModel();\r\n        if (!textModel) {\r\n            return;\r\n        }\r\n        const { tabSize } = textModel.getOptions();\r\n        this.editor.changeViewZones((changeAccessor) => {\r\n            if (this._viewZoneId) {\r\n                changeAccessor.removeZone(this._viewZoneId);\r\n                this._viewZoneId = undefined;\r\n            }\r\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\r\n            if (heightInLines > 0) {\r\n                const domNode = document.createElement('div');\r\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions());\r\n                this._viewZoneId = changeAccessor.addZone({\r\n                    afterLineNumber: lineNumber,\r\n                    heightInLines: heightInLines,\r\n                    domNode,\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction renderLines(domNode, tabSize, lines, opts) {\r\n    const disableMonospaceOptimizations = opts.get(27 /* disableMonospaceOptimizations */);\r\n    const stopRenderingLineAfter = opts.get(103 /* stopRenderingLineAfter */);\r\n    // To avoid visual confusion, we don't want to render visible whitespace\r\n    const renderWhitespace = 'none';\r\n    const renderControlCharacters = opts.get(80 /* renderControlCharacters */);\r\n    const fontLigatures = opts.get(41 /* fontLigatures */);\r\n    const fontInfo = opts.get(40 /* fontInfo */);\r\n    const lineHeight = opts.get(56 /* lineHeight */);\r\n    const sb = createStringBuilder(10000);\r\n    sb.appendASCIIString('<div class=\"suggest-preview-text\">');\r\n    for (let i = 0, len = lines.length; i < len; i++) {\r\n        const lineData = lines[i];\r\n        const line = lineData.content;\r\n        sb.appendASCIIString('<div class=\"view-line');\r\n        sb.appendASCIIString('\" style=\"top:');\r\n        sb.appendASCIIString(String(i * lineHeight));\r\n        sb.appendASCIIString('px;width:1000000px;\">');\r\n        const isBasicASCII = strings.isBasicASCII(line);\r\n        const containsRTL = strings.containsRTL(line);\r\n        const lineTokens = LineTokens.createEmpty(line);\r\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\r\n        sb.appendASCIIString('</div>');\r\n    }\r\n    sb.appendASCIIString('</div>');\r\n    Configuration.applyFontInfoSlow(domNode, fontInfo);\r\n    const html = sb.build();\r\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\r\n    domNode.innerHTML = trustedhtml;\r\n}\r\nlet keyCounter = 0;\r\nfunction registerDecorationType(service, description, keyPrefix, options) {\r\n    const key = keyPrefix + (keyCounter++);\r\n    service.registerDecorationType(description, key, options);\r\n    return {\r\n        dispose() {\r\n            service.removeDecorationType(key);\r\n        },\r\n        resolve() {\r\n            return service.resolveDecorationOptions(key, true);\r\n        }\r\n    };\r\n}\r\nclass ViewMoreLinesContentWidget extends Disposable {\r\n    constructor(editor, position, domNode, disposableStore) {\r\n        super();\r\n        this.editor = editor;\r\n        this.position = position;\r\n        this.domNode = domNode;\r\n        this.allowEditorOverflow = false;\r\n        this.suppressMouseDown = false;\r\n        this._register(disposableStore);\r\n        this._register(toDisposable(() => {\r\n            this.editor.removeContentWidget(this);\r\n        }));\r\n        this.editor.addContentWidget(this);\r\n    }\r\n    getId() {\r\n        return 'editor.widget.viewMoreLinesWidget';\r\n    }\r\n    getDomNode() {\r\n        return this.domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            position: this.position,\r\n            preference: [0 /* EXACT */]\r\n        };\r\n    }\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    const foreground = theme.getColor(ghostTextForeground);\r\n    if (foreground) {\r\n        const opacity = String(foreground.rgba.a);\r\n        const color = Color.Format.CSS.format(opaque(foreground));\r\n        // We need to override the only used token type .mtk1\r\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { opacity: ${opacity}; color: ${color}; }`);\r\n    }\r\n    const border = theme.getColor(ghostTextBorder);\r\n    if (border) {\r\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { border: 2px dashed ${border}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { trackDisposable } from '../../../base/common/lifecycle.js';\r\nexport function createDisposableRef(object, disposable) {\r\n    return {\r\n        object,\r\n        dispose: () => disposable === null || disposable === void 0 ? void 0 : disposable.dispose(),\r\n    };\r\n}\r\n// TODO: merge this class into Matt's MutableDisposable.\r\n/**\r\n * Manages the lifecycle of a disposable value that may be changed.\r\n *\r\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\r\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\r\n */\r\nexport class MutableDisposable {\r\n    constructor() {\r\n        this._isDisposed = false;\r\n        trackDisposable(this);\r\n    }\r\n    get value() {\r\n        return this._isDisposed ? undefined : this._value;\r\n    }\r\n    set value(value) {\r\n        var _a;\r\n        if (this._isDisposed || value === this._value) {\r\n            return;\r\n        }\r\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._value = value;\r\n    }\r\n    clear() {\r\n        this.value = undefined;\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._isDisposed = true;\r\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._value = undefined;\r\n    }\r\n    replace(newValue) {\r\n        const oldValue = this._value;\r\n        this._value = newValue;\r\n        return oldValue;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nexport class GhostText {\r\n    constructor(lineNumber, parts, additionalReservedLineCount = 0) {\r\n        this.lineNumber = lineNumber;\r\n        this.parts = parts;\r\n        this.additionalReservedLineCount = additionalReservedLineCount;\r\n    }\r\n}\r\nexport class BaseGhostTextWidgetModel extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this.editor = editor;\r\n        this._expanded = undefined;\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(104 /* suggest */) && this._expanded === undefined) {\r\n                this.onDidChangeEmitter.fire();\r\n            }\r\n        }));\r\n    }\r\n    get expanded() {\r\n        if (this._expanded === undefined) {\r\n            // TODO this should use a global hidden setting.\r\n            // See https://github.com/microsoft/vscode/issues/125037.\r\n            return true;\r\n        }\r\n        return this._expanded;\r\n    }\r\n    setExpanded(expanded) {\r\n        this._expanded = true;\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { createCancelablePromise, RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { InlineCompletionsProviderRegistry, InlineCompletionTriggerKind } from '../../common/modes.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { MutableDisposable } from './utils.js';\r\nimport { RedoCommand, UndoCommand } from '../../browser/editorExtensions.js';\r\nimport { CoreEditingCommands } from '../../browser/controller/coreCommands.js';\r\nimport { stringDiff } from '../../../base/common/diff/diff.js';\r\nimport { GhostText, BaseGhostTextWidgetModel } from './ghostText.js';\r\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\r\n    constructor(editor, commandService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.commandService = commandService;\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        this.completionSession = this._register(new MutableDisposable());\r\n        this.active = false;\r\n        this._register(commandService.onDidExecuteCommand(e => {\r\n            // These commands don't trigger onDidType.\r\n            const commands = new Set([\r\n                UndoCommand.id,\r\n                RedoCommand.id,\r\n                CoreEditingCommands.Tab.id,\r\n                CoreEditingCommands.DeleteLeft.id,\r\n                CoreEditingCommands.DeleteRight.id\r\n            ]);\r\n            if (commands.has(e.commandId) && editor.hasTextFocus()) {\r\n                this.handleUserInput();\r\n            }\r\n        }));\r\n        this._register(this.editor.onDidType((e) => {\r\n            this.handleUserInput();\r\n        }));\r\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\r\n            if (this.session && !this.session.isValid) {\r\n                this.hide();\r\n            }\r\n        }));\r\n    }\r\n    handleUserInput() {\r\n        if (this.session && !this.session.isValid) {\r\n            this.hide();\r\n        }\r\n        setTimeout(() => {\r\n            // Wait for the cursor update that happens in the same iteration loop iteration\r\n            this.startSessionIfTriggered();\r\n        }, 0);\r\n    }\r\n    get session() {\r\n        return this.completionSession.value;\r\n    }\r\n    get ghostText() {\r\n        var _a;\r\n        return (_a = this.session) === null || _a === void 0 ? void 0 : _a.ghostText;\r\n    }\r\n    get minReservedLineCount() {\r\n        return this.session ? this.session.minReservedLineCount : 0;\r\n    }\r\n    get expanded() {\r\n        return this.session ? this.session.expanded : false;\r\n    }\r\n    setExpanded(expanded) {\r\n        var _a;\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\r\n    }\r\n    setActive(active) {\r\n        var _a;\r\n        this.active = active;\r\n        if (active) {\r\n            (_a = this.session) === null || _a === void 0 ? void 0 : _a.scheduleAutomaticUpdate();\r\n        }\r\n    }\r\n    startSessionIfTriggered() {\r\n        const suggestOptions = this.editor.getOption(52 /* inlineSuggest */);\r\n        if (!suggestOptions.enabled) {\r\n            return;\r\n        }\r\n        if (this.session && this.session.isValid) {\r\n            return;\r\n        }\r\n        this.trigger();\r\n    }\r\n    trigger() {\r\n        if (this.completionSession.value) {\r\n            return;\r\n        }\r\n        this.completionSession.value = new InlineCompletionsSession(this.editor, this.editor.getPosition(), () => this.active, this.commandService);\r\n        this.completionSession.value.takeOwnership(this.completionSession.value.onDidChange(() => {\r\n            this.onDidChangeEmitter.fire();\r\n        }));\r\n    }\r\n    hide() {\r\n        this.completionSession.clear();\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n    commitCurrentSuggestion() {\r\n        var _a;\r\n        // Don't dispose the session, so that after committing, more suggestions are shown.\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.commitCurrentCompletion();\r\n    }\r\n    showNext() {\r\n        var _a;\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\r\n    }\r\n    showPrevious() {\r\n        var _a;\r\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield ((_a = this.session) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\r\n            return result !== undefined ? result : false;\r\n        });\r\n    }\r\n};\r\nInlineCompletionsModel = __decorate([\r\n    __param(1, ICommandService)\r\n], InlineCompletionsModel);\r\nexport { InlineCompletionsModel };\r\nexport class InlineCompletionsSession extends BaseGhostTextWidgetModel {\r\n    constructor(editor, triggerPosition, shouldUpdate, commandService) {\r\n        super(editor);\r\n        this.triggerPosition = triggerPosition;\r\n        this.shouldUpdate = shouldUpdate;\r\n        this.commandService = commandService;\r\n        this.minReservedLineCount = 0;\r\n        this.updateOperation = this._register(new MutableDisposable());\r\n        this.cache = this._register(new MutableDisposable());\r\n        this.updateSoon = this._register(new RunOnceScheduler(() => this.update(InlineCompletionTriggerKind.Automatic), 50));\r\n        this.textModel = this.editor.getModel();\r\n        //#region Selection\r\n        // We use a semantic id to track the selection even if the cache changes.\r\n        this.currentlySelectedCompletionId = undefined;\r\n        let lastCompletionItem = undefined;\r\n        this._register(this.onDidChange(() => {\r\n            const currentCompletion = this.currentCompletion;\r\n            if (currentCompletion && currentCompletion.sourceInlineCompletion !== lastCompletionItem) {\r\n                lastCompletionItem = currentCompletion.sourceInlineCompletion;\r\n                const provider = currentCompletion.sourceProvider;\r\n                if (provider.handleItemDidShow) {\r\n                    provider.handleItemDidShow(currentCompletion.sourceInlineCompletions, lastCompletionItem);\r\n                }\r\n            }\r\n        }));\r\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\r\n            if (this.cache.value) {\r\n                this.onDidChangeEmitter.fire();\r\n            }\r\n        }));\r\n        this._register(this.editor.onDidChangeModelContent((e) => {\r\n            if (this.cache.value) {\r\n                let hasChanged = false;\r\n                for (const c of this.cache.value.completions) {\r\n                    const newRange = this.textModel.getDecorationRange(c.decorationId);\r\n                    if (!newRange) {\r\n                        onUnexpectedError(new Error('Decoration has no range'));\r\n                        continue;\r\n                    }\r\n                    if (!c.synchronizedRange.equalsRange(newRange)) {\r\n                        hasChanged = true;\r\n                        c.synchronizedRange = newRange;\r\n                    }\r\n                }\r\n                if (hasChanged) {\r\n                    this.onDidChangeEmitter.fire();\r\n                }\r\n            }\r\n            this.scheduleAutomaticUpdate();\r\n        }));\r\n        this._register(InlineCompletionsProviderRegistry.onDidChange(() => {\r\n            this.updateSoon.schedule();\r\n        }));\r\n        this.scheduleAutomaticUpdate();\r\n    }\r\n    fixAndGetIndexOfCurrentSelection() {\r\n        if (!this.currentlySelectedCompletionId || !this.cache.value) {\r\n            return 0;\r\n        }\r\n        if (this.cache.value.completions.length === 0) {\r\n            // don't reset the selection in this case\r\n            return 0;\r\n        }\r\n        const idx = this.cache.value.completions.findIndex(v => v.semanticId === this.currentlySelectedCompletionId);\r\n        if (idx === -1) {\r\n            // Reset the selection so that the selection does not jump back when it appears again\r\n            this.currentlySelectedCompletionId = undefined;\r\n            return 0;\r\n        }\r\n        return idx;\r\n    }\r\n    get currentCachedCompletion() {\r\n        if (!this.cache.value) {\r\n            return undefined;\r\n        }\r\n        return this.cache.value.completions[this.fixAndGetIndexOfCurrentSelection()];\r\n    }\r\n    showNextInlineCompletion() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.ensureUpdateWithExplicitContext();\r\n            const completions = ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions) || [];\r\n            if (completions.length > 0) {\r\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + 1) % completions.length;\r\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\r\n            }\r\n            else {\r\n                this.currentlySelectedCompletionId = undefined;\r\n            }\r\n            this.onDidChangeEmitter.fire();\r\n        });\r\n    }\r\n    showPreviousInlineCompletion() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.ensureUpdateWithExplicitContext();\r\n            const completions = ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions) || [];\r\n            if (completions.length > 0) {\r\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + completions.length - 1) % completions.length;\r\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\r\n            }\r\n            else {\r\n                this.currentlySelectedCompletionId = undefined;\r\n            }\r\n            this.onDidChangeEmitter.fire();\r\n        });\r\n    }\r\n    ensureUpdateWithExplicitContext() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this.updateOperation.value) {\r\n                // Restart or wait for current update operation\r\n                if (this.updateOperation.value.triggerKind === InlineCompletionTriggerKind.Explicit) {\r\n                    yield this.updateOperation.value.promise;\r\n                }\r\n                else {\r\n                    yield this.update(InlineCompletionTriggerKind.Explicit);\r\n                }\r\n            }\r\n            else if (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.triggerKind) !== InlineCompletionTriggerKind.Explicit) {\r\n                // Refresh cache\r\n                yield this.update(InlineCompletionTriggerKind.Explicit);\r\n            }\r\n        });\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this.ensureUpdateWithExplicitContext();\r\n            return (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions.length) || 0) > 1;\r\n        });\r\n    }\r\n    //#endregion\r\n    get ghostText() {\r\n        const currentCompletion = this.currentCompletion;\r\n        const mode = this.editor.getOptions().get(52 /* inlineSuggest */).mode;\r\n        return currentCompletion ? inlineCompletionToGhostText(currentCompletion, this.editor.getModel(), mode, this.editor.getSelection().getEndPosition()) : undefined;\r\n    }\r\n    get currentCompletion() {\r\n        const completion = this.currentCachedCompletion;\r\n        if (!completion) {\r\n            return undefined;\r\n        }\r\n        return {\r\n            text: completion.inlineCompletion.text,\r\n            range: completion.synchronizedRange,\r\n            command: completion.inlineCompletion.command,\r\n            sourceProvider: completion.inlineCompletion.sourceProvider,\r\n            sourceInlineCompletions: completion.inlineCompletion.sourceInlineCompletions,\r\n            sourceInlineCompletion: completion.inlineCompletion.sourceInlineCompletion,\r\n        };\r\n    }\r\n    get isValid() {\r\n        return this.editor.getPosition().lineNumber === this.triggerPosition.lineNumber;\r\n    }\r\n    scheduleAutomaticUpdate() {\r\n        // Since updateSoon debounces, starvation can happen.\r\n        // To prevent stale cache, we clear the current update operation.\r\n        this.updateOperation.clear();\r\n        this.updateSoon.schedule();\r\n    }\r\n    update(triggerKind) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.shouldUpdate()) {\r\n                return;\r\n            }\r\n            const position = this.editor.getPosition();\r\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\r\n                let result;\r\n                try {\r\n                    result = yield provideInlineCompletions(position, this.editor.getModel(), { triggerKind }, token);\r\n                }\r\n                catch (e) {\r\n                    onUnexpectedError(e);\r\n                    return;\r\n                }\r\n                if (token.isCancellationRequested) {\r\n                    return;\r\n                }\r\n                this.cache.value = new SynchronizedInlineCompletionsCache(this.editor, result, () => this.onDidChangeEmitter.fire(), triggerKind);\r\n                this.onDidChangeEmitter.fire();\r\n            }));\r\n            const operation = new UpdateOperation(promise, triggerKind);\r\n            this.updateOperation.value = operation;\r\n            yield promise;\r\n            if (this.updateOperation.value === operation) {\r\n                this.updateOperation.clear();\r\n            }\r\n        });\r\n    }\r\n    takeOwnership(disposable) {\r\n        this._register(disposable);\r\n    }\r\n    commitCurrentCompletion() {\r\n        if (!this.ghostText) {\r\n            // No ghost text was shown for this completion.\r\n            // Thus, we don't want to commit anything.\r\n            return;\r\n        }\r\n        const completion = this.currentCompletion;\r\n        if (completion) {\r\n            this.commit(completion);\r\n        }\r\n    }\r\n    commit(completion) {\r\n        // Mark the cache as stale, but don't dispose it yet,\r\n        // otherwise command args might get disposed.\r\n        const cache = this.cache.replace(undefined);\r\n        this.editor.executeEdits('inlineSuggestion.accept', [\r\n            EditOperation.replaceMove(completion.range, completion.text)\r\n        ]);\r\n        if (completion.command) {\r\n            this.commandService\r\n                .executeCommand(completion.command.id, ...(completion.command.arguments || []))\r\n                .finally(() => {\r\n                cache === null || cache === void 0 ? void 0 : cache.dispose();\r\n            })\r\n                .then(undefined, onUnexpectedExternalError);\r\n        }\r\n        else {\r\n            cache === null || cache === void 0 ? void 0 : cache.dispose();\r\n        }\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n}\r\nclass UpdateOperation {\r\n    constructor(promise, triggerKind) {\r\n        this.promise = promise;\r\n        this.triggerKind = triggerKind;\r\n    }\r\n    dispose() {\r\n        this.promise.cancel();\r\n    }\r\n}\r\n/**\r\n * The cache keeps itself in sync with the editor.\r\n * It also owns the completions result and disposes it when the cache is diposed.\r\n*/\r\nclass SynchronizedInlineCompletionsCache extends Disposable {\r\n    constructor(editor, completionsSource, onChange, triggerKind) {\r\n        super();\r\n        this.triggerKind = triggerKind;\r\n        const decorationIds = editor.deltaDecorations([], completionsSource.items.map(i => ({\r\n            range: i.range,\r\n            options: {\r\n                description: 'inline-completion-tracking-range'\r\n            },\r\n        })));\r\n        this._register(toDisposable(() => {\r\n            editor.deltaDecorations(decorationIds, []);\r\n        }));\r\n        this.completions = completionsSource.items.map((c, idx) => new CachedInlineCompletion(c, decorationIds[idx]));\r\n        this._register(editor.onDidChangeModelContent(() => {\r\n            let hasChanged = false;\r\n            const model = editor.getModel();\r\n            for (const c of this.completions) {\r\n                const newRange = model.getDecorationRange(c.decorationId);\r\n                if (!newRange) {\r\n                    onUnexpectedError(new Error('Decoration has no range'));\r\n                    continue;\r\n                }\r\n                if (!c.synchronizedRange.equalsRange(newRange)) {\r\n                    hasChanged = true;\r\n                    c.synchronizedRange = newRange;\r\n                }\r\n            }\r\n            if (hasChanged) {\r\n                onChange();\r\n            }\r\n        }));\r\n        this._register(completionsSource);\r\n    }\r\n}\r\nclass CachedInlineCompletion {\r\n    constructor(inlineCompletion, decorationId) {\r\n        this.inlineCompletion = inlineCompletion;\r\n        this.decorationId = decorationId;\r\n        this.semanticId = JSON.stringify({\r\n            text: this.inlineCompletion.text,\r\n            startLine: this.inlineCompletion.range.startLineNumber,\r\n            startColumn: this.inlineCompletion.range.startColumn,\r\n            command: this.inlineCompletion.command\r\n        });\r\n        this.synchronizedRange = inlineCompletion.range;\r\n    }\r\n}\r\nexport function inlineCompletionToGhostText(inlineCompletion, textModel, mode, cursorPosition) {\r\n    if (inlineCompletion.range.startLineNumber !== inlineCompletion.range.endLineNumber) {\r\n        // Only single line replacements are supported.\r\n        return undefined;\r\n    }\r\n    // This is a single line string\r\n    const valueToBeReplaced = textModel.getValueInRange(inlineCompletion.range);\r\n    const changes = cachingDiff(valueToBeReplaced, inlineCompletion.text);\r\n    const lineNumber = inlineCompletion.range.startLineNumber;\r\n    const parts = new Array();\r\n    if (mode === 'prefix') {\r\n        const filteredChanges = changes.filter(c => c.originalLength === 0);\r\n        if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\r\n            // Prefixes only have a single change.\r\n            return undefined;\r\n        }\r\n    }\r\n    for (const c of changes) {\r\n        const insertColumn = inlineCompletion.range.startColumn + c.originalStart + c.originalLength;\r\n        if (cursorPosition && cursorPosition.lineNumber === inlineCompletion.range.startLineNumber && insertColumn < cursorPosition.column) {\r\n            // No ghost text before cursor\r\n            return undefined;\r\n        }\r\n        if (c.originalLength > 0) {\r\n            const originalText = valueToBeReplaced.substr(c.originalStart, c.originalLength);\r\n            const firstNonWsCol = textModel.getLineFirstNonWhitespaceColumn(lineNumber);\r\n            if (!(/^(\\t| )*$/.test(originalText) && (firstNonWsCol === 0 || insertColumn <= firstNonWsCol))) {\r\n                return undefined;\r\n            }\r\n        }\r\n        if (c.modifiedLength === 0) {\r\n            continue;\r\n        }\r\n        const text = inlineCompletion.text.substr(c.modifiedStart, c.modifiedLength);\r\n        const lines = strings.splitLines(text);\r\n        parts.push({ column: insertColumn, lines });\r\n    }\r\n    return new GhostText(lineNumber, parts, 0);\r\n}\r\nlet lastRequest = undefined;\r\nfunction cachingDiff(originalValue, newValue) {\r\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\r\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\r\n    }\r\n    else {\r\n        const changes = stringDiff(originalValue, newValue, false);\r\n        lastRequest = {\r\n            originalValue,\r\n            newValue,\r\n            changes\r\n        };\r\n        return changes;\r\n    }\r\n}\r\nfunction getDefaultRange(position, model) {\r\n    const word = model.getWordAtPosition(position);\r\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\r\n    // By default, always replace up until the end of the current line.\r\n    // This default might be subject to change!\r\n    return word\r\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\r\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\r\n}\r\nfunction provideInlineCompletions(position, model, context, token = CancellationToken.None) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const defaultReplaceRange = getDefaultRange(position, model);\r\n        const providers = InlineCompletionsProviderRegistry.all(model);\r\n        const results = yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\r\n            const completions = yield provider.provideInlineCompletions(model, position, context, token);\r\n            return ({\r\n                completions,\r\n                provider,\r\n                dispose: () => {\r\n                    if (completions) {\r\n                        provider.freeInlineCompletions(completions);\r\n                    }\r\n                }\r\n            });\r\n        })));\r\n        const itemsByHash = new Map();\r\n        for (const result of results) {\r\n            const completions = result.completions;\r\n            if (completions) {\r\n                for (const item of completions.items.map(item => ({\r\n                    text: item.text,\r\n                    range: item.range ? Range.lift(item.range) : defaultReplaceRange,\r\n                    command: item.command,\r\n                    sourceProvider: result.provider,\r\n                    sourceInlineCompletions: completions,\r\n                    sourceInlineCompletion: item\r\n                }))) {\r\n                    if (item.range.startLineNumber !== item.range.endLineNumber) {\r\n                        // Ignore invalid ranges.\r\n                        continue;\r\n                    }\r\n                    itemsByHash.set(JSON.stringify({ text: item.text, range: item.range }), item);\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            items: [...itemsByHash.values()],\r\n            dispose: () => {\r\n                for (const result of results) {\r\n                    result.dispose();\r\n                }\r\n            },\r\n        };\r\n    });\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport class Scanner {\r\n    constructor() {\r\n        this.value = '';\r\n        this.pos = 0;\r\n    }\r\n    static isDigitCharacter(ch) {\r\n        return ch >= 48 /* Digit0 */ && ch <= 57 /* Digit9 */;\r\n    }\r\n    static isVariableCharacter(ch) {\r\n        return ch === 95 /* Underline */\r\n            || (ch >= 97 /* a */ && ch <= 122 /* z */)\r\n            || (ch >= 65 /* A */ && ch <= 90 /* Z */);\r\n    }\r\n    text(value) {\r\n        this.value = value;\r\n        this.pos = 0;\r\n    }\r\n    tokenText(token) {\r\n        return this.value.substr(token.pos, token.len);\r\n    }\r\n    next() {\r\n        if (this.pos >= this.value.length) {\r\n            return { type: 14 /* EOF */, pos: this.pos, len: 0 };\r\n        }\r\n        let pos = this.pos;\r\n        let len = 0;\r\n        let ch = this.value.charCodeAt(pos);\r\n        let type;\r\n        // static types\r\n        type = Scanner._table[ch];\r\n        if (typeof type === 'number') {\r\n            this.pos += 1;\r\n            return { type, pos, len: 1 };\r\n        }\r\n        // number\r\n        if (Scanner.isDigitCharacter(ch)) {\r\n            type = 8 /* Int */;\r\n            do {\r\n                len += 1;\r\n                ch = this.value.charCodeAt(pos + len);\r\n            } while (Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type, pos, len };\r\n        }\r\n        // variable name\r\n        if (Scanner.isVariableCharacter(ch)) {\r\n            type = 9 /* VariableName */;\r\n            do {\r\n                ch = this.value.charCodeAt(pos + (++len));\r\n            } while (Scanner.isVariableCharacter(ch) || Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type, pos, len };\r\n        }\r\n        // format\r\n        type = 10 /* Format */;\r\n        do {\r\n            len += 1;\r\n            ch = this.value.charCodeAt(pos + len);\r\n        } while (!isNaN(ch)\r\n            && typeof Scanner._table[ch] === 'undefined' // not static token\r\n            && !Scanner.isDigitCharacter(ch) // not number\r\n            && !Scanner.isVariableCharacter(ch) // not variable\r\n        );\r\n        this.pos += len;\r\n        return { type, pos, len };\r\n    }\r\n}\r\nScanner._table = {\r\n    [36 /* DollarSign */]: 0 /* Dollar */,\r\n    [58 /* Colon */]: 1 /* Colon */,\r\n    [44 /* Comma */]: 2 /* Comma */,\r\n    [123 /* OpenCurlyBrace */]: 3 /* CurlyOpen */,\r\n    [125 /* CloseCurlyBrace */]: 4 /* CurlyClose */,\r\n    [92 /* Backslash */]: 5 /* Backslash */,\r\n    [47 /* Slash */]: 6 /* Forwardslash */,\r\n    [124 /* Pipe */]: 7 /* Pipe */,\r\n    [43 /* Plus */]: 11 /* Plus */,\r\n    [45 /* Dash */]: 12 /* Dash */,\r\n    [63 /* QuestionMark */]: 13 /* QuestionMark */,\r\n};\r\nexport class Marker {\r\n    constructor() {\r\n        this._children = [];\r\n    }\r\n    appendChild(child) {\r\n        if (child instanceof Text && this._children[this._children.length - 1] instanceof Text) {\r\n            // this and previous child are text -> merge them\r\n            this._children[this._children.length - 1].value += child.value;\r\n        }\r\n        else {\r\n            // normal adoption of child\r\n            child.parent = this;\r\n            this._children.push(child);\r\n        }\r\n        return this;\r\n    }\r\n    replace(child, others) {\r\n        const { parent } = child;\r\n        const idx = parent.children.indexOf(child);\r\n        const newChildren = parent.children.slice(0);\r\n        newChildren.splice(idx, 1, ...others);\r\n        parent._children = newChildren;\r\n        (function _fixParent(children, parent) {\r\n            for (const child of children) {\r\n                child.parent = parent;\r\n                _fixParent(child.children, child);\r\n            }\r\n        })(others, parent);\r\n    }\r\n    get children() {\r\n        return this._children;\r\n    }\r\n    get snippet() {\r\n        let candidate = this;\r\n        while (true) {\r\n            if (!candidate) {\r\n                return undefined;\r\n            }\r\n            if (candidate instanceof TextmateSnippet) {\r\n                return candidate;\r\n            }\r\n            candidate = candidate.parent;\r\n        }\r\n    }\r\n    toString() {\r\n        return this.children.reduce((prev, cur) => prev + cur.toString(), '');\r\n    }\r\n    len() {\r\n        return 0;\r\n    }\r\n}\r\nexport class Text extends Marker {\r\n    constructor(value) {\r\n        super();\r\n        this.value = value;\r\n    }\r\n    toString() {\r\n        return this.value;\r\n    }\r\n    len() {\r\n        return this.value.length;\r\n    }\r\n    clone() {\r\n        return new Text(this.value);\r\n    }\r\n}\r\nexport class TransformableMarker extends Marker {\r\n}\r\nexport class Placeholder extends TransformableMarker {\r\n    constructor(index) {\r\n        super();\r\n        this.index = index;\r\n    }\r\n    static compareByIndex(a, b) {\r\n        if (a.index === b.index) {\r\n            return 0;\r\n        }\r\n        else if (a.isFinalTabstop) {\r\n            return 1;\r\n        }\r\n        else if (b.isFinalTabstop) {\r\n            return -1;\r\n        }\r\n        else if (a.index < b.index) {\r\n            return -1;\r\n        }\r\n        else if (a.index > b.index) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    get isFinalTabstop() {\r\n        return this.index === 0;\r\n    }\r\n    get choice() {\r\n        return this._children.length === 1 && this._children[0] instanceof Choice\r\n            ? this._children[0]\r\n            : undefined;\r\n    }\r\n    clone() {\r\n        let ret = new Placeholder(this.index);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n}\r\nexport class Choice extends Marker {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.options = [];\r\n    }\r\n    appendChild(marker) {\r\n        if (marker instanceof Text) {\r\n            marker.parent = this;\r\n            this.options.push(marker);\r\n        }\r\n        return this;\r\n    }\r\n    toString() {\r\n        return this.options[0].value;\r\n    }\r\n    len() {\r\n        return this.options[0].len();\r\n    }\r\n    clone() {\r\n        let ret = new Choice();\r\n        this.options.forEach(ret.appendChild, ret);\r\n        return ret;\r\n    }\r\n}\r\nexport class Transform extends Marker {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.regexp = new RegExp('');\r\n    }\r\n    resolve(value) {\r\n        const _this = this;\r\n        let didMatch = false;\r\n        let ret = value.replace(this.regexp, function () {\r\n            didMatch = true;\r\n            return _this._replace(Array.prototype.slice.call(arguments, 0, -2));\r\n        });\r\n        // when the regex didn't match and when the transform has\r\n        // else branches, then run those\r\n        if (!didMatch && this._children.some(child => child instanceof FormatString && Boolean(child.elseValue))) {\r\n            ret = this._replace([]);\r\n        }\r\n        return ret;\r\n    }\r\n    _replace(groups) {\r\n        let ret = '';\r\n        for (const marker of this._children) {\r\n            if (marker instanceof FormatString) {\r\n                let value = groups[marker.index] || '';\r\n                value = marker.resolve(value);\r\n                ret += value;\r\n            }\r\n            else {\r\n                ret += marker.toString();\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    toString() {\r\n        return '';\r\n    }\r\n    clone() {\r\n        let ret = new Transform();\r\n        ret.regexp = new RegExp(this.regexp.source, '' + (this.regexp.ignoreCase ? 'i' : '') + (this.regexp.global ? 'g' : ''));\r\n        ret._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n}\r\nexport class FormatString extends Marker {\r\n    constructor(index, shorthandName, ifValue, elseValue) {\r\n        super();\r\n        this.index = index;\r\n        this.shorthandName = shorthandName;\r\n        this.ifValue = ifValue;\r\n        this.elseValue = elseValue;\r\n    }\r\n    resolve(value) {\r\n        if (this.shorthandName === 'upcase') {\r\n            return !value ? '' : value.toLocaleUpperCase();\r\n        }\r\n        else if (this.shorthandName === 'downcase') {\r\n            return !value ? '' : value.toLocaleLowerCase();\r\n        }\r\n        else if (this.shorthandName === 'capitalize') {\r\n            return !value ? '' : (value[0].toLocaleUpperCase() + value.substr(1));\r\n        }\r\n        else if (this.shorthandName === 'pascalcase') {\r\n            return !value ? '' : this._toPascalCase(value);\r\n        }\r\n        else if (this.shorthandName === 'camelcase') {\r\n            return !value ? '' : this._toCamelCase(value);\r\n        }\r\n        else if (Boolean(value) && typeof this.ifValue === 'string') {\r\n            return this.ifValue;\r\n        }\r\n        else if (!Boolean(value) && typeof this.elseValue === 'string') {\r\n            return this.elseValue;\r\n        }\r\n        else {\r\n            return value || '';\r\n        }\r\n    }\r\n    _toPascalCase(value) {\r\n        const match = value.match(/[a-z0-9]+/gi);\r\n        if (!match) {\r\n            return value;\r\n        }\r\n        return match.map(word => {\r\n            return word.charAt(0).toUpperCase()\r\n                + word.substr(1).toLowerCase();\r\n        })\r\n            .join('');\r\n    }\r\n    _toCamelCase(value) {\r\n        const match = value.match(/[a-z0-9]+/gi);\r\n        if (!match) {\r\n            return value;\r\n        }\r\n        return match.map((word, index) => {\r\n            if (index === 0) {\r\n                return word.toLowerCase();\r\n            }\r\n            else {\r\n                return word.charAt(0).toUpperCase()\r\n                    + word.substr(1).toLowerCase();\r\n            }\r\n        })\r\n            .join('');\r\n    }\r\n    clone() {\r\n        let ret = new FormatString(this.index, this.shorthandName, this.ifValue, this.elseValue);\r\n        return ret;\r\n    }\r\n}\r\nexport class Variable extends TransformableMarker {\r\n    constructor(name) {\r\n        super();\r\n        this.name = name;\r\n    }\r\n    resolve(resolver) {\r\n        let value = resolver.resolve(this);\r\n        if (this.transform) {\r\n            value = this.transform.resolve(value || '');\r\n        }\r\n        if (value !== undefined) {\r\n            this._children = [new Text(value)];\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    clone() {\r\n        const ret = new Variable(this.name);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n}\r\nfunction walk(marker, visitor) {\r\n    const stack = [...marker];\r\n    while (stack.length > 0) {\r\n        const marker = stack.shift();\r\n        const recurse = visitor(marker);\r\n        if (!recurse) {\r\n            break;\r\n        }\r\n        stack.unshift(...marker.children);\r\n    }\r\n}\r\nexport class TextmateSnippet extends Marker {\r\n    get placeholderInfo() {\r\n        if (!this._placeholders) {\r\n            // fill in placeholders\r\n            let all = [];\r\n            let last;\r\n            this.walk(function (candidate) {\r\n                if (candidate instanceof Placeholder) {\r\n                    all.push(candidate);\r\n                    last = !last || last.index < candidate.index ? candidate : last;\r\n                }\r\n                return true;\r\n            });\r\n            this._placeholders = { all, last };\r\n        }\r\n        return this._placeholders;\r\n    }\r\n    get placeholders() {\r\n        const { all } = this.placeholderInfo;\r\n        return all;\r\n    }\r\n    offset(marker) {\r\n        let pos = 0;\r\n        let found = false;\r\n        this.walk(candidate => {\r\n            if (candidate === marker) {\r\n                found = true;\r\n                return false;\r\n            }\r\n            pos += candidate.len();\r\n            return true;\r\n        });\r\n        if (!found) {\r\n            return -1;\r\n        }\r\n        return pos;\r\n    }\r\n    fullLen(marker) {\r\n        let ret = 0;\r\n        walk([marker], marker => {\r\n            ret += marker.len();\r\n            return true;\r\n        });\r\n        return ret;\r\n    }\r\n    enclosingPlaceholders(placeholder) {\r\n        let ret = [];\r\n        let { parent } = placeholder;\r\n        while (parent) {\r\n            if (parent instanceof Placeholder) {\r\n                ret.push(parent);\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        return ret;\r\n    }\r\n    resolveVariables(resolver) {\r\n        this.walk(candidate => {\r\n            if (candidate instanceof Variable) {\r\n                if (candidate.resolve(resolver)) {\r\n                    this._placeholders = undefined;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        return this;\r\n    }\r\n    appendChild(child) {\r\n        this._placeholders = undefined;\r\n        return super.appendChild(child);\r\n    }\r\n    replace(child, others) {\r\n        this._placeholders = undefined;\r\n        return super.replace(child, others);\r\n    }\r\n    clone() {\r\n        let ret = new TextmateSnippet();\r\n        this._children = this.children.map(child => child.clone());\r\n        return ret;\r\n    }\r\n    walk(visitor) {\r\n        walk(this.children, visitor);\r\n    }\r\n}\r\nexport class SnippetParser {\r\n    constructor() {\r\n        this._scanner = new Scanner();\r\n        this._token = { type: 14 /* EOF */, pos: 0, len: 0 };\r\n    }\r\n    static escape(value) {\r\n        return value.replace(/\\$|}|\\\\/g, '\\\\$&');\r\n    }\r\n    static guessNeedsClipboard(template) {\r\n        return /\\${?CLIPBOARD/.test(template);\r\n    }\r\n    parse(value, insertFinalTabstop, enforceFinalTabstop) {\r\n        this._scanner.text(value);\r\n        this._token = this._scanner.next();\r\n        const snippet = new TextmateSnippet();\r\n        while (this._parse(snippet)) {\r\n            // nothing\r\n        }\r\n        // fill in values for placeholders. the first placeholder of an index\r\n        // that has a value defines the value for all placeholders with that index\r\n        const placeholderDefaultValues = new Map();\r\n        const incompletePlaceholders = [];\r\n        let placeholderCount = 0;\r\n        snippet.walk(marker => {\r\n            if (marker instanceof Placeholder) {\r\n                placeholderCount += 1;\r\n                if (marker.isFinalTabstop) {\r\n                    placeholderDefaultValues.set(0, undefined);\r\n                }\r\n                else if (!placeholderDefaultValues.has(marker.index) && marker.children.length > 0) {\r\n                    placeholderDefaultValues.set(marker.index, marker.children);\r\n                }\r\n                else {\r\n                    incompletePlaceholders.push(marker);\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        for (const placeholder of incompletePlaceholders) {\r\n            const defaultValues = placeholderDefaultValues.get(placeholder.index);\r\n            if (defaultValues) {\r\n                const clone = new Placeholder(placeholder.index);\r\n                clone.transform = placeholder.transform;\r\n                for (const child of defaultValues) {\r\n                    clone.appendChild(child.clone());\r\n                }\r\n                snippet.replace(placeholder, [clone]);\r\n            }\r\n        }\r\n        if (!enforceFinalTabstop) {\r\n            enforceFinalTabstop = placeholderCount > 0 && insertFinalTabstop;\r\n        }\r\n        if (!placeholderDefaultValues.has(0) && enforceFinalTabstop) {\r\n            // the snippet uses placeholders but has no\r\n            // final tabstop defined -> insert at the end\r\n            snippet.appendChild(new Placeholder(0));\r\n        }\r\n        return snippet;\r\n    }\r\n    _accept(type, value) {\r\n        if (type === undefined || this._token.type === type) {\r\n            let ret = !value ? true : this._scanner.tokenText(this._token);\r\n            this._token = this._scanner.next();\r\n            return ret;\r\n        }\r\n        return false;\r\n    }\r\n    _backTo(token) {\r\n        this._scanner.pos = token.pos + token.len;\r\n        this._token = token;\r\n        return false;\r\n    }\r\n    _until(type) {\r\n        const start = this._token;\r\n        while (this._token.type !== type) {\r\n            if (this._token.type === 14 /* EOF */) {\r\n                return false;\r\n            }\r\n            else if (this._token.type === 5 /* Backslash */) {\r\n                const nextToken = this._scanner.next();\r\n                if (nextToken.type !== 0 /* Dollar */\r\n                    && nextToken.type !== 4 /* CurlyClose */\r\n                    && nextToken.type !== 5 /* Backslash */) {\r\n                    return false;\r\n                }\r\n            }\r\n            this._token = this._scanner.next();\r\n        }\r\n        const value = this._scanner.value.substring(start.pos, this._token.pos).replace(/\\\\(\\$|}|\\\\)/g, '$1');\r\n        this._token = this._scanner.next();\r\n        return value;\r\n    }\r\n    _parse(marker) {\r\n        return this._parseEscaped(marker)\r\n            || this._parseTabstopOrVariableName(marker)\r\n            || this._parseComplexPlaceholder(marker)\r\n            || this._parseComplexVariable(marker)\r\n            || this._parseAnything(marker);\r\n    }\r\n    // \\$, \\\\, \\} -> just text\r\n    _parseEscaped(marker) {\r\n        let value;\r\n        if (value = this._accept(5 /* Backslash */, true)) {\r\n            // saw a backslash, append escaped token or that backslash\r\n            value = this._accept(0 /* Dollar */, true)\r\n                || this._accept(4 /* CurlyClose */, true)\r\n                || this._accept(5 /* Backslash */, true)\r\n                || value;\r\n            marker.appendChild(new Text(value));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // $foo -> variable, $1 -> tabstop\r\n    _parseTabstopOrVariableName(parent) {\r\n        let value;\r\n        const token = this._token;\r\n        const match = this._accept(0 /* Dollar */)\r\n            && (value = this._accept(9 /* VariableName */, true) || this._accept(8 /* Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        parent.appendChild(/^\\d+$/.test(value)\r\n            ? new Placeholder(Number(value))\r\n            : new Variable(value));\r\n        return true;\r\n    }\r\n    // ${1:<children>}, ${1} -> placeholder\r\n    _parseComplexPlaceholder(parent) {\r\n        let index;\r\n        const token = this._token;\r\n        const match = this._accept(0 /* Dollar */)\r\n            && this._accept(3 /* CurlyOpen */)\r\n            && (index = this._accept(8 /* Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        const placeholder = new Placeholder(Number(index));\r\n        if (this._accept(1 /* Colon */)) {\r\n            // ${1:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* CurlyClose */)) {\r\n                    parent.appendChild(placeholder);\r\n                    return true;\r\n                }\r\n                if (this._parse(placeholder)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + index + ':'));\r\n                placeholder.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (placeholder.index > 0 && this._accept(7 /* Pipe */)) {\r\n            // ${1|one,two,three|}\r\n            const choice = new Choice();\r\n            while (true) {\r\n                if (this._parseChoiceElement(choice)) {\r\n                    if (this._accept(2 /* Comma */)) {\r\n                        // opt, -> more\r\n                        continue;\r\n                    }\r\n                    if (this._accept(7 /* Pipe */)) {\r\n                        placeholder.appendChild(choice);\r\n                        if (this._accept(4 /* CurlyClose */)) {\r\n                            // ..|} -> done\r\n                            parent.appendChild(placeholder);\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* Forwardslash */)) {\r\n            // ${1/<regex>/<format>/<options>}\r\n            if (this._parseTransform(placeholder)) {\r\n                parent.appendChild(placeholder);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(placeholder);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${1 <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    }\r\n    _parseChoiceElement(parent) {\r\n        const token = this._token;\r\n        const values = [];\r\n        while (true) {\r\n            if (this._token.type === 2 /* Comma */ || this._token.type === 7 /* Pipe */) {\r\n                break;\r\n            }\r\n            let value;\r\n            if (value = this._accept(5 /* Backslash */, true)) {\r\n                // \\, \\|, or \\\\\r\n                value = this._accept(2 /* Comma */, true)\r\n                    || this._accept(7 /* Pipe */, true)\r\n                    || this._accept(5 /* Backslash */, true)\r\n                    || value;\r\n            }\r\n            else {\r\n                value = this._accept(undefined, true);\r\n            }\r\n            if (!value) {\r\n                // EOF\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            values.push(value);\r\n        }\r\n        if (values.length === 0) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        parent.appendChild(new Text(values.join('')));\r\n        return true;\r\n    }\r\n    // ${foo:<children>}, ${foo} -> variable\r\n    _parseComplexVariable(parent) {\r\n        let name;\r\n        const token = this._token;\r\n        const match = this._accept(0 /* Dollar */)\r\n            && this._accept(3 /* CurlyOpen */)\r\n            && (name = this._accept(9 /* VariableName */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        const variable = new Variable(name);\r\n        if (this._accept(1 /* Colon */)) {\r\n            // ${foo:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* CurlyClose */)) {\r\n                    parent.appendChild(variable);\r\n                    return true;\r\n                }\r\n                if (this._parse(variable)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + name + ':'));\r\n                variable.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* Forwardslash */)) {\r\n            // ${foo/<regex>/<format>/<options>}\r\n            if (this._parseTransform(variable)) {\r\n                parent.appendChild(variable);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${foo}\r\n            parent.appendChild(variable);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${foo <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    }\r\n    _parseTransform(parent) {\r\n        // ...<regex>/<format>/<options>}\r\n        let transform = new Transform();\r\n        let regexValue = '';\r\n        let regexOptions = '';\r\n        // (1) /regex\r\n        while (true) {\r\n            if (this._accept(6 /* Forwardslash */)) {\r\n                break;\r\n            }\r\n            let escaped;\r\n            if (escaped = this._accept(5 /* Backslash */, true)) {\r\n                escaped = this._accept(6 /* Forwardslash */, true) || escaped;\r\n                regexValue += escaped;\r\n                continue;\r\n            }\r\n            if (this._token.type !== 14 /* EOF */) {\r\n                regexValue += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (2) /format\r\n        while (true) {\r\n            if (this._accept(6 /* Forwardslash */)) {\r\n                break;\r\n            }\r\n            let escaped;\r\n            if (escaped = this._accept(5 /* Backslash */, true)) {\r\n                escaped = this._accept(5 /* Backslash */, true) || this._accept(6 /* Forwardslash */, true) || escaped;\r\n                transform.appendChild(new Text(escaped));\r\n                continue;\r\n            }\r\n            if (this._parseFormatString(transform) || this._parseAnything(transform)) {\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (3) /option\r\n        while (true) {\r\n            if (this._accept(4 /* CurlyClose */)) {\r\n                break;\r\n            }\r\n            if (this._token.type !== 14 /* EOF */) {\r\n                regexOptions += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        try {\r\n            transform.regexp = new RegExp(regexValue, regexOptions);\r\n        }\r\n        catch (e) {\r\n            // invalid regexp\r\n            return false;\r\n        }\r\n        parent.transform = transform;\r\n        return true;\r\n    }\r\n    _parseFormatString(parent) {\r\n        const token = this._token;\r\n        if (!this._accept(0 /* Dollar */)) {\r\n            return false;\r\n        }\r\n        let complex = false;\r\n        if (this._accept(3 /* CurlyOpen */)) {\r\n            complex = true;\r\n        }\r\n        let index = this._accept(8 /* Int */, true);\r\n        if (!index) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (!complex) {\r\n            // $1\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (!this._accept(1 /* Colon */)) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        if (this._accept(6 /* Forwardslash */)) {\r\n            // ${1:/upcase}\r\n            let shorthand = this._accept(9 /* VariableName */, true);\r\n            if (!shorthand || !this._accept(4 /* CurlyClose */)) {\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            else {\r\n                parent.appendChild(new FormatString(Number(index), shorthand));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(11 /* Plus */)) {\r\n            // ${1:+<if>}\r\n            let ifValue = this._until(4 /* CurlyClose */);\r\n            if (ifValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, ifValue, undefined));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(12 /* Dash */)) {\r\n            // ${2:-<else>}\r\n            let elseValue = this._until(4 /* CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(13 /* QuestionMark */)) {\r\n            // ${2:?<if>:<else>}\r\n            let ifValue = this._until(1 /* Colon */);\r\n            if (ifValue) {\r\n                let elseValue = this._until(4 /* CurlyClose */);\r\n                if (elseValue) {\r\n                    parent.appendChild(new FormatString(Number(index), undefined, ifValue, elseValue));\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // ${1:<else>}\r\n            let elseValue = this._until(4 /* CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        this._backTo(token);\r\n        return false;\r\n    }\r\n    _parseAnything(marker) {\r\n        if (this._token.type !== 14 /* EOF */) {\r\n            marker.appendChild(new Text(this._scanner.tokenText(this._token)));\r\n            this._accept(undefined);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { groupBy } from '../../../base/common/arrays.js';\r\nimport { dispose } from '../../../base/common/lifecycle.js';\r\nimport { getLeadingWhitespace } from '../../../base/common/strings.js';\r\nimport './snippetSession.css';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { IWorkspaceContextService } from '../../../platform/workspace/common/workspace.js';\r\nimport { optional } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { Choice, Placeholder, SnippetParser, Text } from './snippetParser.js';\r\nimport { ClipboardBasedVariableResolver, CompositeSnippetVariableResolver, ModelBasedVariableResolver, SelectionBasedVariableResolver, TimeBasedVariableResolver, CommentBasedVariableResolver, WorkspaceBasedVariableResolver, RandomBasedVariableResolver } from './snippetVariables.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport * as colors from '../../../platform/theme/common/colorRegistry.js';\r\nimport { ILabelService } from '../../../platform/label/common/label.js';\r\nregisterThemingParticipant((theme, collector) => {\r\n    function getColorGraceful(name) {\r\n        const color = theme.getColor(name);\r\n        return color ? color.toString() : 'transparent';\r\n    }\r\n    collector.addRule(`.monaco-editor .snippet-placeholder { background-color: ${getColorGraceful(colors.snippetTabstopHighlightBackground)}; outline-color: ${getColorGraceful(colors.snippetTabstopHighlightBorder)}; }`);\r\n    collector.addRule(`.monaco-editor .finish-snippet-placeholder { background-color: ${getColorGraceful(colors.snippetFinalTabstopHighlightBackground)}; outline-color: ${getColorGraceful(colors.snippetFinalTabstopHighlightBorder)}; }`);\r\n});\r\nexport class OneSnippet {\r\n    constructor(_editor, _snippet, _offset, _snippetLineLeadingWhitespace) {\r\n        this._editor = _editor;\r\n        this._snippet = _snippet;\r\n        this._offset = _offset;\r\n        this._snippetLineLeadingWhitespace = _snippetLineLeadingWhitespace;\r\n        this._nestingLevel = 1;\r\n        this._placeholderGroups = groupBy(_snippet.placeholders, Placeholder.compareByIndex);\r\n        this._placeholderGroupsIdx = -1;\r\n    }\r\n    dispose() {\r\n        if (this._placeholderDecorations) {\r\n            this._editor.deltaDecorations([...this._placeholderDecorations.values()], []);\r\n        }\r\n        this._placeholderGroups.length = 0;\r\n    }\r\n    _initDecorations() {\r\n        if (this._placeholderDecorations) {\r\n            // already initialized\r\n            return;\r\n        }\r\n        this._placeholderDecorations = new Map();\r\n        const model = this._editor.getModel();\r\n        this._editor.changeDecorations(accessor => {\r\n            // create a decoration for each placeholder\r\n            for (const placeholder of this._snippet.placeholders) {\r\n                const placeholderOffset = this._snippet.offset(placeholder);\r\n                const placeholderLen = this._snippet.fullLen(placeholder);\r\n                const range = Range.fromPositions(model.getPositionAt(this._offset + placeholderOffset), model.getPositionAt(this._offset + placeholderOffset + placeholderLen));\r\n                const options = placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive;\r\n                const handle = accessor.addDecoration(range, options);\r\n                this._placeholderDecorations.set(placeholder, handle);\r\n            }\r\n        });\r\n    }\r\n    move(fwd) {\r\n        if (!this._editor.hasModel()) {\r\n            return [];\r\n        }\r\n        this._initDecorations();\r\n        // Transform placeholder text if necessary\r\n        if (this._placeholderGroupsIdx >= 0) {\r\n            let operations = [];\r\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\r\n                // Check if the placeholder has a transformation\r\n                if (placeholder.transform) {\r\n                    const id = this._placeholderDecorations.get(placeholder);\r\n                    const range = this._editor.getModel().getDecorationRange(id);\r\n                    const currentValue = this._editor.getModel().getValueInRange(range);\r\n                    const transformedValueLines = placeholder.transform.resolve(currentValue).split(/\\r\\n|\\r|\\n/);\r\n                    // fix indentation for transformed lines\r\n                    for (let i = 1; i < transformedValueLines.length; i++) {\r\n                        transformedValueLines[i] = this._editor.getModel().normalizeIndentation(this._snippetLineLeadingWhitespace + transformedValueLines[i]);\r\n                    }\r\n                    operations.push(EditOperation.replace(range, transformedValueLines.join(this._editor.getModel().getEOL())));\r\n                }\r\n            }\r\n            if (operations.length > 0) {\r\n                this._editor.executeEdits('snippet.placeholderTransform', operations);\r\n            }\r\n        }\r\n        let couldSkipThisPlaceholder = false;\r\n        if (fwd === true && this._placeholderGroupsIdx < this._placeholderGroups.length - 1) {\r\n            this._placeholderGroupsIdx += 1;\r\n            couldSkipThisPlaceholder = true;\r\n        }\r\n        else if (fwd === false && this._placeholderGroupsIdx > 0) {\r\n            this._placeholderGroupsIdx -= 1;\r\n            couldSkipThisPlaceholder = true;\r\n        }\r\n        else {\r\n            // the selection of the current placeholder might\r\n            // not acurate any more -> simply restore it\r\n        }\r\n        const newSelections = this._editor.getModel().changeDecorations(accessor => {\r\n            const activePlaceholders = new Set();\r\n            // change stickiness to always grow when typing at its edges\r\n            // because these decorations represent the currently active\r\n            // tabstop.\r\n            // Special case #1: reaching the final tabstop\r\n            // Special case #2: placeholders enclosing active placeholders\r\n            const selections = [];\r\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\r\n                const id = this._placeholderDecorations.get(placeholder);\r\n                const range = this._editor.getModel().getDecorationRange(id);\r\n                selections.push(new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn));\r\n                // consider to skip this placeholder index when the decoration\r\n                // range is empty but when the placeholder wasn't. that's a strong\r\n                // hint that the placeholder has been deleted. (all placeholder must match this)\r\n                couldSkipThisPlaceholder = couldSkipThisPlaceholder && this._hasPlaceholderBeenCollapsed(placeholder);\r\n                accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\r\n                activePlaceholders.add(placeholder);\r\n                for (const enclosingPlaceholder of this._snippet.enclosingPlaceholders(placeholder)) {\r\n                    const id = this._placeholderDecorations.get(enclosingPlaceholder);\r\n                    accessor.changeDecorationOptions(id, enclosingPlaceholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\r\n                    activePlaceholders.add(enclosingPlaceholder);\r\n                }\r\n            }\r\n            // change stickness to never grow when typing at its edges\r\n            // so that in-active tabstops never grow\r\n            for (const [placeholder, id] of this._placeholderDecorations) {\r\n                if (!activePlaceholders.has(placeholder)) {\r\n                    accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive);\r\n                }\r\n            }\r\n            return selections;\r\n        });\r\n        return !couldSkipThisPlaceholder ? newSelections !== null && newSelections !== void 0 ? newSelections : [] : this.move(fwd);\r\n    }\r\n    _hasPlaceholderBeenCollapsed(placeholder) {\r\n        // A placeholder is empty when it wasn't empty when authored but\r\n        // when its tracking decoration is empty. This also applies to all\r\n        // potential parent placeholders\r\n        let marker = placeholder;\r\n        while (marker) {\r\n            if (marker instanceof Placeholder) {\r\n                const id = this._placeholderDecorations.get(marker);\r\n                const range = this._editor.getModel().getDecorationRange(id);\r\n                if (range.isEmpty() && marker.toString().length > 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            marker = marker.parent;\r\n        }\r\n        return false;\r\n    }\r\n    get isAtFirstPlaceholder() {\r\n        return this._placeholderGroupsIdx <= 0 || this._placeholderGroups.length === 0;\r\n    }\r\n    get isAtLastPlaceholder() {\r\n        return this._placeholderGroupsIdx === this._placeholderGroups.length - 1;\r\n    }\r\n    get hasPlaceholder() {\r\n        return this._snippet.placeholders.length > 0;\r\n    }\r\n    computePossibleSelections() {\r\n        const result = new Map();\r\n        for (const placeholdersWithEqualIndex of this._placeholderGroups) {\r\n            let ranges;\r\n            for (const placeholder of placeholdersWithEqualIndex) {\r\n                if (placeholder.isFinalTabstop) {\r\n                    // ignore those\r\n                    break;\r\n                }\r\n                if (!ranges) {\r\n                    ranges = [];\r\n                    result.set(placeholder.index, ranges);\r\n                }\r\n                const id = this._placeholderDecorations.get(placeholder);\r\n                const range = this._editor.getModel().getDecorationRange(id);\r\n                if (!range) {\r\n                    // one of the placeholder lost its decoration and\r\n                    // therefore we bail out and pretend the placeholder\r\n                    // (with its mirrors) doesn't exist anymore.\r\n                    result.delete(placeholder.index);\r\n                    break;\r\n                }\r\n                ranges.push(range);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    get choice() {\r\n        return this._placeholderGroups[this._placeholderGroupsIdx][0].choice;\r\n    }\r\n    merge(others) {\r\n        const model = this._editor.getModel();\r\n        this._nestingLevel *= 10;\r\n        this._editor.changeDecorations(accessor => {\r\n            // For each active placeholder take one snippet and merge it\r\n            // in that the placeholder (can be many for `$1foo$1foo`). Because\r\n            // everything is sorted by editor selection we can simply remove\r\n            // elements from the beginning of the array\r\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\r\n                const nested = others.shift();\r\n                console.assert(!nested._placeholderDecorations);\r\n                // Massage placeholder-indicies of the nested snippet to be\r\n                // sorted right after the insertion point. This ensures we move\r\n                // through the placeholders in the correct order\r\n                const indexLastPlaceholder = nested._snippet.placeholderInfo.last.index;\r\n                for (const nestedPlaceholder of nested._snippet.placeholderInfo.all) {\r\n                    if (nestedPlaceholder.isFinalTabstop) {\r\n                        nestedPlaceholder.index = placeholder.index + ((indexLastPlaceholder + 1) / this._nestingLevel);\r\n                    }\r\n                    else {\r\n                        nestedPlaceholder.index = placeholder.index + (nestedPlaceholder.index / this._nestingLevel);\r\n                    }\r\n                }\r\n                this._snippet.replace(placeholder, nested._snippet.children);\r\n                // Remove the placeholder at which position are inserting\r\n                // the snippet and also remove its decoration.\r\n                const id = this._placeholderDecorations.get(placeholder);\r\n                accessor.removeDecoration(id);\r\n                this._placeholderDecorations.delete(placeholder);\r\n                // For each *new* placeholder we create decoration to monitor\r\n                // how and if it grows/shrinks.\r\n                for (const placeholder of nested._snippet.placeholders) {\r\n                    const placeholderOffset = nested._snippet.offset(placeholder);\r\n                    const placeholderLen = nested._snippet.fullLen(placeholder);\r\n                    const range = Range.fromPositions(model.getPositionAt(nested._offset + placeholderOffset), model.getPositionAt(nested._offset + placeholderOffset + placeholderLen));\r\n                    const handle = accessor.addDecoration(range, OneSnippet._decor.inactive);\r\n                    this._placeholderDecorations.set(placeholder, handle);\r\n                }\r\n            }\r\n            // Last, re-create the placeholder groups by sorting placeholders by their index.\r\n            this._placeholderGroups = groupBy(this._snippet.placeholders, Placeholder.compareByIndex);\r\n        });\r\n    }\r\n}\r\nOneSnippet._decor = {\r\n    active: ModelDecorationOptions.register({ description: 'snippet-placeholder-1', stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\r\n    inactive: ModelDecorationOptions.register({ description: 'snippet-placeholder-2', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\r\n    activeFinal: ModelDecorationOptions.register({ description: 'snippet-placeholder-3', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\r\n    inactiveFinal: ModelDecorationOptions.register({ description: 'snippet-placeholder-4', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\r\n};\r\nconst _defaultOptions = {\r\n    overwriteBefore: 0,\r\n    overwriteAfter: 0,\r\n    adjustWhitespace: true,\r\n    clipboardText: undefined,\r\n    overtypingCapturer: undefined\r\n};\r\nexport class SnippetSession {\r\n    constructor(editor, template, options = _defaultOptions) {\r\n        this._templateMerges = [];\r\n        this._snippets = [];\r\n        this._editor = editor;\r\n        this._template = template;\r\n        this._options = options;\r\n    }\r\n    static adjustWhitespace(model, position, snippet, adjustIndentation, adjustNewlines) {\r\n        const line = model.getLineContent(position.lineNumber);\r\n        const lineLeadingWhitespace = getLeadingWhitespace(line, 0, position.column - 1);\r\n        // the snippet as inserted\r\n        let snippetTextString;\r\n        snippet.walk(marker => {\r\n            // all text elements that are not inside choice\r\n            if (!(marker instanceof Text) || marker.parent instanceof Choice) {\r\n                return true;\r\n            }\r\n            const lines = marker.value.split(/\\r\\n|\\r|\\n/);\r\n            if (adjustIndentation) {\r\n                // adjust indentation of snippet test\r\n                // -the snippet-start doesn't get extra-indented (lineLeadingWhitespace), only normalized\r\n                // -all N+1 lines get extra-indented and normalized\r\n                // -the text start get extra-indented and normalized when following a linebreak\r\n                const offset = snippet.offset(marker);\r\n                if (offset === 0) {\r\n                    // snippet start\r\n                    lines[0] = model.normalizeIndentation(lines[0]);\r\n                }\r\n                else {\r\n                    // check if text start is after a linebreak\r\n                    snippetTextString = snippetTextString !== null && snippetTextString !== void 0 ? snippetTextString : snippet.toString();\r\n                    let prevChar = snippetTextString.charCodeAt(offset - 1);\r\n                    if (prevChar === 10 /* LineFeed */ || prevChar === 13 /* CarriageReturn */) {\r\n                        lines[0] = model.normalizeIndentation(lineLeadingWhitespace + lines[0]);\r\n                    }\r\n                }\r\n                for (let i = 1; i < lines.length; i++) {\r\n                    lines[i] = model.normalizeIndentation(lineLeadingWhitespace + lines[i]);\r\n                }\r\n            }\r\n            const newValue = lines.join(model.getEOL());\r\n            if (newValue !== marker.value) {\r\n                marker.parent.replace(marker, [new Text(newValue)]);\r\n                snippetTextString = undefined;\r\n            }\r\n            return true;\r\n        });\r\n        return lineLeadingWhitespace;\r\n    }\r\n    static adjustSelection(model, selection, overwriteBefore, overwriteAfter) {\r\n        if (overwriteBefore !== 0 || overwriteAfter !== 0) {\r\n            // overwrite[Before|After] is compute using the position, not the whole\r\n            // selection. therefore we adjust the selection around that position\r\n            const { positionLineNumber, positionColumn } = selection;\r\n            const positionColumnBefore = positionColumn - overwriteBefore;\r\n            const positionColumnAfter = positionColumn + overwriteAfter;\r\n            const range = model.validateRange({\r\n                startLineNumber: positionLineNumber,\r\n                startColumn: positionColumnBefore,\r\n                endLineNumber: positionLineNumber,\r\n                endColumn: positionColumnAfter\r\n            });\r\n            selection = Selection.createWithDirection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn, selection.getDirection());\r\n        }\r\n        return selection;\r\n    }\r\n    static createEditsAndSnippets(editor, template, overwriteBefore, overwriteAfter, enforceFinalTabstop, adjustWhitespace, clipboardText, overtypingCapturer) {\r\n        const edits = [];\r\n        const snippets = [];\r\n        if (!editor.hasModel()) {\r\n            return { edits, snippets };\r\n        }\r\n        const model = editor.getModel();\r\n        const workspaceService = editor.invokeWithinContext(accessor => accessor.get(IWorkspaceContextService, optional));\r\n        const modelBasedVariableResolver = editor.invokeWithinContext(accessor => new ModelBasedVariableResolver(accessor.get(ILabelService, optional), model));\r\n        const readClipboardText = () => clipboardText;\r\n        let delta = 0;\r\n        // know what text the overwrite[Before|After] extensions\r\n        // of the primary curser have selected because only when\r\n        // secondary selections extend to the same text we can grow them\r\n        let firstBeforeText = model.getValueInRange(SnippetSession.adjustSelection(model, editor.getSelection(), overwriteBefore, 0));\r\n        let firstAfterText = model.getValueInRange(SnippetSession.adjustSelection(model, editor.getSelection(), 0, overwriteAfter));\r\n        // remember the first non-whitespace column to decide if\r\n        // `keepWhitespace` should be overruled for secondary selections\r\n        let firstLineFirstNonWhitespace = model.getLineFirstNonWhitespaceColumn(editor.getSelection().positionLineNumber);\r\n        // sort selections by their start position but remeber\r\n        // the original index. that allows you to create correct\r\n        // offset-based selection logic without changing the\r\n        // primary selection\r\n        const indexedSelections = editor.getSelections()\r\n            .map((selection, idx) => ({ selection, idx }))\r\n            .sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\r\n        for (const { selection, idx } of indexedSelections) {\r\n            // extend selection with the `overwriteBefore` and `overwriteAfter` and then\r\n            // compare if this matches the extensions of the primary selection\r\n            let extensionBefore = SnippetSession.adjustSelection(model, selection, overwriteBefore, 0);\r\n            let extensionAfter = SnippetSession.adjustSelection(model, selection, 0, overwriteAfter);\r\n            if (firstBeforeText !== model.getValueInRange(extensionBefore)) {\r\n                extensionBefore = selection;\r\n            }\r\n            if (firstAfterText !== model.getValueInRange(extensionAfter)) {\r\n                extensionAfter = selection;\r\n            }\r\n            // merge the before and after selection into one\r\n            const snippetSelection = selection\r\n                .setStartPosition(extensionBefore.startLineNumber, extensionBefore.startColumn)\r\n                .setEndPosition(extensionAfter.endLineNumber, extensionAfter.endColumn);\r\n            const snippet = new SnippetParser().parse(template, true, enforceFinalTabstop);\r\n            // adjust the template string to match the indentation and\r\n            // whitespace rules of this insert location (can be different for each cursor)\r\n            // happens when being asked for (default) or when this is a secondary\r\n            // cursor and the leading whitespace is different\r\n            const start = snippetSelection.getStartPosition();\r\n            const snippetLineLeadingWhitespace = SnippetSession.adjustWhitespace(model, start, snippet, adjustWhitespace || (idx > 0 && firstLineFirstNonWhitespace !== model.getLineFirstNonWhitespaceColumn(selection.positionLineNumber)), true);\r\n            snippet.resolveVariables(new CompositeSnippetVariableResolver([\r\n                modelBasedVariableResolver,\r\n                new ClipboardBasedVariableResolver(readClipboardText, idx, indexedSelections.length, editor.getOption(68 /* multiCursorPaste */) === 'spread'),\r\n                new SelectionBasedVariableResolver(model, selection, idx, overtypingCapturer),\r\n                new CommentBasedVariableResolver(model, selection),\r\n                new TimeBasedVariableResolver,\r\n                new WorkspaceBasedVariableResolver(workspaceService),\r\n                new RandomBasedVariableResolver,\r\n            ]));\r\n            const offset = model.getOffsetAt(start) + delta;\r\n            delta += snippet.toString().length - model.getValueLengthInRange(snippetSelection);\r\n            // store snippets with the index of their originating selection.\r\n            // that ensures the primiary cursor stays primary despite not being\r\n            // the one with lowest start position\r\n            edits[idx] = EditOperation.replace(snippetSelection, snippet.toString());\r\n            edits[idx].identifier = { major: idx, minor: 0 }; // mark the edit so only our undo edits will be used to generate end cursors\r\n            snippets[idx] = new OneSnippet(editor, snippet, offset, snippetLineLeadingWhitespace);\r\n        }\r\n        return { edits, snippets };\r\n    }\r\n    dispose() {\r\n        dispose(this._snippets);\r\n    }\r\n    _logInfo() {\r\n        return `template=\"${this._template}\", merged_templates=\"${this._templateMerges.join(' -> ')}\"`;\r\n    }\r\n    insert() {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // make insert edit and start with first selections\r\n        const { edits, snippets } = SnippetSession.createEditsAndSnippets(this._editor, this._template, this._options.overwriteBefore, this._options.overwriteAfter, false, this._options.adjustWhitespace, this._options.clipboardText, this._options.overtypingCapturer);\r\n        this._snippets = snippets;\r\n        this._editor.executeEdits('snippet', edits, undoEdits => {\r\n            if (this._snippets[0].hasPlaceholder) {\r\n                return this._move(true);\r\n            }\r\n            else {\r\n                return undoEdits\r\n                    .filter(edit => !!edit.identifier) // only use our undo edits\r\n                    .map(edit => Selection.fromPositions(edit.range.getEndPosition()));\r\n            }\r\n        });\r\n        this._editor.revealRange(this._editor.getSelections()[0]);\r\n    }\r\n    merge(template, options = _defaultOptions) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        this._templateMerges.push([this._snippets[0]._nestingLevel, this._snippets[0]._placeholderGroupsIdx, template]);\r\n        const { edits, snippets } = SnippetSession.createEditsAndSnippets(this._editor, template, options.overwriteBefore, options.overwriteAfter, true, options.adjustWhitespace, options.clipboardText, options.overtypingCapturer);\r\n        this._editor.executeEdits('snippet', edits, undoEdits => {\r\n            for (const snippet of this._snippets) {\r\n                snippet.merge(snippets);\r\n            }\r\n            console.assert(snippets.length === 0);\r\n            if (this._snippets[0].hasPlaceholder) {\r\n                return this._move(undefined);\r\n            }\r\n            else {\r\n                return (undoEdits\r\n                    .filter(edit => !!edit.identifier) // only use our undo edits\r\n                    .map(edit => Selection.fromPositions(edit.range.getEndPosition())));\r\n            }\r\n        });\r\n    }\r\n    next() {\r\n        const newSelections = this._move(true);\r\n        this._editor.setSelections(newSelections);\r\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\r\n    }\r\n    prev() {\r\n        const newSelections = this._move(false);\r\n        this._editor.setSelections(newSelections);\r\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\r\n    }\r\n    _move(fwd) {\r\n        const selections = [];\r\n        for (const snippet of this._snippets) {\r\n            const oneSelection = snippet.move(fwd);\r\n            selections.push(...oneSelection);\r\n        }\r\n        return selections;\r\n    }\r\n    get isAtFirstPlaceholder() {\r\n        return this._snippets[0].isAtFirstPlaceholder;\r\n    }\r\n    get isAtLastPlaceholder() {\r\n        return this._snippets[0].isAtLastPlaceholder;\r\n    }\r\n    get hasPlaceholder() {\r\n        return this._snippets[0].hasPlaceholder;\r\n    }\r\n    get choice() {\r\n        return this._snippets[0].choice;\r\n    }\r\n    isSelectionWithinPlaceholders() {\r\n        if (!this.hasPlaceholder) {\r\n            return false;\r\n        }\r\n        const selections = this._editor.getSelections();\r\n        if (selections.length < this._snippets.length) {\r\n            // this means we started snippet mode with N\r\n            // selections and have M (N > M) selections.\r\n            // So one snippet is without selection -> cancel\r\n            return false;\r\n        }\r\n        let allPossibleSelections = new Map();\r\n        for (const snippet of this._snippets) {\r\n            const possibleSelections = snippet.computePossibleSelections();\r\n            // for the first snippet find the placeholder (and its ranges)\r\n            // that contain at least one selection. for all remaining snippets\r\n            // the same placeholder (and their ranges) must be used.\r\n            if (allPossibleSelections.size === 0) {\r\n                for (const [index, ranges] of possibleSelections) {\r\n                    ranges.sort(Range.compareRangesUsingStarts);\r\n                    for (const selection of selections) {\r\n                        if (ranges[0].containsRange(selection)) {\r\n                            allPossibleSelections.set(index, []);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (allPossibleSelections.size === 0) {\r\n                // return false if we couldn't associate a selection to\r\n                // this (the first) snippet\r\n                return false;\r\n            }\r\n            // add selections from 'this' snippet so that we know all\r\n            // selections for this placeholder\r\n            allPossibleSelections.forEach((array, index) => {\r\n                array.push(...possibleSelections.get(index));\r\n            });\r\n        }\r\n        // sort selections (and later placeholder-ranges). then walk both\r\n        // arrays and make sure the placeholder-ranges contain the corresponding\r\n        // selection\r\n        selections.sort(Range.compareRangesUsingStarts);\r\n        for (let [index, ranges] of allPossibleSelections) {\r\n            if (ranges.length !== selections.length) {\r\n                allPossibleSelections.delete(index);\r\n                continue;\r\n            }\r\n            ranges.sort(Range.compareRangesUsingStarts);\r\n            for (let i = 0; i < ranges.length; i++) {\r\n                if (!ranges[i].containsRange(selections[i])) {\r\n                    allPossibleSelections.delete(index);\r\n                    continue;\r\n                }\r\n            }\r\n        }\r\n        // from all possible selections we have deleted those\r\n        // that don't match with the current selection. if we don't\r\n        // have any left, we don't have a selection anymore\r\n        return allPossibleSelections.size > 0;\r\n    }\r\n}\r\n", "import { URI } from '../../../base/common/uri.js';\r\nexport const WORKSPACE_EXTENSION = 'code-workspace';\r\nexport function isSingleFolderWorkspaceIdentifier(obj) {\r\n    const singleFolderIdentifier = obj;\r\n    return typeof (singleFolderIdentifier === null || singleFolderIdentifier === void 0 ? void 0 : singleFolderIdentifier.id) === 'string' && URI.isUri(singleFolderIdentifier.uri);\r\n}\r\nexport function toWorkspaceIdentifier(workspace) {\r\n    // Multi root\r\n    if (workspace.configuration) {\r\n        return {\r\n            id: workspace.id,\r\n            configPath: workspace.configuration\r\n        };\r\n    }\r\n    // Single folder\r\n    if (workspace.folders.length === 1) {\r\n        return {\r\n            id: workspace.id,\r\n            uri: workspace.folders[0].uri\r\n        };\r\n    }\r\n    // Empty workspace\r\n    return undefined;\r\n}\r\n//#endregion\r\n", "// prep-work\r\nconst _data = new Uint8Array(16);\r\nconst _hex = [];\r\nfor (let i = 0; i < 256; i++) {\r\n    _hex.push(i.toString(16).padStart(2, '0'));\r\n}\r\n// todo@jrieken\r\n// 1. node nodejs use`crypto#randomBytes`, see: https://nodejs.org/docs/latest/api/crypto.html#crypto_crypto_randombytes_size_callback\r\nlet _fillRandomValues;\r\nif (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\r\n    // browser\r\n    _fillRandomValues = crypto.getRandomValues.bind(crypto);\r\n}\r\nelse {\r\n    _fillRandomValues = function (bucket) {\r\n        for (let i = 0; i < bucket.length; i++) {\r\n            bucket[i] = Math.floor(Math.random() * 256);\r\n        }\r\n        return bucket;\r\n    };\r\n}\r\nexport function generateUuid() {\r\n    // get data\r\n    _fillRandomValues(_data);\r\n    // set version bits\r\n    _data[6] = (_data[6] & 0x0f) | 0x40;\r\n    _data[8] = (_data[8] & 0x3f) | 0x80;\r\n    // print as string\r\n    let i = 0;\r\n    let result = '';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += '-';\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    result += _hex[_data[i++]];\r\n    return result;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport * as path from '../../../base/common/path.js';\r\nimport { dirname } from '../../../base/common/resources.js';\r\nimport { Text } from './snippetParser.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { getLeadingWhitespace, commonPrefixLength, isFalsyOrWhitespace, splitLines } from '../../../base/common/strings.js';\r\nimport { toWorkspaceIdentifier, WORKSPACE_EXTENSION, isSingleFolderWorkspaceIdentifier } from '../../../platform/workspaces/common/workspaces.js';\r\nimport { normalizeDriveLetter } from '../../../base/common/labels.js';\r\nimport { generateUuid } from '../../../base/common/uuid.js';\r\nexport class CompositeSnippetVariableResolver {\r\n    constructor(_delegates) {\r\n        this._delegates = _delegates;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        for (const delegate of this._delegates) {\r\n            let value = delegate.resolve(variable);\r\n            if (value !== undefined) {\r\n                return value;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class SelectionBasedVariableResolver {\r\n    constructor(_model, _selection, _selectionIdx, _overtypingCapturer) {\r\n        this._model = _model;\r\n        this._selection = _selection;\r\n        this._selectionIdx = _selectionIdx;\r\n        this._overtypingCapturer = _overtypingCapturer;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'SELECTION' || name === 'TM_SELECTED_TEXT') {\r\n            let value = this._model.getValueInRange(this._selection) || undefined;\r\n            let isMultiline = this._selection.startLineNumber !== this._selection.endLineNumber;\r\n            // If there was no selected text, try to get last overtyped text\r\n            if (!value && this._overtypingCapturer) {\r\n                const info = this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);\r\n                if (info) {\r\n                    value = info.value;\r\n                    isMultiline = info.multiline;\r\n                }\r\n            }\r\n            if (value && isMultiline && variable.snippet) {\r\n                // Selection is a multiline string which we indentation we now\r\n                // need to adjust. We compare the indentation of this variable\r\n                // with the indentation at the editor position and add potential\r\n                // extra indentation to the value\r\n                const line = this._model.getLineContent(this._selection.startLineNumber);\r\n                const lineLeadingWhitespace = getLeadingWhitespace(line, 0, this._selection.startColumn - 1);\r\n                let varLeadingWhitespace = lineLeadingWhitespace;\r\n                variable.snippet.walk(marker => {\r\n                    if (marker === variable) {\r\n                        return false;\r\n                    }\r\n                    if (marker instanceof Text) {\r\n                        varLeadingWhitespace = getLeadingWhitespace(splitLines(marker.value).pop());\r\n                    }\r\n                    return true;\r\n                });\r\n                const whitespaceCommonLength = commonPrefixLength(varLeadingWhitespace, lineLeadingWhitespace);\r\n                value = value.replace(/(\\r\\n|\\r|\\n)(.*)/g, (m, newline, rest) => `${newline}${varLeadingWhitespace.substr(whitespaceCommonLength)}${rest}`);\r\n            }\r\n            return value;\r\n        }\r\n        else if (name === 'TM_CURRENT_LINE') {\r\n            return this._model.getLineContent(this._selection.positionLineNumber);\r\n        }\r\n        else if (name === 'TM_CURRENT_WORD') {\r\n            const info = this._model.getWordAtPosition({\r\n                lineNumber: this._selection.positionLineNumber,\r\n                column: this._selection.positionColumn\r\n            });\r\n            return info && info.word || undefined;\r\n        }\r\n        else if (name === 'TM_LINE_INDEX') {\r\n            return String(this._selection.positionLineNumber - 1);\r\n        }\r\n        else if (name === 'TM_LINE_NUMBER') {\r\n            return String(this._selection.positionLineNumber);\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class ModelBasedVariableResolver {\r\n    constructor(_labelService, _model) {\r\n        this._labelService = _labelService;\r\n        this._model = _model;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'TM_FILENAME') {\r\n            return path.basename(this._model.uri.fsPath);\r\n        }\r\n        else if (name === 'TM_FILENAME_BASE') {\r\n            const name = path.basename(this._model.uri.fsPath);\r\n            const idx = name.lastIndexOf('.');\r\n            if (idx <= 0) {\r\n                return name;\r\n            }\r\n            else {\r\n                return name.slice(0, idx);\r\n            }\r\n        }\r\n        else if (name === 'TM_DIRECTORY' && this._labelService) {\r\n            if (path.dirname(this._model.uri.fsPath) === '.') {\r\n                return '';\r\n            }\r\n            return this._labelService.getUriLabel(dirname(this._model.uri));\r\n        }\r\n        else if (name === 'TM_FILEPATH' && this._labelService) {\r\n            return this._labelService.getUriLabel(this._model.uri);\r\n        }\r\n        else if (name === 'RELATIVE_FILEPATH' && this._labelService) {\r\n            return this._labelService.getUriLabel(this._model.uri, { relative: true, noPrefix: true });\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class ClipboardBasedVariableResolver {\r\n    constructor(_readClipboardText, _selectionIdx, _selectionCount, _spread) {\r\n        this._readClipboardText = _readClipboardText;\r\n        this._selectionIdx = _selectionIdx;\r\n        this._selectionCount = _selectionCount;\r\n        this._spread = _spread;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        if (variable.name !== 'CLIPBOARD') {\r\n            return undefined;\r\n        }\r\n        const clipboardText = this._readClipboardText();\r\n        if (!clipboardText) {\r\n            return undefined;\r\n        }\r\n        // `spread` is assigning each cursor a line of the clipboard\r\n        // text whenever there the line count equals the cursor count\r\n        // and when enabled\r\n        if (this._spread) {\r\n            const lines = clipboardText.split(/\\r\\n|\\n|\\r/).filter(s => !isFalsyOrWhitespace(s));\r\n            if (lines.length === this._selectionCount) {\r\n                return lines[this._selectionIdx];\r\n            }\r\n        }\r\n        return clipboardText;\r\n    }\r\n}\r\nexport class CommentBasedVariableResolver {\r\n    constructor(_model, _selection) {\r\n        this._model = _model;\r\n        this._selection = _selection;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        const langId = this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber, this._selection.selectionStartColumn);\r\n        const config = LanguageConfigurationRegistry.getComments(langId);\r\n        if (!config) {\r\n            return undefined;\r\n        }\r\n        if (name === 'LINE_COMMENT') {\r\n            return config.lineCommentToken || undefined;\r\n        }\r\n        else if (name === 'BLOCK_COMMENT_START') {\r\n            return config.blockCommentStartToken || undefined;\r\n        }\r\n        else if (name === 'BLOCK_COMMENT_END') {\r\n            return config.blockCommentEndToken || undefined;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nexport class TimeBasedVariableResolver {\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'CURRENT_YEAR') {\r\n            return String(new Date().getFullYear());\r\n        }\r\n        else if (name === 'CURRENT_YEAR_SHORT') {\r\n            return String(new Date().getFullYear()).slice(-2);\r\n        }\r\n        else if (name === 'CURRENT_MONTH') {\r\n            return String(new Date().getMonth().valueOf() + 1).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_DATE') {\r\n            return String(new Date().getDate().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_HOUR') {\r\n            return String(new Date().getHours().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_MINUTE') {\r\n            return String(new Date().getMinutes().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_SECOND') {\r\n            return String(new Date().getSeconds().valueOf()).padStart(2, '0');\r\n        }\r\n        else if (name === 'CURRENT_DAY_NAME') {\r\n            return TimeBasedVariableResolver.dayNames[new Date().getDay()];\r\n        }\r\n        else if (name === 'CURRENT_DAY_NAME_SHORT') {\r\n            return TimeBasedVariableResolver.dayNamesShort[new Date().getDay()];\r\n        }\r\n        else if (name === 'CURRENT_MONTH_NAME') {\r\n            return TimeBasedVariableResolver.monthNames[new Date().getMonth()];\r\n        }\r\n        else if (name === 'CURRENT_MONTH_NAME_SHORT') {\r\n            return TimeBasedVariableResolver.monthNamesShort[new Date().getMonth()];\r\n        }\r\n        else if (name === 'CURRENT_SECONDS_UNIX') {\r\n            return String(Math.floor(Date.now() / 1000));\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nTimeBasedVariableResolver.dayNames = [nls.localize('Sunday', \"Sunday\"), nls.localize('Monday', \"Monday\"), nls.localize('Tuesday', \"Tuesday\"), nls.localize('Wednesday', \"Wednesday\"), nls.localize('Thursday', \"Thursday\"), nls.localize('Friday', \"Friday\"), nls.localize('Saturday', \"Saturday\")];\r\nTimeBasedVariableResolver.dayNamesShort = [nls.localize('SundayShort', \"Sun\"), nls.localize('MondayShort', \"Mon\"), nls.localize('TuesdayShort', \"Tue\"), nls.localize('WednesdayShort', \"Wed\"), nls.localize('ThursdayShort', \"Thu\"), nls.localize('FridayShort', \"Fri\"), nls.localize('SaturdayShort', \"Sat\")];\r\nTimeBasedVariableResolver.monthNames = [nls.localize('January', \"January\"), nls.localize('February', \"February\"), nls.localize('March', \"March\"), nls.localize('April', \"April\"), nls.localize('May', \"May\"), nls.localize('June', \"June\"), nls.localize('July', \"July\"), nls.localize('August', \"August\"), nls.localize('September', \"September\"), nls.localize('October', \"October\"), nls.localize('November', \"November\"), nls.localize('December', \"December\")];\r\nTimeBasedVariableResolver.monthNamesShort = [nls.localize('JanuaryShort', \"Jan\"), nls.localize('FebruaryShort', \"Feb\"), nls.localize('MarchShort', \"Mar\"), nls.localize('AprilShort', \"Apr\"), nls.localize('MayShort', \"May\"), nls.localize('JuneShort', \"Jun\"), nls.localize('JulyShort', \"Jul\"), nls.localize('AugustShort', \"Aug\"), nls.localize('SeptemberShort', \"Sep\"), nls.localize('OctoberShort', \"Oct\"), nls.localize('NovemberShort', \"Nov\"), nls.localize('DecemberShort', \"Dec\")];\r\nexport class WorkspaceBasedVariableResolver {\r\n    constructor(_workspaceService) {\r\n        this._workspaceService = _workspaceService;\r\n        //\r\n    }\r\n    resolve(variable) {\r\n        if (!this._workspaceService) {\r\n            return undefined;\r\n        }\r\n        const workspaceIdentifier = toWorkspaceIdentifier(this._workspaceService.getWorkspace());\r\n        if (!workspaceIdentifier) {\r\n            return undefined;\r\n        }\r\n        if (variable.name === 'WORKSPACE_NAME') {\r\n            return this._resolveWorkspaceName(workspaceIdentifier);\r\n        }\r\n        else if (variable.name === 'WORKSPACE_FOLDER') {\r\n            return this._resoveWorkspacePath(workspaceIdentifier);\r\n        }\r\n        return undefined;\r\n    }\r\n    _resolveWorkspaceName(workspaceIdentifier) {\r\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\r\n            return path.basename(workspaceIdentifier.uri.path);\r\n        }\r\n        let filename = path.basename(workspaceIdentifier.configPath.path);\r\n        if (filename.endsWith(WORKSPACE_EXTENSION)) {\r\n            filename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\r\n        }\r\n        return filename;\r\n    }\r\n    _resoveWorkspacePath(workspaceIdentifier) {\r\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\r\n            return normalizeDriveLetter(workspaceIdentifier.uri.fsPath);\r\n        }\r\n        let filename = path.basename(workspaceIdentifier.configPath.path);\r\n        let folderpath = workspaceIdentifier.configPath.fsPath;\r\n        if (folderpath.endsWith(filename)) {\r\n            folderpath = folderpath.substr(0, folderpath.length - filename.length - 1);\r\n        }\r\n        return (folderpath ? normalizeDriveLetter(folderpath) : '/');\r\n    }\r\n}\r\nexport class RandomBasedVariableResolver {\r\n    resolve(variable) {\r\n        const { name } = variable;\r\n        if (name === 'RANDOM') {\r\n            return Math.random().toString().slice(-6);\r\n        }\r\n        else if (name === 'RANDOM_HEX') {\r\n            return Math.random().toString(16).slice(-6);\r\n        }\r\n        else if (name === 'UUID') {\r\n            return generateUuid();\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onUnexpectedExternalError, canceled, isPromiseCanceledError } from '../../../base/common/errors.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { FuzzyScore } from '../../../base/common/filters.js';\r\nimport { isDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { SnippetParser } from '../snippet/snippetParser.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { ITextModelService } from '../../common/services/resolverService.js';\r\nimport { localize } from '../../../nls.js';\r\nexport const Context = {\r\n    Visible: new RawContextKey('suggestWidgetVisible', false, localize('suggestWidgetVisible', \"Whether suggestion are visible\")),\r\n    DetailsVisible: new RawContextKey('suggestWidgetDetailsVisible', false, localize('suggestWidgetDetailsVisible', \"Whether suggestion details are visible\")),\r\n    MultipleSuggestions: new RawContextKey('suggestWidgetMultipleSuggestions', false, localize('suggestWidgetMultipleSuggestions', \"Whether there are multiple suggestions to pick from\")),\r\n    MakesTextEdit: new RawContextKey('suggestionMakesTextEdit', true, localize('suggestionMakesTextEdit', \"Whether inserting the current suggestion yields in a change or has everything already been typed\")),\r\n    AcceptSuggestionsOnEnter: new RawContextKey('acceptSuggestionOnEnter', true, localize('acceptSuggestionOnEnter', \"Whether suggestions are inserted when pressing Enter\")),\r\n    HasInsertAndReplaceRange: new RawContextKey('suggestionHasInsertAndReplaceRange', false, localize('suggestionHasInsertAndReplaceRange', \"Whether the current suggestion has insert and replace behaviour\")),\r\n    InsertMode: new RawContextKey('suggestionInsertMode', undefined, { type: 'string', description: localize('suggestionInsertMode', \"Whether the default behaviour is to insert or replace\") }),\r\n    CanResolve: new RawContextKey('suggestionCanResolve', false, localize('suggestionCanResolve', \"Whether the current suggestion supports to resolve further details\")),\r\n};\r\nexport const suggestWidgetStatusbarMenu = new MenuId('suggestWidgetStatusBar');\r\nexport class CompletionItem {\r\n    constructor(position, completion, container, provider) {\r\n        this.position = position;\r\n        this.completion = completion;\r\n        this.container = container;\r\n        this.provider = provider;\r\n        // validation\r\n        this.isInvalid = false;\r\n        // sorting, filtering\r\n        this.score = FuzzyScore.Default;\r\n        this.distance = 0;\r\n        this.textLabel = typeof completion.label === 'string'\r\n            ? completion.label\r\n            : completion.label.label;\r\n        // ensure lower-variants (perf)\r\n        this.labelLow = this.textLabel.toLowerCase();\r\n        // validate label\r\n        this.isInvalid = !this.textLabel;\r\n        this.sortTextLow = completion.sortText && completion.sortText.toLowerCase();\r\n        this.filterTextLow = completion.filterText && completion.filterText.toLowerCase();\r\n        // normalize ranges\r\n        if (Range.isIRange(completion.range)) {\r\n            this.editStart = new Position(completion.range.startLineNumber, completion.range.startColumn);\r\n            this.editInsertEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\r\n            this.editReplaceEnd = new Position(completion.range.endLineNumber, completion.range.endColumn);\r\n            // validate range\r\n            this.isInvalid = this.isInvalid\r\n                || Range.spansMultipleLines(completion.range) || completion.range.startLineNumber !== position.lineNumber;\r\n        }\r\n        else {\r\n            this.editStart = new Position(completion.range.insert.startLineNumber, completion.range.insert.startColumn);\r\n            this.editInsertEnd = new Position(completion.range.insert.endLineNumber, completion.range.insert.endColumn);\r\n            this.editReplaceEnd = new Position(completion.range.replace.endLineNumber, completion.range.replace.endColumn);\r\n            // validate ranges\r\n            this.isInvalid = this.isInvalid\r\n                || Range.spansMultipleLines(completion.range.insert) || Range.spansMultipleLines(completion.range.replace)\r\n                || completion.range.insert.startLineNumber !== position.lineNumber || completion.range.replace.startLineNumber !== position.lineNumber\r\n                || completion.range.insert.startColumn !== completion.range.replace.startColumn;\r\n        }\r\n        // create the suggestion resolver\r\n        if (typeof provider.resolveCompletionItem !== 'function') {\r\n            this._resolveCache = Promise.resolve();\r\n            this._isResolved = true;\r\n        }\r\n    }\r\n    // ---- resolving\r\n    get isResolved() {\r\n        return !!this._isResolved;\r\n    }\r\n    resolve(token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._resolveCache) {\r\n                const sub = token.onCancellationRequested(() => {\r\n                    this._resolveCache = undefined;\r\n                    this._isResolved = false;\r\n                });\r\n                this._resolveCache = Promise.resolve(this.provider.resolveCompletionItem(this.completion, token)).then(value => {\r\n                    Object.assign(this.completion, value);\r\n                    this._isResolved = true;\r\n                    sub.dispose();\r\n                }, err => {\r\n                    if (isPromiseCanceledError(err)) {\r\n                        // the IPC queue will reject the request with the\r\n                        // cancellation error -> reset cached\r\n                        this._resolveCache = undefined;\r\n                        this._isResolved = false;\r\n                    }\r\n                });\r\n            }\r\n            return this._resolveCache;\r\n        });\r\n    }\r\n}\r\nexport class CompletionOptions {\r\n    constructor(snippetSortOrder = 2 /* Bottom */, kindFilter = new Set(), providerFilter = new Set(), showDeprecated = true) {\r\n        this.snippetSortOrder = snippetSortOrder;\r\n        this.kindFilter = kindFilter;\r\n        this.providerFilter = providerFilter;\r\n        this.showDeprecated = showDeprecated;\r\n    }\r\n}\r\nCompletionOptions.default = new CompletionOptions();\r\nlet _snippetSuggestSupport;\r\nexport function getSnippetSuggestSupport() {\r\n    return _snippetSuggestSupport;\r\n}\r\nexport class CompletionItemModel {\r\n    constructor(items, needsClipboard, durations, disposable) {\r\n        this.items = items;\r\n        this.needsClipboard = needsClipboard;\r\n        this.durations = durations;\r\n        this.disposable = disposable;\r\n    }\r\n}\r\nexport function provideSuggestionItems(model, position, options = CompletionOptions.default, context = { triggerKind: 0 /* Invoke */ }, token = CancellationToken.None) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const sw = new StopWatch(true);\r\n        position = position.clone();\r\n        const word = model.getWordAtPosition(position);\r\n        const defaultReplaceRange = word ? new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn) : Range.fromPositions(position);\r\n        const defaultRange = { replace: defaultReplaceRange, insert: defaultReplaceRange.setEndPosition(position.lineNumber, position.column) };\r\n        const result = [];\r\n        const disposables = new DisposableStore();\r\n        const durations = [];\r\n        let needsClipboard = false;\r\n        const onCompletionList = (provider, container, sw) => {\r\n            var _a, _b, _c;\r\n            if (!container) {\r\n                return;\r\n            }\r\n            for (let suggestion of container.suggestions) {\r\n                if (!options.kindFilter.has(suggestion.kind)) {\r\n                    // skip if not showing deprecated suggestions\r\n                    if (!options.showDeprecated && ((_a = suggestion === null || suggestion === void 0 ? void 0 : suggestion.tags) === null || _a === void 0 ? void 0 : _a.includes(1 /* Deprecated */))) {\r\n                        continue;\r\n                    }\r\n                    // fill in default range when missing\r\n                    if (!suggestion.range) {\r\n                        suggestion.range = defaultRange;\r\n                    }\r\n                    // fill in default sortText when missing\r\n                    if (!suggestion.sortText) {\r\n                        suggestion.sortText = typeof suggestion.label === 'string' ? suggestion.label : suggestion.label.label;\r\n                    }\r\n                    if (!needsClipboard && suggestion.insertTextRules && suggestion.insertTextRules & 4 /* InsertAsSnippet */) {\r\n                        needsClipboard = SnippetParser.guessNeedsClipboard(suggestion.insertText);\r\n                    }\r\n                    result.push(new CompletionItem(position, suggestion, container, provider));\r\n                }\r\n            }\r\n            if (isDisposable(container)) {\r\n                disposables.add(container);\r\n            }\r\n            durations.push({\r\n                providerName: (_b = provider._debugDisplayName) !== null && _b !== void 0 ? _b : 'unkown_provider', elapsedProvider: (_c = container.duration) !== null && _c !== void 0 ? _c : -1, elapsedOverall: sw.elapsed()\r\n            });\r\n        };\r\n        // ask for snippets in parallel to asking \"real\" providers. Only do something if configured to\r\n        // do so - no snippet filter, no special-providers-only request\r\n        const snippetCompletions = (() => __awaiter(this, void 0, void 0, function* () {\r\n            if (!_snippetSuggestSupport || options.kindFilter.has(27 /* Snippet */)) {\r\n                return;\r\n            }\r\n            if (options.providerFilter.size > 0 && !options.providerFilter.has(_snippetSuggestSupport)) {\r\n                return;\r\n            }\r\n            const sw = new StopWatch(true);\r\n            const list = yield _snippetSuggestSupport.provideCompletionItems(model, position, context, token);\r\n            onCompletionList(_snippetSuggestSupport, list, sw);\r\n        }))();\r\n        // add suggestions from contributed providers - providers are ordered in groups of\r\n        // equal score and once a group produces a result the process stops\r\n        // get provider groups, always add snippet suggestion provider\r\n        for (let providerGroup of modes.CompletionProviderRegistry.orderedGroups(model)) {\r\n            // for each support in the group ask for suggestions\r\n            let lenBefore = result.length;\r\n            yield Promise.all(providerGroup.map((provider) => __awaiter(this, void 0, void 0, function* () {\r\n                if (options.providerFilter.size > 0 && !options.providerFilter.has(provider)) {\r\n                    return;\r\n                }\r\n                try {\r\n                    const sw = new StopWatch(true);\r\n                    const list = yield provider.provideCompletionItems(model, position, context, token);\r\n                    onCompletionList(provider, list, sw);\r\n                }\r\n                catch (err) {\r\n                    onUnexpectedExternalError(err);\r\n                }\r\n            })));\r\n            if (lenBefore !== result.length || token.isCancellationRequested) {\r\n                break;\r\n            }\r\n        }\r\n        yield snippetCompletions;\r\n        if (token.isCancellationRequested) {\r\n            disposables.dispose();\r\n            return Promise.reject(canceled());\r\n        }\r\n        return new CompletionItemModel(result.sort(getSuggestionComparator(options.snippetSortOrder)), needsClipboard, { entries: durations, elapsed: sw.elapsed() }, disposables);\r\n    });\r\n}\r\nfunction defaultComparator(a, b) {\r\n    // check with 'sortText'\r\n    if (a.sortTextLow && b.sortTextLow) {\r\n        if (a.sortTextLow < b.sortTextLow) {\r\n            return -1;\r\n        }\r\n        else if (a.sortTextLow > b.sortTextLow) {\r\n            return 1;\r\n        }\r\n    }\r\n    // check with 'label'\r\n    if (a.completion.label < b.completion.label) {\r\n        return -1;\r\n    }\r\n    else if (a.completion.label > b.completion.label) {\r\n        return 1;\r\n    }\r\n    // check with 'type'\r\n    return a.completion.kind - b.completion.kind;\r\n}\r\nfunction snippetUpComparator(a, b) {\r\n    if (a.completion.kind !== b.completion.kind) {\r\n        if (a.completion.kind === 27 /* Snippet */) {\r\n            return -1;\r\n        }\r\n        else if (b.completion.kind === 27 /* Snippet */) {\r\n            return 1;\r\n        }\r\n    }\r\n    return defaultComparator(a, b);\r\n}\r\nfunction snippetDownComparator(a, b) {\r\n    if (a.completion.kind !== b.completion.kind) {\r\n        if (a.completion.kind === 27 /* Snippet */) {\r\n            return 1;\r\n        }\r\n        else if (b.completion.kind === 27 /* Snippet */) {\r\n            return -1;\r\n        }\r\n    }\r\n    return defaultComparator(a, b);\r\n}\r\nconst _snippetComparators = new Map();\r\n_snippetComparators.set(0 /* Top */, snippetUpComparator);\r\n_snippetComparators.set(2 /* Bottom */, snippetDownComparator);\r\n_snippetComparators.set(1 /* Inline */, defaultComparator);\r\nexport function getSuggestionComparator(snippetConfig) {\r\n    return _snippetComparators.get(snippetConfig);\r\n}\r\nCommandsRegistry.registerCommand('_executeCompletionItemProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri, position, triggerCharacter, maxItemsToResolve] = args;\r\n    assertType(URI.isUri(uri));\r\n    assertType(Position.isIPosition(position));\r\n    assertType(typeof triggerCharacter === 'string' || !triggerCharacter);\r\n    assertType(typeof maxItemsToResolve === 'number' || !maxItemsToResolve);\r\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\r\n    try {\r\n        const result = {\r\n            incomplete: false,\r\n            suggestions: []\r\n        };\r\n        const resolving = [];\r\n        const completions = yield provideSuggestionItems(ref.object.textEditorModel, Position.lift(position), undefined, { triggerCharacter, triggerKind: triggerCharacter ? 1 /* TriggerCharacter */ : 0 /* Invoke */ });\r\n        for (const item of completions.items) {\r\n            if (resolving.length < (maxItemsToResolve !== null && maxItemsToResolve !== void 0 ? maxItemsToResolve : 0)) {\r\n                resolving.push(item.resolve(CancellationToken.None));\r\n            }\r\n            result.incomplete = result.incomplete || item.container.incomplete;\r\n            result.suggestions.push(item.completion);\r\n        }\r\n        try {\r\n            yield Promise.all(resolving);\r\n            return result;\r\n        }\r\n        finally {\r\n            setTimeout(() => completions.disposable.dispose(), 100);\r\n        }\r\n    }\r\n    finally {\r\n        ref.dispose();\r\n    }\r\n}));\r\nconst _provider = new class {\r\n    constructor() {\r\n        this.onlyOnceSuggestions = [];\r\n    }\r\n    provideCompletionItems() {\r\n        let suggestions = this.onlyOnceSuggestions.slice(0);\r\n        let result = { suggestions };\r\n        this.onlyOnceSuggestions.length = 0;\r\n        return result;\r\n    }\r\n};\r\nmodes.CompletionProviderRegistry.register('*', _provider);\r\nexport function showSimpleSuggestions(editor, suggestions) {\r\n    setTimeout(() => {\r\n        _provider.onlyOnceSuggestions.push(...suggestions);\r\n        editor.getContribution('editor.contrib.suggestController').triggerSuggest(new Set().add(_provider));\r\n    }, 0);\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { showSimpleSuggestions } from '../suggest/suggest.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { SnippetSession } from './snippetSession.js';\r\nimport { localize } from '../../../nls.js';\r\nconst _defaultOptions = {\r\n    overwriteBefore: 0,\r\n    overwriteAfter: 0,\r\n    undoStopBefore: true,\r\n    undoStopAfter: true,\r\n    adjustWhitespace: true,\r\n    clipboardText: undefined,\r\n    overtypingCapturer: undefined\r\n};\r\nlet SnippetController2 = class SnippetController2 {\r\n    constructor(_editor, _logService, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._logService = _logService;\r\n        this._snippetListener = new DisposableStore();\r\n        this._modelVersionId = -1;\r\n        this._inSnippet = SnippetController2.InSnippetMode.bindTo(contextKeyService);\r\n        this._hasNextTabstop = SnippetController2.HasNextTabstop.bindTo(contextKeyService);\r\n        this._hasPrevTabstop = SnippetController2.HasPrevTabstop.bindTo(contextKeyService);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SnippetController2.ID);\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._snippetListener.dispose();\r\n    }\r\n    insert(template, opts) {\r\n        // this is here to find out more about the yet-not-understood\r\n        // error that sometimes happens when we fail to inserted a nested\r\n        // snippet\r\n        try {\r\n            this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : Object.assign(Object.assign({}, _defaultOptions), opts));\r\n        }\r\n        catch (e) {\r\n            this.cancel();\r\n            this._logService.error(e);\r\n            this._logService.error('snippet_error');\r\n            this._logService.error('insert_template=', template);\r\n            this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\r\n        }\r\n    }\r\n    _doInsert(template, opts) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // don't listen while inserting the snippet\r\n        // as that is the inflight state causing cancelation\r\n        this._snippetListener.clear();\r\n        if (opts.undoStopBefore) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        if (!this._session) {\r\n            this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\r\n            this._session = new SnippetSession(this._editor, template, opts);\r\n            this._session.insert();\r\n        }\r\n        else {\r\n            this._session.merge(template, opts);\r\n        }\r\n        if (opts.undoStopAfter) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        this._updateState();\r\n        this._snippetListener.add(this._editor.onDidChangeModelContent(e => e.isFlush && this.cancel()));\r\n        this._snippetListener.add(this._editor.onDidChangeModel(() => this.cancel()));\r\n        this._snippetListener.add(this._editor.onDidChangeCursorSelection(() => this._updateState()));\r\n    }\r\n    _updateState() {\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            // canceled in the meanwhile\r\n            return;\r\n        }\r\n        if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\r\n            // undo until the 'before' state happened\r\n            // and makes use cancel snippet mode\r\n            return this.cancel();\r\n        }\r\n        if (!this._session.hasPlaceholder) {\r\n            // don't listen for selection changes and don't\r\n            // update context keys when the snippet is plain text\r\n            return this.cancel();\r\n        }\r\n        if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\r\n            return this.cancel();\r\n        }\r\n        this._inSnippet.set(true);\r\n        this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\r\n        this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\r\n        this._handleChoice();\r\n    }\r\n    _handleChoice() {\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        const { choice } = this._session;\r\n        if (!choice) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        if (this._currentChoice !== choice) {\r\n            this._currentChoice = choice;\r\n            this._editor.setSelections(this._editor.getSelections()\r\n                .map(s => Selection.fromPositions(s.getStartPosition())));\r\n            const [first] = choice.options;\r\n            showSimpleSuggestions(this._editor, choice.options.map((option, i) => {\r\n                // let before = choice.options.slice(0, i);\r\n                // let after = choice.options.slice(i);\r\n                return {\r\n                    kind: 13 /* Value */,\r\n                    label: option.value,\r\n                    insertText: option.value,\r\n                    // insertText: `\\${1|${after.concat(before).join(',')}|}$0`,\r\n                    // snippetType: 'textmate',\r\n                    sortText: 'a'.repeat(i + 1),\r\n                    range: Range.fromPositions(this._editor.getPosition(), this._editor.getPosition().delta(0, first.value.length))\r\n                };\r\n            }));\r\n        }\r\n    }\r\n    finish() {\r\n        while (this._inSnippet.get()) {\r\n            this.next();\r\n        }\r\n    }\r\n    cancel(resetSelection = false) {\r\n        var _a;\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        this._snippetListener.clear();\r\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._session = undefined;\r\n        this._modelVersionId = -1;\r\n        if (resetSelection) {\r\n            // reset selection to the primary cursor when being asked\r\n            // for. this happens when explicitly cancelling snippet mode,\r\n            // e.g. when pressing ESC\r\n            this._editor.setSelections([this._editor.getSelection()]);\r\n        }\r\n    }\r\n    prev() {\r\n        if (this._session) {\r\n            this._session.prev();\r\n        }\r\n        this._updateState();\r\n    }\r\n    next() {\r\n        if (this._session) {\r\n            this._session.next();\r\n        }\r\n        this._updateState();\r\n    }\r\n    isInSnippet() {\r\n        return Boolean(this._inSnippet.get());\r\n    }\r\n};\r\nSnippetController2.ID = 'snippetController2';\r\nSnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false, localize('inSnippetMode', \"Whether the editor in current in snippet mode\"));\r\nSnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false, localize('hasNextTabstop', \"Whether there is a next tab stop when in snippet mode\"));\r\nSnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false, localize('hasPrevTabstop', \"Whether there is a previous tab stop when in snippet mode\"));\r\nSnippetController2 = __decorate([\r\n    __param(1, ILogService),\r\n    __param(2, IContextKeyService)\r\n], SnippetController2);\r\nexport { SnippetController2 };\r\nregisterEditorContribution(SnippetController2.ID, SnippetController2);\r\nconst CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToNextSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\r\n    handler: ctrl => ctrl.next(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToPrevSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\r\n    handler: ctrl => ctrl.prev(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 1024 /* Shift */ | 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'leaveSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: ctrl => ctrl.cancel(true),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'acceptSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: ctrl => ctrl.finish(),\r\n    // kbOpts: {\r\n    // \tweight: KeybindingWeight.EditorContrib + 30,\r\n    // \tkbExpr: EditorContextKeys.textFocus,\r\n    // \tprimary: KeyCode.Enter,\r\n    // }\r\n}));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { LRUCache, TernarySearchTree } from '../../../base/common/map.js';\r\nimport { IStorageService, WillSaveStateReason } from '../../../platform/storage/common/storage.js';\r\nimport { completionKindFromString } from '../../common/modes.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nexport class Memory {\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n    select(model, pos, items) {\r\n        if (items.length === 0) {\r\n            return 0;\r\n        }\r\n        let topScore = items[0].score[0];\r\n        for (let i = 0; i < items.length; i++) {\r\n            const { score, completion: suggestion } = items[i];\r\n            if (score[0] !== topScore) {\r\n                // stop when leaving the group of top matches\r\n                break;\r\n            }\r\n            if (suggestion.preselect) {\r\n                // stop when seeing an auto-select-item\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nexport class NoMemory extends Memory {\r\n    constructor() {\r\n        super('first');\r\n    }\r\n    memorize(model, pos, item) {\r\n        // no-op\r\n    }\r\n    toJSON() {\r\n        return undefined;\r\n    }\r\n    fromJSON() {\r\n        //\r\n    }\r\n}\r\nexport class LRUMemory extends Memory {\r\n    constructor() {\r\n        super('recentlyUsed');\r\n        this._cache = new LRUCache(300, 0.66);\r\n        this._seq = 0;\r\n    }\r\n    memorize(model, pos, item) {\r\n        const key = `${model.getLanguageIdentifier().language}/${item.textLabel}`;\r\n        this._cache.set(key, {\r\n            touch: this._seq++,\r\n            type: item.completion.kind,\r\n            insertText: item.completion.insertText\r\n        });\r\n    }\r\n    select(model, pos, items) {\r\n        if (items.length === 0) {\r\n            return 0;\r\n        }\r\n        const lineSuffix = model.getLineContent(pos.lineNumber).substr(pos.column - 10, pos.column - 1);\r\n        if (/\\s$/.test(lineSuffix)) {\r\n            return super.select(model, pos, items);\r\n        }\r\n        let topScore = items[0].score[0];\r\n        let indexPreselect = -1;\r\n        let indexRecency = -1;\r\n        let seq = -1;\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (items[i].score[0] !== topScore) {\r\n                // consider only top items\r\n                break;\r\n            }\r\n            const key = `${model.getLanguageIdentifier().language}/${items[i].textLabel}`;\r\n            const item = this._cache.peek(key);\r\n            if (item && item.touch > seq && item.type === items[i].completion.kind && item.insertText === items[i].completion.insertText) {\r\n                seq = item.touch;\r\n                indexRecency = i;\r\n            }\r\n            if (items[i].completion.preselect && indexPreselect === -1) {\r\n                // stop when seeing an auto-select-item\r\n                return indexPreselect = i;\r\n            }\r\n        }\r\n        if (indexRecency !== -1) {\r\n            return indexRecency;\r\n        }\r\n        else if (indexPreselect !== -1) {\r\n            return indexPreselect;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    toJSON() {\r\n        return this._cache.toJSON();\r\n    }\r\n    fromJSON(data) {\r\n        this._cache.clear();\r\n        let seq = 0;\r\n        for (const [key, value] of data) {\r\n            value.touch = seq;\r\n            value.type = typeof value.type === 'number' ? value.type : completionKindFromString(value.type);\r\n            this._cache.set(key, value);\r\n        }\r\n        this._seq = this._cache.size;\r\n    }\r\n}\r\nexport class PrefixMemory extends Memory {\r\n    constructor() {\r\n        super('recentlyUsedByPrefix');\r\n        this._trie = TernarySearchTree.forStrings();\r\n        this._seq = 0;\r\n    }\r\n    memorize(model, pos, item) {\r\n        const { word } = model.getWordUntilPosition(pos);\r\n        const key = `${model.getLanguageIdentifier().language}/${word}`;\r\n        this._trie.set(key, {\r\n            type: item.completion.kind,\r\n            insertText: item.completion.insertText,\r\n            touch: this._seq++\r\n        });\r\n    }\r\n    select(model, pos, items) {\r\n        let { word } = model.getWordUntilPosition(pos);\r\n        if (!word) {\r\n            return super.select(model, pos, items);\r\n        }\r\n        let key = `${model.getLanguageIdentifier().language}/${word}`;\r\n        let item = this._trie.get(key);\r\n        if (!item) {\r\n            item = this._trie.findSubstr(key);\r\n        }\r\n        if (item) {\r\n            for (let i = 0; i < items.length; i++) {\r\n                let { kind, insertText } = items[i].completion;\r\n                if (kind === item.type && insertText === item.insertText) {\r\n                    return i;\r\n                }\r\n            }\r\n        }\r\n        return super.select(model, pos, items);\r\n    }\r\n    toJSON() {\r\n        let entries = [];\r\n        this._trie.forEach((value, key) => entries.push([key, value]));\r\n        // sort by last recently used (touch), then\r\n        // take the top 200 item and normalize their\r\n        // touch\r\n        entries\r\n            .sort((a, b) => -(a[1].touch - b[1].touch))\r\n            .forEach((value, i) => value[1].touch = i);\r\n        return entries.slice(0, 200);\r\n    }\r\n    fromJSON(data) {\r\n        this._trie.clear();\r\n        if (data.length > 0) {\r\n            this._seq = data[0][1].touch + 1;\r\n            for (const [key, value] of data) {\r\n                value.type = typeof value.type === 'number' ? value.type : completionKindFromString(value.type);\r\n                this._trie.set(key, value);\r\n            }\r\n        }\r\n    }\r\n}\r\nlet SuggestMemoryService = class SuggestMemoryService {\r\n    constructor(_storageService, _modeService, _configService) {\r\n        this._storageService = _storageService;\r\n        this._modeService = _modeService;\r\n        this._configService = _configService;\r\n        this._disposables = new DisposableStore();\r\n        this._persistSoon = new RunOnceScheduler(() => this._saveState(), 500);\r\n        this._disposables.add(_storageService.onWillSaveState(e => {\r\n            if (e.reason === WillSaveStateReason.SHUTDOWN) {\r\n                this._saveState();\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._persistSoon.dispose();\r\n    }\r\n    memorize(model, pos, item) {\r\n        this._withStrategy(model, pos).memorize(model, pos, item);\r\n        this._persistSoon.schedule();\r\n    }\r\n    select(model, pos, items) {\r\n        return this._withStrategy(model, pos).select(model, pos, items);\r\n    }\r\n    _withStrategy(model, pos) {\r\n        var _a, _b;\r\n        const mode = this._configService.getValue('editor.suggestSelection', {\r\n            overrideIdentifier: (_a = this._modeService.getLanguageIdentifier(model.getLanguageIdAtPosition(pos.lineNumber, pos.column))) === null || _a === void 0 ? void 0 : _a.language,\r\n            resource: model.uri\r\n        });\r\n        if (((_b = this._strategy) === null || _b === void 0 ? void 0 : _b.name) !== mode) {\r\n            this._saveState();\r\n            const ctor = SuggestMemoryService._strategyCtors.get(mode) || NoMemory;\r\n            this._strategy = new ctor();\r\n            try {\r\n                const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\r\n                const scope = share ? 0 /* GLOBAL */ : 1 /* WORKSPACE */;\r\n                const raw = this._storageService.get(`${SuggestMemoryService._storagePrefix}/${mode}`, scope);\r\n                if (raw) {\r\n                    this._strategy.fromJSON(JSON.parse(raw));\r\n                }\r\n            }\r\n            catch (e) {\r\n                // things can go wrong with JSON...\r\n            }\r\n        }\r\n        return this._strategy;\r\n    }\r\n    _saveState() {\r\n        if (this._strategy) {\r\n            const share = this._configService.getValue('editor.suggest.shareSuggestSelections');\r\n            const scope = share ? 0 /* GLOBAL */ : 1 /* WORKSPACE */;\r\n            const raw = JSON.stringify(this._strategy);\r\n            this._storageService.store(`${SuggestMemoryService._storagePrefix}/${this._strategy.name}`, raw, scope, 1 /* MACHINE */);\r\n        }\r\n    }\r\n};\r\nSuggestMemoryService._strategyCtors = new Map([\r\n    ['recentlyUsedByPrefix', PrefixMemory],\r\n    ['recentlyUsed', LRUMemory],\r\n    ['first', NoMemory]\r\n]);\r\nSuggestMemoryService._storagePrefix = 'suggest/memories';\r\nSuggestMemoryService = __decorate([\r\n    __param(0, IStorageService),\r\n    __param(1, IModeService),\r\n    __param(2, IConfigurationService)\r\n], SuggestMemoryService);\r\nexport { SuggestMemoryService };\r\nexport const ISuggestMemoryService = createDecorator('ISuggestMemories');\r\nregisterSingleton(ISuggestMemoryService, SuggestMemoryService, true);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nlet SuggestAlternatives = class SuggestAlternatives {\r\n    constructor(_editor, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._index = 0;\r\n        this._ckOtherSuggestions = SuggestAlternatives.OtherSuggestions.bindTo(contextKeyService);\r\n    }\r\n    dispose() {\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        var _a;\r\n        this._ckOtherSuggestions.reset();\r\n        (_a = this._listener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._model = undefined;\r\n        this._acceptNext = undefined;\r\n        this._ignore = false;\r\n    }\r\n    set({ model, index }, acceptNext) {\r\n        // no suggestions -> nothing to do\r\n        if (model.items.length === 0) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        // no alternative suggestions -> nothing to do\r\n        let nextIndex = SuggestAlternatives._moveIndex(true, model, index);\r\n        if (nextIndex === index) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        this._acceptNext = acceptNext;\r\n        this._model = model;\r\n        this._index = index;\r\n        this._listener = this._editor.onDidChangeCursorPosition(() => {\r\n            if (!this._ignore) {\r\n                this.reset();\r\n            }\r\n        });\r\n        this._ckOtherSuggestions.set(true);\r\n    }\r\n    static _moveIndex(fwd, model, index) {\r\n        let newIndex = index;\r\n        while (true) {\r\n            newIndex = (newIndex + model.items.length + (fwd ? +1 : -1)) % model.items.length;\r\n            if (newIndex === index) {\r\n                break;\r\n            }\r\n            if (!model.items[newIndex].completion.additionalTextEdits) {\r\n                break;\r\n            }\r\n        }\r\n        return newIndex;\r\n    }\r\n    next() {\r\n        this._move(true);\r\n    }\r\n    prev() {\r\n        this._move(false);\r\n    }\r\n    _move(fwd) {\r\n        if (!this._model) {\r\n            // nothing to reason about\r\n            return;\r\n        }\r\n        try {\r\n            this._ignore = true;\r\n            this._index = SuggestAlternatives._moveIndex(fwd, this._model, this._index);\r\n            this._acceptNext({ index: this._index, item: this._model.items[this._index], model: this._model });\r\n        }\r\n        finally {\r\n            this._ignore = false;\r\n        }\r\n    }\r\n};\r\nSuggestAlternatives.OtherSuggestions = new RawContextKey('hasOtherSuggestions', false);\r\nSuggestAlternatives = __decorate([\r\n    __param(1, IContextKeyService)\r\n], SuggestAlternatives);\r\nexport { SuggestAlternatives };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { fuzzyScore, fuzzyScoreGracefulAggressive, FuzzyScore, anyScore } from '../../../base/common/filters.js';\r\nimport { compareIgnoreCase } from '../../../base/common/strings.js';\r\nimport { quickSelect } from '../../../base/common/arrays.js';\r\nexport class LineContext {\r\n    constructor(leadingLineContent, characterCountDelta) {\r\n        this.leadingLineContent = leadingLineContent;\r\n        this.characterCountDelta = characterCountDelta;\r\n    }\r\n}\r\n/**\r\n * Sorted, filtered completion view model\r\n * */\r\nexport class CompletionModel {\r\n    constructor(items, column, lineContext, wordDistance, options, snippetSuggestions, clipboardText) {\r\n        this.clipboardText = clipboardText;\r\n        this._snippetCompareFn = CompletionModel._compareCompletionItems;\r\n        this._items = items;\r\n        this._column = column;\r\n        this._wordDistance = wordDistance;\r\n        this._options = options;\r\n        this._refilterKind = 1 /* All */;\r\n        this._lineContext = lineContext;\r\n        if (snippetSuggestions === 'top') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsUp;\r\n        }\r\n        else if (snippetSuggestions === 'bottom') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsDown;\r\n        }\r\n    }\r\n    get lineContext() {\r\n        return this._lineContext;\r\n    }\r\n    set lineContext(value) {\r\n        if (this._lineContext.leadingLineContent !== value.leadingLineContent\r\n            || this._lineContext.characterCountDelta !== value.characterCountDelta) {\r\n            this._refilterKind = this._lineContext.characterCountDelta < value.characterCountDelta && this._filteredItems ? 2 /* Incr */ : 1 /* All */;\r\n            this._lineContext = value;\r\n        }\r\n    }\r\n    get items() {\r\n        this._ensureCachedState();\r\n        return this._filteredItems;\r\n    }\r\n    get allProvider() {\r\n        this._ensureCachedState();\r\n        return this._providerInfo.keys();\r\n    }\r\n    get incomplete() {\r\n        this._ensureCachedState();\r\n        const result = new Set();\r\n        for (let [provider, incomplete] of this._providerInfo) {\r\n            if (incomplete) {\r\n                result.add(provider);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    adopt(except) {\r\n        let res = [];\r\n        for (let i = 0; i < this._items.length;) {\r\n            if (!except.has(this._items[i].provider)) {\r\n                res.push(this._items[i]);\r\n                // unordered removed\r\n                this._items[i] = this._items[this._items.length - 1];\r\n                this._items.pop();\r\n            }\r\n            else {\r\n                // continue with next item\r\n                i++;\r\n            }\r\n        }\r\n        this._refilterKind = 1 /* All */;\r\n        return res;\r\n    }\r\n    get stats() {\r\n        this._ensureCachedState();\r\n        return this._stats;\r\n    }\r\n    _ensureCachedState() {\r\n        if (this._refilterKind !== 0 /* Nothing */) {\r\n            this._createCachedState();\r\n        }\r\n    }\r\n    _createCachedState() {\r\n        this._providerInfo = new Map();\r\n        const labelLengths = [];\r\n        const { leadingLineContent, characterCountDelta } = this._lineContext;\r\n        let word = '';\r\n        let wordLow = '';\r\n        // incrementally filter less\r\n        const source = this._refilterKind === 1 /* All */ ? this._items : this._filteredItems;\r\n        const target = [];\r\n        // picks a score function based on the number of\r\n        // items that we have to score/filter and based on the\r\n        // user-configuration\r\n        const scoreFn = (!this._options.filterGraceful || source.length > 2000) ? fuzzyScore : fuzzyScoreGracefulAggressive;\r\n        for (let i = 0; i < source.length; i++) {\r\n            const item = source[i];\r\n            if (item.isInvalid) {\r\n                continue; // SKIP invalid items\r\n            }\r\n            // collect all support, know if their result is incomplete\r\n            this._providerInfo.set(item.provider, Boolean(item.container.incomplete));\r\n            // 'word' is that remainder of the current line that we\r\n            // filter and score against. In theory each suggestion uses a\r\n            // different word, but in practice not - that's why we cache\r\n            const overwriteBefore = item.position.column - item.editStart.column;\r\n            const wordLen = overwriteBefore + characterCountDelta - (item.position.column - this._column);\r\n            if (word.length !== wordLen) {\r\n                word = wordLen === 0 ? '' : leadingLineContent.slice(-wordLen);\r\n                wordLow = word.toLowerCase();\r\n            }\r\n            // remember the word against which this item was\r\n            // scored\r\n            item.word = word;\r\n            if (wordLen === 0) {\r\n                // when there is nothing to score against, don't\r\n                // event try to do. Use a const rank and rely on\r\n                // the fallback-sort using the initial sort order.\r\n                // use a score of `-100` because that is out of the\r\n                // bound of values `fuzzyScore` will return\r\n                item.score = FuzzyScore.Default;\r\n            }\r\n            else {\r\n                // skip word characters that are whitespace until\r\n                // we have hit the replace range (overwriteBefore)\r\n                let wordPos = 0;\r\n                while (wordPos < overwriteBefore) {\r\n                    const ch = word.charCodeAt(wordPos);\r\n                    if (ch === 32 /* Space */ || ch === 9 /* Tab */) {\r\n                        wordPos += 1;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                if (wordPos >= wordLen) {\r\n                    // the wordPos at which scoring starts is the whole word\r\n                    // and therefore the same rules as not having a word apply\r\n                    item.score = FuzzyScore.Default;\r\n                }\r\n                else if (typeof item.completion.filterText === 'string') {\r\n                    // when there is a `filterText` it must match the `word`.\r\n                    // if it matches we check with the label to compute highlights\r\n                    // and if that doesn't yield a result we have no highlights,\r\n                    // despite having the match\r\n                    let match = scoreFn(word, wordLow, wordPos, item.completion.filterText, item.filterTextLow, 0, false);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    if (compareIgnoreCase(item.completion.filterText, item.textLabel) === 0) {\r\n                        // filterText and label are actually the same -> use good highlights\r\n                        item.score = match;\r\n                    }\r\n                    else {\r\n                        // re-run the scorer on the label in the hope of a result BUT use the rank\r\n                        // of the filterText-match\r\n                        item.score = anyScore(word, wordLow, wordPos, item.textLabel, item.labelLow, 0);\r\n                        item.score[0] = match[0]; // use score from filterText\r\n                    }\r\n                }\r\n                else {\r\n                    // by default match `word` against the `label`\r\n                    let match = scoreFn(word, wordLow, wordPos, item.textLabel, item.labelLow, 0, false);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    item.score = match;\r\n                }\r\n            }\r\n            item.idx = i;\r\n            item.distance = this._wordDistance.distance(item.position, item.completion);\r\n            target.push(item);\r\n            // update stats\r\n            labelLengths.push(item.textLabel.length);\r\n        }\r\n        this._filteredItems = target.sort(this._snippetCompareFn);\r\n        this._refilterKind = 0 /* Nothing */;\r\n        this._stats = {\r\n            pLabelLen: labelLengths.length ?\r\n                quickSelect(labelLengths.length - .85, labelLengths, (a, b) => a - b)\r\n                : 0\r\n        };\r\n    }\r\n    static _compareCompletionItems(a, b) {\r\n        if (a.score[0] > b.score[0]) {\r\n            return -1;\r\n        }\r\n        else if (a.score[0] < b.score[0]) {\r\n            return 1;\r\n        }\r\n        else if (a.distance < b.distance) {\r\n            return -1;\r\n        }\r\n        else if (a.distance > b.distance) {\r\n            return 1;\r\n        }\r\n        else if (a.idx < b.idx) {\r\n            return -1;\r\n        }\r\n        else if (a.idx > b.idx) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n    static _compareCompletionItemsSnippetsDown(a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 27 /* Snippet */) {\r\n                return 1;\r\n            }\r\n            else if (b.completion.kind === 27 /* Snippet */) {\r\n                return -1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    }\r\n    static _compareCompletionItemsSnippetsUp(a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 27 /* Snippet */) {\r\n                return -1;\r\n            }\r\n            else if (b.completion.kind === 27 /* Snippet */) {\r\n                return 1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { LinkedList } from '../../../base/common/linkedList.js';\r\nexport class BracketSelectionRangeProvider {\r\n    provideSelectionRanges(model, positions) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = [];\r\n            for (const position of positions) {\r\n                const bucket = [];\r\n                result.push(bucket);\r\n                const ranges = new Map();\r\n                yield new Promise(resolve => BracketSelectionRangeProvider._bracketsRightYield(resolve, 0, model, position, ranges));\r\n                yield new Promise(resolve => BracketSelectionRangeProvider._bracketsLeftYield(resolve, 0, model, position, ranges, bucket));\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n    static _bracketsRightYield(resolve, round, model, pos, ranges) {\r\n        const counts = new Map();\r\n        const t1 = Date.now();\r\n        while (true) {\r\n            if (round >= BracketSelectionRangeProvider._maxRounds) {\r\n                resolve();\r\n                break;\r\n            }\r\n            if (!pos) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let bracket = model.findNextBracket(pos);\r\n            if (!bracket) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let d = Date.now() - t1;\r\n            if (d > BracketSelectionRangeProvider._maxDuration) {\r\n                setTimeout(() => BracketSelectionRangeProvider._bracketsRightYield(resolve, round + 1, model, pos, ranges));\r\n                break;\r\n            }\r\n            const key = bracket.close[0];\r\n            if (bracket.isOpen) {\r\n                // wait for closing\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                counts.set(key, val + 1);\r\n            }\r\n            else {\r\n                // process closing\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                val -= 1;\r\n                counts.set(key, Math.max(0, val));\r\n                if (val < 0) {\r\n                    let list = ranges.get(key);\r\n                    if (!list) {\r\n                        list = new LinkedList();\r\n                        ranges.set(key, list);\r\n                    }\r\n                    list.push(bracket.range);\r\n                }\r\n            }\r\n            pos = bracket.range.getEndPosition();\r\n        }\r\n    }\r\n    static _bracketsLeftYield(resolve, round, model, pos, ranges, bucket) {\r\n        const counts = new Map();\r\n        const t1 = Date.now();\r\n        while (true) {\r\n            if (round >= BracketSelectionRangeProvider._maxRounds && ranges.size === 0) {\r\n                resolve();\r\n                break;\r\n            }\r\n            if (!pos) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let bracket = model.findPrevBracket(pos);\r\n            if (!bracket) {\r\n                resolve();\r\n                break;\r\n            }\r\n            let d = Date.now() - t1;\r\n            if (d > BracketSelectionRangeProvider._maxDuration) {\r\n                setTimeout(() => BracketSelectionRangeProvider._bracketsLeftYield(resolve, round + 1, model, pos, ranges, bucket));\r\n                break;\r\n            }\r\n            const key = bracket.close[0];\r\n            if (!bracket.isOpen) {\r\n                // wait for opening\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                counts.set(key, val + 1);\r\n            }\r\n            else {\r\n                // opening\r\n                let val = counts.has(key) ? counts.get(key) : 0;\r\n                val -= 1;\r\n                counts.set(key, Math.max(0, val));\r\n                if (val < 0) {\r\n                    let list = ranges.get(key);\r\n                    if (list) {\r\n                        let closing = list.shift();\r\n                        if (list.size === 0) {\r\n                            ranges.delete(key);\r\n                        }\r\n                        const innerBracket = Range.fromPositions(bracket.range.getEndPosition(), closing.getStartPosition());\r\n                        const outerBracket = Range.fromPositions(bracket.range.getStartPosition(), closing.getEndPosition());\r\n                        bucket.push({ range: innerBracket });\r\n                        bucket.push({ range: outerBracket });\r\n                        BracketSelectionRangeProvider._addBracketLeading(model, outerBracket, bucket);\r\n                    }\r\n                }\r\n            }\r\n            pos = bracket.range.getStartPosition();\r\n        }\r\n    }\r\n    static _addBracketLeading(model, bracket, bucket) {\r\n        if (bracket.startLineNumber === bracket.endLineNumber) {\r\n            return;\r\n        }\r\n        // xxxxxxxx {\r\n        //\r\n        // }\r\n        const startLine = bracket.startLineNumber;\r\n        const column = model.getLineFirstNonWhitespaceColumn(startLine);\r\n        if (column !== 0 && column !== bracket.startColumn) {\r\n            bucket.push({ range: Range.fromPositions(new Position(startLine, column), bracket.getEndPosition()) });\r\n            bucket.push({ range: Range.fromPositions(new Position(startLine, 1), bracket.getEndPosition()) });\r\n        }\r\n        // xxxxxxxx\r\n        // {\r\n        //\r\n        // }\r\n        const aboveLine = startLine - 1;\r\n        if (aboveLine > 0) {\r\n            const column = model.getLineFirstNonWhitespaceColumn(aboveLine);\r\n            if (column === bracket.startColumn && column !== model.getLineLastNonWhitespaceColumn(aboveLine)) {\r\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, column), bracket.getEndPosition()) });\r\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, 1), bracket.getEndPosition()) });\r\n            }\r\n        }\r\n    }\r\n}\r\nBracketSelectionRangeProvider._maxDuration = 30;\r\nBracketSelectionRangeProvider._maxRounds = 2;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { binarySearch, isFalsyOrEmpty } from '../../../base/common/arrays.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { BracketSelectionRangeProvider } from '../smartSelect/bracketSelections.js';\r\nexport class WordDistance {\r\n    static create(service, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!editor.getOption(104 /* suggest */).localityBonus) {\r\n                return WordDistance.None;\r\n            }\r\n            if (!editor.hasModel()) {\r\n                return WordDistance.None;\r\n            }\r\n            const model = editor.getModel();\r\n            const position = editor.getPosition();\r\n            if (!service.canComputeWordRanges(model.uri)) {\r\n                return WordDistance.None;\r\n            }\r\n            const [ranges] = yield new BracketSelectionRangeProvider().provideSelectionRanges(model, [position]);\r\n            if (ranges.length === 0) {\r\n                return WordDistance.None;\r\n            }\r\n            const wordRanges = yield service.computeWordRanges(model.uri, ranges[0].range);\r\n            if (!wordRanges) {\r\n                return WordDistance.None;\r\n            }\r\n            // remove current word\r\n            const wordUntilPos = model.getWordUntilPosition(position);\r\n            delete wordRanges[wordUntilPos.word];\r\n            return new class extends WordDistance {\r\n                distance(anchor, item) {\r\n                    if (!position.equals(editor.getPosition())) {\r\n                        return 0;\r\n                    }\r\n                    if (item.kind === 17 /* Keyword */) {\r\n                        return 2 << 20;\r\n                    }\r\n                    let word = typeof item.label === 'string' ? item.label : item.label.label;\r\n                    let wordLines = wordRanges[word];\r\n                    if (isFalsyOrEmpty(wordLines)) {\r\n                        return 2 << 20;\r\n                    }\r\n                    let idx = binarySearch(wordLines, Range.fromPositions(anchor), Range.compareRangesUsingStarts);\r\n                    let bestWordRange = idx >= 0 ? wordLines[idx] : wordLines[Math.max(0, ~idx - 1)];\r\n                    let blockDistance = ranges.length;\r\n                    for (const range of ranges) {\r\n                        if (!Range.containsRange(range.range, bestWordRange)) {\r\n                            break;\r\n                        }\r\n                        blockDistance -= 1;\r\n                    }\r\n                    return blockDistance;\r\n                }\r\n            };\r\n        });\r\n    }\r\n}\r\nWordDistance.None = new class extends WordDistance {\r\n    distance() { return 0; }\r\n};\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { TimeoutTimer } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { CompletionProviderRegistry } from '../../common/modes.js';\r\nimport { CompletionModel } from './completionModel.js';\r\nimport { getSuggestionComparator, provideSuggestionItems, getSnippetSuggestSupport, CompletionOptions } from './suggest.js';\r\nimport { SnippetController2 } from '../snippet/snippetController2.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { WordDistance } from './wordDistance.js';\r\nimport { isLowSurrogate, isHighSurrogate, getLeadingWhitespace } from '../../../base/common/strings.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nexport class LineContext {\r\n    constructor(model, position, auto, shy) {\r\n        this.leadingLineContent = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\r\n        this.leadingWord = model.getWordUntilPosition(position);\r\n        this.lineNumber = position.lineNumber;\r\n        this.column = position.column;\r\n        this.auto = auto;\r\n        this.shy = shy;\r\n    }\r\n    static shouldAutoTrigger(editor) {\r\n        if (!editor.hasModel()) {\r\n            return false;\r\n        }\r\n        const model = editor.getModel();\r\n        const pos = editor.getPosition();\r\n        model.tokenizeIfCheap(pos.lineNumber);\r\n        const word = model.getWordAtPosition(pos);\r\n        if (!word) {\r\n            return false;\r\n        }\r\n        if (word.endColumn !== pos.column) {\r\n            return false;\r\n        }\r\n        if (!isNaN(Number(word.word))) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction shouldPreventQuickSuggest(contextKeyService, configurationService) {\r\n    return (Boolean(contextKeyService.getContextKeyValue('inlineSuggestionVisible'))\r\n        && !Boolean(configurationService.getValue('editor.inlineSuggest.allowQuickSuggestions')));\r\n}\r\nfunction shouldPreventSuggestOnTriggerCharacters(contextKeyService, configurationService) {\r\n    return (Boolean(contextKeyService.getContextKeyValue('inlineSuggestionVisible'))\r\n        && !Boolean(configurationService.getValue('editor.inlineSuggest.allowSuggestOnTriggerCharacters')));\r\n}\r\nlet SuggestModel = class SuggestModel {\r\n    constructor(_editor, _editorWorkerService, _clipboardService, _telemetryService, _logService, _contextKeyService, _configurationService) {\r\n        this._editor = _editor;\r\n        this._editorWorkerService = _editorWorkerService;\r\n        this._clipboardService = _clipboardService;\r\n        this._telemetryService = _telemetryService;\r\n        this._logService = _logService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._configurationService = _configurationService;\r\n        this._toDispose = new DisposableStore();\r\n        this._quickSuggestDelay = 10;\r\n        this._triggerCharacterListener = new DisposableStore();\r\n        this._triggerQuickSuggest = new TimeoutTimer();\r\n        this._state = 0 /* Idle */;\r\n        this._completionDisposables = new DisposableStore();\r\n        this._onDidCancel = new Emitter();\r\n        this._onDidTrigger = new Emitter();\r\n        this._onDidSuggest = new Emitter();\r\n        this.onDidCancel = this._onDidCancel.event;\r\n        this.onDidTrigger = this._onDidTrigger.event;\r\n        this.onDidSuggest = this._onDidSuggest.event;\r\n        this._telemetryGate = 0;\r\n        this._currentSelection = this._editor.getSelection() || new Selection(1, 1, 1, 1);\r\n        // wire up various listeners\r\n        this._toDispose.add(this._editor.onDidChangeModel(() => {\r\n            this._updateTriggerCharacters();\r\n            this.cancel();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeModelLanguage(() => {\r\n            this._updateTriggerCharacters();\r\n            this.cancel();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeConfiguration(() => {\r\n            this._updateTriggerCharacters();\r\n            this._updateQuickSuggest();\r\n        }));\r\n        this._toDispose.add(CompletionProviderRegistry.onDidChange(() => {\r\n            this._updateTriggerCharacters();\r\n            this._updateActiveSuggestSession();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeCursorSelection(e => {\r\n            this._onCursorChange(e);\r\n        }));\r\n        let editorIsComposing = false;\r\n        this._toDispose.add(this._editor.onDidCompositionStart(() => {\r\n            editorIsComposing = true;\r\n        }));\r\n        this._toDispose.add(this._editor.onDidCompositionEnd(() => {\r\n            // refilter when composition ends\r\n            editorIsComposing = false;\r\n            this._refilterCompletionItems();\r\n        }));\r\n        this._toDispose.add(this._editor.onDidChangeModelContent(() => {\r\n            // only filter completions when the editor isn't\r\n            // composing a character, e.g. \u00A8 + u makes \u00FC but just\r\n            // \u00A8 cannot be used for filtering\r\n            if (!editorIsComposing) {\r\n                this._refilterCompletionItems();\r\n            }\r\n        }));\r\n        this._updateTriggerCharacters();\r\n        this._updateQuickSuggest();\r\n    }\r\n    dispose() {\r\n        dispose(this._triggerCharacterListener);\r\n        dispose([this._onDidCancel, this._onDidSuggest, this._onDidTrigger, this._triggerQuickSuggest]);\r\n        this._toDispose.dispose();\r\n        this._completionDisposables.dispose();\r\n        this.cancel();\r\n    }\r\n    // --- handle configuration & precondition changes\r\n    _updateQuickSuggest() {\r\n        this._quickSuggestDelay = this._editor.getOption(77 /* quickSuggestionsDelay */);\r\n        if (isNaN(this._quickSuggestDelay) || (!this._quickSuggestDelay && this._quickSuggestDelay !== 0) || this._quickSuggestDelay < 0) {\r\n            this._quickSuggestDelay = 10;\r\n        }\r\n    }\r\n    _updateTriggerCharacters() {\r\n        this._triggerCharacterListener.clear();\r\n        if (this._editor.getOption(78 /* readOnly */)\r\n            || !this._editor.hasModel()\r\n            || !this._editor.getOption(107 /* suggestOnTriggerCharacters */)) {\r\n            return;\r\n        }\r\n        const supportsByTriggerCharacter = new Map();\r\n        for (const support of CompletionProviderRegistry.all(this._editor.getModel())) {\r\n            for (const ch of support.triggerCharacters || []) {\r\n                let set = supportsByTriggerCharacter.get(ch);\r\n                if (!set) {\r\n                    set = new Set();\r\n                    set.add(getSnippetSuggestSupport());\r\n                    supportsByTriggerCharacter.set(ch, set);\r\n                }\r\n                set.add(support);\r\n            }\r\n        }\r\n        const checkTriggerCharacter = (text) => {\r\n            if (shouldPreventSuggestOnTriggerCharacters(this._contextKeyService, this._configurationService)) {\r\n                return;\r\n            }\r\n            if (!text) {\r\n                // came here from the compositionEnd-event\r\n                const position = this._editor.getPosition();\r\n                const model = this._editor.getModel();\r\n                text = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\r\n            }\r\n            let lastChar = '';\r\n            if (isLowSurrogate(text.charCodeAt(text.length - 1))) {\r\n                if (isHighSurrogate(text.charCodeAt(text.length - 2))) {\r\n                    lastChar = text.substr(text.length - 2);\r\n                }\r\n            }\r\n            else {\r\n                lastChar = text.charAt(text.length - 1);\r\n            }\r\n            const supports = supportsByTriggerCharacter.get(lastChar);\r\n            if (supports) {\r\n                // keep existing items that where not computed by the\r\n                // supports/providers that want to trigger now\r\n                const existing = this._completionModel\r\n                    ? { items: this._completionModel.adopt(supports), clipboardText: this._completionModel.clipboardText }\r\n                    : undefined;\r\n                this.trigger({ auto: true, shy: false, triggerCharacter: lastChar }, Boolean(this._completionModel), supports, existing);\r\n            }\r\n        };\r\n        this._triggerCharacterListener.add(this._editor.onDidType(checkTriggerCharacter));\r\n        this._triggerCharacterListener.add(this._editor.onDidCompositionEnd(checkTriggerCharacter));\r\n    }\r\n    // --- trigger/retrigger/cancel suggest\r\n    get state() {\r\n        return this._state;\r\n    }\r\n    cancel(retrigger = false) {\r\n        var _a;\r\n        if (this._state !== 0 /* Idle */) {\r\n            this._triggerQuickSuggest.cancel();\r\n            (_a = this._requestToken) === null || _a === void 0 ? void 0 : _a.cancel();\r\n            this._requestToken = undefined;\r\n            this._state = 0 /* Idle */;\r\n            this._completionModel = undefined;\r\n            this._context = undefined;\r\n            this._onDidCancel.fire({ retrigger });\r\n        }\r\n    }\r\n    clear() {\r\n        this._completionDisposables.clear();\r\n    }\r\n    _updateActiveSuggestSession() {\r\n        if (this._state !== 0 /* Idle */) {\r\n            if (!this._editor.hasModel() || !CompletionProviderRegistry.has(this._editor.getModel())) {\r\n                this.cancel();\r\n            }\r\n            else {\r\n                this.trigger({ auto: this._state === 2 /* Auto */, shy: false }, true);\r\n            }\r\n        }\r\n    }\r\n    _onCursorChange(e) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const prevSelection = this._currentSelection;\r\n        this._currentSelection = this._editor.getSelection();\r\n        if (!e.selection.isEmpty()\r\n            || (e.reason !== 0 /* NotSet */ && e.reason !== 3 /* Explicit */)\r\n            || (e.source !== 'keyboard' && e.source !== 'deleteLeft')) {\r\n            // Early exit if nothing needs to be done!\r\n            // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (!CompletionProviderRegistry.has(model)) {\r\n            return;\r\n        }\r\n        if (this._state === 0 /* Idle */ && e.reason === 0 /* NotSet */) {\r\n            if (this._editor.getOption(76 /* quickSuggestions */) === false) {\r\n                // not enabled\r\n                return;\r\n            }\r\n            if (!prevSelection.containsRange(this._currentSelection) && !prevSelection.getEndPosition().isBeforeOrEqual(this._currentSelection.getPosition())) {\r\n                // cursor didn't move RIGHT\r\n                return;\r\n            }\r\n            if (this._editor.getOption(104 /* suggest */).snippetsPreventQuickSuggestions && SnippetController2.get(this._editor).isInSnippet()) {\r\n                // no quick suggestion when in snippet mode\r\n                return;\r\n            }\r\n            this.cancel();\r\n            this._triggerQuickSuggest.cancelAndSet(() => {\r\n                if (this._state !== 0 /* Idle */) {\r\n                    return;\r\n                }\r\n                if (!LineContext.shouldAutoTrigger(this._editor)) {\r\n                    return;\r\n                }\r\n                if (!this._editor.hasModel()) {\r\n                    return;\r\n                }\r\n                const model = this._editor.getModel();\r\n                const pos = this._editor.getPosition();\r\n                // validate enabled now\r\n                const quickSuggestions = this._editor.getOption(76 /* quickSuggestions */);\r\n                if (quickSuggestions === false) {\r\n                    return;\r\n                }\r\n                else if (quickSuggestions === true) {\r\n                    // all good\r\n                }\r\n                else {\r\n                    // Check the type of the token that triggered this\r\n                    model.tokenizeIfCheap(pos.lineNumber);\r\n                    const lineTokens = model.getLineTokens(pos.lineNumber);\r\n                    const tokenType = lineTokens.getStandardTokenType(lineTokens.findTokenIndexAtOffset(Math.max(pos.column - 1 - 1, 0)));\r\n                    const inValidScope = quickSuggestions.other && tokenType === 0 /* Other */\r\n                        || quickSuggestions.comments && tokenType === 1 /* Comment */\r\n                        || quickSuggestions.strings && tokenType === 2 /* String */;\r\n                    if (!inValidScope) {\r\n                        return;\r\n                    }\r\n                }\r\n                if (shouldPreventQuickSuggest(this._contextKeyService, this._configurationService)) {\r\n                    // do not trigger quick suggestions if inline suggestions are shown\r\n                    return;\r\n                }\r\n                // we made it till here -> trigger now\r\n                this.trigger({ auto: true, shy: false });\r\n            }, this._quickSuggestDelay);\r\n        }\r\n        else if (this._state !== 0 /* Idle */ && e.reason === 3 /* Explicit */) {\r\n            // suggest is active and something like cursor keys are used to move\r\n            // the cursor. this means we can refilter at the new position\r\n            this._refilterCompletionItems();\r\n        }\r\n    }\r\n    _refilterCompletionItems() {\r\n        // Re-filter suggestions. This MUST run async because filtering/scoring\r\n        // uses the model content AND the cursor position. The latter is NOT\r\n        // updated when the document has changed (the event which drives this method)\r\n        // and therefore a little pause (next mirco task) is needed. See:\r\n        // https://stackoverflow.com/questions/25915634/difference-between-microtask-and-macrotask-within-an-event-loop-context#25933985\r\n        Promise.resolve().then(() => {\r\n            if (this._state === 0 /* Idle */) {\r\n                return;\r\n            }\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            const position = this._editor.getPosition();\r\n            const ctx = new LineContext(model, position, this._state === 2 /* Auto */, false);\r\n            this._onNewContext(ctx);\r\n        });\r\n    }\r\n    trigger(context, retrigger = false, onlyFrom, existing) {\r\n        var _a;\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const auto = context.auto;\r\n        const ctx = new LineContext(model, this._editor.getPosition(), auto, context.shy);\r\n        // Cancel previous requests, change state & update UI\r\n        this.cancel(retrigger);\r\n        this._state = auto ? 2 /* Auto */ : 1 /* Manual */;\r\n        this._onDidTrigger.fire({ auto, shy: context.shy, position: this._editor.getPosition() });\r\n        // Capture context when request was sent\r\n        this._context = ctx;\r\n        // Build context for request\r\n        let suggestCtx = { triggerKind: (_a = context.triggerKind) !== null && _a !== void 0 ? _a : 0 /* Invoke */ };\r\n        if (context.triggerCharacter) {\r\n            suggestCtx = {\r\n                triggerKind: 1 /* TriggerCharacter */,\r\n                triggerCharacter: context.triggerCharacter\r\n            };\r\n        }\r\n        this._requestToken = new CancellationTokenSource();\r\n        // kind filter and snippet sort rules\r\n        const snippetSuggestions = this._editor.getOption(99 /* snippetSuggestions */);\r\n        let snippetSortOrder = 1 /* Inline */;\r\n        switch (snippetSuggestions) {\r\n            case 'top':\r\n                snippetSortOrder = 0 /* Top */;\r\n                break;\r\n            // \t\u2193 that's the default anyways...\r\n            // case 'inline':\r\n            // \tsnippetSortOrder = SnippetSortOrder.Inline;\r\n            // \tbreak;\r\n            case 'bottom':\r\n                snippetSortOrder = 2 /* Bottom */;\r\n                break;\r\n        }\r\n        const { itemKind: itemKindFilter, showDeprecated } = SuggestModel._createSuggestFilter(this._editor);\r\n        const wordDistance = WordDistance.create(this._editorWorkerService, this._editor);\r\n        const completions = provideSuggestionItems(model, this._editor.getPosition(), new CompletionOptions(snippetSortOrder, itemKindFilter, onlyFrom, showDeprecated), suggestCtx, this._requestToken.token);\r\n        Promise.all([completions, wordDistance]).then(([completions, wordDistance]) => __awaiter(this, void 0, void 0, function* () {\r\n            var _b;\r\n            (_b = this._requestToken) === null || _b === void 0 ? void 0 : _b.dispose();\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            let clipboardText = existing === null || existing === void 0 ? void 0 : existing.clipboardText;\r\n            if (!clipboardText && completions.needsClipboard) {\r\n                clipboardText = yield this._clipboardService.readText();\r\n            }\r\n            if (this._state === 0 /* Idle */) {\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            let items = completions.items;\r\n            if (existing) {\r\n                const cmpFn = getSuggestionComparator(snippetSortOrder);\r\n                items = items.concat(existing.items).sort(cmpFn);\r\n            }\r\n            const ctx = new LineContext(model, this._editor.getPosition(), auto, context.shy);\r\n            this._completionModel = new CompletionModel(items, this._context.column, {\r\n                leadingLineContent: ctx.leadingLineContent,\r\n                characterCountDelta: ctx.column - this._context.column\r\n            }, wordDistance, this._editor.getOption(104 /* suggest */), this._editor.getOption(99 /* snippetSuggestions */), clipboardText);\r\n            // store containers so that they can be disposed later\r\n            this._completionDisposables.add(completions.disposable);\r\n            this._onNewContext(ctx);\r\n            // finally report telemetry about durations\r\n            this._reportDurationsTelemetry(completions.durations);\r\n        })).catch(onUnexpectedError);\r\n    }\r\n    _reportDurationsTelemetry(durations) {\r\n        if (this._telemetryGate++ % 230 !== 0) {\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            this._telemetryService.publicLog2('suggest.durations.json', { data: JSON.stringify(durations) });\r\n            this._logService.debug('suggest.durations.json', durations);\r\n        });\r\n    }\r\n    static _createSuggestFilter(editor) {\r\n        // kind filter and snippet sort rules\r\n        const result = new Set();\r\n        // snippet setting\r\n        const snippetSuggestions = editor.getOption(99 /* snippetSuggestions */);\r\n        if (snippetSuggestions === 'none') {\r\n            result.add(27 /* Snippet */);\r\n        }\r\n        // type setting\r\n        const suggestOptions = editor.getOption(104 /* suggest */);\r\n        if (!suggestOptions.showMethods) {\r\n            result.add(0 /* Method */);\r\n        }\r\n        if (!suggestOptions.showFunctions) {\r\n            result.add(1 /* Function */);\r\n        }\r\n        if (!suggestOptions.showConstructors) {\r\n            result.add(2 /* Constructor */);\r\n        }\r\n        if (!suggestOptions.showFields) {\r\n            result.add(3 /* Field */);\r\n        }\r\n        if (!suggestOptions.showVariables) {\r\n            result.add(4 /* Variable */);\r\n        }\r\n        if (!suggestOptions.showClasses) {\r\n            result.add(5 /* Class */);\r\n        }\r\n        if (!suggestOptions.showStructs) {\r\n            result.add(6 /* Struct */);\r\n        }\r\n        if (!suggestOptions.showInterfaces) {\r\n            result.add(7 /* Interface */);\r\n        }\r\n        if (!suggestOptions.showModules) {\r\n            result.add(8 /* Module */);\r\n        }\r\n        if (!suggestOptions.showProperties) {\r\n            result.add(9 /* Property */);\r\n        }\r\n        if (!suggestOptions.showEvents) {\r\n            result.add(10 /* Event */);\r\n        }\r\n        if (!suggestOptions.showOperators) {\r\n            result.add(11 /* Operator */);\r\n        }\r\n        if (!suggestOptions.showUnits) {\r\n            result.add(12 /* Unit */);\r\n        }\r\n        if (!suggestOptions.showValues) {\r\n            result.add(13 /* Value */);\r\n        }\r\n        if (!suggestOptions.showConstants) {\r\n            result.add(14 /* Constant */);\r\n        }\r\n        if (!suggestOptions.showEnums) {\r\n            result.add(15 /* Enum */);\r\n        }\r\n        if (!suggestOptions.showEnumMembers) {\r\n            result.add(16 /* EnumMember */);\r\n        }\r\n        if (!suggestOptions.showKeywords) {\r\n            result.add(17 /* Keyword */);\r\n        }\r\n        if (!suggestOptions.showWords) {\r\n            result.add(18 /* Text */);\r\n        }\r\n        if (!suggestOptions.showColors) {\r\n            result.add(19 /* Color */);\r\n        }\r\n        if (!suggestOptions.showFiles) {\r\n            result.add(20 /* File */);\r\n        }\r\n        if (!suggestOptions.showReferences) {\r\n            result.add(21 /* Reference */);\r\n        }\r\n        if (!suggestOptions.showColors) {\r\n            result.add(22 /* Customcolor */);\r\n        }\r\n        if (!suggestOptions.showFolders) {\r\n            result.add(23 /* Folder */);\r\n        }\r\n        if (!suggestOptions.showTypeParameters) {\r\n            result.add(24 /* TypeParameter */);\r\n        }\r\n        if (!suggestOptions.showSnippets) {\r\n            result.add(27 /* Snippet */);\r\n        }\r\n        if (!suggestOptions.showUsers) {\r\n            result.add(25 /* User */);\r\n        }\r\n        if (!suggestOptions.showIssues) {\r\n            result.add(26 /* Issue */);\r\n        }\r\n        return { itemKind: result, showDeprecated: suggestOptions.showDeprecated };\r\n    }\r\n    _onNewContext(ctx) {\r\n        if (!this._context) {\r\n            // happens when 24x7 IntelliSense is enabled and still in its delay\r\n            return;\r\n        }\r\n        if (ctx.lineNumber !== this._context.lineNumber) {\r\n            // e.g. happens when pressing Enter while IntelliSense is computed\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (getLeadingWhitespace(ctx.leadingLineContent) !== getLeadingWhitespace(this._context.leadingLineContent)) {\r\n            // cancel IntelliSense when line start changes\r\n            // happens when the current word gets outdented\r\n            this.cancel();\r\n            return;\r\n        }\r\n        if (ctx.column < this._context.column) {\r\n            // typed -> moved cursor LEFT -> retrigger if still on a word\r\n            if (ctx.leadingWord.word) {\r\n                this.trigger({ auto: this._context.auto, shy: false }, true);\r\n            }\r\n            else {\r\n                this.cancel();\r\n            }\r\n            return;\r\n        }\r\n        if (!this._completionModel) {\r\n            // happens when IntelliSense is not yet computed\r\n            return;\r\n        }\r\n        if (ctx.leadingWord.word.length !== 0 && ctx.leadingWord.startColumn > this._context.leadingWord.startColumn) {\r\n            // started a new word while IntelliSense shows -> retrigger\r\n            // Select those providers have not contributed to this completion model and re-trigger completions for\r\n            // them. Also adopt the existing items and merge them into the new completion model\r\n            const inactiveProvider = new Set(CompletionProviderRegistry.all(this._editor.getModel()));\r\n            for (let provider of this._completionModel.allProvider) {\r\n                inactiveProvider.delete(provider);\r\n            }\r\n            const items = this._completionModel.adopt(new Set());\r\n            this.trigger({ auto: this._context.auto, shy: false }, true, inactiveProvider, { items, clipboardText: this._completionModel.clipboardText });\r\n            return;\r\n        }\r\n        if (ctx.column > this._context.column && this._completionModel.incomplete.size > 0 && ctx.leadingWord.word.length !== 0) {\r\n            // typed -> moved cursor RIGHT & incomple model & still on a word -> retrigger\r\n            const { incomplete } = this._completionModel;\r\n            const items = this._completionModel.adopt(incomplete);\r\n            this.trigger({ auto: this._state === 2 /* Auto */, shy: false, triggerKind: 2 /* TriggerForIncompleteCompletions */ }, true, incomplete, { items, clipboardText: this._completionModel.clipboardText });\r\n        }\r\n        else {\r\n            // typed -> moved cursor RIGHT -> update UI\r\n            let oldLineContext = this._completionModel.lineContext;\r\n            let isFrozen = false;\r\n            this._completionModel.lineContext = {\r\n                leadingLineContent: ctx.leadingLineContent,\r\n                characterCountDelta: ctx.column - this._context.column\r\n            };\r\n            if (this._completionModel.items.length === 0) {\r\n                if (LineContext.shouldAutoTrigger(this._editor) && this._context.leadingWord.endColumn < ctx.leadingWord.startColumn) {\r\n                    // retrigger when heading into a new word\r\n                    this.trigger({ auto: this._context.auto, shy: false }, true);\r\n                    return;\r\n                }\r\n                if (!this._context.auto) {\r\n                    // freeze when IntelliSense was manually requested\r\n                    this._completionModel.lineContext = oldLineContext;\r\n                    isFrozen = this._completionModel.items.length > 0;\r\n                    if (isFrozen && ctx.leadingWord.word.length === 0) {\r\n                        // there were results before but now there aren't\r\n                        // and also we are not on a word anymore -> cancel\r\n                        this.cancel();\r\n                        return;\r\n                    }\r\n                }\r\n                else {\r\n                    // nothing left\r\n                    this.cancel();\r\n                    return;\r\n                }\r\n            }\r\n            this._onDidSuggest.fire({\r\n                completionModel: this._completionModel,\r\n                auto: this._context.auto,\r\n                shy: this._context.shy,\r\n                isFrozen,\r\n            });\r\n        }\r\n    }\r\n};\r\nSuggestModel = __decorate([\r\n    __param(1, IEditorWorkerService),\r\n    __param(2, IClipboardService),\r\n    __param(3, ITelemetryService),\r\n    __param(4, ILogService),\r\n    __param(5, IContextKeyService),\r\n    __param(6, IConfigurationService)\r\n], SuggestModel);\r\nexport { SuggestModel };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './media/suggest.css';\r\nimport '../../../base/browser/ui/codicons/codiconStyles.js'; // The codicon symbol styles are defined here and must be loaded\r\nimport '../symbolIcons/symbolIcons.js'; // The codicon symbol colors are defined here and must be loaded to get colors\r\nimport * as nls from '../../../nls.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { List } from '../../../base/browser/ui/list/listWidget.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { Context as SuggestContext } from './suggest.js';\r\nimport { attachListStyler } from '../../../platform/theme/common/styler.js';\r\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { registerColor, editorWidgetBackground, quickInputListFocusBackground, activeContrastBorder, listHighlightForeground, editorForeground, editorWidgetBorder, focusBorder, textLinkForeground, textCodeBlockBackground, quickInputListFocusForeground, listFocusHighlightForeground, quickInputListFocusIconForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { IStorageService } from '../../../platform/storage/common/storage.js';\r\nimport { TimeoutTimer, createCancelablePromise, disposableTimeout } from '../../../base/common/async.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { SuggestDetailsWidget, canExpandCompletionItem, SuggestDetailsOverlay } from './suggestWidgetDetails.js';\r\nimport { SuggestWidgetStatus } from './suggestWidgetStatus.js';\r\nimport { getAriaId, ItemRenderer } from './suggestWidgetRenderer.js';\r\nimport { ResizableHTMLElement } from './resizable.js';\r\nimport { EmbeddedCodeEditorWidget } from '../../browser/widget/embeddedCodeEditorWidget.js';\r\nimport { clamp } from '../../../base/common/numbers.js';\r\n/**\r\n * Suggest widget colors\r\n */\r\nexport const editorSuggestWidgetBackground = registerColor('editorSuggestWidget.background', { dark: editorWidgetBackground, light: editorWidgetBackground, hc: editorWidgetBackground }, nls.localize('editorSuggestWidgetBackground', 'Background color of the suggest widget.'));\r\nexport const editorSuggestWidgetBorder = registerColor('editorSuggestWidget.border', { dark: editorWidgetBorder, light: editorWidgetBorder, hc: editorWidgetBorder }, nls.localize('editorSuggestWidgetBorder', 'Border color of the suggest widget.'));\r\nexport const editorSuggestWidgetForeground = registerColor('editorSuggestWidget.foreground', { dark: editorForeground, light: editorForeground, hc: editorForeground }, nls.localize('editorSuggestWidgetForeground', 'Foreground color of the suggest widget.'));\r\nexport const editorSuggestWidgetSelectedForeground = registerColor('editorSuggestWidget.selectedForeground', { dark: quickInputListFocusForeground, light: quickInputListFocusForeground, hc: quickInputListFocusForeground }, nls.localize('editorSuggestWidgetSelectedForeground', 'Foreground color of the selected entry in the suggest widget.'));\r\nexport const editorSuggestWidgetSelectedIconForeground = registerColor('editorSuggestWidget.selectedIconForeground', { dark: quickInputListFocusIconForeground, light: quickInputListFocusIconForeground, hc: quickInputListFocusIconForeground }, nls.localize('editorSuggestWidgetSelectedIconForeground', 'Icon foreground color of the selected entry in the suggest widget.'));\r\nexport const editorSuggestWidgetSelectedBackground = registerColor('editorSuggestWidget.selectedBackground', { dark: quickInputListFocusBackground, light: quickInputListFocusBackground, hc: quickInputListFocusBackground }, nls.localize('editorSuggestWidgetSelectedBackground', 'Background color of the selected entry in the suggest widget.'));\r\nexport const editorSuggestWidgetHighlightForeground = registerColor('editorSuggestWidget.highlightForeground', { dark: listHighlightForeground, light: listHighlightForeground, hc: listHighlightForeground }, nls.localize('editorSuggestWidgetHighlightForeground', 'Color of the match highlights in the suggest widget.'));\r\nexport const editorSuggestWidgetHighlightFocusForeground = registerColor('editorSuggestWidget.focusHighlightForeground', { dark: listFocusHighlightForeground, light: listFocusHighlightForeground, hc: listFocusHighlightForeground }, nls.localize('editorSuggestWidgetFocusHighlightForeground', 'Color of the match highlights in the suggest widget when an item is focused.'));\r\nclass PersistedWidgetSize {\r\n    constructor(_service, editor) {\r\n        this._service = _service;\r\n        this._key = `suggestWidget.size/${editor.getEditorType()}/${editor instanceof EmbeddedCodeEditorWidget}`;\r\n    }\r\n    restore() {\r\n        var _a;\r\n        const raw = (_a = this._service.get(this._key, 0 /* GLOBAL */)) !== null && _a !== void 0 ? _a : '';\r\n        try {\r\n            const obj = JSON.parse(raw);\r\n            if (dom.Dimension.is(obj)) {\r\n                return dom.Dimension.lift(obj);\r\n            }\r\n        }\r\n        catch (_b) {\r\n            // ignore\r\n        }\r\n        return undefined;\r\n    }\r\n    store(size) {\r\n        this._service.store(this._key, JSON.stringify(size), 0 /* GLOBAL */, 1 /* MACHINE */);\r\n    }\r\n    reset() {\r\n        this._service.remove(this._key, 0 /* GLOBAL */);\r\n    }\r\n}\r\nlet SuggestWidget = class SuggestWidget {\r\n    constructor(editor, _storageService, _contextKeyService, _themeService, instantiationService) {\r\n        this.editor = editor;\r\n        this._storageService = _storageService;\r\n        this._state = 0 /* Hidden */;\r\n        this._isAuto = false;\r\n        this._ignoreFocusEvents = false;\r\n        this._forceRenderingAbove = false;\r\n        this._explainMode = false;\r\n        this._showTimeout = new TimeoutTimer();\r\n        this._disposables = new DisposableStore();\r\n        this._onDidSelect = new Emitter();\r\n        this._onDidFocus = new Emitter();\r\n        this._onDidHide = new Emitter();\r\n        this._onDidShow = new Emitter();\r\n        this.onDidSelect = this._onDidSelect.event;\r\n        this.onDidFocus = this._onDidFocus.event;\r\n        this.onDidHide = this._onDidHide.event;\r\n        this.onDidShow = this._onDidShow.event;\r\n        this._onDetailsKeydown = new Emitter();\r\n        this.onDetailsKeyDown = this._onDetailsKeydown.event;\r\n        this.element = new ResizableHTMLElement();\r\n        this.element.domNode.classList.add('editor-widget', 'suggest-widget');\r\n        this._contentWidget = new SuggestContentWidget(this, editor);\r\n        this._persistedSize = new PersistedWidgetSize(_storageService, editor);\r\n        class ResizeState {\r\n            constructor(persistedSize, currentSize, persistHeight = false, persistWidth = false) {\r\n                this.persistedSize = persistedSize;\r\n                this.currentSize = currentSize;\r\n                this.persistHeight = persistHeight;\r\n                this.persistWidth = persistWidth;\r\n            }\r\n        }\r\n        let state;\r\n        this._disposables.add(this.element.onDidWillResize(() => {\r\n            this._contentWidget.lockPreference();\r\n            state = new ResizeState(this._persistedSize.restore(), this.element.size);\r\n        }));\r\n        this._disposables.add(this.element.onDidResize(e => {\r\n            var _a, _b, _c, _d;\r\n            this._resize(e.dimension.width, e.dimension.height);\r\n            if (state) {\r\n                state.persistHeight = state.persistHeight || !!e.north || !!e.south;\r\n                state.persistWidth = state.persistWidth || !!e.east || !!e.west;\r\n            }\r\n            if (!e.done) {\r\n                return;\r\n            }\r\n            if (state) {\r\n                // only store width or height value that have changed and also\r\n                // only store changes that are above a certain threshold\r\n                const { itemHeight, defaultSize } = this.getLayoutInfo();\r\n                const threshold = Math.round(itemHeight / 2);\r\n                let { width, height } = this.element.size;\r\n                if (!state.persistHeight || Math.abs(state.currentSize.height - height) <= threshold) {\r\n                    height = (_b = (_a = state.persistedSize) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : defaultSize.height;\r\n                }\r\n                if (!state.persistWidth || Math.abs(state.currentSize.width - width) <= threshold) {\r\n                    width = (_d = (_c = state.persistedSize) === null || _c === void 0 ? void 0 : _c.width) !== null && _d !== void 0 ? _d : defaultSize.width;\r\n                }\r\n                this._persistedSize.store(new dom.Dimension(width, height));\r\n            }\r\n            // reset working state\r\n            this._contentWidget.unlockPreference();\r\n            state = undefined;\r\n        }));\r\n        this._messageElement = dom.append(this.element.domNode, dom.$('.message'));\r\n        this._listElement = dom.append(this.element.domNode, dom.$('.tree'));\r\n        const details = instantiationService.createInstance(SuggestDetailsWidget, this.editor);\r\n        details.onDidClose(this.toggleDetails, this, this._disposables);\r\n        this._details = new SuggestDetailsOverlay(details, this.editor);\r\n        const applyIconStyle = () => this.element.domNode.classList.toggle('no-icons', !this.editor.getOption(104 /* suggest */).showIcons);\r\n        applyIconStyle();\r\n        const renderer = instantiationService.createInstance(ItemRenderer, this.editor);\r\n        this._disposables.add(renderer);\r\n        this._disposables.add(renderer.onDidToggleDetails(() => this.toggleDetails()));\r\n        this._list = new List('SuggestWidget', this._listElement, {\r\n            getHeight: (_element) => this.getLayoutInfo().itemHeight,\r\n            getTemplateId: (_element) => 'suggestion'\r\n        }, [renderer], {\r\n            alwaysConsumeMouseWheel: true,\r\n            useShadows: false,\r\n            mouseSupport: false,\r\n            accessibilityProvider: {\r\n                getRole: () => 'option',\r\n                getAriaLabel: (item) => {\r\n                    if (item.isResolved && this._isDetailsVisible()) {\r\n                        const { documentation, detail } = item.completion;\r\n                        const docs = strings.format('{0}{1}', detail || '', documentation ? (typeof documentation === 'string' ? documentation : documentation.value) : '');\r\n                        return nls.localize('ariaCurrenttSuggestionReadDetails', \"{0}, docs: {1}\", item.textLabel, docs);\r\n                    }\r\n                    else {\r\n                        return item.textLabel;\r\n                    }\r\n                },\r\n                getWidgetAriaLabel: () => nls.localize('suggest', \"Suggest\"),\r\n                getWidgetRole: () => 'listbox'\r\n            }\r\n        });\r\n        this._status = instantiationService.createInstance(SuggestWidgetStatus, this.element.domNode);\r\n        const applyStatusBarStyle = () => this.element.domNode.classList.toggle('with-status-bar', this.editor.getOption(104 /* suggest */).showStatusBar);\r\n        applyStatusBarStyle();\r\n        this._disposables.add(attachListStyler(this._list, _themeService, {\r\n            listInactiveFocusBackground: editorSuggestWidgetSelectedBackground,\r\n            listInactiveFocusOutline: activeContrastBorder\r\n        }));\r\n        this._disposables.add(_themeService.onDidColorThemeChange(t => this._onThemeChange(t)));\r\n        this._onThemeChange(_themeService.getColorTheme());\r\n        this._disposables.add(this._list.onMouseDown(e => this._onListMouseDownOrTap(e)));\r\n        this._disposables.add(this._list.onTap(e => this._onListMouseDownOrTap(e)));\r\n        this._disposables.add(this._list.onDidChangeSelection(e => this._onListSelection(e)));\r\n        this._disposables.add(this._list.onDidChangeFocus(e => this._onListFocus(e)));\r\n        this._disposables.add(this.editor.onDidChangeCursorSelection(() => this._onCursorSelectionChanged()));\r\n        this._disposables.add(this.editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(104 /* suggest */)) {\r\n                applyStatusBarStyle();\r\n                applyIconStyle();\r\n            }\r\n        }));\r\n        this._ctxSuggestWidgetVisible = SuggestContext.Visible.bindTo(_contextKeyService);\r\n        this._ctxSuggestWidgetDetailsVisible = SuggestContext.DetailsVisible.bindTo(_contextKeyService);\r\n        this._ctxSuggestWidgetMultipleSuggestions = SuggestContext.MultipleSuggestions.bindTo(_contextKeyService);\r\n        this._disposables.add(dom.addStandardDisposableListener(this._details.widget.domNode, 'keydown', e => {\r\n            this._onDetailsKeydown.fire(e);\r\n        }));\r\n        this._disposables.add(this.editor.onMouseDown((e) => this._onEditorMouseDown(e)));\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._details.widget.dispose();\r\n        this._details.dispose();\r\n        this._list.dispose();\r\n        this._status.dispose();\r\n        this._disposables.dispose();\r\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._showTimeout.dispose();\r\n        this._contentWidget.dispose();\r\n        this.element.dispose();\r\n    }\r\n    _onEditorMouseDown(mouseEvent) {\r\n        if (this._details.widget.domNode.contains(mouseEvent.target.element)) {\r\n            // Clicking inside details\r\n            this._details.widget.domNode.focus();\r\n        }\r\n        else {\r\n            // Clicking outside details and inside suggest\r\n            if (this.element.domNode.contains(mouseEvent.target.element)) {\r\n                this.editor.focus();\r\n            }\r\n        }\r\n    }\r\n    _onCursorSelectionChanged() {\r\n        if (this._state !== 0 /* Hidden */) {\r\n            this._contentWidget.layout();\r\n        }\r\n    }\r\n    _onListMouseDownOrTap(e) {\r\n        if (typeof e.element === 'undefined' || typeof e.index === 'undefined') {\r\n            return;\r\n        }\r\n        // prevent stealing browser focus from the editor\r\n        e.browserEvent.preventDefault();\r\n        e.browserEvent.stopPropagation();\r\n        this._select(e.element, e.index);\r\n    }\r\n    _onListSelection(e) {\r\n        if (e.elements.length) {\r\n            this._select(e.elements[0], e.indexes[0]);\r\n        }\r\n    }\r\n    _select(item, index) {\r\n        const completionModel = this._completionModel;\r\n        if (completionModel) {\r\n            this._onDidSelect.fire({ item, index, model: completionModel });\r\n            this.editor.focus();\r\n        }\r\n    }\r\n    _onThemeChange(theme) {\r\n        const backgroundColor = theme.getColor(editorSuggestWidgetBackground);\r\n        if (backgroundColor) {\r\n            this.element.domNode.style.backgroundColor = backgroundColor.toString();\r\n            this._messageElement.style.backgroundColor = backgroundColor.toString();\r\n            this._details.widget.domNode.style.backgroundColor = backgroundColor.toString();\r\n        }\r\n        const borderColor = theme.getColor(editorSuggestWidgetBorder);\r\n        if (borderColor) {\r\n            this.element.domNode.style.borderColor = borderColor.toString();\r\n            this._messageElement.style.borderColor = borderColor.toString();\r\n            this._status.element.style.borderTopColor = borderColor.toString();\r\n            this._details.widget.domNode.style.borderColor = borderColor.toString();\r\n            this._detailsBorderColor = borderColor.toString();\r\n        }\r\n        const focusBorderColor = theme.getColor(focusBorder);\r\n        if (focusBorderColor) {\r\n            this._detailsFocusBorderColor = focusBorderColor.toString();\r\n        }\r\n        this._details.widget.borderWidth = theme.type === 'hc' ? 2 : 1;\r\n    }\r\n    _onListFocus(e) {\r\n        var _a;\r\n        if (this._ignoreFocusEvents) {\r\n            return;\r\n        }\r\n        if (!e.elements.length) {\r\n            if (this._currentSuggestionDetails) {\r\n                this._currentSuggestionDetails.cancel();\r\n                this._currentSuggestionDetails = undefined;\r\n                this._focusedItem = undefined;\r\n            }\r\n            this.editor.setAriaOptions({ activeDescendant: undefined });\r\n            return;\r\n        }\r\n        if (!this._completionModel) {\r\n            return;\r\n        }\r\n        const item = e.elements[0];\r\n        const index = e.indexes[0];\r\n        if (item !== this._focusedItem) {\r\n            (_a = this._currentSuggestionDetails) === null || _a === void 0 ? void 0 : _a.cancel();\r\n            this._currentSuggestionDetails = undefined;\r\n            this._focusedItem = item;\r\n            this._list.reveal(index);\r\n            this._currentSuggestionDetails = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\r\n                const loading = disposableTimeout(() => {\r\n                    if (this._isDetailsVisible()) {\r\n                        this.showDetails(true);\r\n                    }\r\n                }, 250);\r\n                token.onCancellationRequested(() => loading.dispose());\r\n                const result = yield item.resolve(token);\r\n                loading.dispose();\r\n                return result;\r\n            }));\r\n            this._currentSuggestionDetails.then(() => {\r\n                if (index >= this._list.length || item !== this._list.element(index)) {\r\n                    return;\r\n                }\r\n                // item can have extra information, so re-render\r\n                this._ignoreFocusEvents = true;\r\n                this._list.splice(index, 1, [item]);\r\n                this._list.setFocus([index]);\r\n                this._ignoreFocusEvents = false;\r\n                if (this._isDetailsVisible()) {\r\n                    this.showDetails(false);\r\n                }\r\n                else {\r\n                    this.element.domNode.classList.remove('docs-side');\r\n                }\r\n                this.editor.setAriaOptions({ activeDescendant: getAriaId(index) });\r\n            }).catch(onUnexpectedError);\r\n        }\r\n        // emit an event\r\n        this._onDidFocus.fire({ item, index, model: this._completionModel });\r\n    }\r\n    _setState(state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        this._state = state;\r\n        this.element.domNode.classList.toggle('frozen', state === 4 /* Frozen */);\r\n        this.element.domNode.classList.remove('message');\r\n        switch (state) {\r\n            case 0 /* Hidden */:\r\n                dom.hide(this._messageElement, this._listElement, this._status.element);\r\n                this._details.hide(true);\r\n                this._status.hide();\r\n                this._contentWidget.hide();\r\n                this._ctxSuggestWidgetVisible.reset();\r\n                this._ctxSuggestWidgetMultipleSuggestions.reset();\r\n                this._showTimeout.cancel();\r\n                this.element.domNode.classList.remove('visible');\r\n                this._list.splice(0, this._list.length);\r\n                this._focusedItem = undefined;\r\n                this._cappedHeight = undefined;\r\n                this._explainMode = false;\r\n                break;\r\n            case 1 /* Loading */:\r\n                this.element.domNode.classList.add('message');\r\n                this._messageElement.textContent = SuggestWidget.LOADING_MESSAGE;\r\n                dom.hide(this._listElement, this._status.element);\r\n                dom.show(this._messageElement);\r\n                this._details.hide();\r\n                this._show();\r\n                this._focusedItem = undefined;\r\n                break;\r\n            case 2 /* Empty */:\r\n                this.element.domNode.classList.add('message');\r\n                this._messageElement.textContent = SuggestWidget.NO_SUGGESTIONS_MESSAGE;\r\n                dom.hide(this._listElement, this._status.element);\r\n                dom.show(this._messageElement);\r\n                this._details.hide();\r\n                this._show();\r\n                this._focusedItem = undefined;\r\n                break;\r\n            case 3 /* Open */:\r\n                dom.hide(this._messageElement);\r\n                dom.show(this._listElement, this._status.element);\r\n                this._show();\r\n                break;\r\n            case 4 /* Frozen */:\r\n                dom.hide(this._messageElement);\r\n                dom.show(this._listElement, this._status.element);\r\n                this._show();\r\n                break;\r\n            case 5 /* Details */:\r\n                dom.hide(this._messageElement);\r\n                dom.show(this._listElement, this._status.element);\r\n                this._details.show();\r\n                this._show();\r\n                break;\r\n        }\r\n    }\r\n    _show() {\r\n        this._status.show();\r\n        this._contentWidget.show();\r\n        this._layout(this._persistedSize.restore());\r\n        this._ctxSuggestWidgetVisible.set(true);\r\n        this._showTimeout.cancelAndSet(() => {\r\n            this.element.domNode.classList.add('visible');\r\n            this._onDidShow.fire(this);\r\n        }, 100);\r\n    }\r\n    showTriggered(auto, delay) {\r\n        if (this._state !== 0 /* Hidden */) {\r\n            return;\r\n        }\r\n        this._contentWidget.setPosition(this.editor.getPosition());\r\n        this._isAuto = !!auto;\r\n        if (!this._isAuto) {\r\n            this._loadingTimeout = disposableTimeout(() => this._setState(1 /* Loading */), delay);\r\n        }\r\n    }\r\n    showSuggestions(completionModel, selectionIndex, isFrozen, isAuto) {\r\n        var _a, _b;\r\n        this._contentWidget.setPosition(this.editor.getPosition());\r\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._currentSuggestionDetails) === null || _b === void 0 ? void 0 : _b.cancel();\r\n        this._currentSuggestionDetails = undefined;\r\n        if (this._completionModel !== completionModel) {\r\n            this._completionModel = completionModel;\r\n        }\r\n        if (isFrozen && this._state !== 2 /* Empty */ && this._state !== 0 /* Hidden */) {\r\n            this._setState(4 /* Frozen */);\r\n            return;\r\n        }\r\n        const visibleCount = this._completionModel.items.length;\r\n        const isEmpty = visibleCount === 0;\r\n        this._ctxSuggestWidgetMultipleSuggestions.set(visibleCount > 1);\r\n        if (isEmpty) {\r\n            this._setState(isAuto ? 0 /* Hidden */ : 2 /* Empty */);\r\n            this._completionModel = undefined;\r\n            return;\r\n        }\r\n        this._focusedItem = undefined;\r\n        this._list.splice(0, this._list.length, this._completionModel.items);\r\n        this._setState(isFrozen ? 4 /* Frozen */ : 3 /* Open */);\r\n        this._list.reveal(selectionIndex, 0);\r\n        this._list.setFocus([selectionIndex]);\r\n        this._layout(this.element.size);\r\n        // Reset focus border\r\n        if (this._detailsBorderColor) {\r\n            this._details.widget.domNode.style.borderColor = this._detailsBorderColor;\r\n        }\r\n    }\r\n    selectNextPage() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.pageDown();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusNextPage();\r\n                return true;\r\n        }\r\n    }\r\n    selectNext() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusNext(1, true);\r\n                return true;\r\n        }\r\n    }\r\n    selectLast() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.scrollBottom();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusLast();\r\n                return true;\r\n        }\r\n    }\r\n    selectPreviousPage() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.pageUp();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusPreviousPage();\r\n                return true;\r\n        }\r\n    }\r\n    selectPrevious() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusPrevious(1, true);\r\n                return false;\r\n        }\r\n    }\r\n    selectFirst() {\r\n        switch (this._state) {\r\n            case 0 /* Hidden */:\r\n                return false;\r\n            case 5 /* Details */:\r\n                this._details.widget.scrollTop();\r\n                return true;\r\n            case 1 /* Loading */:\r\n                return !this._isAuto;\r\n            default:\r\n                this._list.focusFirst();\r\n                return true;\r\n        }\r\n    }\r\n    getFocusedItem() {\r\n        if (this._state !== 0 /* Hidden */\r\n            && this._state !== 2 /* Empty */\r\n            && this._state !== 1 /* Loading */\r\n            && this._completionModel) {\r\n            return {\r\n                item: this._list.getFocusedElements()[0],\r\n                index: this._list.getFocus()[0],\r\n                model: this._completionModel\r\n            };\r\n        }\r\n        return undefined;\r\n    }\r\n    toggleDetailsFocus() {\r\n        if (this._state === 5 /* Details */) {\r\n            this._setState(3 /* Open */);\r\n            if (this._detailsBorderColor) {\r\n                this._details.widget.domNode.style.borderColor = this._detailsBorderColor;\r\n            }\r\n        }\r\n        else if (this._state === 3 /* Open */ && this._isDetailsVisible()) {\r\n            this._setState(5 /* Details */);\r\n            if (this._detailsFocusBorderColor) {\r\n                this._details.widget.domNode.style.borderColor = this._detailsFocusBorderColor;\r\n            }\r\n        }\r\n    }\r\n    toggleDetails() {\r\n        if (this._isDetailsVisible()) {\r\n            // hide details widget\r\n            this._ctxSuggestWidgetDetailsVisible.set(false);\r\n            this._setDetailsVisible(false);\r\n            this._details.hide();\r\n            this.element.domNode.classList.remove('shows-details');\r\n        }\r\n        else if ((canExpandCompletionItem(this._list.getFocusedElements()[0]) || this._explainMode) && (this._state === 3 /* Open */ || this._state === 5 /* Details */ || this._state === 4 /* Frozen */)) {\r\n            // show details widget (iff possible)\r\n            this._ctxSuggestWidgetDetailsVisible.set(true);\r\n            this._setDetailsVisible(true);\r\n            this.showDetails(false);\r\n        }\r\n    }\r\n    showDetails(loading) {\r\n        this._details.show();\r\n        if (loading) {\r\n            this._details.widget.renderLoading();\r\n        }\r\n        else {\r\n            this._details.widget.renderItem(this._list.getFocusedElements()[0], this._explainMode);\r\n        }\r\n        this._positionDetails();\r\n        this.editor.focus();\r\n        this.element.domNode.classList.add('shows-details');\r\n    }\r\n    toggleExplainMode() {\r\n        if (this._list.getFocusedElements()[0]) {\r\n            this._explainMode = !this._explainMode;\r\n            if (!this._isDetailsVisible()) {\r\n                this.toggleDetails();\r\n            }\r\n            else {\r\n                this.showDetails(false);\r\n            }\r\n        }\r\n    }\r\n    resetPersistedSize() {\r\n        this._persistedSize.reset();\r\n    }\r\n    hideWidget() {\r\n        var _a;\r\n        (_a = this._loadingTimeout) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._setState(0 /* Hidden */);\r\n        this._onDidHide.fire(this);\r\n        this.element.clearSashHoverState();\r\n        // ensure that a reasonable widget height is persisted so that\r\n        // accidential \"resize-to-single-items\" cases aren't happening\r\n        const dim = this._persistedSize.restore();\r\n        const minPersistedHeight = Math.ceil(this.getLayoutInfo().itemHeight * 4.3);\r\n        if (dim && dim.height < minPersistedHeight) {\r\n            this._persistedSize.store(dim.with(undefined, minPersistedHeight));\r\n        }\r\n    }\r\n    isFrozen() {\r\n        return this._state === 4 /* Frozen */;\r\n    }\r\n    _afterRender(position) {\r\n        if (position === null) {\r\n            if (this._isDetailsVisible()) {\r\n                this._details.hide(); //todo@jrieken soft-hide\r\n            }\r\n            return;\r\n        }\r\n        if (this._state === 2 /* Empty */ || this._state === 1 /* Loading */) {\r\n            // no special positioning when widget isn't showing list\r\n            return;\r\n        }\r\n        if (this._isDetailsVisible()) {\r\n            this._details.show();\r\n        }\r\n        this._positionDetails();\r\n    }\r\n    _layout(size) {\r\n        var _a, _b, _c;\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (!this.editor.getDomNode()) {\r\n            // happens when running tests\r\n            return;\r\n        }\r\n        const bodyBox = dom.getClientArea(document.body);\r\n        const info = this.getLayoutInfo();\r\n        if (!size) {\r\n            size = info.defaultSize;\r\n        }\r\n        let height = size.height;\r\n        let width = size.width;\r\n        // status bar\r\n        this._status.element.style.lineHeight = `${info.itemHeight}px`;\r\n        if (this._state === 2 /* Empty */ || this._state === 1 /* Loading */) {\r\n            // showing a message only\r\n            height = info.itemHeight + info.borderHeight;\r\n            width = info.defaultSize.width / 2;\r\n            this.element.enableSashes(false, false, false, false);\r\n            this.element.minSize = this.element.maxSize = new dom.Dimension(width, height);\r\n            this._contentWidget.setPreference(2 /* BELOW */);\r\n        }\r\n        else {\r\n            // showing items\r\n            // width math\r\n            const maxWidth = bodyBox.width - info.borderHeight - 2 * info.horizontalPadding;\r\n            if (width > maxWidth) {\r\n                width = maxWidth;\r\n            }\r\n            const preferredWidth = this._completionModel ? this._completionModel.stats.pLabelLen * info.typicalHalfwidthCharacterWidth : width;\r\n            // height math\r\n            const fullHeight = info.statusBarHeight + this._list.contentHeight + info.borderHeight;\r\n            const minHeight = info.itemHeight + info.statusBarHeight;\r\n            const editorBox = dom.getDomNodePagePosition(this.editor.getDomNode());\r\n            const cursorBox = this.editor.getScrolledVisiblePosition(this.editor.getPosition());\r\n            const cursorBottom = editorBox.top + cursorBox.top + cursorBox.height;\r\n            const maxHeightBelow = Math.min(bodyBox.height - cursorBottom - info.verticalPadding, fullHeight);\r\n            const maxHeightAbove = Math.min(editorBox.top + cursorBox.top - info.verticalPadding, fullHeight);\r\n            let maxHeight = Math.min(Math.max(maxHeightAbove, maxHeightBelow) + info.borderHeight, fullHeight);\r\n            if (height === ((_a = this._cappedHeight) === null || _a === void 0 ? void 0 : _a.capped)) {\r\n                // Restore the old (wanted) height when the current\r\n                // height is capped to fit\r\n                height = this._cappedHeight.wanted;\r\n            }\r\n            if (height < minHeight) {\r\n                height = minHeight;\r\n            }\r\n            if (height > maxHeight) {\r\n                height = maxHeight;\r\n            }\r\n            const forceRenderingAboveRequiredSpace = 100;\r\n            if (height > maxHeightBelow || (this._forceRenderingAbove && maxHeightAbove > forceRenderingAboveRequiredSpace)) {\r\n                this._contentWidget.setPreference(1 /* ABOVE */);\r\n                this.element.enableSashes(true, true, false, false);\r\n                maxHeight = maxHeightAbove;\r\n            }\r\n            else {\r\n                this._contentWidget.setPreference(2 /* BELOW */);\r\n                this.element.enableSashes(false, true, true, false);\r\n                maxHeight = maxHeightBelow;\r\n            }\r\n            this.element.preferredSize = new dom.Dimension(preferredWidth, info.defaultSize.height);\r\n            this.element.maxSize = new dom.Dimension(maxWidth, maxHeight);\r\n            this.element.minSize = new dom.Dimension(220, minHeight);\r\n            // Know when the height was capped to fit and remember\r\n            // the wanted height for later. This is required when going\r\n            // left to widen suggestions.\r\n            this._cappedHeight = height === fullHeight\r\n                ? { wanted: (_c = (_b = this._cappedHeight) === null || _b === void 0 ? void 0 : _b.wanted) !== null && _c !== void 0 ? _c : size.height, capped: height }\r\n                : undefined;\r\n        }\r\n        this._resize(width, height);\r\n    }\r\n    _resize(width, height) {\r\n        const { width: maxWidth, height: maxHeight } = this.element.maxSize;\r\n        width = Math.min(maxWidth, width);\r\n        height = Math.min(maxHeight, height);\r\n        const { statusBarHeight } = this.getLayoutInfo();\r\n        this._list.layout(height - statusBarHeight, width);\r\n        this._listElement.style.height = `${height - statusBarHeight}px`;\r\n        this.element.layout(height, width);\r\n        this._contentWidget.layout();\r\n        this._positionDetails();\r\n    }\r\n    _positionDetails() {\r\n        if (this._isDetailsVisible()) {\r\n            this._details.placeAtAnchor(this.element.domNode);\r\n        }\r\n    }\r\n    getLayoutInfo() {\r\n        const fontInfo = this.editor.getOption(40 /* fontInfo */);\r\n        const itemHeight = clamp(this.editor.getOption(106 /* suggestLineHeight */) || fontInfo.lineHeight, 8, 1000);\r\n        const statusBarHeight = !this.editor.getOption(104 /* suggest */).showStatusBar || this._state === 2 /* Empty */ || this._state === 1 /* Loading */ ? 0 : itemHeight;\r\n        const borderWidth = this._details.widget.borderWidth;\r\n        const borderHeight = 2 * borderWidth;\r\n        return {\r\n            itemHeight,\r\n            statusBarHeight,\r\n            borderWidth,\r\n            borderHeight,\r\n            typicalHalfwidthCharacterWidth: fontInfo.typicalHalfwidthCharacterWidth,\r\n            verticalPadding: 22,\r\n            horizontalPadding: 14,\r\n            defaultSize: new dom.Dimension(430, statusBarHeight + 12 * itemHeight + borderHeight)\r\n        };\r\n    }\r\n    _isDetailsVisible() {\r\n        return this._storageService.getBoolean('expandSuggestionDocs', 0 /* GLOBAL */, false);\r\n    }\r\n    _setDetailsVisible(value) {\r\n        this._storageService.store('expandSuggestionDocs', value, 0 /* GLOBAL */, 0 /* USER */);\r\n    }\r\n    forceRenderingAbove() {\r\n        if (!this._forceRenderingAbove) {\r\n            this._forceRenderingAbove = true;\r\n            this._layout(this._persistedSize.restore());\r\n        }\r\n    }\r\n    stopForceRenderingAbove() {\r\n        this._forceRenderingAbove = false;\r\n    }\r\n};\r\nSuggestWidget.LOADING_MESSAGE = nls.localize('suggestWidget.loading', \"Loading...\");\r\nSuggestWidget.NO_SUGGESTIONS_MESSAGE = nls.localize('suggestWidget.noSuggestions', \"No suggestions.\");\r\nSuggestWidget = __decorate([\r\n    __param(1, IStorageService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IThemeService),\r\n    __param(4, IInstantiationService)\r\n], SuggestWidget);\r\nexport { SuggestWidget };\r\nexport class SuggestContentWidget {\r\n    constructor(_widget, _editor) {\r\n        this._widget = _widget;\r\n        this._editor = _editor;\r\n        this.allowEditorOverflow = true;\r\n        this.suppressMouseDown = false;\r\n        this._preferenceLocked = false;\r\n        this._added = false;\r\n        this._hidden = false;\r\n    }\r\n    dispose() {\r\n        if (this._added) {\r\n            this._added = false;\r\n            this._editor.removeContentWidget(this);\r\n        }\r\n    }\r\n    getId() {\r\n        return 'editor.widget.suggestWidget';\r\n    }\r\n    getDomNode() {\r\n        return this._widget.element.domNode;\r\n    }\r\n    show() {\r\n        this._hidden = false;\r\n        if (!this._added) {\r\n            this._added = true;\r\n            this._editor.addContentWidget(this);\r\n        }\r\n    }\r\n    hide() {\r\n        if (!this._hidden) {\r\n            this._hidden = true;\r\n            this.layout();\r\n        }\r\n    }\r\n    layout() {\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n    getPosition() {\r\n        if (this._hidden || !this._position || !this._preference) {\r\n            return null;\r\n        }\r\n        return {\r\n            position: this._position,\r\n            preference: [this._preference]\r\n        };\r\n    }\r\n    beforeRender() {\r\n        const { height, width } = this._widget.element.size;\r\n        const { borderWidth, horizontalPadding } = this._widget.getLayoutInfo();\r\n        return new dom.Dimension(width + 2 * borderWidth + horizontalPadding, height + 2 * borderWidth);\r\n    }\r\n    afterRender(position) {\r\n        this._widget._afterRender(position);\r\n    }\r\n    setPreference(preference) {\r\n        if (!this._preferenceLocked) {\r\n            this._preference = preference;\r\n        }\r\n    }\r\n    lockPreference() {\r\n        this._preferenceLocked = true;\r\n    }\r\n    unlockPreference() {\r\n        this._preferenceLocked = false;\r\n    }\r\n    setPosition(position) {\r\n        this._position = position;\r\n    }\r\n}\r\nregisterThemingParticipant((theme, collector) => {\r\n    const matchHighlight = theme.getColor(editorSuggestWidgetHighlightForeground);\r\n    if (matchHighlight) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row .monaco-highlighted-label .highlight { color: ${matchHighlight}; }`);\r\n    }\r\n    const matchHighlightFocus = theme.getColor(editorSuggestWidgetHighlightFocusForeground);\r\n    if (matchHighlight) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused .monaco-highlighted-label .highlight { color: ${matchHighlightFocus}; }`);\r\n    }\r\n    const foreground = theme.getColor(editorSuggestWidgetForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .suggest-widget, .monaco-editor .suggest-details { color: ${foreground}; }`);\r\n    }\r\n    const selectedForeground = theme.getColor(editorSuggestWidgetSelectedForeground);\r\n    if (selectedForeground) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused { color: ${selectedForeground}; }`);\r\n    }\r\n    const selectedIconForeground = theme.getColor(editorSuggestWidgetSelectedIconForeground);\r\n    if (selectedIconForeground) {\r\n        collector.addRule(`.monaco-editor .suggest-widget .monaco-list .monaco-list-row.focused .codicon { color: ${selectedIconForeground}; }`);\r\n    }\r\n    const link = theme.getColor(textLinkForeground);\r\n    if (link) {\r\n        collector.addRule(`.monaco-editor .suggest-details a { color: ${link}; }`);\r\n    }\r\n    const codeBackground = theme.getColor(textCodeBlockBackground);\r\n    if (codeBackground) {\r\n        collector.addRule(`.monaco-editor .suggest-details code { background-color: ${codeBackground}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { localize } from '../../../nls.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { registerColor, foreground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nexport const SYMBOL_ICON_ARRAY_FOREGROUND = registerColor('symbolIcon.arrayForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.arrayForeground', 'The foreground color for array symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_BOOLEAN_FOREGROUND = registerColor('symbolIcon.booleanForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.booleanForeground', 'The foreground color for boolean symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_CLASS_FOREGROUND = registerColor('symbolIcon.classForeground', {\r\n    dark: '#EE9D28',\r\n    light: '#D67E00',\r\n    hc: '#EE9D28'\r\n}, localize('symbolIcon.classForeground', 'The foreground color for class symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_COLOR_FOREGROUND = registerColor('symbolIcon.colorForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.colorForeground', 'The foreground color for color symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_CONSTANT_FOREGROUND = registerColor('symbolIcon.constantForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.constantForeground', 'The foreground color for constant symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_CONSTRUCTOR_FOREGROUND = registerColor('symbolIcon.constructorForeground', {\r\n    dark: '#B180D7',\r\n    light: '#652D90',\r\n    hc: '#B180D7'\r\n}, localize('symbolIcon.constructorForeground', 'The foreground color for constructor symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_ENUMERATOR_FOREGROUND = registerColor('symbolIcon.enumeratorForeground', {\r\n    dark: '#EE9D28',\r\n    light: '#D67E00',\r\n    hc: '#EE9D28'\r\n}, localize('symbolIcon.enumeratorForeground', 'The foreground color for enumerator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_ENUMERATOR_MEMBER_FOREGROUND = registerColor('symbolIcon.enumeratorMemberForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.enumeratorMemberForeground', 'The foreground color for enumerator member symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_EVENT_FOREGROUND = registerColor('symbolIcon.eventForeground', {\r\n    dark: '#EE9D28',\r\n    light: '#D67E00',\r\n    hc: '#EE9D28'\r\n}, localize('symbolIcon.eventForeground', 'The foreground color for event symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FIELD_FOREGROUND = registerColor('symbolIcon.fieldForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.fieldForeground', 'The foreground color for field symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FILE_FOREGROUND = registerColor('symbolIcon.fileForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.fileForeground', 'The foreground color for file symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FOLDER_FOREGROUND = registerColor('symbolIcon.folderForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.folderForeground', 'The foreground color for folder symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_FUNCTION_FOREGROUND = registerColor('symbolIcon.functionForeground', {\r\n    dark: '#B180D7',\r\n    light: '#652D90',\r\n    hc: '#B180D7'\r\n}, localize('symbolIcon.functionForeground', 'The foreground color for function symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_INTERFACE_FOREGROUND = registerColor('symbolIcon.interfaceForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.interfaceForeground', 'The foreground color for interface symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_KEY_FOREGROUND = registerColor('symbolIcon.keyForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.keyForeground', 'The foreground color for key symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_KEYWORD_FOREGROUND = registerColor('symbolIcon.keywordForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.keywordForeground', 'The foreground color for keyword symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_METHOD_FOREGROUND = registerColor('symbolIcon.methodForeground', {\r\n    dark: '#B180D7',\r\n    light: '#652D90',\r\n    hc: '#B180D7'\r\n}, localize('symbolIcon.methodForeground', 'The foreground color for method symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_MODULE_FOREGROUND = registerColor('symbolIcon.moduleForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.moduleForeground', 'The foreground color for module symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_NAMESPACE_FOREGROUND = registerColor('symbolIcon.namespaceForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.namespaceForeground', 'The foreground color for namespace symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_NULL_FOREGROUND = registerColor('symbolIcon.nullForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.nullForeground', 'The foreground color for null symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_NUMBER_FOREGROUND = registerColor('symbolIcon.numberForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.numberForeground', 'The foreground color for number symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_OBJECT_FOREGROUND = registerColor('symbolIcon.objectForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.objectForeground', 'The foreground color for object symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_OPERATOR_FOREGROUND = registerColor('symbolIcon.operatorForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.operatorForeground', 'The foreground color for operator symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_PACKAGE_FOREGROUND = registerColor('symbolIcon.packageForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.packageForeground', 'The foreground color for package symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_PROPERTY_FOREGROUND = registerColor('symbolIcon.propertyForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.propertyForeground', 'The foreground color for property symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_REFERENCE_FOREGROUND = registerColor('symbolIcon.referenceForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.referenceForeground', 'The foreground color for reference symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_SNIPPET_FOREGROUND = registerColor('symbolIcon.snippetForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.snippetForeground', 'The foreground color for snippet symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_STRING_FOREGROUND = registerColor('symbolIcon.stringForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.stringForeground', 'The foreground color for string symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_STRUCT_FOREGROUND = registerColor('symbolIcon.structForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.structForeground', 'The foreground color for struct symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_TEXT_FOREGROUND = registerColor('symbolIcon.textForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.textForeground', 'The foreground color for text symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_TYPEPARAMETER_FOREGROUND = registerColor('symbolIcon.typeParameterForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.typeParameterForeground', 'The foreground color for type parameter symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_UNIT_FOREGROUND = registerColor('symbolIcon.unitForeground', {\r\n    dark: foreground,\r\n    light: foreground,\r\n    hc: foreground\r\n}, localize('symbolIcon.unitForeground', 'The foreground color for unit symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nexport const SYMBOL_ICON_VARIABLE_FOREGROUND = registerColor('symbolIcon.variableForeground', {\r\n    dark: '#75BEFF',\r\n    light: '#007ACC',\r\n    hc: '#75BEFF'\r\n}, localize('symbolIcon.variableForeground', 'The foreground color for variable symbols. These symbols appear in the outline, breadcrumb, and suggest widget.'));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const symbolIconArrayColor = theme.getColor(SYMBOL_ICON_ARRAY_FOREGROUND);\r\n    if (symbolIconArrayColor) {\r\n        collector.addRule(`${Codicon.symbolArray.cssSelector} { color: ${symbolIconArrayColor}; }`);\r\n    }\r\n    const symbolIconBooleanColor = theme.getColor(SYMBOL_ICON_BOOLEAN_FOREGROUND);\r\n    if (symbolIconBooleanColor) {\r\n        collector.addRule(`${Codicon.symbolBoolean.cssSelector} { color: ${symbolIconBooleanColor}; }`);\r\n    }\r\n    const symbolIconClassColor = theme.getColor(SYMBOL_ICON_CLASS_FOREGROUND);\r\n    if (symbolIconClassColor) {\r\n        collector.addRule(`${Codicon.symbolClass.cssSelector} { color: ${symbolIconClassColor}; }`);\r\n    }\r\n    const symbolIconMethodColor = theme.getColor(SYMBOL_ICON_METHOD_FOREGROUND);\r\n    if (symbolIconMethodColor) {\r\n        collector.addRule(`${Codicon.symbolMethod.cssSelector} { color: ${symbolIconMethodColor}; }`);\r\n    }\r\n    const symbolIconColorColor = theme.getColor(SYMBOL_ICON_COLOR_FOREGROUND);\r\n    if (symbolIconColorColor) {\r\n        collector.addRule(`${Codicon.symbolColor.cssSelector} { color: ${symbolIconColorColor}; }`);\r\n    }\r\n    const symbolIconConstantColor = theme.getColor(SYMBOL_ICON_CONSTANT_FOREGROUND);\r\n    if (symbolIconConstantColor) {\r\n        collector.addRule(`${Codicon.symbolConstant.cssSelector} { color: ${symbolIconConstantColor}; }`);\r\n    }\r\n    const symbolIconConstructorColor = theme.getColor(SYMBOL_ICON_CONSTRUCTOR_FOREGROUND);\r\n    if (symbolIconConstructorColor) {\r\n        collector.addRule(`${Codicon.symbolConstructor.cssSelector} { color: ${symbolIconConstructorColor}; }`);\r\n    }\r\n    const symbolIconEnumeratorColor = theme.getColor(SYMBOL_ICON_ENUMERATOR_FOREGROUND);\r\n    if (symbolIconEnumeratorColor) {\r\n        collector.addRule(`\n\t\t\t${Codicon.symbolValue.cssSelector},${Codicon.symbolEnum.cssSelector} { color: ${symbolIconEnumeratorColor}; }`);\r\n    }\r\n    const symbolIconEnumeratorMemberColor = theme.getColor(SYMBOL_ICON_ENUMERATOR_MEMBER_FOREGROUND);\r\n    if (symbolIconEnumeratorMemberColor) {\r\n        collector.addRule(`${Codicon.symbolEnumMember.cssSelector} { color: ${symbolIconEnumeratorMemberColor}; }`);\r\n    }\r\n    const symbolIconEventColor = theme.getColor(SYMBOL_ICON_EVENT_FOREGROUND);\r\n    if (symbolIconEventColor) {\r\n        collector.addRule(`${Codicon.symbolEvent.cssSelector} { color: ${symbolIconEventColor}; }`);\r\n    }\r\n    const symbolIconFieldColor = theme.getColor(SYMBOL_ICON_FIELD_FOREGROUND);\r\n    if (symbolIconFieldColor) {\r\n        collector.addRule(`${Codicon.symbolField.cssSelector} { color: ${symbolIconFieldColor}; }`);\r\n    }\r\n    const symbolIconFileColor = theme.getColor(SYMBOL_ICON_FILE_FOREGROUND);\r\n    if (symbolIconFileColor) {\r\n        collector.addRule(`${Codicon.symbolFile.cssSelector} { color: ${symbolIconFileColor}; }`);\r\n    }\r\n    const symbolIconFolderColor = theme.getColor(SYMBOL_ICON_FOLDER_FOREGROUND);\r\n    if (symbolIconFolderColor) {\r\n        collector.addRule(`${Codicon.symbolFolder.cssSelector} { color: ${symbolIconFolderColor}; }`);\r\n    }\r\n    const symbolIconFunctionColor = theme.getColor(SYMBOL_ICON_FUNCTION_FOREGROUND);\r\n    if (symbolIconFunctionColor) {\r\n        collector.addRule(`${Codicon.symbolFunction.cssSelector} { color: ${symbolIconFunctionColor}; }`);\r\n    }\r\n    const symbolIconInterfaceColor = theme.getColor(SYMBOL_ICON_INTERFACE_FOREGROUND);\r\n    if (symbolIconInterfaceColor) {\r\n        collector.addRule(`${Codicon.symbolInterface.cssSelector} { color: ${symbolIconInterfaceColor}; }`);\r\n    }\r\n    const symbolIconKeyColor = theme.getColor(SYMBOL_ICON_KEY_FOREGROUND);\r\n    if (symbolIconKeyColor) {\r\n        collector.addRule(`${Codicon.symbolKey.cssSelector} { color: ${symbolIconKeyColor}; }`);\r\n    }\r\n    const symbolIconKeywordColor = theme.getColor(SYMBOL_ICON_KEYWORD_FOREGROUND);\r\n    if (symbolIconKeywordColor) {\r\n        collector.addRule(`${Codicon.symbolKeyword.cssSelector} { color: ${symbolIconKeywordColor}; }`);\r\n    }\r\n    const symbolIconModuleColor = theme.getColor(SYMBOL_ICON_MODULE_FOREGROUND);\r\n    if (symbolIconModuleColor) {\r\n        collector.addRule(`${Codicon.symbolModule.cssSelector} { color: ${symbolIconModuleColor}; }`);\r\n    }\r\n    const outlineNamespaceColor = theme.getColor(SYMBOL_ICON_NAMESPACE_FOREGROUND);\r\n    if (outlineNamespaceColor) {\r\n        collector.addRule(`${Codicon.symbolNamespace.cssSelector} { color: ${outlineNamespaceColor}; }`);\r\n    }\r\n    const symbolIconNullColor = theme.getColor(SYMBOL_ICON_NULL_FOREGROUND);\r\n    if (symbolIconNullColor) {\r\n        collector.addRule(`${Codicon.symbolNull.cssSelector} { color: ${symbolIconNullColor}; }`);\r\n    }\r\n    const symbolIconNumberColor = theme.getColor(SYMBOL_ICON_NUMBER_FOREGROUND);\r\n    if (symbolIconNumberColor) {\r\n        collector.addRule(`${Codicon.symbolNumber.cssSelector} { color: ${symbolIconNumberColor}; }`);\r\n    }\r\n    const symbolIconObjectColor = theme.getColor(SYMBOL_ICON_OBJECT_FOREGROUND);\r\n    if (symbolIconObjectColor) {\r\n        collector.addRule(`${Codicon.symbolObject.cssSelector} { color: ${symbolIconObjectColor}; }`);\r\n    }\r\n    const symbolIconOperatorColor = theme.getColor(SYMBOL_ICON_OPERATOR_FOREGROUND);\r\n    if (symbolIconOperatorColor) {\r\n        collector.addRule(`${Codicon.symbolOperator.cssSelector} { color: ${symbolIconOperatorColor}; }`);\r\n    }\r\n    const symbolIconPackageColor = theme.getColor(SYMBOL_ICON_PACKAGE_FOREGROUND);\r\n    if (symbolIconPackageColor) {\r\n        collector.addRule(`${Codicon.symbolPackage.cssSelector} { color: ${symbolIconPackageColor}; }`);\r\n    }\r\n    const symbolIconPropertyColor = theme.getColor(SYMBOL_ICON_PROPERTY_FOREGROUND);\r\n    if (symbolIconPropertyColor) {\r\n        collector.addRule(`${Codicon.symbolProperty.cssSelector} { color: ${symbolIconPropertyColor}; }`);\r\n    }\r\n    const symbolIconReferenceColor = theme.getColor(SYMBOL_ICON_REFERENCE_FOREGROUND);\r\n    if (symbolIconReferenceColor) {\r\n        collector.addRule(`${Codicon.symbolReference.cssSelector} { color: ${symbolIconReferenceColor}; }`);\r\n    }\r\n    const symbolIconSnippetColor = theme.getColor(SYMBOL_ICON_SNIPPET_FOREGROUND);\r\n    if (symbolIconSnippetColor) {\r\n        collector.addRule(`${Codicon.symbolSnippet.cssSelector} { color: ${symbolIconSnippetColor}; }`);\r\n    }\r\n    const symbolIconStringColor = theme.getColor(SYMBOL_ICON_STRING_FOREGROUND);\r\n    if (symbolIconStringColor) {\r\n        collector.addRule(`${Codicon.symbolString.cssSelector} { color: ${symbolIconStringColor}; }`);\r\n    }\r\n    const symbolIconStructColor = theme.getColor(SYMBOL_ICON_STRUCT_FOREGROUND);\r\n    if (symbolIconStructColor) {\r\n        collector.addRule(`${Codicon.symbolStruct.cssSelector} { color: ${symbolIconStructColor}; }`);\r\n    }\r\n    const symbolIconTextColor = theme.getColor(SYMBOL_ICON_TEXT_FOREGROUND);\r\n    if (symbolIconTextColor) {\r\n        collector.addRule(`${Codicon.symbolText.cssSelector} { color: ${symbolIconTextColor}; }`);\r\n    }\r\n    const symbolIconTypeParameterColor = theme.getColor(SYMBOL_ICON_TYPEPARAMETER_FOREGROUND);\r\n    if (symbolIconTypeParameterColor) {\r\n        collector.addRule(`${Codicon.symbolTypeParameter.cssSelector} { color: ${symbolIconTypeParameterColor}; }`);\r\n    }\r\n    const symbolIconUnitColor = theme.getColor(SYMBOL_ICON_UNIT_FOREGROUND);\r\n    if (symbolIconUnitColor) {\r\n        collector.addRule(`${Codicon.symbolUnit.cssSelector} { color: ${symbolIconUnitColor}; }`);\r\n    }\r\n    const symbolIconVariableColor = theme.getColor(SYMBOL_ICON_VARIABLE_FOREGROUND);\r\n    if (symbolIconVariableColor) {\r\n        collector.addRule(`${Codicon.symbolVariable.cssSelector} { color: ${symbolIconVariableColor}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Event, Emitter } from '../../../base/common/event.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Dimension } from '../../../base/browser/dom.js';\r\nimport { OrthogonalEdge, Sash } from '../../../base/browser/ui/sash/sash.js';\r\nexport class ResizableHTMLElement {\r\n    constructor() {\r\n        this._onDidWillResize = new Emitter();\r\n        this.onDidWillResize = this._onDidWillResize.event;\r\n        this._onDidResize = new Emitter();\r\n        this.onDidResize = this._onDidResize.event;\r\n        this._sashListener = new DisposableStore();\r\n        this._size = new Dimension(0, 0);\r\n        this._minSize = new Dimension(0, 0);\r\n        this._maxSize = new Dimension(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\r\n        this.domNode = document.createElement('div');\r\n        this._eastSash = new Sash(this.domNode, { getVerticalSashLeft: () => this._size.width }, { orientation: 0 /* VERTICAL */ });\r\n        this._westSash = new Sash(this.domNode, { getVerticalSashLeft: () => 0 }, { orientation: 0 /* VERTICAL */ });\r\n        this._northSash = new Sash(this.domNode, { getHorizontalSashTop: () => 0 }, { orientation: 1 /* HORIZONTAL */, orthogonalEdge: OrthogonalEdge.North });\r\n        this._southSash = new Sash(this.domNode, { getHorizontalSashTop: () => this._size.height }, { orientation: 1 /* HORIZONTAL */, orthogonalEdge: OrthogonalEdge.South });\r\n        this._northSash.orthogonalStartSash = this._westSash;\r\n        this._northSash.orthogonalEndSash = this._eastSash;\r\n        this._southSash.orthogonalStartSash = this._westSash;\r\n        this._southSash.orthogonalEndSash = this._eastSash;\r\n        let currentSize;\r\n        let deltaY = 0;\r\n        let deltaX = 0;\r\n        this._sashListener.add(Event.any(this._northSash.onDidStart, this._eastSash.onDidStart, this._southSash.onDidStart, this._westSash.onDidStart)(() => {\r\n            if (currentSize === undefined) {\r\n                this._onDidWillResize.fire();\r\n                currentSize = this._size;\r\n                deltaY = 0;\r\n                deltaX = 0;\r\n            }\r\n        }));\r\n        this._sashListener.add(Event.any(this._northSash.onDidEnd, this._eastSash.onDidEnd, this._southSash.onDidEnd, this._westSash.onDidEnd)(() => {\r\n            if (currentSize !== undefined) {\r\n                currentSize = undefined;\r\n                deltaY = 0;\r\n                deltaX = 0;\r\n                this._onDidResize.fire({ dimension: this._size, done: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._eastSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaX = e.currentX - e.startX;\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, east: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._westSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaX = -(e.currentX - e.startX);\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, west: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._northSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaY = -(e.currentY - e.startY);\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, north: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(this._southSash.onDidChange(e => {\r\n            if (currentSize) {\r\n                deltaY = e.currentY - e.startY;\r\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\r\n                this._onDidResize.fire({ dimension: this._size, done: false, south: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(Event.any(this._eastSash.onDidReset, this._westSash.onDidReset)(e => {\r\n            if (this._preferredSize) {\r\n                this.layout(this._size.height, this._preferredSize.width);\r\n                this._onDidResize.fire({ dimension: this._size, done: true });\r\n            }\r\n        }));\r\n        this._sashListener.add(Event.any(this._northSash.onDidReset, this._southSash.onDidReset)(e => {\r\n            if (this._preferredSize) {\r\n                this.layout(this._preferredSize.height, this._size.width);\r\n                this._onDidResize.fire({ dimension: this._size, done: true });\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._northSash.dispose();\r\n        this._southSash.dispose();\r\n        this._eastSash.dispose();\r\n        this._westSash.dispose();\r\n        this._sashListener.dispose();\r\n        this._onDidResize.dispose();\r\n        this._onDidWillResize.dispose();\r\n        this.domNode.remove();\r\n    }\r\n    enableSashes(north, east, south, west) {\r\n        this._northSash.state = north ? 3 /* Enabled */ : 0 /* Disabled */;\r\n        this._eastSash.state = east ? 3 /* Enabled */ : 0 /* Disabled */;\r\n        this._southSash.state = south ? 3 /* Enabled */ : 0 /* Disabled */;\r\n        this._westSash.state = west ? 3 /* Enabled */ : 0 /* Disabled */;\r\n    }\r\n    layout(height = this.size.height, width = this.size.width) {\r\n        const { height: minHeight, width: minWidth } = this._minSize;\r\n        const { height: maxHeight, width: maxWidth } = this._maxSize;\r\n        height = Math.max(minHeight, Math.min(maxHeight, height));\r\n        width = Math.max(minWidth, Math.min(maxWidth, width));\r\n        const newSize = new Dimension(width, height);\r\n        if (!Dimension.equals(newSize, this._size)) {\r\n            this.domNode.style.height = height + 'px';\r\n            this.domNode.style.width = width + 'px';\r\n            this._size = newSize;\r\n            this._northSash.layout();\r\n            this._eastSash.layout();\r\n            this._southSash.layout();\r\n            this._westSash.layout();\r\n        }\r\n    }\r\n    clearSashHoverState() {\r\n        this._eastSash.clearSashHoverState();\r\n        this._westSash.clearSashHoverState();\r\n        this._northSash.clearSashHoverState();\r\n        this._southSash.clearSashHoverState();\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    set maxSize(value) {\r\n        this._maxSize = value;\r\n    }\r\n    get maxSize() {\r\n        return this._maxSize;\r\n    }\r\n    set minSize(value) {\r\n        this._minSize = value;\r\n    }\r\n    get minSize() {\r\n        return this._minSize;\r\n    }\r\n    set preferredSize(value) {\r\n        this._preferredSize = value;\r\n    }\r\n    get preferredSize() {\r\n        return this._preferredSize;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\r\nimport { MarkdownRenderer } from '../../browser/core/markdownRenderer.js';\r\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { ResizableHTMLElement } from './resizable.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nexport function canExpandCompletionItem(item) {\r\n    return !!item && Boolean(item.completion.documentation || item.completion.detail && item.completion.detail !== item.completion.label);\r\n}\r\nlet SuggestDetailsWidget = class SuggestDetailsWidget {\r\n    constructor(_editor, instaService) {\r\n        this._editor = _editor;\r\n        this._onDidClose = new Emitter();\r\n        this.onDidClose = this._onDidClose.event;\r\n        this._onDidChangeContents = new Emitter();\r\n        this.onDidChangeContents = this._onDidChangeContents.event;\r\n        this._disposables = new DisposableStore();\r\n        this._renderDisposeable = new DisposableStore();\r\n        this._borderWidth = 1;\r\n        this._size = new dom.Dimension(330, 0);\r\n        this.domNode = dom.$('.suggest-details');\r\n        this.domNode.classList.add('no-docs');\r\n        this._markdownRenderer = instaService.createInstance(MarkdownRenderer, { editor: _editor });\r\n        this._body = dom.$('.body');\r\n        this._scrollbar = new DomScrollableElement(this._body, {});\r\n        dom.append(this.domNode, this._scrollbar.getDomNode());\r\n        this._disposables.add(this._scrollbar);\r\n        this._header = dom.append(this._body, dom.$('.header'));\r\n        this._close = dom.append(this._header, dom.$('span' + Codicon.close.cssSelector));\r\n        this._close.title = nls.localize('details.close', \"Close\");\r\n        this._type = dom.append(this._header, dom.$('p.type'));\r\n        this._docs = dom.append(this._body, dom.$('p.docs'));\r\n        this._configureFont();\r\n        this._disposables.add(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(40 /* fontInfo */)) {\r\n                this._configureFont();\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._renderDisposeable.dispose();\r\n    }\r\n    _configureFont() {\r\n        const options = this._editor.getOptions();\r\n        const fontInfo = options.get(40 /* fontInfo */);\r\n        const fontFamily = fontInfo.fontFamily;\r\n        const fontSize = options.get(105 /* suggestFontSize */) || fontInfo.fontSize;\r\n        const lineHeight = options.get(106 /* suggestLineHeight */) || fontInfo.lineHeight;\r\n        const fontWeight = fontInfo.fontWeight;\r\n        const fontSizePx = `${fontSize}px`;\r\n        const lineHeightPx = `${lineHeight}px`;\r\n        this.domNode.style.fontSize = fontSizePx;\r\n        this.domNode.style.lineHeight = lineHeightPx;\r\n        this.domNode.style.fontWeight = fontWeight;\r\n        this.domNode.style.fontFeatureSettings = fontInfo.fontFeatureSettings;\r\n        this._type.style.fontFamily = fontFamily;\r\n        this._close.style.height = lineHeightPx;\r\n        this._close.style.width = lineHeightPx;\r\n    }\r\n    getLayoutInfo() {\r\n        const lineHeight = this._editor.getOption(106 /* suggestLineHeight */) || this._editor.getOption(40 /* fontInfo */).lineHeight;\r\n        const borderWidth = this._borderWidth;\r\n        const borderHeight = borderWidth * 2;\r\n        return {\r\n            lineHeight,\r\n            borderWidth,\r\n            borderHeight,\r\n            verticalPadding: 22,\r\n            horizontalPadding: 14\r\n        };\r\n    }\r\n    renderLoading() {\r\n        this._type.textContent = nls.localize('loading', \"Loading...\");\r\n        this._docs.textContent = '';\r\n        this.domNode.classList.remove('no-docs', 'no-type');\r\n        this.layout(this.size.width, this.getLayoutInfo().lineHeight * 2);\r\n        this._onDidChangeContents.fire(this);\r\n    }\r\n    renderItem(item, explainMode) {\r\n        var _a, _b;\r\n        this._renderDisposeable.clear();\r\n        let { detail, documentation } = item.completion;\r\n        if (explainMode) {\r\n            let md = '';\r\n            md += `score: ${item.score[0]}\\n`;\r\n            md += `prefix: ${(_a = item.word) !== null && _a !== void 0 ? _a : '(no prefix)'}\\n`;\r\n            md += `word: ${item.completion.filterText ? item.completion.filterText + ' (filterText)' : item.textLabel}\\n`;\r\n            md += `distance: ${item.distance} (localityBonus-setting)\\n`;\r\n            md += `index: ${item.idx}, based on ${item.completion.sortText && `sortText: \"${item.completion.sortText}\"` || 'label'}\\n`;\r\n            md += `commit_chars: ${(_b = item.completion.commitCharacters) === null || _b === void 0 ? void 0 : _b.join('')}\\n`;\r\n            documentation = new MarkdownString().appendCodeblock('empty', md);\r\n            detail = `Provider: ${item.provider._debugDisplayName}`;\r\n        }\r\n        if (!explainMode && !canExpandCompletionItem(item)) {\r\n            this.clearContents();\r\n            return;\r\n        }\r\n        this.domNode.classList.remove('no-docs', 'no-type');\r\n        // --- details\r\n        if (detail) {\r\n            const cappedDetail = detail.length > 100000 ? `${detail.substr(0, 100000)}\u2026` : detail;\r\n            this._type.textContent = cappedDetail;\r\n            this._type.title = cappedDetail;\r\n            dom.show(this._type);\r\n            this._type.classList.toggle('auto-wrap', !/\\r?\\n^\\s+/gmi.test(cappedDetail));\r\n        }\r\n        else {\r\n            dom.clearNode(this._type);\r\n            this._type.title = '';\r\n            dom.hide(this._type);\r\n            this.domNode.classList.add('no-type');\r\n        }\r\n        // --- documentation\r\n        dom.clearNode(this._docs);\r\n        if (typeof documentation === 'string') {\r\n            this._docs.classList.remove('markdown-docs');\r\n            this._docs.textContent = documentation;\r\n        }\r\n        else if (documentation) {\r\n            this._docs.classList.add('markdown-docs');\r\n            dom.clearNode(this._docs);\r\n            const renderedContents = this._markdownRenderer.render(documentation);\r\n            this._docs.appendChild(renderedContents.element);\r\n            this._renderDisposeable.add(renderedContents);\r\n            this._renderDisposeable.add(this._markdownRenderer.onDidRenderAsync(() => {\r\n                this.layout(this._size.width, this._type.clientHeight + this._docs.clientHeight);\r\n                this._onDidChangeContents.fire(this);\r\n            }));\r\n        }\r\n        this.domNode.style.userSelect = 'text';\r\n        this.domNode.tabIndex = -1;\r\n        this._close.onmousedown = e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        };\r\n        this._close.onclick = e => {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this._onDidClose.fire();\r\n        };\r\n        this._body.scrollTop = 0;\r\n        this.layout(this._size.width, this._type.clientHeight + this._docs.clientHeight);\r\n        this._onDidChangeContents.fire(this);\r\n    }\r\n    clearContents() {\r\n        this.domNode.classList.add('no-docs');\r\n        this._type.textContent = '';\r\n        this._docs.textContent = '';\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    layout(width, height) {\r\n        const newSize = new dom.Dimension(width, height);\r\n        if (!dom.Dimension.equals(newSize, this._size)) {\r\n            this._size = newSize;\r\n            dom.size(this.domNode, width, height);\r\n        }\r\n        this._scrollbar.scanDomNode();\r\n    }\r\n    scrollDown(much = 8) {\r\n        this._body.scrollTop += much;\r\n    }\r\n    scrollUp(much = 8) {\r\n        this._body.scrollTop -= much;\r\n    }\r\n    scrollTop() {\r\n        this._body.scrollTop = 0;\r\n    }\r\n    scrollBottom() {\r\n        this._body.scrollTop = this._body.scrollHeight;\r\n    }\r\n    pageDown() {\r\n        this.scrollDown(80);\r\n    }\r\n    pageUp() {\r\n        this.scrollUp(80);\r\n    }\r\n    set borderWidth(width) {\r\n        this._borderWidth = width;\r\n    }\r\n    get borderWidth() {\r\n        return this._borderWidth;\r\n    }\r\n};\r\nSuggestDetailsWidget = __decorate([\r\n    __param(1, IInstantiationService)\r\n], SuggestDetailsWidget);\r\nexport { SuggestDetailsWidget };\r\nexport class SuggestDetailsOverlay {\r\n    constructor(widget, _editor) {\r\n        this.widget = widget;\r\n        this._editor = _editor;\r\n        this._disposables = new DisposableStore();\r\n        this._added = false;\r\n        this._resizable = new ResizableHTMLElement();\r\n        this._resizable.domNode.classList.add('suggest-details-container');\r\n        this._resizable.domNode.appendChild(widget.domNode);\r\n        this._resizable.enableSashes(false, true, true, false);\r\n        let topLeftNow;\r\n        let sizeNow;\r\n        let deltaTop = 0;\r\n        let deltaLeft = 0;\r\n        this._disposables.add(this._resizable.onDidWillResize(() => {\r\n            topLeftNow = this._topLeft;\r\n            sizeNow = this._resizable.size;\r\n        }));\r\n        this._disposables.add(this._resizable.onDidResize(e => {\r\n            if (topLeftNow && sizeNow) {\r\n                this.widget.layout(e.dimension.width, e.dimension.height);\r\n                let updateTopLeft = false;\r\n                if (e.west) {\r\n                    deltaLeft = sizeNow.width - e.dimension.width;\r\n                    updateTopLeft = true;\r\n                }\r\n                if (e.north) {\r\n                    deltaTop = sizeNow.height - e.dimension.height;\r\n                    updateTopLeft = true;\r\n                }\r\n                if (updateTopLeft) {\r\n                    this._applyTopLeft({\r\n                        top: topLeftNow.top + deltaTop,\r\n                        left: topLeftNow.left + deltaLeft,\r\n                    });\r\n                }\r\n            }\r\n            if (e.done) {\r\n                topLeftNow = undefined;\r\n                sizeNow = undefined;\r\n                deltaTop = 0;\r\n                deltaLeft = 0;\r\n                this._userSize = e.dimension;\r\n            }\r\n        }));\r\n        this._disposables.add(this.widget.onDidChangeContents(() => {\r\n            var _a;\r\n            if (this._anchorBox) {\r\n                this._placeAtAnchor(this._anchorBox, (_a = this._userSize) !== null && _a !== void 0 ? _a : this.widget.size);\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._resizable.dispose();\r\n        this._disposables.dispose();\r\n        this.hide();\r\n    }\r\n    getId() {\r\n        return 'suggest.details';\r\n    }\r\n    getDomNode() {\r\n        return this._resizable.domNode;\r\n    }\r\n    getPosition() {\r\n        return null;\r\n    }\r\n    show() {\r\n        if (!this._added) {\r\n            this._editor.addOverlayWidget(this);\r\n            this.getDomNode().style.position = 'fixed';\r\n            this._added = true;\r\n        }\r\n    }\r\n    hide(sessionEnded = false) {\r\n        this._resizable.clearSashHoverState();\r\n        if (this._added) {\r\n            this._editor.removeOverlayWidget(this);\r\n            this._added = false;\r\n            this._anchorBox = undefined;\r\n            this._topLeft = undefined;\r\n        }\r\n        if (sessionEnded) {\r\n            this._userSize = undefined;\r\n            this.widget.clearContents();\r\n        }\r\n    }\r\n    placeAtAnchor(anchor) {\r\n        var _a;\r\n        const anchorBox = dom.getDomNodePagePosition(anchor);\r\n        this._anchorBox = anchorBox;\r\n        this._placeAtAnchor(this._anchorBox, (_a = this._userSize) !== null && _a !== void 0 ? _a : this.widget.size);\r\n    }\r\n    _placeAtAnchor(anchorBox, size) {\r\n        const bodyBox = dom.getClientArea(document.body);\r\n        const info = this.widget.getLayoutInfo();\r\n        let maxSizeTop;\r\n        let maxSizeBottom;\r\n        let minSize = new dom.Dimension(220, 2 * info.lineHeight);\r\n        let left = 0;\r\n        let top = anchorBox.top;\r\n        let bottom = anchorBox.top + anchorBox.height - info.borderHeight;\r\n        let alignAtTop;\r\n        let alignEast;\r\n        // position: EAST, west, south\r\n        let width = bodyBox.width - (anchorBox.left + anchorBox.width + info.borderWidth + info.horizontalPadding);\r\n        left = -info.borderWidth + anchorBox.left + anchorBox.width;\r\n        alignEast = true;\r\n        maxSizeTop = new dom.Dimension(width, bodyBox.height - anchorBox.top - info.borderHeight - info.verticalPadding);\r\n        maxSizeBottom = maxSizeTop.with(undefined, anchorBox.top + anchorBox.height - info.borderHeight - info.verticalPadding);\r\n        // find a better place if the widget is wider than there is space available\r\n        if (size.width > width) {\r\n            // position: east, WEST, south\r\n            if (anchorBox.left > width) {\r\n                // pos = SuggestDetailsPosition.West;\r\n                width = anchorBox.left - info.borderWidth - info.horizontalPadding;\r\n                alignEast = false;\r\n                left = Math.max(info.horizontalPadding, anchorBox.left - size.width - info.borderWidth);\r\n                maxSizeTop = maxSizeTop.with(width);\r\n                maxSizeBottom = maxSizeTop.with(undefined, maxSizeBottom.height);\r\n            }\r\n            // position: east, west, SOUTH\r\n            if (anchorBox.width > width * 1.3 && bodyBox.height - (anchorBox.top + anchorBox.height) > anchorBox.height) {\r\n                width = anchorBox.width;\r\n                left = anchorBox.left;\r\n                top = -info.borderWidth + anchorBox.top + anchorBox.height;\r\n                maxSizeTop = new dom.Dimension(anchorBox.width - info.borderHeight, bodyBox.height - anchorBox.top - anchorBox.height - info.verticalPadding);\r\n                maxSizeBottom = maxSizeTop.with(undefined, anchorBox.top - info.verticalPadding);\r\n                minSize = minSize.with(maxSizeTop.width);\r\n            }\r\n        }\r\n        // top/bottom placement\r\n        let height = size.height;\r\n        let maxHeight = Math.max(maxSizeTop.height, maxSizeBottom.height);\r\n        if (height > maxHeight) {\r\n            height = maxHeight;\r\n        }\r\n        let maxSize;\r\n        if (height <= maxSizeTop.height) {\r\n            alignAtTop = true;\r\n            maxSize = maxSizeTop;\r\n        }\r\n        else {\r\n            alignAtTop = false;\r\n            maxSize = maxSizeBottom;\r\n        }\r\n        this._applyTopLeft({ left, top: alignAtTop ? top : bottom - height });\r\n        this.getDomNode().style.position = 'fixed';\r\n        this._resizable.enableSashes(!alignAtTop, alignEast, alignAtTop, !alignEast);\r\n        this._resizable.minSize = minSize;\r\n        this._resizable.maxSize = maxSize;\r\n        this._resizable.layout(height, Math.min(maxSize.width, size.width));\r\n        this.widget.layout(this._resizable.size.width, this._resizable.size.height);\r\n    }\r\n    _applyTopLeft(topLeft) {\r\n        this._topLeft = topLeft;\r\n        this.getDomNode().style.left = `${this._topLeft.left}px`;\r\n        this.getDomNode().style.top = `${this._topLeft.top}px`;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { suggestWidgetStatusbarMenu } from './suggest.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { MenuEntryActionViewItem } from '../../../platform/actions/browser/menuEntryActionViewItem.js';\r\nimport { IMenuService, MenuItemAction } from '../../../platform/actions/common/actions.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nclass StatusBarViewItem extends MenuEntryActionViewItem {\r\n    updateLabel() {\r\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\r\n        if (!kb) {\r\n            return super.updateLabel();\r\n        }\r\n        if (this.label) {\r\n            this.label.textContent = localize('ddd', '{0} ({1})', this._action.label, StatusBarViewItem.symbolPrintEnter(kb));\r\n        }\r\n    }\r\n    static symbolPrintEnter(kb) {\r\n        var _a;\r\n        return (_a = kb.getLabel()) === null || _a === void 0 ? void 0 : _a.replace(/\\benter\\b/gi, '\\u23CE');\r\n    }\r\n}\r\nlet SuggestWidgetStatus = class SuggestWidgetStatus {\r\n    constructor(container, instantiationService, _menuService, _contextKeyService) {\r\n        this._menuService = _menuService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._menuDisposables = new DisposableStore();\r\n        this.element = dom.append(container, dom.$('.suggest-status-bar'));\r\n        const actionViewItemProvider = (action => {\r\n            return action instanceof MenuItemAction ? instantiationService.createInstance(StatusBarViewItem, action, undefined) : undefined;\r\n        });\r\n        this._leftActions = new ActionBar(this.element, { actionViewItemProvider });\r\n        this._rightActions = new ActionBar(this.element, { actionViewItemProvider });\r\n        this._leftActions.domNode.classList.add('left');\r\n        this._rightActions.domNode.classList.add('right');\r\n    }\r\n    dispose() {\r\n        this._menuDisposables.dispose();\r\n        this.element.remove();\r\n    }\r\n    show() {\r\n        const menu = this._menuService.createMenu(suggestWidgetStatusbarMenu, this._contextKeyService);\r\n        const renderMenu = () => {\r\n            const left = [];\r\n            const right = [];\r\n            for (let [group, actions] of menu.getActions()) {\r\n                if (group === 'left') {\r\n                    left.push(...actions);\r\n                }\r\n                else {\r\n                    right.push(...actions);\r\n                }\r\n            }\r\n            this._leftActions.clear();\r\n            this._leftActions.push(left);\r\n            this._rightActions.clear();\r\n            this._rightActions.push(right);\r\n        };\r\n        this._menuDisposables.add(menu.onDidChange(() => renderMenu()));\r\n        this._menuDisposables.add(menu);\r\n    }\r\n    hide() {\r\n        this._menuDisposables.clear();\r\n    }\r\n};\r\nSuggestWidgetStatus = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IMenuService),\r\n    __param(3, IContextKeyService)\r\n], SuggestWidgetStatus);\r\nexport { SuggestWidgetStatus };\r\n", "//#endregion\r\n//#region Utilities\r\nexport var FileKind;\r\n(function (FileKind) {\r\n    FileKind[FileKind[\"FILE\"] = 0] = \"FILE\";\r\n    FileKind[FileKind[\"FOLDER\"] = 1] = \"FOLDER\";\r\n    FileKind[FileKind[\"ROOT_FOLDER\"] = 2] = \"ROOT_FOLDER\";\r\n})(FileKind || (FileKind = {}));\r\n//#endregion\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport { DataUri, basenameOrAuthority } from '../../../base/common/resources.js';\r\nimport { PLAINTEXT_MODE_ID } from '../modes/modesRegistry.js';\r\nimport { FileKind } from '../../../platform/files/common/files.js';\r\nexport function getIconClasses(modelService, modeService, resource, fileKind) {\r\n    // we always set these base classes even if we do not have a path\r\n    const classes = fileKind === FileKind.ROOT_FOLDER ? ['rootfolder-icon'] : fileKind === FileKind.FOLDER ? ['folder-icon'] : ['file-icon'];\r\n    if (resource) {\r\n        // Get the path and name of the resource. For data-URIs, we need to parse specially\r\n        let name;\r\n        if (resource.scheme === Schemas.data) {\r\n            const metadata = DataUri.parseMetaData(resource);\r\n            name = metadata.get(DataUri.META_DATA_LABEL);\r\n        }\r\n        else {\r\n            name = cssEscape(basenameOrAuthority(resource).toLowerCase());\r\n        }\r\n        // Folders\r\n        if (fileKind === FileKind.FOLDER) {\r\n            classes.push(`${name}-name-folder-icon`);\r\n        }\r\n        // Files\r\n        else {\r\n            // Name & Extension(s)\r\n            if (name) {\r\n                classes.push(`${name}-name-file-icon`);\r\n                // Avoid doing an explosive combination of extensions for very long filenames\r\n                // (most file systems do not allow files > 255 length) with lots of `.` characters\r\n                // https://github.com/microsoft/vscode/issues/116199\r\n                if (name.length <= 255) {\r\n                    const dotSegments = name.split('.');\r\n                    for (let i = 1; i < dotSegments.length; i++) {\r\n                        classes.push(`${dotSegments.slice(i).join('.')}-ext-file-icon`); // add each combination of all found extensions if more than one\r\n                    }\r\n                }\r\n                classes.push(`ext-file-icon`); // extra segment to increase file-ext score\r\n            }\r\n            // Detected Mode\r\n            const detectedModeId = detectModeId(modelService, modeService, resource);\r\n            if (detectedModeId) {\r\n                classes.push(`${cssEscape(detectedModeId)}-lang-file-icon`);\r\n            }\r\n        }\r\n    }\r\n    return classes;\r\n}\r\nexport function detectModeId(modelService, modeService, resource) {\r\n    if (!resource) {\r\n        return null; // we need a resource at least\r\n    }\r\n    let modeId = null;\r\n    // Data URI: check for encoded metadata\r\n    if (resource.scheme === Schemas.data) {\r\n        const metadata = DataUri.parseMetaData(resource);\r\n        const mime = metadata.get(DataUri.META_DATA_MIME);\r\n        if (mime) {\r\n            modeId = modeService.getModeId(mime);\r\n        }\r\n    }\r\n    // Any other URI: check for model if existing\r\n    else {\r\n        const model = modelService.getModel(resource);\r\n        if (model) {\r\n            modeId = model.getModeId();\r\n        }\r\n    }\r\n    // only take if the mode is specific (aka no just plain text)\r\n    if (modeId && modeId !== PLAINTEXT_MODE_ID) {\r\n        return modeId;\r\n    }\r\n    // otherwise fallback to path based detection\r\n    return modeService.getModeIdByFilepathOrFirstLine(resource);\r\n}\r\nexport function cssEscape(str) {\r\n    return str.replace(/[\\11\\12\\14\\15\\40]/g, '/'); // HTML class names can not contain certain whitespace characters, use / instead, which doesn't exist in file names.\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar _a;\r\nimport * as nls from '../../../nls.js';\r\nimport { createMatches } from '../../../base/common/filters.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { append, $, hide, show } from '../../../base/browser/dom.js';\r\nimport { IThemeService, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { completionKindToCssClass } from '../../common/modes.js';\r\nimport { IconLabel } from '../../../base/browser/ui/iconLabel/iconLabel.js';\r\nimport { getIconClasses } from '../../common/services/getIconClasses.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { FileKind } from '../../../platform/files/common/files.js';\r\nimport { flatten } from '../../../base/common/arrays.js';\r\nimport { canExpandCompletionItem } from './suggestWidgetDetails.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nexport function getAriaId(index) {\r\n    return `suggest-aria-id:${index}`;\r\n}\r\nexport const suggestMoreInfoIcon = registerIcon('suggest-more-info', Codicon.chevronRight, nls.localize('suggestMoreInfoIcon', 'Icon for more information in the suggest widget.'));\r\nconst _completionItemColor = new (_a = class ColorExtractor {\r\n        extract(item, out) {\r\n            if (item.textLabel.match(ColorExtractor._regexStrict)) {\r\n                out[0] = item.textLabel;\r\n                return true;\r\n            }\r\n            if (item.completion.detail && item.completion.detail.match(ColorExtractor._regexStrict)) {\r\n                out[0] = item.completion.detail;\r\n                return true;\r\n            }\r\n            if (typeof item.completion.documentation === 'string') {\r\n                const match = ColorExtractor._regexRelaxed.exec(item.completion.documentation);\r\n                if (match && (match.index === 0 || match.index + match[0].length === item.completion.documentation.length)) {\r\n                    out[0] = match[0];\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    _a._regexRelaxed = /(#([\\da-fA-F]{3}){1,2}|(rgb|hsl)a\\(\\s*(\\d{1,3}%?\\s*,\\s*){3}(1|0?\\.\\d+)\\)|(rgb|hsl)\\(\\s*\\d{1,3}%?(\\s*,\\s*\\d{1,3}%?){2}\\s*\\))/,\r\n    _a._regexStrict = new RegExp(`^${_a._regexRelaxed.source}$`, 'i'),\r\n    _a);\r\nlet ItemRenderer = class ItemRenderer {\r\n    constructor(_editor, _modelService, _modeService, _themeService) {\r\n        this._editor = _editor;\r\n        this._modelService = _modelService;\r\n        this._modeService = _modeService;\r\n        this._themeService = _themeService;\r\n        this._onDidToggleDetails = new Emitter();\r\n        this.onDidToggleDetails = this._onDidToggleDetails.event;\r\n        this.templateId = 'suggestion';\r\n    }\r\n    dispose() {\r\n        this._onDidToggleDetails.dispose();\r\n    }\r\n    renderTemplate(container) {\r\n        const data = Object.create(null);\r\n        data.disposables = new DisposableStore();\r\n        data.root = container;\r\n        data.root.classList.add('show-file-icons');\r\n        data.icon = append(container, $('.icon'));\r\n        data.colorspan = append(data.icon, $('span.colorspan'));\r\n        const text = append(container, $('.contents'));\r\n        const main = append(text, $('.main'));\r\n        data.iconContainer = append(main, $('.icon-label.codicon'));\r\n        data.left = append(main, $('span.left'));\r\n        data.right = append(main, $('span.right'));\r\n        data.iconLabel = new IconLabel(data.left, { supportHighlights: true, supportIcons: true });\r\n        data.disposables.add(data.iconLabel);\r\n        data.parametersLabel = append(data.left, $('span.signature-label'));\r\n        data.qualifierLabel = append(data.left, $('span.qualifier-label'));\r\n        data.detailsLabel = append(data.right, $('span.details-label'));\r\n        data.readMore = append(data.right, $('span.readMore' + ThemeIcon.asCSSSelector(suggestMoreInfoIcon)));\r\n        data.readMore.title = nls.localize('readMore', \"Read More\");\r\n        const configureFont = () => {\r\n            const options = this._editor.getOptions();\r\n            const fontInfo = options.get(40 /* fontInfo */);\r\n            const fontFamily = fontInfo.fontFamily;\r\n            const fontFeatureSettings = fontInfo.fontFeatureSettings;\r\n            const fontSize = options.get(105 /* suggestFontSize */) || fontInfo.fontSize;\r\n            const lineHeight = options.get(106 /* suggestLineHeight */) || fontInfo.lineHeight;\r\n            const fontWeight = fontInfo.fontWeight;\r\n            const fontSizePx = `${fontSize}px`;\r\n            const lineHeightPx = `${lineHeight}px`;\r\n            data.root.style.fontSize = fontSizePx;\r\n            data.root.style.fontWeight = fontWeight;\r\n            main.style.fontFamily = fontFamily;\r\n            main.style.fontFeatureSettings = fontFeatureSettings;\r\n            main.style.lineHeight = lineHeightPx;\r\n            data.icon.style.height = lineHeightPx;\r\n            data.icon.style.width = lineHeightPx;\r\n            data.readMore.style.height = lineHeightPx;\r\n            data.readMore.style.width = lineHeightPx;\r\n        };\r\n        configureFont();\r\n        data.disposables.add(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(40 /* fontInfo */) || e.hasChanged(105 /* suggestFontSize */) || e.hasChanged(106 /* suggestLineHeight */)) {\r\n                configureFont();\r\n            }\r\n        }));\r\n        return data;\r\n    }\r\n    renderElement(element, index, data) {\r\n        const { completion } = element;\r\n        data.root.id = getAriaId(index);\r\n        data.colorspan.style.backgroundColor = '';\r\n        const labelOptions = {\r\n            labelEscapeNewLines: true,\r\n            matches: createMatches(element.score)\r\n        };\r\n        let color = [];\r\n        if (completion.kind === 19 /* Color */ && _completionItemColor.extract(element, color)) {\r\n            // special logic for 'color' completion items\r\n            data.icon.className = 'icon customcolor';\r\n            data.iconContainer.className = 'icon hide';\r\n            data.colorspan.style.backgroundColor = color[0];\r\n        }\r\n        else if (completion.kind === 20 /* File */ && this._themeService.getFileIconTheme().hasFileIcons) {\r\n            // special logic for 'file' completion items\r\n            data.icon.className = 'icon hide';\r\n            data.iconContainer.className = 'icon hide';\r\n            const labelClasses = getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FILE);\r\n            const detailClasses = getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FILE);\r\n            labelOptions.extraClasses = labelClasses.length > detailClasses.length ? labelClasses : detailClasses;\r\n        }\r\n        else if (completion.kind === 23 /* Folder */ && this._themeService.getFileIconTheme().hasFolderIcons) {\r\n            // special logic for 'folder' completion items\r\n            data.icon.className = 'icon hide';\r\n            data.iconContainer.className = 'icon hide';\r\n            labelOptions.extraClasses = flatten([\r\n                getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: element.textLabel }), FileKind.FOLDER),\r\n                getIconClasses(this._modelService, this._modeService, URI.from({ scheme: 'fake', path: completion.detail }), FileKind.FOLDER)\r\n            ]);\r\n        }\r\n        else {\r\n            // normal icon\r\n            data.icon.className = 'icon hide';\r\n            data.iconContainer.className = '';\r\n            data.iconContainer.classList.add('suggest-icon', ...completionKindToCssClass(completion.kind).split(' '));\r\n        }\r\n        if (completion.tags && completion.tags.indexOf(1 /* Deprecated */) >= 0) {\r\n            labelOptions.extraClasses = (labelOptions.extraClasses || []).concat(['deprecated']);\r\n            labelOptions.matches = [];\r\n        }\r\n        data.iconLabel.setLabel(element.textLabel, undefined, labelOptions);\r\n        if (typeof completion.label === 'string') {\r\n            data.parametersLabel.textContent = '';\r\n            data.detailsLabel.textContent = stripNewLines(completion.detail || '');\r\n            data.root.classList.add('string-label');\r\n        }\r\n        else {\r\n            data.parametersLabel.textContent = stripNewLines(completion.label.detail || '');\r\n            data.detailsLabel.textContent = stripNewLines(completion.label.description || '');\r\n            data.root.classList.remove('string-label');\r\n        }\r\n        if (this._editor.getOption(104 /* suggest */).showInlineDetails) {\r\n            show(data.detailsLabel);\r\n        }\r\n        else {\r\n            hide(data.detailsLabel);\r\n        }\r\n        if (canExpandCompletionItem(element)) {\r\n            data.right.classList.add('can-expand-details');\r\n            show(data.readMore);\r\n            data.readMore.onmousedown = e => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n            };\r\n            data.readMore.onclick = e => {\r\n                e.stopPropagation();\r\n                e.preventDefault();\r\n                this._onDidToggleDetails.fire();\r\n            };\r\n        }\r\n        else {\r\n            data.right.classList.remove('can-expand-details');\r\n            hide(data.readMore);\r\n            data.readMore.onmousedown = null;\r\n            data.readMore.onclick = null;\r\n        }\r\n    }\r\n    disposeTemplate(templateData) {\r\n        templateData.disposables.dispose();\r\n    }\r\n};\r\nItemRenderer = __decorate([\r\n    __param(1, IModelService),\r\n    __param(2, IModeService),\r\n    __param(3, IThemeService)\r\n], ItemRenderer);\r\nexport { ItemRenderer };\r\nfunction stripNewLines(str) {\r\n    return str.replace(/\\r\\n|\\r|\\n/g, '');\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nlet WordContextKey = class WordContextKey {\r\n    constructor(_editor, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._enabled = false;\r\n        this._ckAtEnd = WordContextKey.AtEnd.bindTo(contextKeyService);\r\n        this._configListener = this._editor.onDidChangeConfiguration(e => e.hasChanged(109 /* tabCompletion */) && this._update());\r\n        this._update();\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        this._configListener.dispose();\r\n        (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._ckAtEnd.reset();\r\n    }\r\n    _update() {\r\n        // only update this when tab completions are enabled\r\n        const enabled = this._editor.getOption(109 /* tabCompletion */) === 'on';\r\n        if (this._enabled === enabled) {\r\n            return;\r\n        }\r\n        this._enabled = enabled;\r\n        if (this._enabled) {\r\n            const checkForWordEnd = () => {\r\n                if (!this._editor.hasModel()) {\r\n                    this._ckAtEnd.set(false);\r\n                    return;\r\n                }\r\n                const model = this._editor.getModel();\r\n                const selection = this._editor.getSelection();\r\n                const word = model.getWordAtPosition(selection.getStartPosition());\r\n                if (!word) {\r\n                    this._ckAtEnd.set(false);\r\n                    return;\r\n                }\r\n                this._ckAtEnd.set(word.endColumn === selection.getStartPosition().column);\r\n            };\r\n            this._selectionListener = this._editor.onDidChangeCursorSelection(checkForWordEnd);\r\n            checkForWordEnd();\r\n        }\r\n        else if (this._selectionListener) {\r\n            this._ckAtEnd.reset();\r\n            this._selectionListener.dispose();\r\n            this._selectionListener = undefined;\r\n        }\r\n    }\r\n};\r\nWordContextKey.AtEnd = new RawContextKey('atEndOfWord', false);\r\nWordContextKey = __decorate([\r\n    __param(1, IContextKeyService)\r\n], WordContextKey);\r\nexport { WordContextKey };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\r\nexport class CommitCharacterController {\r\n    constructor(editor, widget, accept) {\r\n        this._disposables = new DisposableStore();\r\n        this._disposables.add(widget.onDidShow(() => this._onItem(widget.getFocusedItem())));\r\n        this._disposables.add(widget.onDidFocus(this._onItem, this));\r\n        this._disposables.add(widget.onDidHide(this.reset, this));\r\n        this._disposables.add(editor.onWillType(text => {\r\n            if (this._active && !widget.isFrozen()) {\r\n                const ch = text.charCodeAt(text.length - 1);\r\n                if (this._active.acceptCharacters.has(ch) && editor.getOption(0 /* acceptSuggestionOnCommitCharacter */)) {\r\n                    accept(this._active.item);\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    _onItem(selected) {\r\n        if (!selected || !isNonEmptyArray(selected.item.completion.commitCharacters)) {\r\n            // no item or no commit characters\r\n            this.reset();\r\n            return;\r\n        }\r\n        if (this._active && this._active.item.item === selected.item) {\r\n            // still the same item\r\n            return;\r\n        }\r\n        // keep item and its commit characters\r\n        const acceptCharacters = new CharacterSet();\r\n        for (const ch of selected.item.completion.commitCharacters) {\r\n            if (ch.length > 0) {\r\n                acceptCharacters.add(ch.charCodeAt(0));\r\n            }\r\n        }\r\n        this._active = { acceptCharacters, item: selected };\r\n    }\r\n    reset() {\r\n        this._active = undefined;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nexport class OvertypingCapturer {\r\n    constructor(editor, suggestModel) {\r\n        this._disposables = new DisposableStore();\r\n        this._lastOvertyped = [];\r\n        this._empty = true;\r\n        this._disposables.add(editor.onWillType(() => {\r\n            if (!this._empty) {\r\n                return;\r\n            }\r\n            if (!editor.hasModel()) {\r\n                return;\r\n            }\r\n            const selections = editor.getSelections();\r\n            const selectionsLength = selections.length;\r\n            // Check if it will overtype any selections\r\n            let willOvertype = false;\r\n            for (let i = 0; i < selectionsLength; i++) {\r\n                if (!selections[i].isEmpty()) {\r\n                    willOvertype = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!willOvertype) {\r\n                return;\r\n            }\r\n            this._lastOvertyped = [];\r\n            const model = editor.getModel();\r\n            for (let i = 0; i < selectionsLength; i++) {\r\n                const selection = selections[i];\r\n                // Check for overtyping capturer restrictions\r\n                if (model.getValueLengthInRange(selection) > OvertypingCapturer._maxSelectionLength) {\r\n                    return;\r\n                }\r\n                this._lastOvertyped[i] = { value: model.getValueInRange(selection), multiline: selection.startLineNumber !== selection.endLineNumber };\r\n            }\r\n            this._empty = false;\r\n        }));\r\n        this._disposables.add(suggestModel.onDidCancel(e => {\r\n            if (!this._empty && !e.retrigger) {\r\n                this._empty = true;\r\n            }\r\n        }));\r\n    }\r\n    getLastOvertypedInfo(idx) {\r\n        if (!this._empty && idx >= 0 && idx < this._lastOvertyped.length) {\r\n            return this._lastOvertyped[idx];\r\n        }\r\n        return undefined;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n    }\r\n}\r\nOvertypingCapturer._maxSelectionLength = 51200;\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { SimpleKeybinding } from '../../../base/common/keyCodes.js';\r\nimport { dispose, DisposableStore, toDisposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { StableEditorScrollState } from '../../browser/core/editorState.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { SnippetController2 } from '../snippet/snippetController2.js';\r\nimport { SnippetParser } from '../snippet/snippetParser.js';\r\nimport { ISuggestMemoryService } from './suggestMemory.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { ICommandService, CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { Context as SuggestContext, suggestWidgetStatusbarMenu } from './suggest.js';\r\nimport { SuggestAlternatives } from './suggestAlternatives.js';\r\nimport { SuggestModel } from './suggestModel.js';\r\nimport { SuggestWidget } from './suggestWidget.js';\r\nimport { WordContextKey } from './wordContextKey.js';\r\nimport { Event } from '../../../base/common/event.js';\r\nimport { IdleValue } from '../../../base/common/async.js';\r\nimport { isObject, assertType } from '../../../base/common/types.js';\r\nimport { CommitCharacterController } from './suggestCommitCharacters.js';\r\nimport { OvertypingCapturer } from './suggestOvertypingCapturer.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport { MenuRegistry } from '../../../platform/actions/common/actions.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\n// sticky suggest widget which doesn't disappear on focus out and such\r\nlet _sticky = false;\r\n// _sticky = Boolean(\"true\"); // done \"weirdly\" so that a lint warning prevents you from pushing this\r\nclass LineSuffix {\r\n    constructor(_model, _position) {\r\n        this._model = _model;\r\n        this._position = _position;\r\n        // spy on what's happening right of the cursor. two cases:\r\n        // 1. end of line -> check that it's still end of line\r\n        // 2. mid of line -> add a marker and compute the delta\r\n        const maxColumn = _model.getLineMaxColumn(_position.lineNumber);\r\n        if (maxColumn !== _position.column) {\r\n            const offset = _model.getOffsetAt(_position);\r\n            const end = _model.getPositionAt(offset + 1);\r\n            this._marker = _model.deltaDecorations([], [{\r\n                    range: Range.fromPositions(_position, end),\r\n                    options: { description: 'suggest-line-suffix', stickiness: 1 /* NeverGrowsWhenTypingAtEdges */ }\r\n                }]);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._marker && !this._model.isDisposed()) {\r\n            this._model.deltaDecorations(this._marker, []);\r\n        }\r\n    }\r\n    delta(position) {\r\n        if (this._model.isDisposed() || this._position.lineNumber !== position.lineNumber) {\r\n            // bail out early if things seems fishy\r\n            return 0;\r\n        }\r\n        // read the marker (in case suggest was triggered at line end) or compare\r\n        // the cursor to the line end.\r\n        if (this._marker) {\r\n            const range = this._model.getDecorationRange(this._marker[0]);\r\n            const end = this._model.getOffsetAt(range.getStartPosition());\r\n            return end - this._model.getOffsetAt(position);\r\n        }\r\n        else {\r\n            return this._model.getLineMaxColumn(position.lineNumber) - position.column;\r\n        }\r\n    }\r\n}\r\nlet SuggestController = class SuggestController {\r\n    constructor(editor, _memoryService, _commandService, _contextKeyService, _instantiationService, _logService) {\r\n        this._memoryService = _memoryService;\r\n        this._commandService = _commandService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._instantiationService = _instantiationService;\r\n        this._logService = _logService;\r\n        this._lineSuffix = new MutableDisposable();\r\n        this._toDispose = new DisposableStore();\r\n        this.editor = editor;\r\n        this.model = _instantiationService.createInstance(SuggestModel, this.editor);\r\n        // context key: update insert/replace mode\r\n        const ctxInsertMode = SuggestContext.InsertMode.bindTo(_contextKeyService);\r\n        ctxInsertMode.set(editor.getOption(104 /* suggest */).insertMode);\r\n        this.model.onDidTrigger(() => ctxInsertMode.set(editor.getOption(104 /* suggest */).insertMode));\r\n        this.widget = this._toDispose.add(new IdleValue(() => {\r\n            const widget = this._instantiationService.createInstance(SuggestWidget, this.editor);\r\n            this._toDispose.add(widget);\r\n            this._toDispose.add(widget.onDidSelect(item => this._insertSuggestion(item, 0), this));\r\n            // Wire up logic to accept a suggestion on certain characters\r\n            const commitCharacterController = new CommitCharacterController(this.editor, widget, item => this._insertSuggestion(item, 2 /* NoAfterUndoStop */));\r\n            this._toDispose.add(commitCharacterController);\r\n            this._toDispose.add(this.model.onDidSuggest(e => {\r\n                if (e.completionModel.items.length === 0) {\r\n                    commitCharacterController.reset();\r\n                }\r\n            }));\r\n            // Wire up makes text edit context key\r\n            const ctxMakesTextEdit = SuggestContext.MakesTextEdit.bindTo(this._contextKeyService);\r\n            const ctxHasInsertAndReplace = SuggestContext.HasInsertAndReplaceRange.bindTo(this._contextKeyService);\r\n            const ctxCanResolve = SuggestContext.CanResolve.bindTo(this._contextKeyService);\r\n            this._toDispose.add(toDisposable(() => {\r\n                ctxMakesTextEdit.reset();\r\n                ctxHasInsertAndReplace.reset();\r\n                ctxCanResolve.reset();\r\n            }));\r\n            this._toDispose.add(widget.onDidFocus(({ item }) => {\r\n                // (ctx: makesTextEdit)\r\n                const position = this.editor.getPosition();\r\n                const startColumn = item.editStart.column;\r\n                const endColumn = position.column;\r\n                let value = true;\r\n                if (this.editor.getOption(1 /* acceptSuggestionOnEnter */) === 'smart'\r\n                    && this.model.state === 2 /* Auto */\r\n                    && !item.completion.command\r\n                    && !item.completion.additionalTextEdits\r\n                    && !(item.completion.insertTextRules & 4 /* InsertAsSnippet */)\r\n                    && endColumn - startColumn === item.completion.insertText.length) {\r\n                    const oldText = this.editor.getModel().getValueInRange({\r\n                        startLineNumber: position.lineNumber,\r\n                        startColumn,\r\n                        endLineNumber: position.lineNumber,\r\n                        endColumn\r\n                    });\r\n                    value = oldText !== item.completion.insertText;\r\n                }\r\n                ctxMakesTextEdit.set(value);\r\n                // (ctx: hasInsertAndReplaceRange)\r\n                ctxHasInsertAndReplace.set(!Position.equals(item.editInsertEnd, item.editReplaceEnd));\r\n                // (ctx: canResolve)\r\n                ctxCanResolve.set(Boolean(item.provider.resolveCompletionItem) || Boolean(item.completion.documentation) || item.completion.detail !== item.completion.label);\r\n            }));\r\n            this._toDispose.add(widget.onDetailsKeyDown(e => {\r\n                // cmd + c on macOS, ctrl + c on Win / Linux\r\n                if (e.toKeybinding().equals(new SimpleKeybinding(true, false, false, false, 33 /* KEY_C */)) ||\r\n                    (platform.isMacintosh && e.toKeybinding().equals(new SimpleKeybinding(false, false, false, true, 33 /* KEY_C */)))) {\r\n                    e.stopPropagation();\r\n                    return;\r\n                }\r\n                if (!e.toKeybinding().isModifierKey()) {\r\n                    this.editor.focus();\r\n                }\r\n            }));\r\n            return widget;\r\n        }));\r\n        // Wire up text overtyping capture\r\n        this._overtypingCapturer = this._toDispose.add(new IdleValue(() => {\r\n            return this._toDispose.add(new OvertypingCapturer(this.editor, this.model));\r\n        }));\r\n        this._alternatives = this._toDispose.add(new IdleValue(() => {\r\n            return this._toDispose.add(new SuggestAlternatives(this.editor, this._contextKeyService));\r\n        }));\r\n        this._toDispose.add(_instantiationService.createInstance(WordContextKey, editor));\r\n        this._toDispose.add(this.model.onDidTrigger(e => {\r\n            this.widget.value.showTriggered(e.auto, e.shy ? 250 : 50);\r\n            this._lineSuffix.value = new LineSuffix(this.editor.getModel(), e.position);\r\n        }));\r\n        this._toDispose.add(this.model.onDidSuggest(e => {\r\n            if (!e.shy) {\r\n                let index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), e.completionModel.items);\r\n                this.widget.value.showSuggestions(e.completionModel, index, e.isFrozen, e.auto);\r\n            }\r\n        }));\r\n        this._toDispose.add(this.model.onDidCancel(e => {\r\n            if (!e.retrigger) {\r\n                this.widget.value.hideWidget();\r\n            }\r\n        }));\r\n        this._toDispose.add(this.editor.onDidBlurEditorWidget(() => {\r\n            if (!_sticky) {\r\n                this.model.cancel();\r\n                this.model.clear();\r\n            }\r\n        }));\r\n        // Manage the acceptSuggestionsOnEnter context key\r\n        let acceptSuggestionsOnEnter = SuggestContext.AcceptSuggestionsOnEnter.bindTo(_contextKeyService);\r\n        let updateFromConfig = () => {\r\n            const acceptSuggestionOnEnter = this.editor.getOption(1 /* acceptSuggestionOnEnter */);\r\n            acceptSuggestionsOnEnter.set(acceptSuggestionOnEnter === 'on' || acceptSuggestionOnEnter === 'smart');\r\n        };\r\n        this._toDispose.add(this.editor.onDidChangeConfiguration(() => updateFromConfig()));\r\n        updateFromConfig();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SuggestController.ID);\r\n    }\r\n    dispose() {\r\n        this._alternatives.dispose();\r\n        this._toDispose.dispose();\r\n        this.widget.dispose();\r\n        this.model.dispose();\r\n        this._lineSuffix.dispose();\r\n    }\r\n    _insertSuggestion(event, flags) {\r\n        if (!event || !event.item) {\r\n            this._alternatives.value.reset();\r\n            this.model.cancel();\r\n            this.model.clear();\r\n            return;\r\n        }\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this.editor.getModel();\r\n        const modelVersionNow = model.getAlternativeVersionId();\r\n        const { item } = event;\r\n        //\r\n        const tasks = [];\r\n        const cts = new CancellationTokenSource();\r\n        // pushing undo stops *before* additional text edits and\r\n        // *after* the main edit\r\n        if (!(flags & 1 /* NoBeforeUndoStop */)) {\r\n            this.editor.pushUndoStop();\r\n        }\r\n        // compute overwrite[Before|After] deltas BEFORE applying extra edits\r\n        const info = this.getOverwriteInfo(item, Boolean(flags & 8 /* AlternativeOverwriteConfig */));\r\n        // keep item in memory\r\n        this._memoryService.memorize(model, this.editor.getPosition(), item);\r\n        if (Array.isArray(item.completion.additionalTextEdits)) {\r\n            // sync additional edits\r\n            const scrollState = StableEditorScrollState.capture(this.editor);\r\n            this.editor.executeEdits('suggestController.additionalTextEdits.sync', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\r\n            scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\r\n        }\r\n        else if (!item.isResolved) {\r\n            // async additional edits\r\n            const sw = new StopWatch(true);\r\n            let position;\r\n            const docListener = model.onDidChangeContent(e => {\r\n                if (e.isFlush) {\r\n                    cts.cancel();\r\n                    docListener.dispose();\r\n                    return;\r\n                }\r\n                for (let change of e.changes) {\r\n                    const thisPosition = Range.getEndPosition(change.range);\r\n                    if (!position || Position.isBefore(thisPosition, position)) {\r\n                        position = thisPosition;\r\n                    }\r\n                }\r\n            });\r\n            let oldFlags = flags;\r\n            flags |= 2 /* NoAfterUndoStop */;\r\n            let didType = false;\r\n            let typeListener = this.editor.onWillType(() => {\r\n                typeListener.dispose();\r\n                didType = true;\r\n                if (!(oldFlags & 2 /* NoAfterUndoStop */)) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n            });\r\n            tasks.push(item.resolve(cts.token).then(() => {\r\n                if (!item.completion.additionalTextEdits || cts.token.isCancellationRequested) {\r\n                    return false;\r\n                }\r\n                if (position && item.completion.additionalTextEdits.some(edit => Position.isBefore(position, Range.getStartPosition(edit.range)))) {\r\n                    return false;\r\n                }\r\n                if (didType) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n                const scrollState = StableEditorScrollState.capture(this.editor);\r\n                this.editor.executeEdits('suggestController.additionalTextEdits.async', item.completion.additionalTextEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text)));\r\n                scrollState.restoreRelativeVerticalPositionOfCursor(this.editor);\r\n                if (didType || !(oldFlags & 2 /* NoAfterUndoStop */)) {\r\n                    this.editor.pushUndoStop();\r\n                }\r\n                return true;\r\n            }).then(applied => {\r\n                this._logService.trace('[suggest] async resolving of edits DONE (ms, applied?)', sw.elapsed(), applied);\r\n                docListener.dispose();\r\n                typeListener.dispose();\r\n            }));\r\n        }\r\n        let { insertText } = item.completion;\r\n        if (!(item.completion.insertTextRules & 4 /* InsertAsSnippet */)) {\r\n            insertText = SnippetParser.escape(insertText);\r\n        }\r\n        SnippetController2.get(this.editor).insert(insertText, {\r\n            overwriteBefore: info.overwriteBefore,\r\n            overwriteAfter: info.overwriteAfter,\r\n            undoStopBefore: false,\r\n            undoStopAfter: false,\r\n            adjustWhitespace: !(item.completion.insertTextRules & 1 /* KeepWhitespace */),\r\n            clipboardText: event.model.clipboardText,\r\n            overtypingCapturer: this._overtypingCapturer.value\r\n        });\r\n        if (!(flags & 2 /* NoAfterUndoStop */)) {\r\n            this.editor.pushUndoStop();\r\n        }\r\n        if (!item.completion.command) {\r\n            // done\r\n            this.model.cancel();\r\n        }\r\n        else if (item.completion.command.id === TriggerSuggestAction.id) {\r\n            // retigger\r\n            this.model.trigger({ auto: true, shy: false }, true);\r\n        }\r\n        else {\r\n            // exec command, done\r\n            tasks.push(this._commandService.executeCommand(item.completion.command.id, ...(item.completion.command.arguments ? [...item.completion.command.arguments] : [])).catch(onUnexpectedError));\r\n            this.model.cancel();\r\n        }\r\n        if (flags & 4 /* KeepAlternativeSuggestions */) {\r\n            this._alternatives.value.set(event, next => {\r\n                // cancel resolving of additional edits\r\n                cts.cancel();\r\n                // this is not so pretty. when inserting the 'next'\r\n                // suggestion we undo until we are at the state at\r\n                // which we were before inserting the previous suggestion...\r\n                while (model.canUndo()) {\r\n                    if (modelVersionNow !== model.getAlternativeVersionId()) {\r\n                        model.undo();\r\n                    }\r\n                    this._insertSuggestion(next, 1 /* NoBeforeUndoStop */ | 2 /* NoAfterUndoStop */ | (flags & 8 /* AlternativeOverwriteConfig */ ? 8 /* AlternativeOverwriteConfig */ : 0));\r\n                    break;\r\n                }\r\n            });\r\n        }\r\n        this._alertCompletionItem(item);\r\n        // clear only now - after all tasks are done\r\n        Promise.all(tasks).finally(() => {\r\n            this.model.clear();\r\n            cts.dispose();\r\n        });\r\n    }\r\n    getOverwriteInfo(item, toggleMode) {\r\n        assertType(this.editor.hasModel());\r\n        let replace = this.editor.getOption(104 /* suggest */).insertMode === 'replace';\r\n        if (toggleMode) {\r\n            replace = !replace;\r\n        }\r\n        const overwriteBefore = item.position.column - item.editStart.column;\r\n        const overwriteAfter = (replace ? item.editReplaceEnd.column : item.editInsertEnd.column) - item.position.column;\r\n        const columnDelta = this.editor.getPosition().column - item.position.column;\r\n        const suffixDelta = this._lineSuffix.value ? this._lineSuffix.value.delta(this.editor.getPosition()) : 0;\r\n        return {\r\n            overwriteBefore: overwriteBefore + columnDelta,\r\n            overwriteAfter: overwriteAfter + suffixDelta\r\n        };\r\n    }\r\n    _alertCompletionItem(item) {\r\n        if (isNonEmptyArray(item.completion.additionalTextEdits)) {\r\n            let msg = nls.localize('aria.alert.snippet', \"Accepting '{0}' made {1} additional edits\", item.textLabel, item.completion.additionalTextEdits.length);\r\n            alert(msg);\r\n        }\r\n    }\r\n    triggerSuggest(onlyFrom) {\r\n        if (this.editor.hasModel()) {\r\n            this.model.trigger({ auto: false, shy: false }, false, onlyFrom);\r\n            this.editor.revealLine(this.editor.getPosition().lineNumber, 0 /* Smooth */);\r\n            this.editor.focus();\r\n        }\r\n    }\r\n    triggerSuggestAndAcceptBest(arg) {\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        const positionNow = this.editor.getPosition();\r\n        const fallback = () => {\r\n            if (positionNow.equals(this.editor.getPosition())) {\r\n                this._commandService.executeCommand(arg.fallback);\r\n            }\r\n        };\r\n        const makesTextEdit = (item) => {\r\n            if (item.completion.insertTextRules & 4 /* InsertAsSnippet */ || item.completion.additionalTextEdits) {\r\n                // snippet, other editor -> makes edit\r\n                return true;\r\n            }\r\n            const position = this.editor.getPosition();\r\n            const startColumn = item.editStart.column;\r\n            const endColumn = position.column;\r\n            if (endColumn - startColumn !== item.completion.insertText.length) {\r\n                // unequal lengths -> makes edit\r\n                return true;\r\n            }\r\n            const textNow = this.editor.getModel().getValueInRange({\r\n                startLineNumber: position.lineNumber,\r\n                startColumn,\r\n                endLineNumber: position.lineNumber,\r\n                endColumn\r\n            });\r\n            // unequal text -> makes edit\r\n            return textNow !== item.completion.insertText;\r\n        };\r\n        Event.once(this.model.onDidTrigger)(_ => {\r\n            // wait for trigger because only then the cancel-event is trustworthy\r\n            let listener = [];\r\n            Event.any(this.model.onDidTrigger, this.model.onDidCancel)(() => {\r\n                // retrigger or cancel -> try to type default text\r\n                dispose(listener);\r\n                fallback();\r\n            }, undefined, listener);\r\n            this.model.onDidSuggest(({ completionModel }) => {\r\n                dispose(listener);\r\n                if (completionModel.items.length === 0) {\r\n                    fallback();\r\n                    return;\r\n                }\r\n                const index = this._memoryService.select(this.editor.getModel(), this.editor.getPosition(), completionModel.items);\r\n                const item = completionModel.items[index];\r\n                if (!makesTextEdit(item)) {\r\n                    fallback();\r\n                    return;\r\n                }\r\n                this.editor.pushUndoStop();\r\n                this._insertSuggestion({ index, item, model: completionModel }, 4 /* KeepAlternativeSuggestions */ | 1 /* NoBeforeUndoStop */ | 2 /* NoAfterUndoStop */);\r\n            }, undefined, listener);\r\n        });\r\n        this.model.trigger({ auto: false, shy: true });\r\n        this.editor.revealLine(positionNow.lineNumber, 0 /* Smooth */);\r\n        this.editor.focus();\r\n    }\r\n    acceptSelectedSuggestion(keepAlternativeSuggestions, alternativeOverwriteConfig) {\r\n        const item = this.widget.value.getFocusedItem();\r\n        let flags = 0;\r\n        if (keepAlternativeSuggestions) {\r\n            flags |= 4 /* KeepAlternativeSuggestions */;\r\n        }\r\n        if (alternativeOverwriteConfig) {\r\n            flags |= 8 /* AlternativeOverwriteConfig */;\r\n        }\r\n        this._insertSuggestion(item, flags);\r\n    }\r\n    acceptNextSuggestion() {\r\n        this._alternatives.value.next();\r\n    }\r\n    acceptPrevSuggestion() {\r\n        this._alternatives.value.prev();\r\n    }\r\n    cancelSuggestWidget() {\r\n        this.model.cancel();\r\n        this.model.clear();\r\n        this.widget.value.hideWidget();\r\n    }\r\n    selectNextSuggestion() {\r\n        this.widget.value.selectNext();\r\n    }\r\n    selectNextPageSuggestion() {\r\n        this.widget.value.selectNextPage();\r\n    }\r\n    selectLastSuggestion() {\r\n        this.widget.value.selectLast();\r\n    }\r\n    selectPrevSuggestion() {\r\n        this.widget.value.selectPrevious();\r\n    }\r\n    selectPrevPageSuggestion() {\r\n        this.widget.value.selectPreviousPage();\r\n    }\r\n    selectFirstSuggestion() {\r\n        this.widget.value.selectFirst();\r\n    }\r\n    toggleSuggestionDetails() {\r\n        this.widget.value.toggleDetails();\r\n    }\r\n    toggleExplainMode() {\r\n        this.widget.value.toggleExplainMode();\r\n    }\r\n    toggleSuggestionFocus() {\r\n        this.widget.value.toggleDetailsFocus();\r\n    }\r\n    resetWidgetSize() {\r\n        this.widget.value.resetPersistedSize();\r\n    }\r\n    forceRenderingAbove() {\r\n        this.widget.value.forceRenderingAbove();\r\n    }\r\n    stopForceRenderingAbove() {\r\n        this.widget.value.stopForceRenderingAbove();\r\n    }\r\n};\r\nSuggestController.ID = 'editor.contrib.suggestController';\r\nSuggestController = __decorate([\r\n    __param(1, ISuggestMemoryService),\r\n    __param(2, ICommandService),\r\n    __param(3, IContextKeyService),\r\n    __param(4, IInstantiationService),\r\n    __param(5, ILogService)\r\n], SuggestController);\r\nexport { SuggestController };\r\nexport class TriggerSuggestAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: TriggerSuggestAction.id,\r\n            label: nls.localize('suggest.trigger.label', \"Trigger Suggest\"),\r\n            alias: 'Trigger Suggest',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasCompletionItemProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 10 /* Space */,\r\n                secondary: [2048 /* CtrlCmd */ | 39 /* KEY_I */],\r\n                mac: { primary: 256 /* WinCtrl */ | 10 /* Space */, secondary: [512 /* Alt */ | 9 /* Escape */, 2048 /* CtrlCmd */ | 39 /* KEY_I */] },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = SuggestController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        controller.triggerSuggest();\r\n    }\r\n}\r\nTriggerSuggestAction.id = 'editor.action.triggerSuggest';\r\nregisterEditorContribution(SuggestController.ID, SuggestController);\r\nregisterEditorAction(TriggerSuggestAction);\r\nconst weight = 100 /* EditorContrib */ + 90;\r\nconst SuggestCommand = EditorCommand.bindToContribution(SuggestController.get);\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'acceptSelectedSuggestion',\r\n    precondition: SuggestContext.Visible,\r\n    handler(x) {\r\n        x.acceptSelectedSuggestion(true, false);\r\n    }\r\n}));\r\n// normal tab\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'acceptSelectedSuggestion',\r\n    when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\r\n    primary: 2 /* Tab */,\r\n    weight\r\n});\r\n// accept on enter has special rules\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'acceptSelectedSuggestion',\r\n    when: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus, SuggestContext.AcceptSuggestionsOnEnter, SuggestContext.MakesTextEdit),\r\n    primary: 3 /* Enter */,\r\n    weight,\r\n});\r\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\r\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.insert', \"Insert\") },\r\n    group: 'left',\r\n    order: 1,\r\n    when: SuggestContext.HasInsertAndReplaceRange.toNegated()\r\n});\r\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\r\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.insert', \"Insert\") },\r\n    group: 'left',\r\n    order: 1,\r\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert'))\r\n});\r\nMenuRegistry.appendMenuItem(suggestWidgetStatusbarMenu, {\r\n    command: { id: 'acceptSelectedSuggestion', title: nls.localize('accept.replace', \"Replace\") },\r\n    group: 'left',\r\n    order: 1,\r\n    when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace'))\r\n});\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'acceptAlternativeSelectedSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, EditorContextKeys.textInputFocus),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 1024 /* Shift */ | 3 /* Enter */,\r\n        secondary: [1024 /* Shift */ | 2 /* Tab */],\r\n    },\r\n    handler(x) {\r\n        x.acceptSelectedSuggestion(false, true);\r\n    },\r\n    menuOpts: [{\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'left',\r\n            order: 2,\r\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('insert')),\r\n            title: nls.localize('accept.replace', \"Replace\")\r\n        }, {\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'left',\r\n            order: 2,\r\n            when: ContextKeyExpr.and(SuggestContext.HasInsertAndReplaceRange, SuggestContext.InsertMode.isEqualTo('replace')),\r\n            title: nls.localize('accept.insert', \"Insert\")\r\n        }]\r\n}));\r\n// continue to support the old command\r\nCommandsRegistry.registerCommandAlias('acceptSelectedSuggestionOnEnter', 'acceptSelectedSuggestion');\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'hideSuggestWidget',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.cancelSuggestWidget(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectNextSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectNextSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 18 /* DownArrow */,\r\n        secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */],\r\n        mac: { primary: 18 /* DownArrow */, secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */, 256 /* WinCtrl */ | 44 /* KEY_N */] }\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectNextPageSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectNextPageSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 12 /* PageDown */,\r\n        secondary: [2048 /* CtrlCmd */ | 12 /* PageDown */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectLastSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectLastSuggestion()\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectPrevSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectPrevSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 16 /* UpArrow */,\r\n        secondary: [2048 /* CtrlCmd */ | 16 /* UpArrow */],\r\n        mac: { primary: 16 /* UpArrow */, secondary: [2048 /* CtrlCmd */ | 16 /* UpArrow */, 256 /* WinCtrl */ | 46 /* KEY_P */] }\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectPrevPageSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectPrevPageSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 11 /* PageUp */,\r\n        secondary: [2048 /* CtrlCmd */ | 11 /* PageUp */]\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'selectFirstSuggestion',\r\n    precondition: ContextKeyExpr.and(SuggestContext.Visible, SuggestContext.MultipleSuggestions),\r\n    handler: c => c.selectFirstSuggestion()\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleSuggestionDetails',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleSuggestionDetails(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2048 /* CtrlCmd */ | 10 /* Space */,\r\n        mac: { primary: 256 /* WinCtrl */ | 10 /* Space */ }\r\n    },\r\n    menuOpts: [{\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'right',\r\n            order: 1,\r\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible, SuggestContext.CanResolve),\r\n            title: nls.localize('detail.more', \"show less\")\r\n        }, {\r\n            menuId: suggestWidgetStatusbarMenu,\r\n            group: 'right',\r\n            order: 1,\r\n            when: ContextKeyExpr.and(SuggestContext.DetailsVisible.toNegated(), SuggestContext.CanResolve),\r\n            title: nls.localize('detail.less', \"show more\")\r\n        }]\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleExplainMode',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleExplainMode(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */,\r\n        primary: 2048 /* CtrlCmd */ | 85 /* US_SLASH */,\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'toggleSuggestionFocus',\r\n    precondition: SuggestContext.Visible,\r\n    handler: x => x.toggleSuggestionFocus(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 10 /* Space */,\r\n        mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 10 /* Space */ }\r\n    }\r\n}));\r\n//#region tab completions\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertBestCompletion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), WordContextKey.AtEnd, SuggestContext.Visible.toNegated(), SuggestAlternatives.OtherSuggestions.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: (x, arg) => {\r\n        x.triggerSuggestAndAcceptBest(isObject(arg) ? Object.assign({ fallback: 'tab' }, arg) : { fallback: 'tab' });\r\n    },\r\n    kbOpts: {\r\n        weight,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertNextSuggestion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: x => x.acceptNextSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new SuggestCommand({\r\n    id: 'insertPrevSuggestion',\r\n    precondition: ContextKeyExpr.and(EditorContextKeys.textInputFocus, ContextKeyExpr.equals('config.editor.tabCompletion', 'on'), SuggestAlternatives.OtherSuggestions, SuggestContext.Visible.toNegated(), SnippetController2.InSnippetMode.toNegated()),\r\n    handler: x => x.acceptPrevSuggestion(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.textInputFocus,\r\n        primary: 1024 /* Shift */ | 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorAction(class extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.resetSuggestSize',\r\n            label: nls.localize('suggest.reset.label', \"Reset Suggest Widget Size\"),\r\n            alias: 'Reset Suggest Widget Size',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        SuggestController.get(editor).resetWidgetSize();\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { Event } from '../../../base/common/event.js';\r\nimport { toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { BaseGhostTextWidgetModel, GhostText } from './ghostText.js';\r\nimport { inlineCompletionToGhostText } from './inlineCompletionsModel.js';\r\nimport { SnippetParser } from '../snippet/snippetParser.js';\r\nimport { SnippetSession } from '../snippet/snippetSession.js';\r\nimport { SuggestController } from '../suggest/suggestController.js';\r\nexport class SuggestWidgetAdapterModel extends BaseGhostTextWidgetModel {\r\n    constructor(editor) {\r\n        super(editor);\r\n        this.isSuggestWidgetVisible = false;\r\n        this.currentGhostText = undefined;\r\n        this._isActive = false;\r\n        this.isShiftKeyPressed = false;\r\n        this.minReservedLineCount = 0;\r\n        // This delay fixes an suggest widget issue when typing \".\" immediately restarts the suggestion session.\r\n        this.setInactiveDelayed = this._register(new RunOnceScheduler(() => {\r\n            if (!this.isSuggestWidgetVisible) {\r\n                if (this.isActive) {\r\n                    this._isActive = false;\r\n                    this.onDidChangeEmitter.fire();\r\n                }\r\n            }\r\n        }, 100));\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (suggestController) {\r\n            let isBoundToSuggestWidget = false;\r\n            const bindToSuggestWidget = () => {\r\n                if (isBoundToSuggestWidget) {\r\n                    return;\r\n                }\r\n                isBoundToSuggestWidget = true;\r\n                this._register(suggestController.widget.value.onDidShow(() => {\r\n                    this.isSuggestWidgetVisible = true;\r\n                    this._isActive = true;\r\n                    this.updateFromSuggestion();\r\n                }));\r\n                this._register(suggestController.widget.value.onDidHide(() => {\r\n                    this.isSuggestWidgetVisible = false;\r\n                    this.setInactiveDelayed.schedule();\r\n                    this.minReservedLineCount = 0;\r\n                    this.updateFromSuggestion();\r\n                }));\r\n                this._register(suggestController.widget.value.onDidFocus(() => {\r\n                    this.isSuggestWidgetVisible = true;\r\n                    this._isActive = true;\r\n                    this.updateFromSuggestion();\r\n                }));\r\n            };\r\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\r\n                bindToSuggestWidget();\r\n            }));\r\n        }\r\n        this.updateFromSuggestion();\r\n        this._register(toDisposable(() => {\r\n            const suggestController = SuggestController.get(this.editor);\r\n            if (suggestController) {\r\n                suggestController.stopForceRenderingAbove();\r\n            }\r\n        }));\r\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\r\n        this._register(editor.onKeyDown(e => {\r\n            if (e.shiftKey && !this.isShiftKeyPressed) {\r\n                this.isShiftKeyPressed = true;\r\n                this.updateFromSuggestion();\r\n            }\r\n        }));\r\n        this._register(editor.onKeyUp(e => {\r\n            if (e.shiftKey && this.isShiftKeyPressed) {\r\n                this.isShiftKeyPressed = false;\r\n                this.updateFromSuggestion();\r\n            }\r\n        }));\r\n    }\r\n    get isActive() { return this._isActive; }\r\n    setExpanded(expanded) {\r\n        super.setExpanded(expanded);\r\n        this.updateFromSuggestion();\r\n    }\r\n    isSuggestionPreviewEnabled() {\r\n        const suggestOptions = this.editor.getOption(104 /* suggest */);\r\n        return suggestOptions.preview;\r\n    }\r\n    updateFromSuggestion() {\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (!suggestController) {\r\n            this.setCurrentInlineCompletion(undefined);\r\n            return;\r\n        }\r\n        if (!this.isSuggestWidgetVisible) {\r\n            this.setCurrentInlineCompletion(undefined);\r\n            return;\r\n        }\r\n        const focusedItem = suggestController.widget.value.getFocusedItem();\r\n        if (!focusedItem) {\r\n            this.setCurrentInlineCompletion(undefined);\r\n            return;\r\n        }\r\n        // TODO: item.isResolved\r\n        this.setCurrentInlineCompletion(getInlineCompletion(suggestController, this.editor.getPosition(), focusedItem, this.isShiftKeyPressed));\r\n    }\r\n    setCurrentInlineCompletion(completion) {\r\n        const mode = this.editor.getOptions().get(104 /* suggest */).previewMode;\r\n        this.currentGhostText = completion\r\n            ? (inlineCompletionToGhostText(completion, this.editor.getModel(), mode) ||\r\n                // Show an invisible ghost text to reserve space\r\n                new GhostText(completion.range.endLineNumber, [], this.minReservedLineCount)) : undefined;\r\n        if (this.currentGhostText && this.expanded) {\r\n            this.minReservedLineCount = Math.max(this.minReservedLineCount, ...this.currentGhostText.parts.map(p => p.lines.length - 1));\r\n        }\r\n        const suggestController = SuggestController.get(this.editor);\r\n        if (suggestController) {\r\n            if (this.minReservedLineCount >= 1 && this.isSuggestionPreviewEnabled()) {\r\n                suggestController.forceRenderingAbove();\r\n            }\r\n            else {\r\n                suggestController.stopForceRenderingAbove();\r\n            }\r\n        }\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n    get ghostText() {\r\n        return this.isSuggestionPreviewEnabled()\r\n            ? this.currentGhostText\r\n            : undefined;\r\n    }\r\n}\r\nfunction getInlineCompletion(suggestController, position, suggestion, toggleMode) {\r\n    const item = suggestion.item;\r\n    if (Array.isArray(item.completion.additionalTextEdits)) {\r\n        // cannot represent additional text edits\r\n        return {\r\n            text: '',\r\n            range: Range.fromPositions(position, position),\r\n        };\r\n    }\r\n    let { insertText } = item.completion;\r\n    if (item.completion.insertTextRules & 4 /* InsertAsSnippet */) {\r\n        const snippet = new SnippetParser().parse(insertText);\r\n        const model = suggestController.editor.getModel();\r\n        SnippetSession.adjustWhitespace(model, position, snippet, true, true);\r\n        insertText = snippet.toString();\r\n    }\r\n    const info = suggestController.getOverwriteInfo(item, toggleMode);\r\n    return {\r\n        text: insertText,\r\n        range: Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))),\r\n    };\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { InlineCompletionsModel } from './inlineCompletionsModel.js';\r\nimport { SuggestWidgetAdapterModel } from './suggestWidgetAdapterModel.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { createDisposableRef } from './utils.js';\r\nexport class DelegatingModel extends Disposable {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.onDidChangeEmitter = new Emitter();\r\n        this.onDidChange = this.onDidChangeEmitter.event;\r\n        this.hasCachedGhostText = false;\r\n        this.currentModelRef = this._register(new MutableDisposable());\r\n    }\r\n    get targetModel() {\r\n        var _a;\r\n        return (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object;\r\n    }\r\n    setTargetModel(model) {\r\n        this.currentModelRef.clear();\r\n        this.currentModelRef.value = model ? createDisposableRef(model, model.onDidChange(() => {\r\n            this.hasCachedGhostText = false;\r\n            this.onDidChangeEmitter.fire();\r\n        })) : undefined;\r\n        this.hasCachedGhostText = false;\r\n        this.onDidChangeEmitter.fire();\r\n    }\r\n    get ghostText() {\r\n        var _a, _b;\r\n        if (!this.hasCachedGhostText) {\r\n            this.cachedGhostText = (_b = (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === null || _b === void 0 ? void 0 : _b.ghostText;\r\n            this.hasCachedGhostText = true;\r\n        }\r\n        return this.cachedGhostText;\r\n    }\r\n    setExpanded(expanded) {\r\n        var _a;\r\n        (_a = this.targetModel) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\r\n    }\r\n    get expanded() {\r\n        return this.targetModel ? this.targetModel.expanded : false;\r\n    }\r\n    get minReservedLineCount() {\r\n        return this.targetModel ? this.targetModel.minReservedLineCount : 0;\r\n    }\r\n}\r\n/**\r\n * A ghost text model that is both driven by inline completions and the suggest widget.\r\n*/\r\nlet GhostTextModel = class GhostTextModel extends DelegatingModel {\r\n    constructor(editor, commandService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.commandService = commandService;\r\n        this.suggestWidgetAdapterModel = this._register(new SuggestWidgetAdapterModel(this.editor));\r\n        this.inlineCompletionsModel = this._register(new InlineCompletionsModel(this.editor, this.commandService));\r\n        this._register(this.suggestWidgetAdapterModel.onDidChange(() => {\r\n            this.updateModel();\r\n        }));\r\n        this.updateModel();\r\n    }\r\n    get activeInlineCompletionsModel() {\r\n        if (this.targetModel === this.inlineCompletionsModel) {\r\n            return this.inlineCompletionsModel;\r\n        }\r\n        return undefined;\r\n    }\r\n    updateModel() {\r\n        this.setTargetModel(this.suggestWidgetAdapterModel.isActive\r\n            ? this.suggestWidgetAdapterModel\r\n            : this.inlineCompletionsModel);\r\n        this.inlineCompletionsModel.setActive(this.targetModel === this.inlineCompletionsModel);\r\n    }\r\n    shouldShowHoverAt(hoverRange) {\r\n        var _a;\r\n        const ghostText = (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText;\r\n        if (ghostText) {\r\n            return ghostText.parts.some(p => hoverRange.containsPosition(new Position(ghostText.lineNumber, p.column)));\r\n        }\r\n        return false;\r\n    }\r\n    triggerInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.trigger();\r\n    }\r\n    commitInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.commitCurrentSuggestion();\r\n    }\r\n    hideInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hide();\r\n    }\r\n    showNextInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showNext();\r\n    }\r\n    showPreviousInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showPrevious();\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield ((_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\r\n            return result !== undefined ? result : false;\r\n        });\r\n    }\r\n};\r\nGhostTextModel = __decorate([\r\n    __param(1, ICommandService)\r\n], GhostTextModel);\r\nexport { GhostTextModel };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Disposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { GhostTextWidget } from './ghostTextWidget.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { GhostTextModel } from './ghostTextModel.js';\r\nlet GhostTextController = class GhostTextController extends Disposable {\r\n    constructor(editor, instantiationService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.instantiationService = instantiationService;\r\n        this.triggeredExplicitly = false;\r\n        this.activeController = this._register(new MutableDisposable());\r\n        this._register(this.editor.onDidChangeModel(() => {\r\n            this.updateModelController();\r\n        }));\r\n        this._register(this.editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(104 /* suggest */)) {\r\n                this.updateModelController();\r\n            }\r\n            if (e.hasChanged(52 /* inlineSuggest */)) {\r\n                this.updateModelController();\r\n            }\r\n        }));\r\n        this.updateModelController();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(GhostTextController.ID);\r\n    }\r\n    get activeModel() {\r\n        var _a;\r\n        return (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.model;\r\n    }\r\n    // Don't call this method when not neccessary. It will recreate the activeController.\r\n    updateModelController() {\r\n        const suggestOptions = this.editor.getOption(104 /* suggest */);\r\n        const inlineSuggestOptions = this.editor.getOption(52 /* inlineSuggest */);\r\n        this.activeController.value = undefined;\r\n        // ActiveGhostTextController is only created if one of those settings is set or if the inline completions are triggered explicitly.\r\n        this.activeController.value =\r\n            this.editor.hasModel() && (suggestOptions.preview || inlineSuggestOptions.enabled || this.triggeredExplicitly)\r\n                ? this.instantiationService.createInstance(ActiveGhostTextController, this.editor)\r\n                : undefined;\r\n    }\r\n    shouldShowHoverAt(hoverRange) {\r\n        var _a;\r\n        return ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.shouldShowHoverAt(hoverRange)) || false;\r\n    }\r\n    shouldShowHoverAtViewZone(viewZoneId) {\r\n        var _a, _b;\r\n        return ((_b = (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.widget) === null || _b === void 0 ? void 0 : _b.shouldShowHoverAtViewZone(viewZoneId)) || false;\r\n    }\r\n    trigger() {\r\n        var _a;\r\n        this.triggeredExplicitly = true;\r\n        if (!this.activeController.value) {\r\n            this.updateModelController();\r\n        }\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.triggerInlineCompletion();\r\n    }\r\n    commit() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.commitInlineCompletion();\r\n    }\r\n    hide() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hideInlineCompletion();\r\n    }\r\n    showNextInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\r\n    }\r\n    showPreviousInlineCompletion() {\r\n        var _a;\r\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\r\n    }\r\n    hasMultipleInlineCompletions() {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\r\n            return result !== undefined ? result : false;\r\n        });\r\n    }\r\n};\r\nGhostTextController.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, nls.localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\r\nGhostTextController.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, nls.localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\r\nGhostTextController.ID = 'editor.contrib.ghostTextController';\r\nGhostTextController = __decorate([\r\n    __param(1, IInstantiationService)\r\n], GhostTextController);\r\nexport { GhostTextController };\r\nclass GhostTextContextKeys {\r\n    constructor(contextKeyService) {\r\n        this.contextKeyService = contextKeyService;\r\n        this.inlineCompletionVisible = GhostTextController.inlineSuggestionVisible.bindTo(this.contextKeyService);\r\n        this.inlineCompletionSuggestsIndentation = GhostTextController.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\r\n    }\r\n}\r\n/**\r\n * The controller for a text editor with an initialized text model.\r\n * Must be disposed as soon as the model detaches from the editor.\r\n*/\r\nlet ActiveGhostTextController = class ActiveGhostTextController extends Disposable {\r\n    constructor(editor, instantiationService, contextKeyService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.instantiationService = instantiationService;\r\n        this.contextKeyService = contextKeyService;\r\n        this.contextKeys = new GhostTextContextKeys(this.contextKeyService);\r\n        this.model = this._register(this.instantiationService.createInstance(GhostTextModel, this.editor));\r\n        this.widget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, this.model));\r\n        this._register(toDisposable(() => {\r\n            this.contextKeys.inlineCompletionVisible.set(false);\r\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(false);\r\n        }));\r\n        this._register(this.model.onDidChange(() => {\r\n            this.updateContextKeys();\r\n        }));\r\n        this.updateContextKeys();\r\n    }\r\n    updateContextKeys() {\r\n        var _a;\r\n        this.contextKeys.inlineCompletionVisible.set(((_a = this.model.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText) !== undefined);\r\n        const ghostText = this.model.inlineCompletionsModel.ghostText;\r\n        if (ghostText && ghostText.parts.length > 0) {\r\n            const { column, lines } = ghostText.parts[0];\r\n            const suggestionStartsWithWs = lines[0].startsWith(' ') || lines[0].startsWith('\\t');\r\n            const indentationEndColumn = this.editor.getModel().getLineIndentColumn(ghostText.lineNumber);\r\n            const inIndentation = column <= indentationEndColumn;\r\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(!!this.model.activeInlineCompletionsModel\r\n                && suggestionStartsWithWs && inIndentation);\r\n        }\r\n        else {\r\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(false);\r\n        }\r\n    }\r\n};\r\nActiveGhostTextController = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IContextKeyService)\r\n], ActiveGhostTextController);\r\nexport { ActiveGhostTextController };\r\nconst GhostTextCommand = EditorCommand.bindToContribution(GhostTextController.get);\r\nexport const commitInlineSuggestionAction = new GhostTextCommand({\r\n    id: 'editor.action.inlineSuggest.commit',\r\n    precondition: ContextKeyExpr.and(GhostTextController.inlineSuggestionVisible, GhostTextController.inlineSuggestionHasIndentation.toNegated(), EditorContextKeys.tabMovesFocus.toNegated()),\r\n    kbOpts: {\r\n        weight: 200,\r\n        primary: 2 /* Tab */,\r\n    },\r\n    handler(x) {\r\n        x.commit();\r\n        x.editor.focus();\r\n    }\r\n});\r\nregisterEditorCommand(commitInlineSuggestionAction);\r\nregisterEditorCommand(new GhostTextCommand({\r\n    id: 'editor.action.inlineSuggest.hide',\r\n    precondition: GhostTextController.inlineSuggestionVisible,\r\n    kbOpts: {\r\n        weight: 100,\r\n        primary: 9 /* Escape */,\r\n    },\r\n    handler(x) {\r\n        x.hide();\r\n    }\r\n}));\r\nexport class ShowNextInlineSuggestionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: ShowNextInlineSuggestionAction.ID,\r\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\r\n            alias: 'Show Next Inline Suggestion',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\r\n            kbOpts: {\r\n                weight: 100,\r\n                primary: 512 /* Alt */ | 89 /* US_CLOSE_SQUARE_BRACKET */,\r\n            },\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = GhostTextController.get(editor);\r\n            if (controller) {\r\n                controller.showNextInlineCompletion();\r\n                editor.focus();\r\n            }\r\n        });\r\n    }\r\n}\r\nShowNextInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showNext';\r\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: ShowPreviousInlineSuggestionAction.ID,\r\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\r\n            alias: 'Show Previous Inline Suggestion',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\r\n            kbOpts: {\r\n                weight: 100,\r\n                primary: 512 /* Alt */ | 87 /* US_OPEN_SQUARE_BRACKET */,\r\n            },\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = GhostTextController.get(editor);\r\n            if (controller) {\r\n                controller.showPreviousInlineCompletion();\r\n                editor.focus();\r\n            }\r\n        });\r\n    }\r\n}\r\nShowPreviousInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showPrevious';\r\nexport class TriggerInlineSuggestionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inlineSuggest.trigger',\r\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\r\n            alias: 'Trigger Inline Suggestion',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const controller = GhostTextController.get(editor);\r\n            if (controller) {\r\n                controller.trigger();\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(GhostTextController.ID, GhostTextController);\r\nregisterEditorAction(TriggerInlineSuggestionAction);\r\nregisterEditorAction(ShowNextInlineSuggestionAction);\r\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { HoverForeignElementAnchor } from '../hover/hoverTypes.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { commitInlineSuggestionAction, GhostTextController, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction } from './ghostTextController.js';\r\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { IMenuService, MenuId, MenuItemAction } from '../../../platform/actions/common/actions.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nexport class InlineCompletionsHover {\r\n    constructor(owner, range, controller) {\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.controller = controller;\r\n    }\r\n    isValidForHoverAnchor(anchor) {\r\n        return (anchor.type === 1 /* Range */\r\n            && this.range.startColumn <= anchor.range.startColumn\r\n            && this.range.endColumn >= anchor.range.endColumn);\r\n    }\r\n    hasMultipleSuggestions() {\r\n        return this.controller.hasMultipleInlineCompletions();\r\n    }\r\n}\r\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\r\n    constructor(_editor, hover, _commandService, _menuService, _contextKeyService) {\r\n        this._editor = _editor;\r\n        this._commandService = _commandService;\r\n        this._menuService = _menuService;\r\n        this._contextKeyService = _contextKeyService;\r\n    }\r\n    suggestHoverAnchor(mouseEvent) {\r\n        const controller = GhostTextController.get(this._editor);\r\n        if (!controller) {\r\n            return null;\r\n        }\r\n        if (mouseEvent.target.type === 8 /* CONTENT_VIEW_ZONE */) {\r\n            // handle the case where the mouse is over the view zone\r\n            const viewZoneData = mouseEvent.target.detail;\r\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\r\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(viewZoneData.positionBefore || viewZoneData.position, viewZoneData.positionBefore || viewZoneData.position));\r\n            }\r\n        }\r\n        if (mouseEvent.target.type === 7 /* CONTENT_EMPTY */ && mouseEvent.target.range) {\r\n            // handle the case where the mouse is over the empty portion of a line following ghost text\r\n            if (controller.shouldShowHoverAt(mouseEvent.target.range)) {\r\n                return new HoverForeignElementAnchor(1000, this, mouseEvent.target.range);\r\n            }\r\n        }\r\n        if (mouseEvent.target.type === 6 /* CONTENT_TEXT */ && mouseEvent.target.range && mouseEvent.target.detail) {\r\n            // handle the case where the mouse is directly over ghost text\r\n            const mightBeForeignElement = mouseEvent.target.detail.mightBeForeignElement;\r\n            if (mightBeForeignElement && controller.shouldShowHoverAt(mouseEvent.target.range)) {\r\n                return new HoverForeignElementAnchor(1000, this, mouseEvent.target.range);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    computeSync(anchor, lineDecorations) {\r\n        const controller = GhostTextController.get(this._editor);\r\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\r\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\r\n        }\r\n        return [];\r\n    }\r\n    renderHoverParts(hoverParts, fragment, statusBar) {\r\n        const disposableStore = new DisposableStore();\r\n        const menu = disposableStore.add(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\r\n        const previousAction = statusBar.addAction({\r\n            label: nls.localize('showNextInlineSuggestion', \"Next\"),\r\n            commandId: ShowNextInlineSuggestionAction.ID,\r\n            run: () => this._commandService.executeCommand(ShowNextInlineSuggestionAction.ID)\r\n        });\r\n        const nextAction = statusBar.addAction({\r\n            label: nls.localize('showPreviousInlineSuggestion', \"Previous\"),\r\n            commandId: ShowPreviousInlineSuggestionAction.ID,\r\n            run: () => this._commandService.executeCommand(ShowPreviousInlineSuggestionAction.ID)\r\n        });\r\n        statusBar.addAction({\r\n            label: nls.localize('acceptInlineSuggestion', \"Accept\"),\r\n            commandId: commitInlineSuggestionAction.id,\r\n            run: () => this._commandService.executeCommand(commitInlineSuggestionAction.id)\r\n        });\r\n        const actions = [previousAction, nextAction];\r\n        for (const action of actions) {\r\n            action.setEnabled(false);\r\n        }\r\n        hoverParts[0].hasMultipleSuggestions().then(hasMore => {\r\n            for (const action of actions) {\r\n                action.setEnabled(hasMore);\r\n            }\r\n        });\r\n        for (const [_, group] of menu.getActions()) {\r\n            for (const action of group) {\r\n                if (action instanceof MenuItemAction) {\r\n                    statusBar.addAction({\r\n                        label: action.label,\r\n                        commandId: action.item.id,\r\n                        run: () => this._commandService.executeCommand(action.item.id)\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return disposableStore;\r\n    }\r\n};\r\nInlineCompletionsHoverParticipant = __decorate([\r\n    __param(2, ICommandService),\r\n    __param(3, IMenuService),\r\n    __param(4, IContextKeyService)\r\n], InlineCompletionsHoverParticipant);\r\nexport { InlineCompletionsHoverParticipant };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nexport class ColorPickerModel {\r\n    constructor(color, availableColorPresentations, presentationIndex) {\r\n        this.presentationIndex = presentationIndex;\r\n        this._onColorFlushed = new Emitter();\r\n        this.onColorFlushed = this._onColorFlushed.event;\r\n        this._onDidChangeColor = new Emitter();\r\n        this.onDidChangeColor = this._onDidChangeColor.event;\r\n        this._onDidChangePresentation = new Emitter();\r\n        this.onDidChangePresentation = this._onDidChangePresentation.event;\r\n        this.originalColor = color;\r\n        this._color = color;\r\n        this._colorPresentations = availableColorPresentations;\r\n    }\r\n    get color() {\r\n        return this._color;\r\n    }\r\n    set color(color) {\r\n        if (this._color.equals(color)) {\r\n            return;\r\n        }\r\n        this._color = color;\r\n        this._onDidChangeColor.fire(color);\r\n    }\r\n    get presentation() { return this.colorPresentations[this.presentationIndex]; }\r\n    get colorPresentations() {\r\n        return this._colorPresentations;\r\n    }\r\n    set colorPresentations(colorPresentations) {\r\n        this._colorPresentations = colorPresentations;\r\n        if (this.presentationIndex > colorPresentations.length - 1) {\r\n            this.presentationIndex = 0;\r\n        }\r\n        this._onDidChangePresentation.fire(this.presentation);\r\n    }\r\n    selectNextColorPresentation() {\r\n        this.presentationIndex = (this.presentationIndex + 1) % this.colorPresentations.length;\r\n        this.flushColor();\r\n        this._onDidChangePresentation.fire(this.presentation);\r\n    }\r\n    guessColorPresentation(color, originalText) {\r\n        for (let i = 0; i < this.colorPresentations.length; i++) {\r\n            if (originalText.toLowerCase() === this.colorPresentations[i].label) {\r\n                this.presentationIndex = i;\r\n                this._onDidChangePresentation.fire(this.presentation);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    flushColor() {\r\n        this._onColorFlushed.fire(this._color);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './colorPicker.css';\r\nimport { onDidChangeZoomLevel } from '../../../base/browser/browser.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../../base/browser/globalMouseMoveMonitor.js';\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nimport { Color, HSVA, RGBA } from '../../../base/common/color.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { editorHoverBackground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nconst $ = dom.$;\r\nexport class ColorPickerHeader extends Disposable {\r\n    constructor(container, model, themeService) {\r\n        super();\r\n        this.model = model;\r\n        this.domNode = $('.colorpicker-header');\r\n        dom.append(container, this.domNode);\r\n        this.pickedColorNode = dom.append(this.domNode, $('.picked-color'));\r\n        const colorBox = dom.append(this.domNode, $('.original-color'));\r\n        colorBox.style.backgroundColor = Color.Format.CSS.format(this.model.originalColor) || '';\r\n        this.backgroundColor = themeService.getColorTheme().getColor(editorHoverBackground) || Color.white;\r\n        this._register(registerThemingParticipant((theme, collector) => {\r\n            this.backgroundColor = theme.getColor(editorHoverBackground) || Color.white;\r\n        }));\r\n        this._register(dom.addDisposableListener(this.pickedColorNode, dom.EventType.CLICK, () => this.model.selectNextColorPresentation()));\r\n        this._register(dom.addDisposableListener(colorBox, dom.EventType.CLICK, () => {\r\n            this.model.color = this.model.originalColor;\r\n            this.model.flushColor();\r\n        }));\r\n        this._register(model.onDidChangeColor(this.onDidChangeColor, this));\r\n        this._register(model.onDidChangePresentation(this.onDidChangePresentation, this));\r\n        this.pickedColorNode.style.backgroundColor = Color.Format.CSS.format(model.color) || '';\r\n        this.pickedColorNode.classList.toggle('light', model.color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : model.color.isLighter());\r\n    }\r\n    onDidChangeColor(color) {\r\n        this.pickedColorNode.style.backgroundColor = Color.Format.CSS.format(color) || '';\r\n        this.pickedColorNode.classList.toggle('light', color.rgba.a < 0.5 ? this.backgroundColor.isLighter() : color.isLighter());\r\n        this.onDidChangePresentation();\r\n    }\r\n    onDidChangePresentation() {\r\n        this.pickedColorNode.textContent = this.model.presentation ? this.model.presentation.label : '';\r\n    }\r\n}\r\nexport class ColorPickerBody extends Disposable {\r\n    constructor(container, model, pixelRatio) {\r\n        super();\r\n        this.model = model;\r\n        this.pixelRatio = pixelRatio;\r\n        this.domNode = $('.colorpicker-body');\r\n        dom.append(container, this.domNode);\r\n        this.saturationBox = new SaturationBox(this.domNode, this.model, this.pixelRatio);\r\n        this._register(this.saturationBox);\r\n        this._register(this.saturationBox.onDidChange(this.onDidSaturationValueChange, this));\r\n        this._register(this.saturationBox.onColorFlushed(this.flushColor, this));\r\n        this.opacityStrip = new OpacityStrip(this.domNode, this.model);\r\n        this._register(this.opacityStrip);\r\n        this._register(this.opacityStrip.onDidChange(this.onDidOpacityChange, this));\r\n        this._register(this.opacityStrip.onColorFlushed(this.flushColor, this));\r\n        this.hueStrip = new HueStrip(this.domNode, this.model);\r\n        this._register(this.hueStrip);\r\n        this._register(this.hueStrip.onDidChange(this.onDidHueChange, this));\r\n        this._register(this.hueStrip.onColorFlushed(this.flushColor, this));\r\n    }\r\n    flushColor() {\r\n        this.model.flushColor();\r\n    }\r\n    onDidSaturationValueChange({ s, v }) {\r\n        const hsva = this.model.color.hsva;\r\n        this.model.color = new Color(new HSVA(hsva.h, s, v, hsva.a));\r\n    }\r\n    onDidOpacityChange(a) {\r\n        const hsva = this.model.color.hsva;\r\n        this.model.color = new Color(new HSVA(hsva.h, hsva.s, hsva.v, a));\r\n    }\r\n    onDidHueChange(value) {\r\n        const hsva = this.model.color.hsva;\r\n        const h = (1 - value) * 360;\r\n        this.model.color = new Color(new HSVA(h === 360 ? 0 : h, hsva.s, hsva.v, hsva.a));\r\n    }\r\n    layout() {\r\n        this.saturationBox.layout();\r\n        this.opacityStrip.layout();\r\n        this.hueStrip.layout();\r\n    }\r\n}\r\nclass SaturationBox extends Disposable {\r\n    constructor(container, model, pixelRatio) {\r\n        super();\r\n        this.model = model;\r\n        this.pixelRatio = pixelRatio;\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._onColorFlushed = new Emitter();\r\n        this.onColorFlushed = this._onColorFlushed.event;\r\n        this.domNode = $('.saturation-wrap');\r\n        dom.append(container, this.domNode);\r\n        // Create canvas, draw selected color\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.className = 'saturation-box';\r\n        dom.append(this.domNode, this.canvas);\r\n        // Add selection circle\r\n        this.selection = $('.saturation-selection');\r\n        dom.append(this.domNode, this.selection);\r\n        this.layout();\r\n        this._register(dom.addDisposableGenericMouseDownListner(this.domNode, e => this.onMouseDown(e)));\r\n        this._register(this.model.onDidChangeColor(this.onDidChangeColor, this));\r\n        this.monitor = null;\r\n    }\r\n    onMouseDown(e) {\r\n        this.monitor = this._register(new GlobalMouseMoveMonitor());\r\n        const origin = dom.getDomNodePagePosition(this.domNode);\r\n        if (e.target !== this.selection) {\r\n            this.onDidChangePosition(e.offsetX, e.offsetY);\r\n        }\r\n        this.monitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, event => this.onDidChangePosition(event.posx - origin.left, event.posy - origin.top), () => null);\r\n        const mouseUpListener = dom.addDisposableGenericMouseUpListner(document, () => {\r\n            this._onColorFlushed.fire();\r\n            mouseUpListener.dispose();\r\n            if (this.monitor) {\r\n                this.monitor.stopMonitoring(true);\r\n                this.monitor = null;\r\n            }\r\n        }, true);\r\n    }\r\n    onDidChangePosition(left, top) {\r\n        const s = Math.max(0, Math.min(1, left / this.width));\r\n        const v = Math.max(0, Math.min(1, 1 - (top / this.height)));\r\n        this.paintSelection(s, v);\r\n        this._onDidChange.fire({ s, v });\r\n    }\r\n    layout() {\r\n        this.width = this.domNode.offsetWidth;\r\n        this.height = this.domNode.offsetHeight;\r\n        this.canvas.width = this.width * this.pixelRatio;\r\n        this.canvas.height = this.height * this.pixelRatio;\r\n        this.paint();\r\n        const hsva = this.model.color.hsva;\r\n        this.paintSelection(hsva.s, hsva.v);\r\n    }\r\n    paint() {\r\n        const hsva = this.model.color.hsva;\r\n        const saturatedColor = new Color(new HSVA(hsva.h, 1, 1, 1));\r\n        const ctx = this.canvas.getContext('2d');\r\n        const whiteGradient = ctx.createLinearGradient(0, 0, this.canvas.width, 0);\r\n        whiteGradient.addColorStop(0, 'rgba(255, 255, 255, 1)');\r\n        whiteGradient.addColorStop(0.5, 'rgba(255, 255, 255, 0.5)');\r\n        whiteGradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\r\n        const blackGradient = ctx.createLinearGradient(0, 0, 0, this.canvas.height);\r\n        blackGradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\r\n        blackGradient.addColorStop(1, 'rgba(0, 0, 0, 1)');\r\n        ctx.rect(0, 0, this.canvas.width, this.canvas.height);\r\n        ctx.fillStyle = Color.Format.CSS.format(saturatedColor);\r\n        ctx.fill();\r\n        ctx.fillStyle = whiteGradient;\r\n        ctx.fill();\r\n        ctx.fillStyle = blackGradient;\r\n        ctx.fill();\r\n    }\r\n    paintSelection(s, v) {\r\n        this.selection.style.left = `${s * this.width}px`;\r\n        this.selection.style.top = `${this.height - v * this.height}px`;\r\n    }\r\n    onDidChangeColor() {\r\n        if (this.monitor && this.monitor.isMonitoring()) {\r\n            return;\r\n        }\r\n        this.paint();\r\n    }\r\n}\r\nclass Strip extends Disposable {\r\n    constructor(container, model) {\r\n        super();\r\n        this.model = model;\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._onColorFlushed = new Emitter();\r\n        this.onColorFlushed = this._onColorFlushed.event;\r\n        this.domNode = dom.append(container, $('.strip'));\r\n        this.overlay = dom.append(this.domNode, $('.overlay'));\r\n        this.slider = dom.append(this.domNode, $('.slider'));\r\n        this.slider.style.top = `0px`;\r\n        this._register(dom.addDisposableGenericMouseDownListner(this.domNode, e => this.onMouseDown(e)));\r\n        this.layout();\r\n    }\r\n    layout() {\r\n        this.height = this.domNode.offsetHeight - this.slider.offsetHeight;\r\n        const value = this.getValue(this.model.color);\r\n        this.updateSliderPosition(value);\r\n    }\r\n    onMouseDown(e) {\r\n        const monitor = this._register(new GlobalMouseMoveMonitor());\r\n        const origin = dom.getDomNodePagePosition(this.domNode);\r\n        this.domNode.classList.add('grabbing');\r\n        if (e.target !== this.slider) {\r\n            this.onDidChangeTop(e.offsetY);\r\n        }\r\n        monitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, event => this.onDidChangeTop(event.posy - origin.top), () => null);\r\n        const mouseUpListener = dom.addDisposableGenericMouseUpListner(document, () => {\r\n            this._onColorFlushed.fire();\r\n            mouseUpListener.dispose();\r\n            monitor.stopMonitoring(true);\r\n            this.domNode.classList.remove('grabbing');\r\n        }, true);\r\n    }\r\n    onDidChangeTop(top) {\r\n        const value = Math.max(0, Math.min(1, 1 - (top / this.height)));\r\n        this.updateSliderPosition(value);\r\n        this._onDidChange.fire(value);\r\n    }\r\n    updateSliderPosition(value) {\r\n        this.slider.style.top = `${(1 - value) * this.height}px`;\r\n    }\r\n}\r\nclass OpacityStrip extends Strip {\r\n    constructor(container, model) {\r\n        super(container, model);\r\n        this.domNode.classList.add('opacity-strip');\r\n        this._register(model.onDidChangeColor(this.onDidChangeColor, this));\r\n        this.onDidChangeColor(this.model.color);\r\n    }\r\n    onDidChangeColor(color) {\r\n        const { r, g, b } = color.rgba;\r\n        const opaque = new Color(new RGBA(r, g, b, 1));\r\n        const transparent = new Color(new RGBA(r, g, b, 0));\r\n        this.overlay.style.background = `linear-gradient(to bottom, ${opaque} 0%, ${transparent} 100%)`;\r\n    }\r\n    getValue(color) {\r\n        return color.hsva.a;\r\n    }\r\n}\r\nclass HueStrip extends Strip {\r\n    constructor(container, model) {\r\n        super(container, model);\r\n        this.domNode.classList.add('hue-strip');\r\n    }\r\n    getValue(color) {\r\n        return 1 - (color.hsva.h / 360);\r\n    }\r\n}\r\nexport class ColorPickerWidget extends Widget {\r\n    constructor(container, model, pixelRatio, themeService) {\r\n        super();\r\n        this.model = model;\r\n        this.pixelRatio = pixelRatio;\r\n        this._register(onDidChangeZoomLevel(() => this.layout()));\r\n        const element = $('.colorpicker-widget');\r\n        container.appendChild(element);\r\n        const header = new ColorPickerHeader(element, this.model, themeService);\r\n        this.body = new ColorPickerBody(element, this.model, this.pixelRatio);\r\n        this._register(header);\r\n        this._register(this.body);\r\n    }\r\n    layout() {\r\n        this.body.layout();\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { getColorPresentations } from '../colorPicker/color.js';\r\nimport { ColorDetector } from '../colorPicker/colorDetector.js';\r\nimport { Color, RGBA } from '../../../base/common/color.js';\r\nimport { ColorPickerModel } from '../colorPicker/colorPickerModel.js';\r\nimport { ColorPickerWidget } from '../colorPicker/colorPickerWidget.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nexport class ColorHover {\r\n    constructor(owner, range, model, provider) {\r\n        this.owner = owner;\r\n        this.range = range;\r\n        this.model = model;\r\n        this.provider = provider;\r\n        /**\r\n         * Force the hover to always be rendered at this specific range,\r\n         * even in the case of multiple hover parts.\r\n         */\r\n        this.forceShowAtRange = true;\r\n    }\r\n    isValidForHoverAnchor(anchor) {\r\n        return (anchor.type === 1 /* Range */\r\n            && this.range.startColumn <= anchor.range.startColumn\r\n            && this.range.endColumn >= anchor.range.endColumn);\r\n    }\r\n}\r\nlet ColorHoverParticipant = class ColorHoverParticipant {\r\n    constructor(_editor, _hover, _themeService) {\r\n        this._editor = _editor;\r\n        this._hover = _hover;\r\n        this._themeService = _themeService;\r\n    }\r\n    computeSync(anchor, lineDecorations) {\r\n        return [];\r\n    }\r\n    computeAsync(anchor, lineDecorations, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel()) {\r\n                return [];\r\n            }\r\n            const colorDetector = ColorDetector.get(this._editor);\r\n            for (const d of lineDecorations) {\r\n                const colorData = colorDetector.getColorData(d.range.getStartPosition());\r\n                if (colorData) {\r\n                    const colorHover = yield this._createColorHover(this._editor.getModel(), colorData.colorInfo, colorData.provider);\r\n                    return [colorHover];\r\n                }\r\n            }\r\n            return [];\r\n        });\r\n    }\r\n    _createColorHover(editorModel, colorInfo, provider) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const originalText = editorModel.getValueInRange(colorInfo.range);\r\n            const { red, green, blue, alpha } = colorInfo.color;\r\n            const rgba = new RGBA(Math.round(red * 255), Math.round(green * 255), Math.round(blue * 255), alpha);\r\n            const color = new Color(rgba);\r\n            const colorPresentations = yield getColorPresentations(editorModel, colorInfo, provider, CancellationToken.None);\r\n            const model = new ColorPickerModel(color, [], 0);\r\n            model.colorPresentations = colorPresentations || [];\r\n            model.guessColorPresentation(color, originalText);\r\n            return new ColorHover(this, Range.lift(colorInfo.range), model, provider);\r\n        });\r\n    }\r\n    renderHoverParts(hoverParts, fragment, statusBar) {\r\n        if (hoverParts.length === 0 || !this._editor.hasModel()) {\r\n            return Disposable.None;\r\n        }\r\n        const disposables = new DisposableStore();\r\n        const colorHover = hoverParts[0];\r\n        const editorModel = this._editor.getModel();\r\n        const model = colorHover.model;\r\n        const widget = disposables.add(new ColorPickerWidget(fragment, model, this._editor.getOption(126 /* pixelRatio */), this._themeService));\r\n        let range = new Range(colorHover.range.startLineNumber, colorHover.range.startColumn, colorHover.range.endLineNumber, colorHover.range.endColumn);\r\n        const updateEditorModel = () => {\r\n            let textEdits;\r\n            let newRange;\r\n            if (model.presentation.textEdit) {\r\n                textEdits = [model.presentation.textEdit];\r\n                newRange = new Range(model.presentation.textEdit.range.startLineNumber, model.presentation.textEdit.range.startColumn, model.presentation.textEdit.range.endLineNumber, model.presentation.textEdit.range.endColumn);\r\n                const trackedRange = this._editor.getModel()._setTrackedRange(null, newRange, 3 /* GrowsOnlyWhenTypingAfter */);\r\n                this._editor.pushUndoStop();\r\n                this._editor.executeEdits('colorpicker', textEdits);\r\n                newRange = this._editor.getModel()._getTrackedRange(trackedRange) || newRange;\r\n            }\r\n            else {\r\n                textEdits = [{ identifier: null, range, text: model.presentation.label, forceMoveMarkers: false }];\r\n                newRange = range.setEndPosition(range.endLineNumber, range.startColumn + model.presentation.label.length);\r\n                this._editor.pushUndoStop();\r\n                this._editor.executeEdits('colorpicker', textEdits);\r\n            }\r\n            if (model.presentation.additionalTextEdits) {\r\n                textEdits = [...model.presentation.additionalTextEdits];\r\n                this._editor.executeEdits('colorpicker', textEdits);\r\n                this._hover.hide();\r\n            }\r\n            this._editor.pushUndoStop();\r\n            range = newRange;\r\n        };\r\n        const updateColorPresentations = (color) => {\r\n            return getColorPresentations(editorModel, {\r\n                range: range,\r\n                color: {\r\n                    red: color.rgba.r / 255,\r\n                    green: color.rgba.g / 255,\r\n                    blue: color.rgba.b / 255,\r\n                    alpha: color.rgba.a\r\n                }\r\n            }, colorHover.provider, CancellationToken.None).then((colorPresentations) => {\r\n                model.colorPresentations = colorPresentations || [];\r\n            });\r\n        };\r\n        disposables.add(model.onColorFlushed((color) => {\r\n            updateColorPresentations(color).then(updateEditorModel);\r\n        }));\r\n        disposables.add(model.onDidChangeColor(updateColorPresentations));\r\n        this._hover.setColorPicker(widget);\r\n        return disposables;\r\n    }\r\n};\r\nColorHoverParticipant = __decorate([\r\n    __param(2, IThemeService)\r\n], ColorHoverParticipant);\r\nexport { ColorHoverParticipant };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { DisposableStore, Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { TokenizationRegistry } from '../../common/modes.js';\r\nimport { HoverOperation } from './hoverOperation.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { coalesce, flatten } from '../../../base/common/arrays.js';\r\nimport { textLinkForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nimport { HoverWidget, HoverAction } from '../../../base/browser/ui/hover/hoverWidget.js';\r\nimport { MarkerHoverParticipant } from './markerHoverParticipant.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\r\nimport { InlineCompletionsHoverParticipant } from '../inlineCompletions/inlineCompletionsHoverParticipant.js';\r\nimport { ColorHoverParticipant } from './colorHoverParticipant.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { HoverRangeAnchor } from './hoverTypes.js';\r\nconst $ = dom.$;\r\nlet EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\r\n    constructor(_keybindingService) {\r\n        super();\r\n        this._keybindingService = _keybindingService;\r\n        this._hasContent = false;\r\n        this.hoverElement = $('div.hover-row.status-bar');\r\n        this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\r\n    }\r\n    get hasContent() {\r\n        return this._hasContent;\r\n    }\r\n    addAction(actionOptions) {\r\n        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\r\n        const keybindingLabel = keybinding ? keybinding.getLabel() : null;\r\n        this._hasContent = true;\r\n        return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\r\n    }\r\n    append(element) {\r\n        const result = dom.append(this.actionsElement, element);\r\n        this._hasContent = true;\r\n        return result;\r\n    }\r\n};\r\nEditorHoverStatusBar = __decorate([\r\n    __param(0, IKeybindingService)\r\n], EditorHoverStatusBar);\r\nclass ModesContentComputer {\r\n    constructor(editor, _participants) {\r\n        this._participants = _participants;\r\n        this._editor = editor;\r\n        this._result = [];\r\n        this._anchor = null;\r\n    }\r\n    setAnchor(anchor) {\r\n        this._anchor = anchor;\r\n        this._result = [];\r\n    }\r\n    clearResult() {\r\n        this._result = [];\r\n    }\r\n    static _getLineDecorations(editor, anchor) {\r\n        if (anchor.type !== 1 /* Range */) {\r\n            return [];\r\n        }\r\n        const model = editor.getModel();\r\n        const lineNumber = anchor.range.startLineNumber;\r\n        const maxColumn = model.getLineMaxColumn(lineNumber);\r\n        return editor.getLineDecorations(lineNumber).filter((d) => {\r\n            if (d.options.isWholeLine) {\r\n                return true;\r\n            }\r\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\r\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\r\n            if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\r\n                return false;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    computeAsync(token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const anchor = this._anchor;\r\n            if (!this._editor.hasModel() || !anchor) {\r\n                return Promise.resolve([]);\r\n            }\r\n            const lineDecorations = ModesContentComputer._getLineDecorations(this._editor, anchor);\r\n            const allResults = yield Promise.all(this._participants.map(p => this._computeAsync(p, lineDecorations, anchor, token)));\r\n            return flatten(allResults);\r\n        });\r\n    }\r\n    _computeAsync(participant, lineDecorations, anchor, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!participant.computeAsync) {\r\n                return [];\r\n            }\r\n            return participant.computeAsync(anchor, lineDecorations, token);\r\n        });\r\n    }\r\n    computeSync() {\r\n        if (!this._editor.hasModel() || !this._anchor) {\r\n            return [];\r\n        }\r\n        const lineDecorations = ModesContentComputer._getLineDecorations(this._editor, this._anchor);\r\n        let result = [];\r\n        for (const participant of this._participants) {\r\n            result = result.concat(participant.computeSync(this._anchor, lineDecorations));\r\n        }\r\n        return coalesce(result);\r\n    }\r\n    onResult(result, isFromSynchronousComputation) {\r\n        // Always put synchronous messages before asynchronous ones\r\n        if (isFromSynchronousComputation) {\r\n            this._result = result.concat(this._result);\r\n        }\r\n        else {\r\n            this._result = this._result.concat(result);\r\n        }\r\n    }\r\n    getResult() {\r\n        return this._result.slice(0);\r\n    }\r\n    getResultWithLoadingMessage() {\r\n        if (this._anchor) {\r\n            for (const participant of this._participants) {\r\n                if (participant.createLoadingMessage) {\r\n                    const loadingMessage = participant.createLoadingMessage(this._anchor);\r\n                    if (loadingMessage) {\r\n                        return this._result.slice(0).concat([loadingMessage]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this._result.slice(0);\r\n    }\r\n}\r\nlet ModesContentHoverWidget = class ModesContentHoverWidget extends Widget {\r\n    constructor(editor, _hoverVisibleKey, instantiationService, _keybindingService) {\r\n        super();\r\n        this._hoverVisibleKey = _hoverVisibleKey;\r\n        this._keybindingService = _keybindingService;\r\n        // IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = true;\r\n        this._participants = [\r\n            instantiationService.createInstance(ColorHoverParticipant, editor, this),\r\n            instantiationService.createInstance(MarkdownHoverParticipant, editor, this),\r\n            instantiationService.createInstance(InlineCompletionsHoverParticipant, editor, this),\r\n            instantiationService.createInstance(MarkerHoverParticipant, editor, this),\r\n        ];\r\n        this._hover = this._register(new HoverWidget());\r\n        this._id = ModesContentHoverWidget.ID;\r\n        this._editor = editor;\r\n        this._isVisible = false;\r\n        this._stoleFocus = false;\r\n        this._renderDisposable = null;\r\n        this.onkeydown(this._hover.containerDomNode, (e) => {\r\n            if (e.equals(9 /* Escape */)) {\r\n                this.hide();\r\n            }\r\n        });\r\n        this._register(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(40 /* fontInfo */)) {\r\n                this._updateFont();\r\n            }\r\n        }));\r\n        this._editor.onDidLayoutChange(() => this.layout());\r\n        this.layout();\r\n        this._editor.addContentWidget(this);\r\n        this._showAtPosition = null;\r\n        this._showAtRange = null;\r\n        this._stoleFocus = false;\r\n        this._messages = [];\r\n        this._lastAnchor = null;\r\n        this._computer = new ModesContentComputer(this._editor, this._participants);\r\n        this._highlightDecorations = [];\r\n        this._isChangingDecorations = false;\r\n        this._shouldFocus = false;\r\n        this._colorPicker = null;\r\n        this._hoverOperation = new HoverOperation(this._computer, result => this._withResult(result, true), null, result => this._withResult(result, false), this._editor.getOption(50 /* hover */).delay);\r\n        this._register(dom.addStandardDisposableListener(this.getDomNode(), dom.EventType.FOCUS, () => {\r\n            if (this._colorPicker) {\r\n                this.getDomNode().classList.add('colorpicker-hover');\r\n            }\r\n        }));\r\n        this._register(dom.addStandardDisposableListener(this.getDomNode(), dom.EventType.BLUR, () => {\r\n            this.getDomNode().classList.remove('colorpicker-hover');\r\n        }));\r\n        this._register(editor.onDidChangeConfiguration(() => {\r\n            this._hoverOperation.setHoverTime(this._editor.getOption(50 /* hover */).delay);\r\n        }));\r\n        this._register(TokenizationRegistry.onDidChange(() => {\r\n            if (this._isVisible && this._lastAnchor && this._messages.length > 0) {\r\n                this._hover.contentsDomNode.textContent = '';\r\n                this._renderMessages(this._lastAnchor, this._messages);\r\n            }\r\n        }));\r\n    }\r\n    dispose() {\r\n        this._hoverOperation.cancel();\r\n        this._editor.removeContentWidget(this);\r\n        super.dispose();\r\n    }\r\n    getId() {\r\n        return this._id;\r\n    }\r\n    getDomNode() {\r\n        return this._hover.containerDomNode;\r\n    }\r\n    _shouldShowAt(mouseEvent) {\r\n        const targetType = mouseEvent.target.type;\r\n        if (targetType === 6 /* CONTENT_TEXT */) {\r\n            return true;\r\n        }\r\n        if (targetType === 7 /* CONTENT_EMPTY */) {\r\n            const epsilon = this._editor.getOption(40 /* fontInfo */).typicalHalfwidthCharacterWidth / 2;\r\n            const data = mouseEvent.target.detail;\r\n            if (data && !data.isAfterLines && typeof data.horizontalDistanceToText === 'number' && data.horizontalDistanceToText < epsilon) {\r\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    maybeShowAt(mouseEvent) {\r\n        var _a;\r\n        const anchorCandidates = [];\r\n        for (const participant of this._participants) {\r\n            if (typeof participant.suggestHoverAnchor === 'function') {\r\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\r\n                if (anchor) {\r\n                    anchorCandidates.push(anchor);\r\n                }\r\n            }\r\n        }\r\n        if (this._shouldShowAt(mouseEvent) && mouseEvent.target.range) {\r\n            // TODO@rebornix. This should be removed if we move Color Picker out of Hover component.\r\n            // Check if mouse is hovering on color decorator\r\n            const hoverOnColorDecorator = [...((_a = mouseEvent.target.element) === null || _a === void 0 ? void 0 : _a.classList.values()) || []].find(className => className.startsWith('ced-colorBox'))\r\n                && mouseEvent.target.range.endColumn - mouseEvent.target.range.startColumn === 1;\r\n            const showAtRange = (hoverOnColorDecorator // shift the mouse focus by one as color decorator is a `before` decoration of next character.\r\n                ? new Range(mouseEvent.target.range.startLineNumber, mouseEvent.target.range.startColumn + 1, mouseEvent.target.range.endLineNumber, mouseEvent.target.range.endColumn + 1)\r\n                : mouseEvent.target.range);\r\n            anchorCandidates.push(new HoverRangeAnchor(0, showAtRange));\r\n        }\r\n        if (anchorCandidates.length === 0) {\r\n            return false;\r\n        }\r\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\r\n        this._startShowingAt(anchorCandidates[0], 0 /* Delayed */, false);\r\n        return true;\r\n    }\r\n    _showAt(position, range, focus) {\r\n        // Position has changed\r\n        this._showAtPosition = position;\r\n        this._showAtRange = range;\r\n        this._hoverVisibleKey.set(true);\r\n        this._isVisible = true;\r\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\r\n        this._editor.layoutContentWidget(this);\r\n        // Simply force a synchronous render on the editor\r\n        // such that the widget does not really render with left = '0px'\r\n        this._editor.render();\r\n        this._stoleFocus = focus;\r\n        if (focus) {\r\n            this._hover.containerDomNode.focus();\r\n        }\r\n    }\r\n    getPosition() {\r\n        if (this._isVisible) {\r\n            return {\r\n                position: this._showAtPosition,\r\n                range: this._showAtRange,\r\n                preference: [\r\n                    1 /* ABOVE */,\r\n                    2 /* BELOW */\r\n                ]\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    _updateFont() {\r\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\r\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\r\n    }\r\n    _updateContents(node) {\r\n        this._hover.contentsDomNode.textContent = '';\r\n        this._hover.contentsDomNode.appendChild(node);\r\n        this._updateFont();\r\n        this._editor.layoutContentWidget(this);\r\n        this._hover.onContentsChanged();\r\n    }\r\n    layout() {\r\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\r\n        const { fontSize, lineHeight } = this._editor.getOption(40 /* fontInfo */);\r\n        this._hover.contentsDomNode.style.fontSize = `${fontSize}px`;\r\n        this._hover.contentsDomNode.style.lineHeight = `${lineHeight}px`;\r\n        this._hover.contentsDomNode.style.maxHeight = `${height}px`;\r\n        this._hover.contentsDomNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;\r\n    }\r\n    onModelDecorationsChanged() {\r\n        if (this._isChangingDecorations) {\r\n            return;\r\n        }\r\n        if (this._isVisible) {\r\n            // The decorations have changed and the hover is visible,\r\n            // we need to recompute the displayed text\r\n            this._hoverOperation.cancel();\r\n            this._computer.clearResult();\r\n            if (!this._colorPicker) { // TODO@Michel ensure that displayed text for other decorations is computed even if color picker is in place\r\n                this._hoverOperation.start(0 /* Delayed */);\r\n            }\r\n        }\r\n    }\r\n    startShowingAtRange(range, mode, focus) {\r\n        this._startShowingAt(new HoverRangeAnchor(0, range), mode, focus);\r\n    }\r\n    _startShowingAt(anchor, mode, focus) {\r\n        if (this._lastAnchor && this._lastAnchor.equals(anchor)) {\r\n            // We have to show the widget at the exact same range as before, so no work is needed\r\n            return;\r\n        }\r\n        this._hoverOperation.cancel();\r\n        if (this._isVisible) {\r\n            // The range might have changed, but the hover is visible\r\n            // Instead of hiding it completely, filter out messages that are still in the new range and\r\n            // kick off a new computation\r\n            if (!this._showAtPosition || !this._lastAnchor || !anchor.canAdoptVisibleHover(this._lastAnchor, this._showAtPosition)) {\r\n                this.hide();\r\n            }\r\n            else {\r\n                const filteredMessages = this._messages.filter((m) => m.isValidForHoverAnchor(anchor));\r\n                if (filteredMessages.length === 0) {\r\n                    this.hide();\r\n                }\r\n                else if (filteredMessages.length === this._messages.length) {\r\n                    // no change\r\n                    return;\r\n                }\r\n                else {\r\n                    this._renderMessages(anchor, filteredMessages);\r\n                }\r\n            }\r\n        }\r\n        this._lastAnchor = anchor;\r\n        this._computer.setAnchor(anchor);\r\n        this._shouldFocus = focus;\r\n        this._hoverOperation.start(mode);\r\n    }\r\n    hide() {\r\n        this._lastAnchor = null;\r\n        this._hoverOperation.cancel();\r\n        if (this._isVisible) {\r\n            setTimeout(() => {\r\n                // Give commands a chance to see the key\r\n                if (!this._isVisible) {\r\n                    this._hoverVisibleKey.set(false);\r\n                }\r\n            }, 0);\r\n            this._isVisible = false;\r\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\r\n            this._editor.layoutContentWidget(this);\r\n            if (this._stoleFocus) {\r\n                this._editor.focus();\r\n            }\r\n        }\r\n        this._isChangingDecorations = true;\r\n        this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, []);\r\n        this._isChangingDecorations = false;\r\n        if (this._renderDisposable) {\r\n            this._renderDisposable.dispose();\r\n            this._renderDisposable = null;\r\n        }\r\n        this._colorPicker = null;\r\n    }\r\n    isColorPickerVisible() {\r\n        return !!this._colorPicker;\r\n    }\r\n    setColorPicker(widget) {\r\n        this._colorPicker = widget;\r\n    }\r\n    onContentsChanged() {\r\n        this._hover.onContentsChanged();\r\n    }\r\n    _withResult(result, complete) {\r\n        this._messages = result;\r\n        if (this._lastAnchor && this._messages.length > 0) {\r\n            this._renderMessages(this._lastAnchor, this._messages);\r\n        }\r\n        else if (complete) {\r\n            this.hide();\r\n        }\r\n    }\r\n    _renderMessages(anchor, messages) {\r\n        if (this._renderDisposable) {\r\n            this._renderDisposable.dispose();\r\n            this._renderDisposable = null;\r\n        }\r\n        this._colorPicker = null; // TODO: TypeScript thinks this is always null\r\n        // update column from which to show\r\n        let renderColumn = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\r\n        let highlightRange = messages[0].range;\r\n        let forceShowAtRange = null;\r\n        let fragment = document.createDocumentFragment();\r\n        const disposables = new DisposableStore();\r\n        const hoverParts = new Map();\r\n        for (const msg of messages) {\r\n            renderColumn = Math.min(renderColumn, msg.range.startColumn);\r\n            highlightRange = Range.plusRange(highlightRange, msg.range);\r\n            if (msg.forceShowAtRange) {\r\n                forceShowAtRange = msg.range;\r\n            }\r\n            if (!hoverParts.has(msg.owner)) {\r\n                hoverParts.set(msg.owner, []);\r\n            }\r\n            const dest = hoverParts.get(msg.owner);\r\n            dest.push(msg);\r\n        }\r\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\r\n        for (const [participant, participantHoverParts] of hoverParts) {\r\n            disposables.add(participant.renderHoverParts(participantHoverParts, fragment, statusBar));\r\n        }\r\n        if (statusBar.hasContent) {\r\n            fragment.appendChild(statusBar.hoverElement);\r\n        }\r\n        this._renderDisposable = disposables;\r\n        // show\r\n        if (fragment.hasChildNodes()) {\r\n            if (forceShowAtRange) {\r\n                this._showAt(forceShowAtRange.getStartPosition(), forceShowAtRange, this._shouldFocus);\r\n            }\r\n            else {\r\n                this._showAt(new Position(anchor.range.startLineNumber, renderColumn), highlightRange, this._shouldFocus);\r\n            }\r\n            this._updateContents(fragment);\r\n        }\r\n        if (this._colorPicker) {\r\n            this._colorPicker.layout();\r\n        }\r\n        this._isChangingDecorations = true;\r\n        this._highlightDecorations = this._editor.deltaDecorations(this._highlightDecorations, highlightRange ? [{\r\n                range: highlightRange,\r\n                options: ModesContentHoverWidget._DECORATION_OPTIONS\r\n            }] : []);\r\n        this._isChangingDecorations = false;\r\n    }\r\n};\r\nModesContentHoverWidget.ID = 'editor.contrib.modesContentHoverWidget';\r\nModesContentHoverWidget._DECORATION_OPTIONS = ModelDecorationOptions.register({\r\n    description: 'content-hover-highlight',\r\n    className: 'hoverHighlight'\r\n});\r\nModesContentHoverWidget = __decorate([\r\n    __param(2, IInstantiationService),\r\n    __param(3, IKeybindingService)\r\n], ModesContentHoverWidget);\r\nexport { ModesContentHoverWidget };\r\nregisterThemingParticipant((theme, collector) => {\r\n    const linkFg = theme.getColor(textLinkForeground);\r\n    if (linkFg) {\r\n        collector.addRule(`.monaco-hover .hover-contents a.code-link span:hover { color: ${linkFg}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nexport class GlyphHoverWidget extends Widget {\r\n    constructor(id, editor) {\r\n        super();\r\n        this._id = id;\r\n        this._editor = editor;\r\n        this._isVisible = false;\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = 'monaco-hover hidden';\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        this._domNode.setAttribute('role', 'tooltip');\r\n        this._showAtLineNumber = -1;\r\n        this._register(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(40 /* fontInfo */)) {\r\n                this.updateFont();\r\n            }\r\n        }));\r\n        this._editor.addOverlayWidget(this);\r\n    }\r\n    get isVisible() {\r\n        return this._isVisible;\r\n    }\r\n    set isVisible(value) {\r\n        this._isVisible = value;\r\n        this._domNode.classList.toggle('hidden', !this._isVisible);\r\n    }\r\n    getId() {\r\n        return this._id;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    showAt(lineNumber) {\r\n        this._showAtLineNumber = lineNumber;\r\n        if (!this.isVisible) {\r\n            this.isVisible = true;\r\n        }\r\n        const editorLayout = this._editor.getLayoutInfo();\r\n        const topForLineNumber = this._editor.getTopForLineNumber(this._showAtLineNumber);\r\n        const editorScrollTop = this._editor.getScrollTop();\r\n        const lineHeight = this._editor.getOption(56 /* lineHeight */);\r\n        const nodeHeight = this._domNode.clientHeight;\r\n        const top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\r\n        this._domNode.style.left = `${editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth}px`;\r\n        this._domNode.style.top = `${Math.max(Math.round(top), 0)}px`;\r\n    }\r\n    hide() {\r\n        if (!this.isVisible) {\r\n            return;\r\n        }\r\n        this.isVisible = false;\r\n    }\r\n    getPosition() {\r\n        return null;\r\n    }\r\n    dispose() {\r\n        this._editor.removeOverlayWidget(this);\r\n        super.dispose();\r\n    }\r\n    updateFont() {\r\n        const codeTags = Array.prototype.slice.call(this._domNode.getElementsByTagName('code'));\r\n        const codeClasses = Array.prototype.slice.call(this._domNode.getElementsByClassName('code'));\r\n        [...codeTags, ...codeClasses].forEach(node => this._editor.applyFontInfo(node));\r\n    }\r\n    updateContents(node) {\r\n        this._domNode.textContent = '';\r\n        this._domNode.appendChild(node);\r\n        this.updateFont();\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { $ } from '../../../base/browser/dom.js';\r\nimport { isEmptyMarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { HoverOperation } from './hoverOperation.js';\r\nimport { GlyphHoverWidget } from './hoverWidgets.js';\r\nimport { MarkdownRenderer } from '../../browser/core/markdownRenderer.js';\r\nimport { NullOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { asArray } from '../../../base/common/arrays.js';\r\nclass MarginComputer {\r\n    constructor(editor) {\r\n        this._editor = editor;\r\n        this._lineNumber = -1;\r\n        this._result = [];\r\n    }\r\n    setLineNumber(lineNumber) {\r\n        this._lineNumber = lineNumber;\r\n        this._result = [];\r\n    }\r\n    clearResult() {\r\n        this._result = [];\r\n    }\r\n    computeSync() {\r\n        const toHoverMessage = (contents) => {\r\n            return {\r\n                value: contents\r\n            };\r\n        };\r\n        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\r\n        const result = [];\r\n        if (!lineDecorations) {\r\n            return result;\r\n        }\r\n        for (const d of lineDecorations) {\r\n            if (!d.options.glyphMarginClassName) {\r\n                continue;\r\n            }\r\n            const hoverMessage = d.options.glyphMarginHoverMessage;\r\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\r\n                continue;\r\n            }\r\n            result.push(...asArray(hoverMessage).map(toHoverMessage));\r\n        }\r\n        return result;\r\n    }\r\n    onResult(result, isFromSynchronousComputation) {\r\n        this._result = this._result.concat(result);\r\n    }\r\n    getResult() {\r\n        return this._result;\r\n    }\r\n    getResultWithLoadingMessage() {\r\n        return this.getResult();\r\n    }\r\n}\r\nexport class ModesGlyphHoverWidget extends GlyphHoverWidget {\r\n    constructor(editor, modeService, openerService = NullOpenerService) {\r\n        super(ModesGlyphHoverWidget.ID, editor);\r\n        this._renderDisposeables = this._register(new DisposableStore());\r\n        this._messages = [];\r\n        this._lastLineNumber = -1;\r\n        this._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, modeService, openerService));\r\n        this._computer = new MarginComputer(this._editor);\r\n        this._hoverOperation = new HoverOperation(this._computer, (result) => this._withResult(result), undefined, (result) => this._withResult(result), 300);\r\n    }\r\n    dispose() {\r\n        this._hoverOperation.cancel();\r\n        super.dispose();\r\n    }\r\n    onModelDecorationsChanged() {\r\n        if (this.isVisible) {\r\n            // The decorations have changed and the hover is visible,\r\n            // we need to recompute the displayed text\r\n            this._hoverOperation.cancel();\r\n            this._computer.clearResult();\r\n            this._hoverOperation.start(0 /* Delayed */);\r\n        }\r\n    }\r\n    startShowingAt(lineNumber) {\r\n        if (this._lastLineNumber === lineNumber) {\r\n            // We have to show the widget at the exact same line number as before, so no work is needed\r\n            return;\r\n        }\r\n        this._hoverOperation.cancel();\r\n        this.hide();\r\n        this._lastLineNumber = lineNumber;\r\n        this._computer.setLineNumber(lineNumber);\r\n        this._hoverOperation.start(0 /* Delayed */);\r\n    }\r\n    hide() {\r\n        this._lastLineNumber = -1;\r\n        this._hoverOperation.cancel();\r\n        super.hide();\r\n    }\r\n    _withResult(result) {\r\n        this._messages = result;\r\n        if (this._messages.length > 0) {\r\n            this._renderMessages(this._lastLineNumber, this._messages);\r\n        }\r\n        else {\r\n            this.hide();\r\n        }\r\n    }\r\n    _renderMessages(lineNumber, messages) {\r\n        this._renderDisposeables.clear();\r\n        const fragment = document.createDocumentFragment();\r\n        for (const msg of messages) {\r\n            const renderedContents = this._markdownRenderer.render(msg.value);\r\n            this._renderDisposeables.add(renderedContents);\r\n            fragment.appendChild($('div.hover-row', undefined, renderedContents.element));\r\n        }\r\n        this.updateContents(fragment);\r\n        this.showAt(lineNumber);\r\n    }\r\n}\r\nModesGlyphHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './goToDefinitionAtPosition.css';\r\nimport * as nls from '../../../../nls.js';\r\nimport { createCancelablePromise } from '../../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\r\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\r\nimport { IModeService } from '../../../common/services/modeService.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { DefinitionProviderRegistry } from '../../../common/modes.js';\r\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { getDefinitionsAtPosition } from '../goToSymbol.js';\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { ITextModelService } from '../../../common/services/resolverService.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport { editorActiveLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { EditorState } from '../../../browser/core/editorState.js';\r\nimport { DefinitionAction } from '../goToCommands.js';\r\nimport { ClickLinkGesture } from './clickLinkGesture.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\r\nimport { PeekContext } from '../../peekView/peekView.js';\r\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\r\nlet GotoDefinitionAtPositionEditorContribution = class GotoDefinitionAtPositionEditorContribution {\r\n    constructor(editor, textModelResolverService, modeService) {\r\n        this.textModelResolverService = textModelResolverService;\r\n        this.modeService = modeService;\r\n        this.toUnhook = new DisposableStore();\r\n        this.toUnhookForKeyboard = new DisposableStore();\r\n        this.linkDecorations = [];\r\n        this.currentWordAtPosition = null;\r\n        this.previousPromise = null;\r\n        this.editor = editor;\r\n        let linkGesture = new ClickLinkGesture(editor);\r\n        this.toUnhook.add(linkGesture);\r\n        this.toUnhook.add(linkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\r\n            this.startFindDefinitionFromMouse(mouseEvent, withNullAsUndefined(keyboardEvent));\r\n        }));\r\n        this.toUnhook.add(linkGesture.onExecute((mouseEvent) => {\r\n            if (this.isEnabled(mouseEvent)) {\r\n                this.gotoDefinition(mouseEvent.target.position, mouseEvent.hasSideBySideModifier).then(() => {\r\n                    this.removeLinkDecorations();\r\n                }, (error) => {\r\n                    this.removeLinkDecorations();\r\n                    onUnexpectedError(error);\r\n                });\r\n            }\r\n        }));\r\n        this.toUnhook.add(linkGesture.onCancel(() => {\r\n            this.removeLinkDecorations();\r\n            this.currentWordAtPosition = null;\r\n        }));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(GotoDefinitionAtPositionEditorContribution.ID);\r\n    }\r\n    startFindDefinitionFromCursor(position) {\r\n        // For issue: https://github.com/microsoft/vscode/issues/46257\r\n        // equivalent to mouse move with meta/ctrl key\r\n        // First find the definition and add decorations\r\n        // to the editor to be shown with the content hover widget\r\n        return this.startFindDefinition(position).then(() => {\r\n            // Add listeners for editor cursor move and key down events\r\n            // Dismiss the \"extended\" editor decorations when the user hides\r\n            // the hover widget. There is no event for the widget itself so these\r\n            // serve as a best effort. After removing the link decorations, the hover\r\n            // widget is clean and will only show declarations per next request.\r\n            this.toUnhookForKeyboard.add(this.editor.onDidChangeCursorPosition(() => {\r\n                this.currentWordAtPosition = null;\r\n                this.removeLinkDecorations();\r\n                this.toUnhookForKeyboard.clear();\r\n            }));\r\n            this.toUnhookForKeyboard.add(this.editor.onKeyDown((e) => {\r\n                if (e) {\r\n                    this.currentWordAtPosition = null;\r\n                    this.removeLinkDecorations();\r\n                    this.toUnhookForKeyboard.clear();\r\n                }\r\n            }));\r\n        });\r\n    }\r\n    startFindDefinitionFromMouse(mouseEvent, withKey) {\r\n        // check if we are active and on a content widget\r\n        if (mouseEvent.target.type === 9 /* CONTENT_WIDGET */ && this.linkDecorations.length > 0) {\r\n            return;\r\n        }\r\n        if (!this.editor.hasModel() || !this.isEnabled(mouseEvent, withKey)) {\r\n            this.currentWordAtPosition = null;\r\n            this.removeLinkDecorations();\r\n            return;\r\n        }\r\n        const position = mouseEvent.target.position;\r\n        this.startFindDefinition(position);\r\n    }\r\n    startFindDefinition(position) {\r\n        var _a;\r\n        // Dispose listeners for updating decorations when using keyboard to show definition hover\r\n        this.toUnhookForKeyboard.clear();\r\n        // Find word at mouse position\r\n        const word = position ? (_a = this.editor.getModel()) === null || _a === void 0 ? void 0 : _a.getWordAtPosition(position) : null;\r\n        if (!word) {\r\n            this.currentWordAtPosition = null;\r\n            this.removeLinkDecorations();\r\n            return Promise.resolve(0);\r\n        }\r\n        // Return early if word at position is still the same\r\n        if (this.currentWordAtPosition && this.currentWordAtPosition.startColumn === word.startColumn && this.currentWordAtPosition.endColumn === word.endColumn && this.currentWordAtPosition.word === word.word) {\r\n            return Promise.resolve(0);\r\n        }\r\n        this.currentWordAtPosition = word;\r\n        // Find definition and decorate word if found\r\n        let state = new EditorState(this.editor, 4 /* Position */ | 1 /* Value */ | 2 /* Selection */ | 8 /* Scroll */);\r\n        if (this.previousPromise) {\r\n            this.previousPromise.cancel();\r\n            this.previousPromise = null;\r\n        }\r\n        this.previousPromise = createCancelablePromise(token => this.findDefinition(position, token));\r\n        return this.previousPromise.then(results => {\r\n            if (!results || !results.length || !state.validate(this.editor)) {\r\n                this.removeLinkDecorations();\r\n                return;\r\n            }\r\n            // Multiple results\r\n            if (results.length > 1) {\r\n                this.addDecoration(new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn), new MarkdownString().appendText(nls.localize('multipleResults', \"Click to show {0} definitions.\", results.length)));\r\n            }\r\n            // Single result\r\n            else {\r\n                let result = results[0];\r\n                if (!result.uri) {\r\n                    return;\r\n                }\r\n                this.textModelResolverService.createModelReference(result.uri).then(ref => {\r\n                    if (!ref.object || !ref.object.textEditorModel) {\r\n                        ref.dispose();\r\n                        return;\r\n                    }\r\n                    const { object: { textEditorModel } } = ref;\r\n                    const { startLineNumber } = result.range;\r\n                    if (startLineNumber < 1 || startLineNumber > textEditorModel.getLineCount()) {\r\n                        // invalid range\r\n                        ref.dispose();\r\n                        return;\r\n                    }\r\n                    const previewValue = this.getPreviewValue(textEditorModel, startLineNumber, result);\r\n                    let wordRange;\r\n                    if (result.originSelectionRange) {\r\n                        wordRange = Range.lift(result.originSelectionRange);\r\n                    }\r\n                    else {\r\n                        wordRange = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\r\n                    }\r\n                    const modeId = this.modeService.getModeIdByFilepathOrFirstLine(textEditorModel.uri);\r\n                    this.addDecoration(wordRange, new MarkdownString().appendCodeblock(modeId ? modeId : '', previewValue));\r\n                    ref.dispose();\r\n                });\r\n            }\r\n        }).then(undefined, onUnexpectedError);\r\n    }\r\n    getPreviewValue(textEditorModel, startLineNumber, result) {\r\n        let rangeToUse = result.targetSelectionRange ? result.range : this.getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber);\r\n        const numberOfLinesInRange = rangeToUse.endLineNumber - rangeToUse.startLineNumber;\r\n        if (numberOfLinesInRange >= GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES) {\r\n            rangeToUse = this.getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber);\r\n        }\r\n        const previewValue = this.stripIndentationFromPreviewRange(textEditorModel, startLineNumber, rangeToUse);\r\n        return previewValue;\r\n    }\r\n    stripIndentationFromPreviewRange(textEditorModel, startLineNumber, previewRange) {\r\n        const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\r\n        let minIndent = startIndent;\r\n        for (let endLineNumber = startLineNumber + 1; endLineNumber < previewRange.endLineNumber; endLineNumber++) {\r\n            const endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\r\n            minIndent = Math.min(minIndent, endIndent);\r\n        }\r\n        const previewValue = textEditorModel.getValueInRange(previewRange).replace(new RegExp(`^\\\\s{${minIndent - 1}}`, 'gm'), '').trim();\r\n        return previewValue;\r\n    }\r\n    getPreviewRangeBasedOnIndentation(textEditorModel, startLineNumber) {\r\n        const startIndent = textEditorModel.getLineFirstNonWhitespaceColumn(startLineNumber);\r\n        const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);\r\n        let endLineNumber = startLineNumber + 1;\r\n        for (; endLineNumber < maxLineNumber; endLineNumber++) {\r\n            let endIndent = textEditorModel.getLineFirstNonWhitespaceColumn(endLineNumber);\r\n            if (startIndent === endIndent) {\r\n                break;\r\n            }\r\n        }\r\n        return new Range(startLineNumber, 1, endLineNumber + 1, 1);\r\n    }\r\n    getPreviewRangeBasedOnBrackets(textEditorModel, startLineNumber) {\r\n        const maxLineNumber = Math.min(textEditorModel.getLineCount(), startLineNumber + GotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES);\r\n        const brackets = [];\r\n        let ignoreFirstEmpty = true;\r\n        let currentBracket = textEditorModel.findNextBracket(new Position(startLineNumber, 1));\r\n        while (currentBracket !== null) {\r\n            if (brackets.length === 0) {\r\n                brackets.push(currentBracket);\r\n            }\r\n            else {\r\n                const lastBracket = brackets[brackets.length - 1];\r\n                if (lastBracket.open[0] === currentBracket.open[0] && lastBracket.isOpen && !currentBracket.isOpen) {\r\n                    brackets.pop();\r\n                }\r\n                else {\r\n                    brackets.push(currentBracket);\r\n                }\r\n                if (brackets.length === 0) {\r\n                    if (ignoreFirstEmpty) {\r\n                        ignoreFirstEmpty = false;\r\n                    }\r\n                    else {\r\n                        return new Range(startLineNumber, 1, currentBracket.range.endLineNumber + 1, 1);\r\n                    }\r\n                }\r\n            }\r\n            const maxColumn = textEditorModel.getLineMaxColumn(startLineNumber);\r\n            let nextLineNumber = currentBracket.range.endLineNumber;\r\n            let nextColumn = currentBracket.range.endColumn;\r\n            if (maxColumn === currentBracket.range.endColumn) {\r\n                nextLineNumber++;\r\n                nextColumn = 1;\r\n            }\r\n            if (nextLineNumber > maxLineNumber) {\r\n                return new Range(startLineNumber, 1, maxLineNumber + 1, 1);\r\n            }\r\n            currentBracket = textEditorModel.findNextBracket(new Position(nextLineNumber, nextColumn));\r\n        }\r\n        return new Range(startLineNumber, 1, maxLineNumber + 1, 1);\r\n    }\r\n    addDecoration(range, hoverMessage) {\r\n        const newDecorations = {\r\n            range: range,\r\n            options: {\r\n                description: 'goto-definition-link',\r\n                inlineClassName: 'goto-definition-link',\r\n                hoverMessage\r\n            }\r\n        };\r\n        this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, [newDecorations]);\r\n    }\r\n    removeLinkDecorations() {\r\n        if (this.linkDecorations.length > 0) {\r\n            this.linkDecorations = this.editor.deltaDecorations(this.linkDecorations, []);\r\n        }\r\n    }\r\n    isEnabled(mouseEvent, withKey) {\r\n        return this.editor.hasModel() &&\r\n            mouseEvent.isNoneOrSingleMouseDown &&\r\n            (mouseEvent.target.type === 6 /* CONTENT_TEXT */) &&\r\n            (mouseEvent.hasTriggerModifier || (withKey ? withKey.keyCodeIsTriggerKey : false)) &&\r\n            DefinitionProviderRegistry.has(this.editor.getModel());\r\n    }\r\n    findDefinition(position, token) {\r\n        const model = this.editor.getModel();\r\n        if (!model) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return getDefinitionsAtPosition(model, position, token);\r\n    }\r\n    gotoDefinition(position, openToSide) {\r\n        this.editor.setPosition(position);\r\n        return this.editor.invokeWithinContext((accessor) => {\r\n            const canPeek = !openToSide && this.editor.getOption(75 /* definitionLinkOpensInPeek */) && !this.isInPeekEditor(accessor);\r\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { alias: '', label: '', id: '', precondition: undefined });\r\n            return action.run(accessor, this.editor);\r\n        });\r\n    }\r\n    isInPeekEditor(accessor) {\r\n        const contextKeyService = accessor.get(IContextKeyService);\r\n        return PeekContext.inPeekEditor.getValue(contextKeyService);\r\n    }\r\n    dispose() {\r\n        this.toUnhook.dispose();\r\n    }\r\n};\r\nGotoDefinitionAtPositionEditorContribution.ID = 'editor.contrib.gotodefinitionatposition';\r\nGotoDefinitionAtPositionEditorContribution.MAX_SOURCE_PREVIEW_LINES = 8;\r\nGotoDefinitionAtPositionEditorContribution = __decorate([\r\n    __param(1, ITextModelService),\r\n    __param(2, IModeService)\r\n], GotoDefinitionAtPositionEditorContribution);\r\nexport { GotoDefinitionAtPositionEditorContribution };\r\nregisterEditorContribution(GotoDefinitionAtPositionEditorContribution.ID, GotoDefinitionAtPositionEditorContribution);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\r\n    if (activeLinkForeground) {\r\n        collector.addRule(`.monaco-editor .goto-definition-link { color: ${activeLinkForeground} !important; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { localize } from '../../../nls.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { basename, extUri } from '../../../base/common/resources.js';\r\nimport { dispose } from '../../../base/common/lifecycle.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { defaultGenerator } from '../../../base/common/idGenerator.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { ResourceMap } from '../../../base/common/map.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nexport class OneReference {\r\n    constructor(isProviderFirst, parent, link, _rangeCallback) {\r\n        this.isProviderFirst = isProviderFirst;\r\n        this.parent = parent;\r\n        this.link = link;\r\n        this._rangeCallback = _rangeCallback;\r\n        this.id = defaultGenerator.nextId();\r\n    }\r\n    get uri() {\r\n        return this.link.uri;\r\n    }\r\n    get range() {\r\n        var _a, _b;\r\n        return (_b = (_a = this._range) !== null && _a !== void 0 ? _a : this.link.targetSelectionRange) !== null && _b !== void 0 ? _b : this.link.range;\r\n    }\r\n    set range(value) {\r\n        this._range = value;\r\n        this._rangeCallback(this);\r\n    }\r\n    get ariaMessage() {\r\n        var _a;\r\n        const preview = (_a = this.parent.getPreview(this)) === null || _a === void 0 ? void 0 : _a.preview(this.range);\r\n        if (!preview) {\r\n            return localize('aria.oneReference', \"symbol in {0} on line {1} at column {2}\", basename(this.uri), this.range.startLineNumber, this.range.startColumn);\r\n        }\r\n        else {\r\n            return localize({ key: 'aria.oneReference.preview', comment: ['Placeholders are: 0: filename, 1:line number, 2: column number, 3: preview snippet of source code'] }, \"symbol in {0} on line {1} at column {2}, {3}\", basename(this.uri), this.range.startLineNumber, this.range.startColumn, preview.value);\r\n        }\r\n    }\r\n}\r\nexport class FilePreview {\r\n    constructor(_modelReference) {\r\n        this._modelReference = _modelReference;\r\n    }\r\n    dispose() {\r\n        this._modelReference.dispose();\r\n    }\r\n    preview(range, n = 8) {\r\n        const model = this._modelReference.object.textEditorModel;\r\n        if (!model) {\r\n            return undefined;\r\n        }\r\n        const { startLineNumber, startColumn, endLineNumber, endColumn } = range;\r\n        const word = model.getWordUntilPosition({ lineNumber: startLineNumber, column: startColumn - n });\r\n        const beforeRange = new Range(startLineNumber, word.startColumn, startLineNumber, startColumn);\r\n        const afterRange = new Range(endLineNumber, endColumn, endLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n        const before = model.getValueInRange(beforeRange).replace(/^\\s+/, '');\r\n        const inside = model.getValueInRange(range);\r\n        const after = model.getValueInRange(afterRange).replace(/\\s+$/, '');\r\n        return {\r\n            value: before + inside + after,\r\n            highlight: { start: before.length, end: before.length + inside.length }\r\n        };\r\n    }\r\n}\r\nexport class FileReferences {\r\n    constructor(parent, uri) {\r\n        this.parent = parent;\r\n        this.uri = uri;\r\n        this.children = [];\r\n        this._previews = new ResourceMap();\r\n    }\r\n    dispose() {\r\n        dispose(this._previews.values());\r\n        this._previews.clear();\r\n    }\r\n    getPreview(child) {\r\n        return this._previews.get(child.uri);\r\n    }\r\n    get ariaMessage() {\r\n        const len = this.children.length;\r\n        if (len === 1) {\r\n            return localize('aria.fileReferences.1', \"1 symbol in {0}, full path {1}\", basename(this.uri), this.uri.fsPath);\r\n        }\r\n        else {\r\n            return localize('aria.fileReferences.N', \"{0} symbols in {1}, full path {2}\", len, basename(this.uri), this.uri.fsPath);\r\n        }\r\n    }\r\n    resolve(textModelResolverService) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._previews.size !== 0) {\r\n                return this;\r\n            }\r\n            for (let child of this.children) {\r\n                if (this._previews.has(child.uri)) {\r\n                    continue;\r\n                }\r\n                try {\r\n                    const ref = yield textModelResolverService.createModelReference(child.uri);\r\n                    this._previews.set(child.uri, new FilePreview(ref));\r\n                }\r\n                catch (err) {\r\n                    onUnexpectedError(err);\r\n                }\r\n            }\r\n            return this;\r\n        });\r\n    }\r\n}\r\nexport class ReferencesModel {\r\n    constructor(links, title) {\r\n        this.groups = [];\r\n        this.references = [];\r\n        this._onDidChangeReferenceRange = new Emitter();\r\n        this.onDidChangeReferenceRange = this._onDidChangeReferenceRange.event;\r\n        this._links = links;\r\n        this._title = title;\r\n        // grouping and sorting\r\n        const [providersFirst] = links;\r\n        links.sort(ReferencesModel._compareReferences);\r\n        let current;\r\n        for (let link of links) {\r\n            if (!current || !extUri.isEqual(current.uri, link.uri, true)) {\r\n                // new group\r\n                current = new FileReferences(this, link.uri);\r\n                this.groups.push(current);\r\n            }\r\n            // append, check for equality first!\r\n            if (current.children.length === 0 || ReferencesModel._compareReferences(link, current.children[current.children.length - 1]) !== 0) {\r\n                const oneRef = new OneReference(providersFirst === link, current, link, ref => this._onDidChangeReferenceRange.fire(ref));\r\n                this.references.push(oneRef);\r\n                current.children.push(oneRef);\r\n            }\r\n        }\r\n    }\r\n    dispose() {\r\n        dispose(this.groups);\r\n        this._onDidChangeReferenceRange.dispose();\r\n        this.groups.length = 0;\r\n    }\r\n    clone() {\r\n        return new ReferencesModel(this._links, this._title);\r\n    }\r\n    get title() {\r\n        return this._title;\r\n    }\r\n    get isEmpty() {\r\n        return this.groups.length === 0;\r\n    }\r\n    get ariaMessage() {\r\n        if (this.isEmpty) {\r\n            return localize('aria.result.0', \"No results found\");\r\n        }\r\n        else if (this.references.length === 1) {\r\n            return localize('aria.result.1', \"Found 1 symbol in {0}\", this.references[0].uri.fsPath);\r\n        }\r\n        else if (this.groups.length === 1) {\r\n            return localize('aria.result.n1', \"Found {0} symbols in {1}\", this.references.length, this.groups[0].uri.fsPath);\r\n        }\r\n        else {\r\n            return localize('aria.result.nm', \"Found {0} symbols in {1} files\", this.references.length, this.groups.length);\r\n        }\r\n    }\r\n    nextOrPreviousReference(reference, next) {\r\n        let { parent } = reference;\r\n        let idx = parent.children.indexOf(reference);\r\n        let childCount = parent.children.length;\r\n        let groupCount = parent.parent.groups.length;\r\n        if (groupCount === 1 || next && idx + 1 < childCount || !next && idx > 0) {\r\n            // cycling within one file\r\n            if (next) {\r\n                idx = (idx + 1) % childCount;\r\n            }\r\n            else {\r\n                idx = (idx + childCount - 1) % childCount;\r\n            }\r\n            return parent.children[idx];\r\n        }\r\n        idx = parent.parent.groups.indexOf(parent);\r\n        if (next) {\r\n            idx = (idx + 1) % groupCount;\r\n            return parent.parent.groups[idx].children[0];\r\n        }\r\n        else {\r\n            idx = (idx + groupCount - 1) % groupCount;\r\n            return parent.parent.groups[idx].children[parent.parent.groups[idx].children.length - 1];\r\n        }\r\n    }\r\n    nearestReference(resource, position) {\r\n        const nearest = this.references.map((ref, idx) => {\r\n            return {\r\n                idx,\r\n                prefixLen: strings.commonPrefixLength(ref.uri.toString(), resource.toString()),\r\n                offsetDist: Math.abs(ref.range.startLineNumber - position.lineNumber) * 100 + Math.abs(ref.range.startColumn - position.column)\r\n            };\r\n        }).sort((a, b) => {\r\n            if (a.prefixLen > b.prefixLen) {\r\n                return -1;\r\n            }\r\n            else if (a.prefixLen < b.prefixLen) {\r\n                return 1;\r\n            }\r\n            else if (a.offsetDist < b.offsetDist) {\r\n                return -1;\r\n            }\r\n            else if (a.offsetDist > b.offsetDist) {\r\n                return 1;\r\n            }\r\n            else {\r\n                return 0;\r\n            }\r\n        })[0];\r\n        if (nearest) {\r\n            return this.references[nearest.idx];\r\n        }\r\n        return undefined;\r\n    }\r\n    referenceAt(resource, position) {\r\n        for (const ref of this.references) {\r\n            if (ref.uri.toString() === resource.toString()) {\r\n                if (Range.containsPosition(ref.range, position)) {\r\n                    return ref;\r\n                }\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    firstReference() {\r\n        for (const ref of this.references) {\r\n            if (ref.isProviderFirst) {\r\n                return ref;\r\n            }\r\n        }\r\n        return this.references[0];\r\n    }\r\n    static _compareReferences(a, b) {\r\n        return extUri.compare(a.uri, b.uri) || Range.compareRangesUsingStarts(a.range, b.range);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { registerModelAndPositionCommand } from '../../browser/editorExtensions.js';\r\nimport { DefinitionProviderRegistry, ImplementationProviderRegistry, TypeDefinitionProviderRegistry, DeclarationProviderRegistry, ReferenceProviderRegistry } from '../../common/modes.js';\r\nimport { ReferencesModel } from './referencesModel.js';\r\nfunction getLocationLinks(model, position, registry, provide) {\r\n    const provider = registry.ordered(model);\r\n    // get results\r\n    const promises = provider.map((provider) => {\r\n        return Promise.resolve(provide(provider, model, position)).then(undefined, err => {\r\n            onUnexpectedExternalError(err);\r\n            return undefined;\r\n        });\r\n    });\r\n    return Promise.all(promises).then(values => {\r\n        const result = [];\r\n        for (let value of values) {\r\n            if (Array.isArray(value)) {\r\n                result.push(...value);\r\n            }\r\n            else if (value) {\r\n                result.push(value);\r\n            }\r\n        }\r\n        return result;\r\n    });\r\n}\r\nexport function getDefinitionsAtPosition(model, position, token) {\r\n    return getLocationLinks(model, position, DefinitionProviderRegistry, (provider, model, position) => {\r\n        return provider.provideDefinition(model, position, token);\r\n    });\r\n}\r\nexport function getDeclarationsAtPosition(model, position, token) {\r\n    return getLocationLinks(model, position, DeclarationProviderRegistry, (provider, model, position) => {\r\n        return provider.provideDeclaration(model, position, token);\r\n    });\r\n}\r\nexport function getImplementationsAtPosition(model, position, token) {\r\n    return getLocationLinks(model, position, ImplementationProviderRegistry, (provider, model, position) => {\r\n        return provider.provideImplementation(model, position, token);\r\n    });\r\n}\r\nexport function getTypeDefinitionsAtPosition(model, position, token) {\r\n    return getLocationLinks(model, position, TypeDefinitionProviderRegistry, (provider, model, position) => {\r\n        return provider.provideTypeDefinition(model, position, token);\r\n    });\r\n}\r\nexport function getReferencesAtPosition(model, position, compact, token) {\r\n    return getLocationLinks(model, position, ReferenceProviderRegistry, (provider, model, position) => __awaiter(this, void 0, void 0, function* () {\r\n        const result = yield provider.provideReferences(model, position, { includeDeclaration: true }, token);\r\n        if (!compact || !result || result.length !== 2) {\r\n            return result;\r\n        }\r\n        const resultWithoutDeclaration = yield provider.provideReferences(model, position, { includeDeclaration: false }, token);\r\n        if (resultWithoutDeclaration && resultWithoutDeclaration.length === 1) {\r\n            return resultWithoutDeclaration;\r\n        }\r\n        return result;\r\n    }));\r\n}\r\n// -- API commands ----\r\nfunction _sortedAndDeduped(callback) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const rawLinks = yield callback();\r\n        const model = new ReferencesModel(rawLinks, '');\r\n        const modelLinks = model.references.map(ref => ref.link);\r\n        model.dispose();\r\n        return modelLinks;\r\n    });\r\n}\r\nregisterModelAndPositionCommand('_executeDefinitionProvider', (model, position) => _sortedAndDeduped(() => getDefinitionsAtPosition(model, position, CancellationToken.None)));\r\nregisterModelAndPositionCommand('_executeDeclarationProvider', (model, position) => _sortedAndDeduped(() => getDeclarationsAtPosition(model, position, CancellationToken.None)));\r\nregisterModelAndPositionCommand('_executeImplementationProvider', (model, position) => _sortedAndDeduped(() => getImplementationsAtPosition(model, position, CancellationToken.None)));\r\nregisterModelAndPositionCommand('_executeTypeDefinitionProvider', (model, position) => _sortedAndDeduped(() => getTypeDefinitionsAtPosition(model, position, CancellationToken.None)));\r\nregisterModelAndPositionCommand('_executeReferenceProvider', (model, position) => _sortedAndDeduped(() => getReferencesAtPosition(model, position, false, CancellationToken.None)));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './referencesWidget.css';\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { Color } from '../../../../base/common/color.js';\r\nimport { Emitter, Event } from '../../../../base/common/event.js';\r\nimport { dispose, DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { Schemas } from '../../../../base/common/network.js';\r\nimport { basenameOrAuthority, dirname } from '../../../../base/common/resources.js';\r\nimport { EmbeddedCodeEditorWidget } from '../../../browser/widget/embeddedCodeEditorWidget.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { ModelDecorationOptions, TextModel } from '../../../common/model/textModel.js';\r\nimport { ITextModelService } from '../../../common/services/resolverService.js';\r\nimport { AccessibilityProvider, DataSource, Delegate, FileReferencesRenderer, OneReferenceRenderer, StringRepresentationProvider, IdentityProvider } from './referencesTree.js';\r\nimport * as nls from '../../../../nls.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { ILabelService } from '../../../../platform/label/common/label.js';\r\nimport { WorkbenchAsyncDataTree } from '../../../../platform/list/browser/listService.js';\r\nimport { activeContrastBorder } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { IThemeService, registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport * as peekView from '../../peekView/peekView.js';\r\nimport { FileReferences, OneReference } from '../referencesModel.js';\r\nimport { SplitView, Sizing } from '../../../../base/browser/ui/splitview/splitview.js';\r\nimport { IUndoRedoService } from '../../../../platform/undoRedo/common/undoRedo.js';\r\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\r\nclass DecorationsManager {\r\n    constructor(_editor, _model) {\r\n        this._editor = _editor;\r\n        this._model = _model;\r\n        this._decorations = new Map();\r\n        this._decorationIgnoreSet = new Set();\r\n        this._callOnDispose = new DisposableStore();\r\n        this._callOnModelChange = new DisposableStore();\r\n        this._callOnDispose.add(this._editor.onDidChangeModel(() => this._onModelChanged()));\r\n        this._onModelChanged();\r\n    }\r\n    dispose() {\r\n        this._callOnModelChange.dispose();\r\n        this._callOnDispose.dispose();\r\n        this.removeDecorations();\r\n    }\r\n    _onModelChanged() {\r\n        this._callOnModelChange.clear();\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        for (let ref of this._model.references) {\r\n            if (ref.uri.toString() === model.uri.toString()) {\r\n                this._addDecorations(ref.parent);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    _addDecorations(reference) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        this._callOnModelChange.add(this._editor.getModel().onDidChangeDecorations(() => this._onDecorationChanged()));\r\n        const newDecorations = [];\r\n        const newDecorationsActualIndex = [];\r\n        for (let i = 0, len = reference.children.length; i < len; i++) {\r\n            let oneReference = reference.children[i];\r\n            if (this._decorationIgnoreSet.has(oneReference.id)) {\r\n                continue;\r\n            }\r\n            if (oneReference.uri.toString() !== this._editor.getModel().uri.toString()) {\r\n                continue;\r\n            }\r\n            newDecorations.push({\r\n                range: oneReference.range,\r\n                options: DecorationsManager.DecorationOptions\r\n            });\r\n            newDecorationsActualIndex.push(i);\r\n        }\r\n        const decorations = this._editor.deltaDecorations([], newDecorations);\r\n        for (let i = 0; i < decorations.length; i++) {\r\n            this._decorations.set(decorations[i], reference.children[newDecorationsActualIndex[i]]);\r\n        }\r\n    }\r\n    _onDecorationChanged() {\r\n        const toRemove = [];\r\n        const model = this._editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        for (let [decorationId, reference] of this._decorations) {\r\n            const newRange = model.getDecorationRange(decorationId);\r\n            if (!newRange) {\r\n                continue;\r\n            }\r\n            let ignore = false;\r\n            if (Range.equalsRange(newRange, reference.range)) {\r\n                continue;\r\n            }\r\n            if (Range.spansMultipleLines(newRange)) {\r\n                ignore = true;\r\n            }\r\n            else {\r\n                const lineLength = reference.range.endColumn - reference.range.startColumn;\r\n                const newLineLength = newRange.endColumn - newRange.startColumn;\r\n                if (lineLength !== newLineLength) {\r\n                    ignore = true;\r\n                }\r\n            }\r\n            if (ignore) {\r\n                this._decorationIgnoreSet.add(reference.id);\r\n                toRemove.push(decorationId);\r\n            }\r\n            else {\r\n                reference.range = newRange;\r\n            }\r\n        }\r\n        for (let i = 0, len = toRemove.length; i < len; i++) {\r\n            this._decorations.delete(toRemove[i]);\r\n        }\r\n        this._editor.deltaDecorations(toRemove, []);\r\n    }\r\n    removeDecorations() {\r\n        this._editor.deltaDecorations([...this._decorations.keys()], []);\r\n        this._decorations.clear();\r\n    }\r\n}\r\nDecorationsManager.DecorationOptions = ModelDecorationOptions.register({\r\n    description: 'reference-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'reference-decoration'\r\n});\r\nexport class LayoutData {\r\n    constructor() {\r\n        this.ratio = 0.7;\r\n        this.heightInLines = 18;\r\n    }\r\n    static fromJSON(raw) {\r\n        let ratio;\r\n        let heightInLines;\r\n        try {\r\n            const data = JSON.parse(raw);\r\n            ratio = data.ratio;\r\n            heightInLines = data.heightInLines;\r\n        }\r\n        catch (_a) {\r\n            //\r\n        }\r\n        return {\r\n            ratio: ratio || 0.7,\r\n            heightInLines: heightInLines || 18\r\n        };\r\n    }\r\n}\r\nclass ReferencesTree extends WorkbenchAsyncDataTree {\r\n}\r\n/**\r\n * ZoneWidget that is shown inside the editor\r\n */\r\nlet ReferenceWidget = class ReferenceWidget extends peekView.PeekViewWidget {\r\n    constructor(editor, _defaultTreeKeyboardSupport, layoutData, themeService, _textModelResolverService, _instantiationService, _peekViewService, _uriLabel, _undoRedoService, _keybindingService) {\r\n        super(editor, { showFrame: false, showArrow: true, isResizeable: true, isAccessible: true }, _instantiationService);\r\n        this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\r\n        this.layoutData = layoutData;\r\n        this._textModelResolverService = _textModelResolverService;\r\n        this._instantiationService = _instantiationService;\r\n        this._peekViewService = _peekViewService;\r\n        this._uriLabel = _uriLabel;\r\n        this._undoRedoService = _undoRedoService;\r\n        this._keybindingService = _keybindingService;\r\n        this._disposeOnNewModel = new DisposableStore();\r\n        this._callOnDispose = new DisposableStore();\r\n        this._onDidSelectReference = new Emitter();\r\n        this.onDidSelectReference = this._onDidSelectReference.event;\r\n        this._dim = new dom.Dimension(0, 0);\r\n        this._applyTheme(themeService.getColorTheme());\r\n        this._callOnDispose.add(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\r\n        this._peekViewService.addExclusiveWidget(editor, this);\r\n        this.create();\r\n    }\r\n    dispose() {\r\n        this.setModel(undefined);\r\n        this._callOnDispose.dispose();\r\n        this._disposeOnNewModel.dispose();\r\n        dispose(this._preview);\r\n        dispose(this._previewNotAvailableMessage);\r\n        dispose(this._tree);\r\n        dispose(this._previewModelReference);\r\n        this._splitView.dispose();\r\n        super.dispose();\r\n    }\r\n    _applyTheme(theme) {\r\n        const borderColor = theme.getColor(peekView.peekViewBorder) || Color.transparent;\r\n        this.style({\r\n            arrowColor: borderColor,\r\n            frameColor: borderColor,\r\n            headerBackgroundColor: theme.getColor(peekView.peekViewTitleBackground) || Color.transparent,\r\n            primaryHeadingColor: theme.getColor(peekView.peekViewTitleForeground),\r\n            secondaryHeadingColor: theme.getColor(peekView.peekViewTitleInfoForeground)\r\n        });\r\n    }\r\n    show(where) {\r\n        this.editor.revealRangeInCenterIfOutsideViewport(where, 0 /* Smooth */);\r\n        super.show(where, this.layoutData.heightInLines || 18);\r\n    }\r\n    focusOnReferenceTree() {\r\n        this._tree.domFocus();\r\n    }\r\n    focusOnPreviewEditor() {\r\n        this._preview.focus();\r\n    }\r\n    isPreviewEditorFocused() {\r\n        return this._preview.hasTextFocus();\r\n    }\r\n    _onTitleClick(e) {\r\n        if (this._preview && this._preview.getModel()) {\r\n            this._onDidSelectReference.fire({\r\n                element: this._getFocusedReference(),\r\n                kind: e.ctrlKey || e.metaKey || e.altKey ? 'side' : 'open',\r\n                source: 'title'\r\n            });\r\n        }\r\n    }\r\n    _fillBody(containerElement) {\r\n        this.setCssClass('reference-zone-widget');\r\n        // message pane\r\n        this._messageContainer = dom.append(containerElement, dom.$('div.messages'));\r\n        dom.hide(this._messageContainer);\r\n        this._splitView = new SplitView(containerElement, { orientation: 1 /* HORIZONTAL */ });\r\n        // editor\r\n        this._previewContainer = dom.append(containerElement, dom.$('div.preview.inline'));\r\n        let options = {\r\n            scrollBeyondLastLine: false,\r\n            scrollbar: {\r\n                verticalScrollbarSize: 14,\r\n                horizontal: 'auto',\r\n                useShadows: true,\r\n                verticalHasArrows: false,\r\n                horizontalHasArrows: false,\r\n                alwaysConsumeMouseWheel: false\r\n            },\r\n            overviewRulerLanes: 2,\r\n            fixedOverflowWidgets: true,\r\n            minimap: {\r\n                enabled: false\r\n            }\r\n        };\r\n        this._preview = this._instantiationService.createInstance(EmbeddedCodeEditorWidget, this._previewContainer, options, this.editor);\r\n        dom.hide(this._previewContainer);\r\n        this._previewNotAvailableMessage = new TextModel(nls.localize('missingPreviewMessage', \"no preview available\"), TextModel.DEFAULT_CREATION_OPTIONS, null, null, this._undoRedoService);\r\n        // tree\r\n        this._treeContainer = dom.append(containerElement, dom.$('div.ref-tree.inline'));\r\n        const treeOptions = {\r\n            keyboardSupport: this._defaultTreeKeyboardSupport,\r\n            accessibilityProvider: new AccessibilityProvider(),\r\n            keyboardNavigationLabelProvider: this._instantiationService.createInstance(StringRepresentationProvider),\r\n            identityProvider: new IdentityProvider(),\r\n            openOnSingleClick: true,\r\n            selectionNavigation: true,\r\n            overrideStyles: {\r\n                listBackground: peekView.peekViewResultsBackground\r\n            }\r\n        };\r\n        if (this._defaultTreeKeyboardSupport) {\r\n            // the tree will consume `Escape` and prevent the widget from closing\r\n            this._callOnDispose.add(dom.addStandardDisposableListener(this._treeContainer, 'keydown', (e) => {\r\n                if (e.equals(9 /* Escape */)) {\r\n                    this._keybindingService.dispatchEvent(e, e.target);\r\n                    e.stopPropagation();\r\n                }\r\n            }, true));\r\n        }\r\n        this._tree = this._instantiationService.createInstance(ReferencesTree, 'ReferencesWidget', this._treeContainer, new Delegate(), [\r\n            this._instantiationService.createInstance(FileReferencesRenderer),\r\n            this._instantiationService.createInstance(OneReferenceRenderer),\r\n        ], this._instantiationService.createInstance(DataSource), treeOptions);\r\n        // split stuff\r\n        this._splitView.addView({\r\n            onDidChange: Event.None,\r\n            element: this._previewContainer,\r\n            minimumSize: 200,\r\n            maximumSize: Number.MAX_VALUE,\r\n            layout: (width) => {\r\n                this._preview.layout({ height: this._dim.height, width });\r\n            }\r\n        }, Sizing.Distribute);\r\n        this._splitView.addView({\r\n            onDidChange: Event.None,\r\n            element: this._treeContainer,\r\n            minimumSize: 100,\r\n            maximumSize: Number.MAX_VALUE,\r\n            layout: (width) => {\r\n                this._treeContainer.style.height = `${this._dim.height}px`;\r\n                this._treeContainer.style.width = `${width}px`;\r\n                this._tree.layout(this._dim.height, width);\r\n            }\r\n        }, Sizing.Distribute);\r\n        this._disposables.add(this._splitView.onDidSashChange(() => {\r\n            if (this._dim.width) {\r\n                this.layoutData.ratio = this._splitView.getViewSize(0) / this._dim.width;\r\n            }\r\n        }, undefined));\r\n        // listen on selection and focus\r\n        let onEvent = (element, kind) => {\r\n            if (element instanceof OneReference) {\r\n                if (kind === 'show') {\r\n                    this._revealReference(element, false);\r\n                }\r\n                this._onDidSelectReference.fire({ element, kind, source: 'tree' });\r\n            }\r\n        };\r\n        this._tree.onDidOpen(e => {\r\n            if (e.sideBySide) {\r\n                onEvent(e.element, 'side');\r\n            }\r\n            else if (e.editorOptions.pinned) {\r\n                onEvent(e.element, 'goto');\r\n            }\r\n            else {\r\n                onEvent(e.element, 'show');\r\n            }\r\n        });\r\n        dom.hide(this._treeContainer);\r\n    }\r\n    _onWidth(width) {\r\n        if (this._dim) {\r\n            this._doLayoutBody(this._dim.height, width);\r\n        }\r\n    }\r\n    _doLayoutBody(heightInPixel, widthInPixel) {\r\n        super._doLayoutBody(heightInPixel, widthInPixel);\r\n        this._dim = new dom.Dimension(widthInPixel, heightInPixel);\r\n        this.layoutData.heightInLines = this._viewZone ? this._viewZone.heightInLines : this.layoutData.heightInLines;\r\n        this._splitView.layout(widthInPixel);\r\n        this._splitView.resizeView(0, widthInPixel * this.layoutData.ratio);\r\n    }\r\n    setSelection(selection) {\r\n        return this._revealReference(selection, true).then(() => {\r\n            if (!this._model) {\r\n                // disposed\r\n                return;\r\n            }\r\n            // show in tree\r\n            this._tree.setSelection([selection]);\r\n            this._tree.setFocus([selection]);\r\n        });\r\n    }\r\n    setModel(newModel) {\r\n        // clean up\r\n        this._disposeOnNewModel.clear();\r\n        this._model = newModel;\r\n        if (this._model) {\r\n            return this._onNewModel();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _onNewModel() {\r\n        if (!this._model) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        if (this._model.isEmpty) {\r\n            this.setTitle('');\r\n            this._messageContainer.innerText = nls.localize('noResults', \"No results\");\r\n            dom.show(this._messageContainer);\r\n            return Promise.resolve(undefined);\r\n        }\r\n        dom.hide(this._messageContainer);\r\n        this._decorationsManager = new DecorationsManager(this._preview, this._model);\r\n        this._disposeOnNewModel.add(this._decorationsManager);\r\n        // listen on model changes\r\n        this._disposeOnNewModel.add(this._model.onDidChangeReferenceRange(reference => this._tree.rerender(reference)));\r\n        // listen on editor\r\n        this._disposeOnNewModel.add(this._preview.onMouseDown(e => {\r\n            const { event, target } = e;\r\n            if (event.detail !== 2) {\r\n                return;\r\n            }\r\n            const element = this._getFocusedReference();\r\n            if (!element) {\r\n                return;\r\n            }\r\n            this._onDidSelectReference.fire({\r\n                element: { uri: element.uri, range: target.range },\r\n                kind: (event.ctrlKey || event.metaKey || event.altKey) ? 'side' : 'open',\r\n                source: 'editor'\r\n            });\r\n        }));\r\n        // make sure things are rendered\r\n        this.container.classList.add('results-loaded');\r\n        dom.show(this._treeContainer);\r\n        dom.show(this._previewContainer);\r\n        this._splitView.layout(this._dim.width);\r\n        this.focusOnReferenceTree();\r\n        // pick input and a reference to begin with\r\n        return this._tree.setInput(this._model.groups.length === 1 ? this._model.groups[0] : this._model);\r\n    }\r\n    _getFocusedReference() {\r\n        const [element] = this._tree.getFocus();\r\n        if (element instanceof OneReference) {\r\n            return element;\r\n        }\r\n        else if (element instanceof FileReferences) {\r\n            if (element.children.length > 0) {\r\n                return element.children[0];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    revealReference(reference) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            yield this._revealReference(reference, false);\r\n            this._onDidSelectReference.fire({ element: reference, kind: 'goto', source: 'tree' });\r\n        });\r\n    }\r\n    _revealReference(reference, revealParent) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // check if there is anything to do...\r\n            if (this._revealedReference === reference) {\r\n                return;\r\n            }\r\n            this._revealedReference = reference;\r\n            // Update widget header\r\n            if (reference.uri.scheme !== Schemas.inMemory) {\r\n                this.setTitle(basenameOrAuthority(reference.uri), this._uriLabel.getUriLabel(dirname(reference.uri)));\r\n            }\r\n            else {\r\n                this.setTitle(nls.localize('peekView.alternateTitle', \"References\"));\r\n            }\r\n            const promise = this._textModelResolverService.createModelReference(reference.uri);\r\n            if (this._tree.getInput() === reference.parent) {\r\n                this._tree.reveal(reference);\r\n            }\r\n            else {\r\n                if (revealParent) {\r\n                    this._tree.reveal(reference.parent);\r\n                }\r\n                yield this._tree.expand(reference.parent);\r\n                this._tree.reveal(reference);\r\n            }\r\n            const ref = yield promise;\r\n            if (!this._model) {\r\n                // disposed\r\n                ref.dispose();\r\n                return;\r\n            }\r\n            dispose(this._previewModelReference);\r\n            // show in editor\r\n            const model = ref.object;\r\n            if (model) {\r\n                const scrollType = this._preview.getModel() === model.textEditorModel ? 0 /* Smooth */ : 1 /* Immediate */;\r\n                const sel = Range.lift(reference.range).collapseToStart();\r\n                this._previewModelReference = ref;\r\n                this._preview.setModel(model.textEditorModel);\r\n                this._preview.setSelection(sel);\r\n                this._preview.revealRangeInCenter(sel, scrollType);\r\n            }\r\n            else {\r\n                this._preview.setModel(this._previewNotAvailableMessage);\r\n                ref.dispose();\r\n            }\r\n        });\r\n    }\r\n};\r\nReferenceWidget = __decorate([\r\n    __param(3, IThemeService),\r\n    __param(4, ITextModelService),\r\n    __param(5, IInstantiationService),\r\n    __param(6, peekView.IPeekViewService),\r\n    __param(7, ILabelService),\r\n    __param(8, IUndoRedoService),\r\n    __param(9, IKeybindingService)\r\n], ReferenceWidget);\r\nexport { ReferenceWidget };\r\n// theming\r\nregisterThemingParticipant((theme, collector) => {\r\n    const findMatchHighlightColor = theme.getColor(peekView.peekViewResultsMatchHighlight);\r\n    if (findMatchHighlightColor) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .referenceMatch .highlight { background-color: ${findMatchHighlightColor}; }`);\r\n    }\r\n    const referenceHighlightColor = theme.getColor(peekView.peekViewEditorMatchHighlight);\r\n    if (referenceHighlightColor) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .preview .reference-decoration { background-color: ${referenceHighlightColor}; }`);\r\n    }\r\n    const referenceHighlightBorder = theme.getColor(peekView.peekViewEditorMatchHighlightBorder);\r\n    if (referenceHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .preview .reference-decoration { border: 2px solid ${referenceHighlightBorder}; box-sizing: border-box; }`);\r\n    }\r\n    const hcOutline = theme.getColor(activeContrastBorder);\r\n    if (hcOutline) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .referenceMatch .highlight { border: 1px dotted ${hcOutline}; box-sizing: border-box; }`);\r\n    }\r\n    const resultsBackground = theme.getColor(peekView.peekViewResultsBackground);\r\n    if (resultsBackground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree { background-color: ${resultsBackground}; }`);\r\n    }\r\n    const resultsMatchForeground = theme.getColor(peekView.peekViewResultsMatchForeground);\r\n    if (resultsMatchForeground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree { color: ${resultsMatchForeground}; }`);\r\n    }\r\n    const resultsFileForeground = theme.getColor(peekView.peekViewResultsFileForeground);\r\n    if (resultsFileForeground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .reference-file { color: ${resultsFileForeground}; }`);\r\n    }\r\n    const resultsSelectedBackground = theme.getColor(peekView.peekViewResultsSelectionBackground);\r\n    if (resultsSelectedBackground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .monaco-list:focus .monaco-list-rows > .monaco-list-row.selected:not(.highlighted) { background-color: ${resultsSelectedBackground}; }`);\r\n    }\r\n    const resultsSelectedForeground = theme.getColor(peekView.peekViewResultsSelectionForeground);\r\n    if (resultsSelectedForeground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .ref-tree .monaco-list:focus .monaco-list-rows > .monaco-list-row.selected:not(.highlighted) { color: ${resultsSelectedForeground} !important; }`);\r\n    }\r\n    const editorBackground = theme.getColor(peekView.peekViewEditorBackground);\r\n    if (editorBackground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .preview .monaco-editor .monaco-editor-background,` +\r\n            `.monaco-editor .reference-zone-widget .preview .monaco-editor .inputarea.ime-input {` +\r\n            `\tbackground-color: ${editorBackground};` +\r\n            `}`);\r\n    }\r\n    const editorGutterBackground = theme.getColor(peekView.peekViewEditorGutterBackground);\r\n    if (editorGutterBackground) {\r\n        collector.addRule(`.monaco-editor .reference-zone-widget .preview .monaco-editor .margin {` +\r\n            `\tbackground-color: ${editorGutterBackground};` +\r\n            `}`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { ReferencesModel, FileReferences, OneReference } from '../referencesModel.js';\r\nimport { ITextModelService } from '../../../common/services/resolverService.js';\r\nimport { IconLabel } from '../../../../base/browser/ui/iconLabel/iconLabel.js';\r\nimport { CountBadge } from '../../../../base/browser/ui/countBadge/countBadge.js';\r\nimport { ILabelService } from '../../../../platform/label/common/label.js';\r\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\r\nimport { attachBadgeStyler } from '../../../../platform/theme/common/styler.js';\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { localize } from '../../../../nls.js';\r\nimport { getBaseLabel } from '../../../../base/common/labels.js';\r\nimport { dirname, basename } from '../../../../base/common/resources.js';\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\r\nimport { FuzzyScore, createMatches } from '../../../../base/common/filters.js';\r\nimport { HighlightedLabel } from '../../../../base/browser/ui/highlightedlabel/highlightedLabel.js';\r\nlet DataSource = class DataSource {\r\n    constructor(_resolverService) {\r\n        this._resolverService = _resolverService;\r\n    }\r\n    hasChildren(element) {\r\n        if (element instanceof ReferencesModel) {\r\n            return true;\r\n        }\r\n        if (element instanceof FileReferences) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    getChildren(element) {\r\n        if (element instanceof ReferencesModel) {\r\n            return element.groups;\r\n        }\r\n        if (element instanceof FileReferences) {\r\n            return element.resolve(this._resolverService).then(val => {\r\n                // if (element.failure) {\r\n                // \t// refresh the element on failure so that\r\n                // \t// we can update its rendering\r\n                // \treturn tree.refresh(element).then(() => val.children);\r\n                // }\r\n                return val.children;\r\n            });\r\n        }\r\n        throw new Error('bad tree');\r\n    }\r\n};\r\nDataSource = __decorate([\r\n    __param(0, ITextModelService)\r\n], DataSource);\r\nexport { DataSource };\r\n//#endregion\r\nexport class Delegate {\r\n    getHeight() {\r\n        return 23;\r\n    }\r\n    getTemplateId(element) {\r\n        if (element instanceof FileReferences) {\r\n            return FileReferencesRenderer.id;\r\n        }\r\n        else {\r\n            return OneReferenceRenderer.id;\r\n        }\r\n    }\r\n}\r\nlet StringRepresentationProvider = class StringRepresentationProvider {\r\n    constructor(_keybindingService) {\r\n        this._keybindingService = _keybindingService;\r\n    }\r\n    getKeyboardNavigationLabel(element) {\r\n        var _a;\r\n        if (element instanceof OneReference) {\r\n            const parts = (_a = element.parent.getPreview(element)) === null || _a === void 0 ? void 0 : _a.preview(element.range);\r\n            if (parts) {\r\n                return parts.value;\r\n            }\r\n        }\r\n        // FileReferences or unresolved OneReference\r\n        return basename(element.uri);\r\n    }\r\n};\r\nStringRepresentationProvider = __decorate([\r\n    __param(0, IKeybindingService)\r\n], StringRepresentationProvider);\r\nexport { StringRepresentationProvider };\r\nexport class IdentityProvider {\r\n    getId(element) {\r\n        return element instanceof OneReference ? element.id : element.uri;\r\n    }\r\n}\r\n//#region render: File\r\nlet FileReferencesTemplate = class FileReferencesTemplate extends Disposable {\r\n    constructor(container, _uriLabel, themeService) {\r\n        super();\r\n        this._uriLabel = _uriLabel;\r\n        const parent = document.createElement('div');\r\n        parent.classList.add('reference-file');\r\n        this.file = this._register(new IconLabel(parent, { supportHighlights: true }));\r\n        this.badge = new CountBadge(dom.append(parent, dom.$('.count')));\r\n        this._register(attachBadgeStyler(this.badge, themeService));\r\n        container.appendChild(parent);\r\n    }\r\n    set(element, matches) {\r\n        let parent = dirname(element.uri);\r\n        this.file.setLabel(getBaseLabel(element.uri), this._uriLabel.getUriLabel(parent, { relative: true }), { title: this._uriLabel.getUriLabel(element.uri), matches });\r\n        const len = element.children.length;\r\n        this.badge.setCount(len);\r\n        if (len > 1) {\r\n            this.badge.setTitleFormat(localize('referencesCount', \"{0} references\", len));\r\n        }\r\n        else {\r\n            this.badge.setTitleFormat(localize('referenceCount', \"{0} reference\", len));\r\n        }\r\n    }\r\n};\r\nFileReferencesTemplate = __decorate([\r\n    __param(1, ILabelService),\r\n    __param(2, IThemeService)\r\n], FileReferencesTemplate);\r\nlet FileReferencesRenderer = class FileReferencesRenderer {\r\n    constructor(_instantiationService) {\r\n        this._instantiationService = _instantiationService;\r\n        this.templateId = FileReferencesRenderer.id;\r\n    }\r\n    renderTemplate(container) {\r\n        return this._instantiationService.createInstance(FileReferencesTemplate, container);\r\n    }\r\n    renderElement(node, index, template) {\r\n        template.set(node.element, createMatches(node.filterData));\r\n    }\r\n    disposeTemplate(templateData) {\r\n        templateData.dispose();\r\n    }\r\n};\r\nFileReferencesRenderer.id = 'FileReferencesRenderer';\r\nFileReferencesRenderer = __decorate([\r\n    __param(0, IInstantiationService)\r\n], FileReferencesRenderer);\r\nexport { FileReferencesRenderer };\r\n//#endregion\r\n//#region render: Reference\r\nclass OneReferenceTemplate {\r\n    constructor(container) {\r\n        this.label = new HighlightedLabel(container, false);\r\n    }\r\n    set(element, score) {\r\n        var _a;\r\n        const preview = (_a = element.parent.getPreview(element)) === null || _a === void 0 ? void 0 : _a.preview(element.range);\r\n        if (!preview || !preview.value) {\r\n            // this means we FAILED to resolve the document or the value is the empty string\r\n            this.label.set(`${basename(element.uri)}:${element.range.startLineNumber + 1}:${element.range.startColumn + 1}`);\r\n        }\r\n        else {\r\n            // render search match as highlight unless\r\n            // we have score, then render the score\r\n            const { value, highlight } = preview;\r\n            if (score && !FuzzyScore.isDefault(score)) {\r\n                this.label.element.classList.toggle('referenceMatch', false);\r\n                this.label.set(value, createMatches(score));\r\n            }\r\n            else {\r\n                this.label.element.classList.toggle('referenceMatch', true);\r\n                this.label.set(value, [highlight]);\r\n            }\r\n        }\r\n    }\r\n}\r\nexport class OneReferenceRenderer {\r\n    constructor() {\r\n        this.templateId = OneReferenceRenderer.id;\r\n    }\r\n    renderTemplate(container) {\r\n        return new OneReferenceTemplate(container);\r\n    }\r\n    renderElement(node, index, templateData) {\r\n        templateData.set(node.element, node.filterData);\r\n    }\r\n    disposeTemplate() {\r\n    }\r\n}\r\nOneReferenceRenderer.id = 'OneReferenceRenderer';\r\n//#endregion\r\nexport class AccessibilityProvider {\r\n    getWidgetAriaLabel() {\r\n        return localize('treeAriaLabel', \"References\");\r\n    }\r\n    getAriaLabel(element) {\r\n        return element.ariaMessage;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../../nls.js';\r\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\r\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IContextKeyService, RawContextKey, ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\r\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\r\nimport { OneReference } from '../referencesModel.js';\r\nimport { ReferenceWidget, LayoutData } from './referencesWidget.js';\r\nimport { Range } from '../../../common/core/range.js';\r\nimport { Position } from '../../../common/core/position.js';\r\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\r\nimport { createCancelablePromise } from '../../../../base/common/async.js';\r\nimport { getOuterEditor, PeekContext } from '../../peekView/peekView.js';\r\nimport { IListService, WorkbenchListFocusContextKey } from '../../../../platform/list/browser/listService.js';\r\nimport { KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\r\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\r\nexport const ctxReferenceSearchVisible = new RawContextKey('referenceSearchVisible', false, nls.localize('referenceSearchVisible', \"Whether reference peek is visible, like 'Peek References' or 'Peek Definition'\"));\r\nlet ReferencesController = class ReferencesController {\r\n    constructor(_defaultTreeKeyboardSupport, _editor, contextKeyService, _editorService, _notificationService, _instantiationService, _storageService, _configurationService) {\r\n        this._defaultTreeKeyboardSupport = _defaultTreeKeyboardSupport;\r\n        this._editor = _editor;\r\n        this._editorService = _editorService;\r\n        this._notificationService = _notificationService;\r\n        this._instantiationService = _instantiationService;\r\n        this._storageService = _storageService;\r\n        this._configurationService = _configurationService;\r\n        this._disposables = new DisposableStore();\r\n        this._requestIdPool = 0;\r\n        this._ignoreModelChangeEvent = false;\r\n        this._referenceSearchVisible = ctxReferenceSearchVisible.bindTo(contextKeyService);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(ReferencesController.ID);\r\n    }\r\n    dispose() {\r\n        var _a, _b;\r\n        this._referenceSearchVisible.reset();\r\n        this._disposables.dispose();\r\n        (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\r\n        this._widget = undefined;\r\n        this._model = undefined;\r\n    }\r\n    toggleWidget(range, modelPromise, peekMode) {\r\n        // close current widget and return early is position didn't change\r\n        let widgetPosition;\r\n        if (this._widget) {\r\n            widgetPosition = this._widget.position;\r\n        }\r\n        this.closeWidget();\r\n        if (!!widgetPosition && range.containsPosition(widgetPosition)) {\r\n            return;\r\n        }\r\n        this._peekMode = peekMode;\r\n        this._referenceSearchVisible.set(true);\r\n        // close the widget on model/mode changes\r\n        this._disposables.add(this._editor.onDidChangeModelLanguage(() => { this.closeWidget(); }));\r\n        this._disposables.add(this._editor.onDidChangeModel(() => {\r\n            if (!this._ignoreModelChangeEvent) {\r\n                this.closeWidget();\r\n            }\r\n        }));\r\n        const storageKey = 'peekViewLayout';\r\n        const data = LayoutData.fromJSON(this._storageService.get(storageKey, 0 /* GLOBAL */, '{}'));\r\n        this._widget = this._instantiationService.createInstance(ReferenceWidget, this._editor, this._defaultTreeKeyboardSupport, data);\r\n        this._widget.setTitle(nls.localize('labelLoading', \"Loading...\"));\r\n        this._widget.show(range);\r\n        this._disposables.add(this._widget.onDidClose(() => {\r\n            modelPromise.cancel();\r\n            if (this._widget) {\r\n                this._storageService.store(storageKey, JSON.stringify(this._widget.layoutData), 0 /* GLOBAL */, 1 /* MACHINE */);\r\n                this._widget = undefined;\r\n            }\r\n            this.closeWidget();\r\n        }));\r\n        this._disposables.add(this._widget.onDidSelectReference(event => {\r\n            let { element, kind } = event;\r\n            if (!element) {\r\n                return;\r\n            }\r\n            switch (kind) {\r\n                case 'open':\r\n                    if (event.source !== 'editor' || !this._configurationService.getValue('editor.stablePeek')) {\r\n                        // when stable peek is configured we don't close\r\n                        // the peek window on selecting the editor\r\n                        this.openReference(element, false, false);\r\n                    }\r\n                    break;\r\n                case 'side':\r\n                    this.openReference(element, true, false);\r\n                    break;\r\n                case 'goto':\r\n                    if (peekMode) {\r\n                        this._gotoReference(element);\r\n                    }\r\n                    else {\r\n                        this.openReference(element, false, true);\r\n                    }\r\n                    break;\r\n            }\r\n        }));\r\n        const requestId = ++this._requestIdPool;\r\n        modelPromise.then(model => {\r\n            var _a;\r\n            // still current request? widget still open?\r\n            if (requestId !== this._requestIdPool || !this._widget) {\r\n                model.dispose();\r\n                return undefined;\r\n            }\r\n            (_a = this._model) === null || _a === void 0 ? void 0 : _a.dispose();\r\n            this._model = model;\r\n            // show widget\r\n            return this._widget.setModel(this._model).then(() => {\r\n                if (this._widget && this._model && this._editor.hasModel()) { // might have been closed\r\n                    // set title\r\n                    if (!this._model.isEmpty) {\r\n                        this._widget.setMetaTitle(nls.localize('metaTitle.N', \"{0} ({1})\", this._model.title, this._model.references.length));\r\n                    }\r\n                    else {\r\n                        this._widget.setMetaTitle('');\r\n                    }\r\n                    // set 'best' selection\r\n                    let uri = this._editor.getModel().uri;\r\n                    let pos = new Position(range.startLineNumber, range.startColumn);\r\n                    let selection = this._model.nearestReference(uri, pos);\r\n                    if (selection) {\r\n                        return this._widget.setSelection(selection).then(() => {\r\n                            if (this._widget && this._editor.getOption(74 /* peekWidgetDefaultFocus */) === 'editor') {\r\n                                this._widget.focusOnPreviewEditor();\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                return undefined;\r\n            });\r\n        }, error => {\r\n            this._notificationService.error(error);\r\n        });\r\n    }\r\n    changeFocusBetweenPreviewAndReferences() {\r\n        if (!this._widget) {\r\n            // can be called while still resolving...\r\n            return;\r\n        }\r\n        if (this._widget.isPreviewEditorFocused()) {\r\n            this._widget.focusOnReferenceTree();\r\n        }\r\n        else {\r\n            this._widget.focusOnPreviewEditor();\r\n        }\r\n    }\r\n    goToNextOrPreviousReference(fwd) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel() || !this._model || !this._widget) {\r\n                // can be called while still resolving...\r\n                return;\r\n            }\r\n            const currentPosition = this._widget.position;\r\n            if (!currentPosition) {\r\n                return;\r\n            }\r\n            const source = this._model.nearestReference(this._editor.getModel().uri, currentPosition);\r\n            if (!source) {\r\n                return;\r\n            }\r\n            const target = this._model.nextOrPreviousReference(source, fwd);\r\n            const editorFocus = this._editor.hasTextFocus();\r\n            const previewEditorFocus = this._widget.isPreviewEditorFocused();\r\n            yield this._widget.setSelection(target);\r\n            yield this._gotoReference(target);\r\n            if (editorFocus) {\r\n                this._editor.focus();\r\n            }\r\n            else if (this._widget && previewEditorFocus) {\r\n                this._widget.focusOnPreviewEditor();\r\n            }\r\n        });\r\n    }\r\n    revealReference(reference) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel() || !this._model || !this._widget) {\r\n                // can be called while still resolving...\r\n                return;\r\n            }\r\n            yield this._widget.revealReference(reference);\r\n        });\r\n    }\r\n    closeWidget(focusEditor = true) {\r\n        var _a, _b;\r\n        (_a = this._widget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._model) === null || _b === void 0 ? void 0 : _b.dispose();\r\n        this._referenceSearchVisible.reset();\r\n        this._disposables.clear();\r\n        this._widget = undefined;\r\n        this._model = undefined;\r\n        if (focusEditor) {\r\n            this._editor.focus();\r\n        }\r\n        this._requestIdPool += 1; // Cancel pending requests\r\n    }\r\n    _gotoReference(ref) {\r\n        if (this._widget) {\r\n            this._widget.hide();\r\n        }\r\n        this._ignoreModelChangeEvent = true;\r\n        const range = Range.lift(ref.range).collapseToStart();\r\n        return this._editorService.openCodeEditor({\r\n            resource: ref.uri,\r\n            options: { selection: range }\r\n        }, this._editor).then(openedEditor => {\r\n            var _a;\r\n            this._ignoreModelChangeEvent = false;\r\n            if (!openedEditor || !this._widget) {\r\n                // something went wrong...\r\n                this.closeWidget();\r\n                return;\r\n            }\r\n            if (this._editor === openedEditor) {\r\n                //\r\n                this._widget.show(range);\r\n                this._widget.focusOnReferenceTree();\r\n            }\r\n            else {\r\n                // we opened a different editor instance which means a different controller instance.\r\n                // therefore we stop with this controller and continue with the other\r\n                const other = ReferencesController.get(openedEditor);\r\n                const model = this._model.clone();\r\n                this.closeWidget();\r\n                openedEditor.focus();\r\n                other.toggleWidget(range, createCancelablePromise(_ => Promise.resolve(model)), (_a = this._peekMode) !== null && _a !== void 0 ? _a : false);\r\n            }\r\n        }, (err) => {\r\n            this._ignoreModelChangeEvent = false;\r\n            onUnexpectedError(err);\r\n        });\r\n    }\r\n    openReference(ref, sideBySide, pinned) {\r\n        // clear stage\r\n        if (!sideBySide) {\r\n            this.closeWidget();\r\n        }\r\n        const { uri, range } = ref;\r\n        this._editorService.openCodeEditor({\r\n            resource: uri,\r\n            options: { selection: range, pinned }\r\n        }, this._editor, sideBySide);\r\n    }\r\n};\r\nReferencesController.ID = 'editor.contrib.referencesController';\r\nReferencesController = __decorate([\r\n    __param(2, IContextKeyService),\r\n    __param(3, ICodeEditorService),\r\n    __param(4, INotificationService),\r\n    __param(5, IInstantiationService),\r\n    __param(6, IStorageService),\r\n    __param(7, IConfigurationService)\r\n], ReferencesController);\r\nexport { ReferencesController };\r\nfunction withController(accessor, fn) {\r\n    const outerEditor = getOuterEditor(accessor);\r\n    if (!outerEditor) {\r\n        return;\r\n    }\r\n    let controller = ReferencesController.get(outerEditor);\r\n    if (controller) {\r\n        fn(controller);\r\n    }\r\n}\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'togglePeekWidgetFocus',\r\n    weight: 100 /* EditorContrib */,\r\n    primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 60 /* F2 */),\r\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\r\n    handler(accessor) {\r\n        withController(accessor, controller => {\r\n            controller.changeFocusBetweenPreviewAndReferences();\r\n        });\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'goToNextReference',\r\n    weight: 100 /* EditorContrib */ - 10,\r\n    primary: 62 /* F4 */,\r\n    secondary: [70 /* F12 */],\r\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\r\n    handler(accessor) {\r\n        withController(accessor, controller => {\r\n            controller.goToNextOrPreviousReference(true);\r\n        });\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'goToPreviousReference',\r\n    weight: 100 /* EditorContrib */ - 10,\r\n    primary: 1024 /* Shift */ | 62 /* F4 */,\r\n    secondary: [1024 /* Shift */ | 70 /* F12 */],\r\n    when: ContextKeyExpr.or(ctxReferenceSearchVisible, PeekContext.inPeekEditor),\r\n    handler(accessor) {\r\n        withController(accessor, controller => {\r\n            controller.goToNextOrPreviousReference(false);\r\n        });\r\n    }\r\n});\r\n// commands that aren't needed anymore because there is now ContextKeyExpr.OR\r\nCommandsRegistry.registerCommandAlias('goToNextReferenceFromEmbeddedEditor', 'goToNextReference');\r\nCommandsRegistry.registerCommandAlias('goToPreviousReferenceFromEmbeddedEditor', 'goToPreviousReference');\r\n// close\r\nCommandsRegistry.registerCommandAlias('closeReferenceSearchEditor', 'closeReferenceSearch');\r\nCommandsRegistry.registerCommand('closeReferenceSearch', accessor => withController(accessor, controller => controller.closeWidget()));\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'closeReferenceSearch',\r\n    weight: 100 /* EditorContrib */ - 101,\r\n    primary: 9 /* Escape */,\r\n    secondary: [1024 /* Shift */ | 9 /* Escape */],\r\n    when: ContextKeyExpr.and(PeekContext.inPeekEditor, ContextKeyExpr.not('config.editor.stablePeek'))\r\n});\r\nKeybindingsRegistry.registerKeybindingRule({\r\n    id: 'closeReferenceSearch',\r\n    weight: 200 /* WorkbenchContrib */ + 50,\r\n    primary: 9 /* Escape */,\r\n    secondary: [1024 /* Shift */ | 9 /* Escape */],\r\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, ContextKeyExpr.not('config.editor.stablePeek'))\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'revealReference',\r\n    weight: 200 /* WorkbenchContrib */,\r\n    primary: 3 /* Enter */,\r\n    mac: {\r\n        primary: 3 /* Enter */,\r\n        secondary: [2048 /* CtrlCmd */ | 18 /* DownArrow */]\r\n    },\r\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey),\r\n    handler(accessor) {\r\n        var _a;\r\n        const listService = accessor.get(IListService);\r\n        const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\r\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\r\n            withController(accessor, controller => controller.revealReference(focus[0]));\r\n        }\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'openReferenceToSide',\r\n    weight: 100 /* EditorContrib */,\r\n    primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\r\n    mac: {\r\n        primary: 256 /* WinCtrl */ | 3 /* Enter */\r\n    },\r\n    when: ContextKeyExpr.and(ctxReferenceSearchVisible, WorkbenchListFocusContextKey),\r\n    handler(accessor) {\r\n        var _a;\r\n        const listService = accessor.get(IListService);\r\n        const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\r\n        if (Array.isArray(focus) && focus[0] instanceof OneReference) {\r\n            withController(accessor, controller => controller.openReference(focus[0], true, true));\r\n        }\r\n    }\r\n});\r\nCommandsRegistry.registerCommand('openReference', (accessor) => {\r\n    var _a;\r\n    const listService = accessor.get(IListService);\r\n    const focus = (_a = listService.lastFocusedList) === null || _a === void 0 ? void 0 : _a.getFocus();\r\n    if (Array.isArray(focus) && focus[0] instanceof OneReference) {\r\n        withController(accessor, controller => controller.openReference(focus[0], false, true));\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\r\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\r\nimport { registerEditorCommand, EditorCommand } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { dispose, combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { isEqual } from '../../../base/common/resources.js';\r\nexport const ctxHasSymbols = new RawContextKey('hasSymbols', false, localize('hasSymbols', \"Whether there are symbol locations that can be navigated via keyboard-only.\"));\r\nexport const ISymbolNavigationService = createDecorator('ISymbolNavigationService');\r\nlet SymbolNavigationService = class SymbolNavigationService {\r\n    constructor(contextKeyService, _editorService, _notificationService, _keybindingService) {\r\n        this._editorService = _editorService;\r\n        this._notificationService = _notificationService;\r\n        this._keybindingService = _keybindingService;\r\n        this._currentModel = undefined;\r\n        this._currentIdx = -1;\r\n        this._ignoreEditorChange = false;\r\n        this._ctxHasSymbols = ctxHasSymbols.bindTo(contextKeyService);\r\n    }\r\n    reset() {\r\n        var _a, _b;\r\n        this._ctxHasSymbols.reset();\r\n        (_a = this._currentState) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._currentMessage) === null || _b === void 0 ? void 0 : _b.dispose();\r\n        this._currentModel = undefined;\r\n        this._currentIdx = -1;\r\n    }\r\n    put(anchor) {\r\n        const refModel = anchor.parent.parent;\r\n        if (refModel.references.length <= 1) {\r\n            this.reset();\r\n            return;\r\n        }\r\n        this._currentModel = refModel;\r\n        this._currentIdx = refModel.references.indexOf(anchor);\r\n        this._ctxHasSymbols.set(true);\r\n        this._showMessage();\r\n        const editorState = new EditorState(this._editorService);\r\n        const listener = editorState.onDidChange(_ => {\r\n            if (this._ignoreEditorChange) {\r\n                return;\r\n            }\r\n            const editor = this._editorService.getActiveCodeEditor();\r\n            if (!editor) {\r\n                return;\r\n            }\r\n            const model = editor.getModel();\r\n            const position = editor.getPosition();\r\n            if (!model || !position) {\r\n                return;\r\n            }\r\n            let seenUri = false;\r\n            let seenPosition = false;\r\n            for (const reference of refModel.references) {\r\n                if (isEqual(reference.uri, model.uri)) {\r\n                    seenUri = true;\r\n                    seenPosition = seenPosition || Range.containsPosition(reference.range, position);\r\n                }\r\n                else if (seenUri) {\r\n                    break;\r\n                }\r\n            }\r\n            if (!seenUri || !seenPosition) {\r\n                this.reset();\r\n            }\r\n        });\r\n        this._currentState = combinedDisposable(editorState, listener);\r\n    }\r\n    revealNext(source) {\r\n        if (!this._currentModel) {\r\n            return Promise.resolve();\r\n        }\r\n        // get next result and advance\r\n        this._currentIdx += 1;\r\n        this._currentIdx %= this._currentModel.references.length;\r\n        const reference = this._currentModel.references[this._currentIdx];\r\n        // status\r\n        this._showMessage();\r\n        // open editor, ignore events while that happens\r\n        this._ignoreEditorChange = true;\r\n        return this._editorService.openCodeEditor({\r\n            resource: reference.uri,\r\n            options: {\r\n                selection: Range.collapseToStart(reference.range),\r\n                selectionRevealType: 3 /* NearTopIfOutsideViewport */\r\n            }\r\n        }, source).finally(() => {\r\n            this._ignoreEditorChange = false;\r\n        });\r\n    }\r\n    _showMessage() {\r\n        var _a;\r\n        (_a = this._currentMessage) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        const kb = this._keybindingService.lookupKeybinding('editor.gotoNextSymbolFromResult');\r\n        const message = kb\r\n            ? localize('location.kb', \"Symbol {0} of {1}, {2} for next\", this._currentIdx + 1, this._currentModel.references.length, kb.getLabel())\r\n            : localize('location', \"Symbol {0} of {1}\", this._currentIdx + 1, this._currentModel.references.length);\r\n        this._currentMessage = this._notificationService.status(message);\r\n    }\r\n};\r\nSymbolNavigationService = __decorate([\r\n    __param(0, IContextKeyService),\r\n    __param(1, ICodeEditorService),\r\n    __param(2, INotificationService),\r\n    __param(3, IKeybindingService)\r\n], SymbolNavigationService);\r\nregisterSingleton(ISymbolNavigationService, SymbolNavigationService, true);\r\nregisterEditorCommand(new class extends EditorCommand {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.gotoNextSymbolFromResult',\r\n            precondition: ctxHasSymbols,\r\n            kbOpts: {\r\n                weight: 100 /* EditorContrib */,\r\n                primary: 70 /* F12 */\r\n            }\r\n        });\r\n    }\r\n    runEditorCommand(accessor, editor) {\r\n        return accessor.get(ISymbolNavigationService).revealNext(editor);\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'editor.gotoNextSymbolFromResult.cancel',\r\n    weight: 100 /* EditorContrib */,\r\n    when: ctxHasSymbols,\r\n    primary: 9 /* Escape */,\r\n    handler(accessor) {\r\n        accessor.get(ISymbolNavigationService).reset();\r\n    }\r\n});\r\n//\r\nlet EditorState = class EditorState {\r\n    constructor(editorService) {\r\n        this._listener = new Map();\r\n        this._disposables = new DisposableStore();\r\n        this._onDidChange = new Emitter();\r\n        this.onDidChange = this._onDidChange.event;\r\n        this._disposables.add(editorService.onCodeEditorRemove(this._onDidRemoveEditor, this));\r\n        this._disposables.add(editorService.onCodeEditorAdd(this._onDidAddEditor, this));\r\n        editorService.listCodeEditors().forEach(this._onDidAddEditor, this);\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._onDidChange.dispose();\r\n        dispose(this._listener.values());\r\n    }\r\n    _onDidAddEditor(editor) {\r\n        this._listener.set(editor, combinedDisposable(editor.onDidChangeCursorPosition(_ => this._onDidChange.fire({ editor })), editor.onDidChangeModelContent(_ => this._onDidChange.fire({ editor }))));\r\n    }\r\n    _onDidRemoveEditor(editor) {\r\n        var _a;\r\n        (_a = this._listener.get(editor)) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        this._listener.delete(editor);\r\n    }\r\n};\r\nEditorState = __decorate([\r\n    __param(0, ICodeEditorService)\r\n], EditorState);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar _a, _b, _c, _d, _e, _f, _g, _h;\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { createCancelablePromise, raceCancellation } from '../../../base/common/async.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { isWeb } from '../../../base/common/platform.js';\r\nimport { isCodeEditor } from '../../browser/editorBrowser.js';\r\nimport { EditorAction, registerInstantiatedEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport * as corePosition from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { isLocationLink } from '../../common/modes.js';\r\nimport { MessageController } from '../message/messageController.js';\r\nimport { PeekContext } from '../peekView/peekView.js';\r\nimport { ReferencesController } from './peek/referencesController.js';\r\nimport { ReferencesModel } from './referencesModel.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { MenuId, MenuRegistry } from '../../../platform/actions/common/actions.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { getDefinitionsAtPosition, getImplementationsAtPosition, getTypeDefinitionsAtPosition, getDeclarationsAtPosition, getReferencesAtPosition } from './goToSymbol.js';\r\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { EditorStateCancellationTokenSource } from '../../browser/core/editorState.js';\r\nimport { ISymbolNavigationService } from './symbolNavigation.js';\r\nimport { isStandalone } from '../../../base/browser/browser.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { EmbeddedCodeEditorWidget } from '../../browser/widget/embeddedCodeEditorWidget.js';\r\nMenuRegistry.appendMenuItem(MenuId.EditorContext, {\r\n    submenu: MenuId.EditorContextPeek,\r\n    title: nls.localize('peek.submenu', \"Peek\"),\r\n    group: 'navigation',\r\n    order: 100\r\n});\r\nconst _goToActionIds = new Set();\r\nfunction registerGoToAction(ctor) {\r\n    const result = new ctor();\r\n    registerInstantiatedEditorAction(result);\r\n    _goToActionIds.add(result.id);\r\n    return result;\r\n}\r\nclass SymbolNavigationAction extends EditorAction {\r\n    constructor(configuration, opts) {\r\n        super(opts);\r\n        this._configuration = configuration;\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        const notificationService = accessor.get(INotificationService);\r\n        const editorService = accessor.get(ICodeEditorService);\r\n        const progressService = accessor.get(IEditorProgressService);\r\n        const symbolNavService = accessor.get(ISymbolNavigationService);\r\n        const model = editor.getModel();\r\n        const pos = editor.getPosition();\r\n        const cts = new EditorStateCancellationTokenSource(editor, 1 /* Value */ | 4 /* Position */);\r\n        const promise = raceCancellation(this._getLocationModel(model, pos, cts.token), cts.token).then((references) => __awaiter(this, void 0, void 0, function* () {\r\n            if (!references || cts.token.isCancellationRequested) {\r\n                return;\r\n            }\r\n            alert(references.ariaMessage);\r\n            let altAction;\r\n            if (references.referenceAt(model.uri, pos)) {\r\n                const altActionId = this._getAlternativeCommand(editor);\r\n                if (altActionId !== this.id && _goToActionIds.has(altActionId)) {\r\n                    altAction = editor.getAction(altActionId);\r\n                }\r\n            }\r\n            const referenceCount = references.references.length;\r\n            if (referenceCount === 0) {\r\n                // no result -> show message\r\n                if (!this._configuration.muteMessage) {\r\n                    const info = model.getWordAtPosition(pos);\r\n                    MessageController.get(editor).showMessage(this._getNoResultFoundMessage(info), pos);\r\n                }\r\n            }\r\n            else if (referenceCount === 1 && altAction) {\r\n                // already at the only result, run alternative\r\n                altAction.run();\r\n            }\r\n            else {\r\n                // normal results handling\r\n                return this._onResult(editorService, symbolNavService, editor, references);\r\n            }\r\n        }), (err) => {\r\n            // report an error\r\n            notificationService.error(err);\r\n        }).finally(() => {\r\n            cts.dispose();\r\n        });\r\n        progressService.showWhile(promise, 250);\r\n        return promise;\r\n    }\r\n    _onResult(editorService, symbolNavService, editor, model) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const gotoLocation = this._getGoToPreference(editor);\r\n            if (!(editor instanceof EmbeddedCodeEditorWidget) && (this._configuration.openInPeek || (gotoLocation === 'peek' && model.references.length > 1))) {\r\n                this._openInPeek(editor, model);\r\n            }\r\n            else {\r\n                const next = model.firstReference();\r\n                const peek = model.references.length > 1 && gotoLocation === 'gotoAndPeek';\r\n                const targetEditor = yield this._openReference(editor, editorService, next, this._configuration.openToSide, !peek);\r\n                if (peek && targetEditor) {\r\n                    this._openInPeek(targetEditor, model);\r\n                }\r\n                else {\r\n                    model.dispose();\r\n                }\r\n                // keep remaining locations around when using\r\n                // 'goto'-mode\r\n                if (gotoLocation === 'goto') {\r\n                    symbolNavService.put(next);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _openReference(editor, editorService, reference, sideBySide, highlight) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // range is the target-selection-range when we have one\r\n            // and the fallback is the 'full' range\r\n            let range = undefined;\r\n            if (isLocationLink(reference)) {\r\n                range = reference.targetSelectionRange;\r\n            }\r\n            if (!range) {\r\n                range = reference.range;\r\n            }\r\n            if (!range) {\r\n                return undefined;\r\n            }\r\n            const targetEditor = yield editorService.openCodeEditor({\r\n                resource: reference.uri,\r\n                options: {\r\n                    selection: Range.collapseToStart(range),\r\n                    selectionRevealType: 3 /* NearTopIfOutsideViewport */\r\n                }\r\n            }, editor, sideBySide);\r\n            if (!targetEditor) {\r\n                return undefined;\r\n            }\r\n            if (highlight) {\r\n                const modelNow = targetEditor.getModel();\r\n                const ids = targetEditor.deltaDecorations([], [{ range, options: { description: 'symbol-navigate-action-highlight', className: 'symbolHighlight' } }]);\r\n                setTimeout(() => {\r\n                    if (targetEditor.getModel() === modelNow) {\r\n                        targetEditor.deltaDecorations(ids, []);\r\n                    }\r\n                }, 350);\r\n            }\r\n            return targetEditor;\r\n        });\r\n    }\r\n    _openInPeek(target, model) {\r\n        let controller = ReferencesController.get(target);\r\n        if (controller && target.hasModel()) {\r\n            controller.toggleWidget(target.getSelection(), createCancelablePromise(_ => Promise.resolve(model)), this._configuration.openInPeek);\r\n        }\r\n        else {\r\n            model.dispose();\r\n        }\r\n    }\r\n}\r\n//#region --- DEFINITION\r\nexport class DefinitionAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getDefinitionsAtPosition(model, position, token), nls.localize('def.title', 'Definitions'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('noResultWord', \"No definition found for '{0}'\", info.word)\r\n            : nls.localize('generic.noResults', \"No definition found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(47 /* gotoLocation */).alternativeDefinitionCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(47 /* gotoLocation */).multipleDefinitions;\r\n    }\r\n}\r\nconst goToDefinitionKb = isWeb && !isStandalone\r\n    ? 2048 /* CtrlCmd */ | 70 /* F12 */\r\n    : 70 /* F12 */;\r\nregisterGoToAction((_a = class GoToDefinitionAction extends DefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToDefinitionAction.id,\r\n                label: nls.localize('actions.goToDecl.label', \"Go to Definition\"),\r\n                alias: 'Go to Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: goToDefinitionKb,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.1\r\n                },\r\n                menuOpts: {\r\n                    menuId: MenuId.MenubarGoMenu,\r\n                    group: '4_symbol_nav',\r\n                    order: 2,\r\n                    title: nls.localize({ key: 'miGotoDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Definition\")\r\n                }\r\n            });\r\n            CommandsRegistry.registerCommandAlias('editor.action.goToDeclaration', GoToDefinitionAction.id);\r\n        }\r\n    },\r\n    _a.id = 'editor.action.revealDefinition',\r\n    _a));\r\nregisterGoToAction((_b = class OpenDefinitionToSideAction extends DefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: true,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: OpenDefinitionToSideAction.id,\r\n                label: nls.localize('actions.goToDeclToSide.label', \"Open Definition to the Side\"),\r\n                alias: 'Open Definition to the Side',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, goToDefinitionKb),\r\n                    weight: 100 /* EditorContrib */\r\n                }\r\n            });\r\n            CommandsRegistry.registerCommandAlias('editor.action.openDeclarationToTheSide', OpenDefinitionToSideAction.id);\r\n        }\r\n    },\r\n    _b.id = 'editor.action.revealDefinitionAside',\r\n    _b));\r\nregisterGoToAction((_c = class PeekDefinitionAction extends DefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: true,\r\n                muteMessage: false\r\n            }, {\r\n                id: PeekDefinitionAction.id,\r\n                label: nls.localize('actions.previewDecl.label', \"Peek Definition\"),\r\n                alias: 'Peek Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 512 /* Alt */ | 70 /* F12 */,\r\n                    linux: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 68 /* F10 */ },\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    menuId: MenuId.EditorContextPeek,\r\n                    group: 'peek',\r\n                    order: 2\r\n                }\r\n            });\r\n            CommandsRegistry.registerCommandAlias('editor.action.previewDeclaration', PeekDefinitionAction.id);\r\n        }\r\n    },\r\n    _c.id = 'editor.action.peekDefinition',\r\n    _c));\r\n//#endregion\r\n//#region --- DECLARATION\r\nclass DeclarationAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getDeclarationsAtPosition(model, position, token), nls.localize('decl.title', 'Declarations'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\r\n            : nls.localize('decl.generic.noResults', \"No declaration found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(47 /* gotoLocation */).alternativeDeclarationCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(47 /* gotoLocation */).multipleDeclarations;\r\n    }\r\n}\r\nregisterGoToAction((_d = class GoToDeclarationAction extends DeclarationAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToDeclarationAction.id,\r\n                label: nls.localize('actions.goToDeclaration.label', \"Go to Declaration\"),\r\n                alias: 'Go to Declaration',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.3\r\n                },\r\n                menuOpts: {\r\n                    menuId: MenuId.MenubarGoMenu,\r\n                    group: '4_symbol_nav',\r\n                    order: 3,\r\n                    title: nls.localize({ key: 'miGotoDeclaration', comment: ['&& denotes a mnemonic'] }, \"Go to &&Declaration\")\r\n                },\r\n            });\r\n        }\r\n        _getNoResultFoundMessage(info) {\r\n            return info && info.word\r\n                ? nls.localize('decl.noResultWord', \"No declaration found for '{0}'\", info.word)\r\n                : nls.localize('decl.generic.noResults', \"No declaration found\");\r\n        }\r\n    },\r\n    _d.id = 'editor.action.revealDeclaration',\r\n    _d));\r\nregisterGoToAction(class PeekDeclarationAction extends DeclarationAction {\r\n    constructor() {\r\n        super({\r\n            openToSide: false,\r\n            openInPeek: true,\r\n            muteMessage: false\r\n        }, {\r\n            id: 'editor.action.peekDeclaration',\r\n            label: nls.localize('actions.peekDecl.label', \"Peek Declaration\"),\r\n            alias: 'Peek Declaration',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasDeclarationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n            contextMenuOpts: {\r\n                menuId: MenuId.EditorContextPeek,\r\n                group: 'peek',\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n});\r\n//#endregion\r\n//#region --- TYPE DEFINITION\r\nclass TypeDefinitionAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getTypeDefinitionsAtPosition(model, position, token), nls.localize('typedef.title', 'Type Definitions'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('goToTypeDefinition.noResultWord', \"No type definition found for '{0}'\", info.word)\r\n            : nls.localize('goToTypeDefinition.generic.noResults', \"No type definition found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(47 /* gotoLocation */).alternativeTypeDefinitionCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(47 /* gotoLocation */).multipleTypeDefinitions;\r\n    }\r\n}\r\nregisterGoToAction((_e = class GoToTypeDefinitionAction extends TypeDefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToTypeDefinitionAction.ID,\r\n                label: nls.localize('actions.goToTypeDefinition.label', \"Go to Type Definition\"),\r\n                alias: 'Go to Type Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 0,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.4\r\n                },\r\n                menuOpts: {\r\n                    menuId: MenuId.MenubarGoMenu,\r\n                    group: '4_symbol_nav',\r\n                    order: 3,\r\n                    title: nls.localize({ key: 'miGotoTypeDefinition', comment: ['&& denotes a mnemonic'] }, \"Go to &&Type Definition\")\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _e.ID = 'editor.action.goToTypeDefinition',\r\n    _e));\r\nregisterGoToAction((_f = class PeekTypeDefinitionAction extends TypeDefinitionAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: true,\r\n                muteMessage: false\r\n            }, {\r\n                id: PeekTypeDefinitionAction.ID,\r\n                label: nls.localize('actions.peekTypeDefinition.label', \"Peek Type Definition\"),\r\n                alias: 'Peek Type Definition',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasTypeDefinitionProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                contextMenuOpts: {\r\n                    menuId: MenuId.EditorContextPeek,\r\n                    group: 'peek',\r\n                    order: 4\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _f.ID = 'editor.action.peekTypeDefinition',\r\n    _f));\r\n//#endregion\r\n//#region --- IMPLEMENTATION\r\nclass ImplementationAction extends SymbolNavigationAction {\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getImplementationsAtPosition(model, position, token), nls.localize('impl.title', 'Implementations'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && info.word\r\n            ? nls.localize('goToImplementation.noResultWord', \"No implementation found for '{0}'\", info.word)\r\n            : nls.localize('goToImplementation.generic.noResults', \"No implementation found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(47 /* gotoLocation */).alternativeImplementationCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(47 /* gotoLocation */).multipleImplementations;\r\n    }\r\n}\r\nregisterGoToAction((_g = class GoToImplementationAction extends ImplementationAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: false,\r\n                muteMessage: false\r\n            }, {\r\n                id: GoToImplementationAction.ID,\r\n                label: nls.localize('actions.goToImplementation.label', \"Go to Implementations\"),\r\n                alias: 'Go to Implementations',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 2048 /* CtrlCmd */ | 70 /* F12 */,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                menuOpts: {\r\n                    menuId: MenuId.MenubarGoMenu,\r\n                    group: '4_symbol_nav',\r\n                    order: 4,\r\n                    title: nls.localize({ key: 'miGotoImplementation', comment: ['&& denotes a mnemonic'] }, \"Go to &&Implementations\")\r\n                },\r\n                contextMenuOpts: {\r\n                    group: 'navigation',\r\n                    order: 1.45\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _g.ID = 'editor.action.goToImplementation',\r\n    _g));\r\nregisterGoToAction((_h = class PeekImplementationAction extends ImplementationAction {\r\n        constructor() {\r\n            super({\r\n                openToSide: false,\r\n                openInPeek: true,\r\n                muteMessage: false\r\n            }, {\r\n                id: PeekImplementationAction.ID,\r\n                label: nls.localize('actions.peekImplementation.label', \"Peek Implementations\"),\r\n                alias: 'Peek Implementations',\r\n                precondition: ContextKeyExpr.and(EditorContextKeys.hasImplementationProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n                kbOpts: {\r\n                    kbExpr: EditorContextKeys.editorTextFocus,\r\n                    primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 70 /* F12 */,\r\n                    weight: 100 /* EditorContrib */\r\n                },\r\n                contextMenuOpts: {\r\n                    menuId: MenuId.EditorContextPeek,\r\n                    group: 'peek',\r\n                    order: 5\r\n                }\r\n            });\r\n        }\r\n    },\r\n    _h.ID = 'editor.action.peekImplementation',\r\n    _h));\r\n//#endregion\r\n//#region --- REFERENCES\r\nclass ReferencesAction extends SymbolNavigationAction {\r\n    _getNoResultFoundMessage(info) {\r\n        return info\r\n            ? nls.localize('references.no', \"No references found for '{0}'\", info.word)\r\n            : nls.localize('references.noGeneric', \"No references found\");\r\n    }\r\n    _getAlternativeCommand(editor) {\r\n        return editor.getOption(47 /* gotoLocation */).alternativeReferenceCommand;\r\n    }\r\n    _getGoToPreference(editor) {\r\n        return editor.getOption(47 /* gotoLocation */).multipleReferences;\r\n    }\r\n}\r\nregisterGoToAction(class GoToReferencesAction extends ReferencesAction {\r\n    constructor() {\r\n        super({\r\n            openToSide: false,\r\n            openInPeek: false,\r\n            muteMessage: false\r\n        }, {\r\n            id: 'editor.action.goToReferences',\r\n            label: nls.localize('goToReferences.label', \"Go to References\"),\r\n            alias: 'Go to References',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 70 /* F12 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: 'navigation',\r\n                order: 1.45\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarGoMenu,\r\n                group: '4_symbol_nav',\r\n                order: 5,\r\n                title: nls.localize({ key: 'miGotoReference', comment: ['&& denotes a mnemonic'] }, \"Go to &&References\")\r\n            },\r\n        });\r\n    }\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getReferencesAtPosition(model, position, true, token), nls.localize('ref.title', 'References'));\r\n        });\r\n    }\r\n});\r\nregisterGoToAction(class PeekReferencesAction extends ReferencesAction {\r\n    constructor() {\r\n        super({\r\n            openToSide: false,\r\n            openInPeek: true,\r\n            muteMessage: false\r\n        }, {\r\n            id: 'editor.action.referenceSearch.trigger',\r\n            label: nls.localize('references.action.label', \"Peek References\"),\r\n            alias: 'Peek References',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.hasReferenceProvider, PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n            contextMenuOpts: {\r\n                menuId: MenuId.EditorContextPeek,\r\n                group: 'peek',\r\n                order: 6\r\n            }\r\n        });\r\n    }\r\n    _getLocationModel(model, position, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(yield getReferencesAtPosition(model, position, false, token), nls.localize('ref.title', 'References'));\r\n        });\r\n    }\r\n});\r\n//#endregion\r\n//#region --- GENERIC goto symbols command\r\nclass GenericGoToLocationAction extends SymbolNavigationAction {\r\n    constructor(config, _references, _gotoMultipleBehaviour) {\r\n        super(config, {\r\n            id: 'editor.action.goToLocation',\r\n            label: nls.localize('label.generic', \"Go To Any Symbol\"),\r\n            alias: 'Go To Any Symbol',\r\n            precondition: ContextKeyExpr.and(PeekContext.notInPeekEditor, EditorContextKeys.isInWalkThroughSnippet.toNegated()),\r\n        });\r\n        this._references = _references;\r\n        this._gotoMultipleBehaviour = _gotoMultipleBehaviour;\r\n    }\r\n    _getLocationModel(_model, _position, _token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return new ReferencesModel(this._references, nls.localize('generic.title', 'Locations'));\r\n        });\r\n    }\r\n    _getNoResultFoundMessage(info) {\r\n        return info && nls.localize('generic.noResult', \"No results for '{0}'\", info.word) || '';\r\n    }\r\n    _getGoToPreference(editor) {\r\n        var _a;\r\n        return (_a = this._gotoMultipleBehaviour) !== null && _a !== void 0 ? _a : editor.getOption(47 /* gotoLocation */).multipleReferences;\r\n    }\r\n    _getAlternativeCommand() { return ''; }\r\n}\r\nCommandsRegistry.registerCommand({\r\n    id: 'editor.action.goToLocations',\r\n    description: {\r\n        description: 'Go to locations from a position in a file',\r\n        args: [\r\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\r\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\r\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\r\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto' },\r\n            { name: 'noResultsMessage', description: 'Human readable message that shows when locations is empty.' },\r\n        ]\r\n    },\r\n    handler: (accessor, resource, position, references, multiple, noResultsMessage, openInPeek) => __awaiter(void 0, void 0, void 0, function* () {\r\n        assertType(URI.isUri(resource));\r\n        assertType(corePosition.Position.isIPosition(position));\r\n        assertType(Array.isArray(references));\r\n        assertType(typeof multiple === 'undefined' || typeof multiple === 'string');\r\n        assertType(typeof openInPeek === 'undefined' || typeof openInPeek === 'boolean');\r\n        const editorService = accessor.get(ICodeEditorService);\r\n        const editor = yield editorService.openCodeEditor({ resource }, editorService.getFocusedCodeEditor());\r\n        if (isCodeEditor(editor)) {\r\n            editor.setPosition(position);\r\n            editor.revealPositionInCenterIfOutsideViewport(position, 0 /* Smooth */);\r\n            return editor.invokeWithinContext(accessor => {\r\n                const command = new class extends GenericGoToLocationAction {\r\n                    _getNoResultFoundMessage(info) {\r\n                        return noResultsMessage || super._getNoResultFoundMessage(info);\r\n                    }\r\n                }({\r\n                    muteMessage: !Boolean(noResultsMessage),\r\n                    openInPeek: Boolean(openInPeek),\r\n                    openToSide: false\r\n                }, references, multiple);\r\n                accessor.get(IInstantiationService).invokeFunction(command.run.bind(command), editor);\r\n            });\r\n        }\r\n    })\r\n});\r\nCommandsRegistry.registerCommand({\r\n    id: 'editor.action.peekLocations',\r\n    description: {\r\n        description: 'Peek locations from a position in a file',\r\n        args: [\r\n            { name: 'uri', description: 'The text document in which to start', constraint: URI },\r\n            { name: 'position', description: 'The position at which to start', constraint: corePosition.Position.isIPosition },\r\n            { name: 'locations', description: 'An array of locations.', constraint: Array },\r\n            { name: 'multiple', description: 'Define what to do when having multiple results, either `peek`, `gotoAndPeek`, or `goto' },\r\n        ]\r\n    },\r\n    handler: (accessor, resource, position, references, multiple) => __awaiter(void 0, void 0, void 0, function* () {\r\n        accessor.get(ICommandService).executeCommand('editor.action.goToLocations', resource, position, references, multiple, undefined, true);\r\n    })\r\n});\r\n//#endregion\r\n//#region --- REFERENCE search special commands\r\nCommandsRegistry.registerCommand({\r\n    id: 'editor.action.findReferences',\r\n    handler: (accessor, resource, position) => {\r\n        assertType(URI.isUri(resource));\r\n        assertType(corePosition.Position.isIPosition(position));\r\n        const codeEditorService = accessor.get(ICodeEditorService);\r\n        return codeEditorService.openCodeEditor({ resource }, codeEditorService.getFocusedCodeEditor()).then(control => {\r\n            if (!isCodeEditor(control) || !control.hasModel()) {\r\n                return undefined;\r\n            }\r\n            const controller = ReferencesController.get(control);\r\n            if (!controller) {\r\n                return undefined;\r\n            }\r\n            const references = createCancelablePromise(token => getReferencesAtPosition(control.getModel(), corePosition.Position.lift(position), false, token).then(references => new ReferencesModel(references, nls.localize('ref.title', 'References'))));\r\n            const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\r\n            return Promise.resolve(controller.toggleWidget(range, references, false));\r\n        });\r\n    }\r\n});\r\n// use NEW command\r\nCommandsRegistry.registerCommandAlias('editor.action.showReferences', 'editor.action.peekLocations');\r\n//#endregion\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport { Emitter } from '../../../../base/common/event.js';\r\nimport * as platform from '../../../../base/common/platform.js';\r\nfunction hasModifier(e, modifier) {\r\n    return !!e[modifier];\r\n}\r\n/**\r\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\r\n */\r\nexport class ClickLinkMouseEvent {\r\n    constructor(source, opts) {\r\n        this.target = source.target;\r\n        this.hasTriggerModifier = hasModifier(source.event, opts.triggerModifier);\r\n        this.hasSideBySideModifier = hasModifier(source.event, opts.triggerSideBySideModifier);\r\n        this.isNoneOrSingleMouseDown = (source.event.detail <= 1);\r\n    }\r\n}\r\n/**\r\n * An event that encapsulates the various trigger modifiers logic needed for go to definition.\r\n */\r\nexport class ClickLinkKeyboardEvent {\r\n    constructor(source, opts) {\r\n        this.keyCodeIsTriggerKey = (source.keyCode === opts.triggerKey);\r\n        this.keyCodeIsSideBySideKey = (source.keyCode === opts.triggerSideBySideKey);\r\n        this.hasTriggerModifier = hasModifier(source, opts.triggerModifier);\r\n    }\r\n}\r\nexport class ClickLinkOptions {\r\n    constructor(triggerKey, triggerModifier, triggerSideBySideKey, triggerSideBySideModifier) {\r\n        this.triggerKey = triggerKey;\r\n        this.triggerModifier = triggerModifier;\r\n        this.triggerSideBySideKey = triggerSideBySideKey;\r\n        this.triggerSideBySideModifier = triggerSideBySideModifier;\r\n    }\r\n    equals(other) {\r\n        return (this.triggerKey === other.triggerKey\r\n            && this.triggerModifier === other.triggerModifier\r\n            && this.triggerSideBySideKey === other.triggerSideBySideKey\r\n            && this.triggerSideBySideModifier === other.triggerSideBySideModifier);\r\n    }\r\n}\r\nfunction createOptions(multiCursorModifier) {\r\n    if (multiCursorModifier === 'altKey') {\r\n        if (platform.isMacintosh) {\r\n            return new ClickLinkOptions(57 /* Meta */, 'metaKey', 6 /* Alt */, 'altKey');\r\n        }\r\n        return new ClickLinkOptions(5 /* Ctrl */, 'ctrlKey', 6 /* Alt */, 'altKey');\r\n    }\r\n    if (platform.isMacintosh) {\r\n        return new ClickLinkOptions(6 /* Alt */, 'altKey', 57 /* Meta */, 'metaKey');\r\n    }\r\n    return new ClickLinkOptions(6 /* Alt */, 'altKey', 5 /* Ctrl */, 'ctrlKey');\r\n}\r\nexport class ClickLinkGesture extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._onMouseMoveOrRelevantKeyDown = this._register(new Emitter());\r\n        this.onMouseMoveOrRelevantKeyDown = this._onMouseMoveOrRelevantKeyDown.event;\r\n        this._onExecute = this._register(new Emitter());\r\n        this.onExecute = this._onExecute.event;\r\n        this._onCancel = this._register(new Emitter());\r\n        this.onCancel = this._onCancel.event;\r\n        this._editor = editor;\r\n        this._opts = createOptions(this._editor.getOption(67 /* multiCursorModifier */));\r\n        this._lastMouseMoveEvent = null;\r\n        this._hasTriggerKeyOnMouseDown = false;\r\n        this._lineNumberOnMouseDown = 0;\r\n        this._register(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(67 /* multiCursorModifier */)) {\r\n                const newOpts = createOptions(this._editor.getOption(67 /* multiCursorModifier */));\r\n                if (this._opts.equals(newOpts)) {\r\n                    return;\r\n                }\r\n                this._opts = newOpts;\r\n                this._lastMouseMoveEvent = null;\r\n                this._hasTriggerKeyOnMouseDown = false;\r\n                this._lineNumberOnMouseDown = 0;\r\n                this._onCancel.fire();\r\n            }\r\n        }));\r\n        this._register(this._editor.onMouseMove((e) => this._onEditorMouseMove(new ClickLinkMouseEvent(e, this._opts))));\r\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(new ClickLinkMouseEvent(e, this._opts))));\r\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(new ClickLinkMouseEvent(e, this._opts))));\r\n        this._register(this._editor.onKeyDown((e) => this._onEditorKeyDown(new ClickLinkKeyboardEvent(e, this._opts))));\r\n        this._register(this._editor.onKeyUp((e) => this._onEditorKeyUp(new ClickLinkKeyboardEvent(e, this._opts))));\r\n        this._register(this._editor.onMouseDrag(() => this._resetHandler()));\r\n        this._register(this._editor.onDidChangeCursorSelection((e) => this._onDidChangeCursorSelection(e)));\r\n        this._register(this._editor.onDidChangeModel((e) => this._resetHandler()));\r\n        this._register(this._editor.onDidChangeModelContent(() => this._resetHandler()));\r\n        this._register(this._editor.onDidScrollChange((e) => {\r\n            if (e.scrollTopChanged || e.scrollLeftChanged) {\r\n                this._resetHandler();\r\n            }\r\n        }));\r\n    }\r\n    _onDidChangeCursorSelection(e) {\r\n        if (e.selection && e.selection.startColumn !== e.selection.endColumn) {\r\n            this._resetHandler(); // immediately stop this feature if the user starts to select (https://github.com/microsoft/vscode/issues/7827)\r\n        }\r\n    }\r\n    _onEditorMouseMove(mouseEvent) {\r\n        this._lastMouseMoveEvent = mouseEvent;\r\n        this._onMouseMoveOrRelevantKeyDown.fire([mouseEvent, null]);\r\n    }\r\n    _onEditorMouseDown(mouseEvent) {\r\n        // We need to record if we had the trigger key on mouse down because someone might select something in the editor\r\n        // holding the mouse down and then while mouse is down start to press Ctrl/Cmd to start a copy operation and then\r\n        // release the mouse button without wanting to do the navigation.\r\n        // With this flag we prevent goto definition if the mouse was down before the trigger key was pressed.\r\n        this._hasTriggerKeyOnMouseDown = mouseEvent.hasTriggerModifier;\r\n        this._lineNumberOnMouseDown = mouseEvent.target.position ? mouseEvent.target.position.lineNumber : 0;\r\n    }\r\n    _onEditorMouseUp(mouseEvent) {\r\n        const currentLineNumber = mouseEvent.target.position ? mouseEvent.target.position.lineNumber : 0;\r\n        if (this._hasTriggerKeyOnMouseDown && this._lineNumberOnMouseDown && this._lineNumberOnMouseDown === currentLineNumber) {\r\n            this._onExecute.fire(mouseEvent);\r\n        }\r\n    }\r\n    _onEditorKeyDown(e) {\r\n        if (this._lastMouseMoveEvent\r\n            && (e.keyCodeIsTriggerKey // User just pressed Ctrl/Cmd (normal goto definition)\r\n                || (e.keyCodeIsSideBySideKey && e.hasTriggerModifier) // User pressed Ctrl/Cmd+Alt (goto definition to the side)\r\n            )) {\r\n            this._onMouseMoveOrRelevantKeyDown.fire([this._lastMouseMoveEvent, e]);\r\n        }\r\n        else if (e.hasTriggerModifier) {\r\n            this._onCancel.fire(); // remove decorations if user holds another key with ctrl/cmd to prevent accident goto declaration\r\n        }\r\n    }\r\n    _onEditorKeyUp(e) {\r\n        if (e.keyCodeIsTriggerKey) {\r\n            this._onCancel.fire();\r\n        }\r\n    }\r\n    _resetHandler() {\r\n        this._lastMouseMoveEvent = null;\r\n        this._hasTriggerKeyOnMouseDown = false;\r\n        this._onCancel.fire();\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { ModesContentHoverWidget } from './modesContentHover.js';\r\nimport { ModesGlyphHoverWidget } from './modesGlyphHover.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { editorHoverBackground, editorHoverBorder, editorHoverHighlight, textCodeBlockBackground, textLinkForeground, editorHoverStatusBarBackground, editorHoverForeground, textLinkActiveForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { GotoDefinitionAtPositionEditorContribution } from '../gotoSymbol/link/goToDefinitionAtPosition.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nlet ModesHoverController = class ModesHoverController {\r\n    constructor(_editor, _instantiationService, _openerService, _modeService, _contextKeyService) {\r\n        this._editor = _editor;\r\n        this._instantiationService = _instantiationService;\r\n        this._openerService = _openerService;\r\n        this._modeService = _modeService;\r\n        this._toUnhook = new DisposableStore();\r\n        this._isMouseDown = false;\r\n        this._hoverClicked = false;\r\n        this._contentWidget = null;\r\n        this._glyphWidget = null;\r\n        this._hookEvents();\r\n        this._didChangeConfigurationHandler = this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(50 /* hover */)) {\r\n                this._unhookEvents();\r\n                this._hookEvents();\r\n            }\r\n        });\r\n        this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(_contextKeyService);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(ModesHoverController.ID);\r\n    }\r\n    _hookEvents() {\r\n        const hideWidgetsEventHandler = () => this._hideWidgets();\r\n        const hoverOpts = this._editor.getOption(50 /* hover */);\r\n        this._isHoverEnabled = hoverOpts.enabled;\r\n        this._isHoverSticky = hoverOpts.sticky;\r\n        if (this._isHoverEnabled) {\r\n            this._toUnhook.add(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\r\n            this._toUnhook.add(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\r\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\r\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\r\n            this._toUnhook.add(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\r\n        }\r\n        else {\r\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\r\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\r\n        }\r\n        this._toUnhook.add(this._editor.onMouseLeave(hideWidgetsEventHandler));\r\n        this._toUnhook.add(this._editor.onDidChangeModel(hideWidgetsEventHandler));\r\n        this._toUnhook.add(this._editor.onDidScrollChange((e) => this._onEditorScrollChanged(e)));\r\n    }\r\n    _unhookEvents() {\r\n        this._toUnhook.clear();\r\n    }\r\n    _onModelDecorationsChanged() {\r\n        var _a, _b;\r\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.onModelDecorationsChanged();\r\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.onModelDecorationsChanged();\r\n    }\r\n    _onEditorScrollChanged(e) {\r\n        if (e.scrollTopChanged || e.scrollLeftChanged) {\r\n            this._hideWidgets();\r\n        }\r\n    }\r\n    _onEditorMouseDown(mouseEvent) {\r\n        this._isMouseDown = true;\r\n        const targetType = mouseEvent.target.type;\r\n        if (targetType === 9 /* CONTENT_WIDGET */ && mouseEvent.target.detail === ModesContentHoverWidget.ID) {\r\n            this._hoverClicked = true;\r\n            // mouse down on top of content hover widget\r\n            return;\r\n        }\r\n        if (targetType === 12 /* OVERLAY_WIDGET */ && mouseEvent.target.detail === ModesGlyphHoverWidget.ID) {\r\n            // mouse down on top of overlay hover widget\r\n            return;\r\n        }\r\n        if (targetType !== 12 /* OVERLAY_WIDGET */ && mouseEvent.target.detail !== ModesGlyphHoverWidget.ID) {\r\n            this._hoverClicked = false;\r\n        }\r\n        this._hideWidgets();\r\n    }\r\n    _onEditorMouseUp(mouseEvent) {\r\n        this._isMouseDown = false;\r\n    }\r\n    _onEditorMouseMove(mouseEvent) {\r\n        var _a, _b, _c, _d, _e;\r\n        let targetType = mouseEvent.target.type;\r\n        if (this._isMouseDown && this._hoverClicked) {\r\n            return;\r\n        }\r\n        if (this._isHoverSticky && targetType === 9 /* CONTENT_WIDGET */ && mouseEvent.target.detail === ModesContentHoverWidget.ID) {\r\n            // mouse moved on top of content hover widget\r\n            return;\r\n        }\r\n        if (this._isHoverSticky && !((_b = (_a = mouseEvent.event.browserEvent.view) === null || _a === void 0 ? void 0 : _a.getSelection()) === null || _b === void 0 ? void 0 : _b.isCollapsed)) {\r\n            // selected text within content hover widget\r\n            return;\r\n        }\r\n        if (!this._isHoverSticky && targetType === 9 /* CONTENT_WIDGET */ && mouseEvent.target.detail === ModesContentHoverWidget.ID\r\n            && ((_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.isColorPickerVisible())) {\r\n            // though the hover is not sticky, the color picker needs to.\r\n            return;\r\n        }\r\n        if (this._isHoverSticky && targetType === 12 /* OVERLAY_WIDGET */ && mouseEvent.target.detail === ModesGlyphHoverWidget.ID) {\r\n            // mouse moved on top of overlay hover widget\r\n            return;\r\n        }\r\n        if (!this._isHoverEnabled) {\r\n            this._hideWidgets();\r\n            return;\r\n        }\r\n        const contentWidget = this._getOrCreateContentWidget();\r\n        if (contentWidget.maybeShowAt(mouseEvent)) {\r\n            (_d = this._glyphWidget) === null || _d === void 0 ? void 0 : _d.hide();\r\n            return;\r\n        }\r\n        if (targetType === 2 /* GUTTER_GLYPH_MARGIN */ && mouseEvent.target.position) {\r\n            (_e = this._contentWidget) === null || _e === void 0 ? void 0 : _e.hide();\r\n            if (!this._glyphWidget) {\r\n                this._glyphWidget = new ModesGlyphHoverWidget(this._editor, this._modeService, this._openerService);\r\n            }\r\n            this._glyphWidget.startShowingAt(mouseEvent.target.position.lineNumber);\r\n            return;\r\n        }\r\n        this._hideWidgets();\r\n    }\r\n    _onKeyDown(e) {\r\n        if (e.keyCode !== 5 /* Ctrl */ && e.keyCode !== 6 /* Alt */ && e.keyCode !== 57 /* Meta */ && e.keyCode !== 4 /* Shift */) {\r\n            // Do not hide hover when a modifier key is pressed\r\n            this._hideWidgets();\r\n        }\r\n    }\r\n    _hideWidgets() {\r\n        var _a, _b, _c;\r\n        if ((this._isMouseDown && this._hoverClicked && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()))) {\r\n            return;\r\n        }\r\n        this._hoverClicked = false;\r\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.hide();\r\n        (_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.hide();\r\n    }\r\n    _getOrCreateContentWidget() {\r\n        if (!this._contentWidget) {\r\n            this._contentWidget = this._instantiationService.createInstance(ModesContentHoverWidget, this._editor, this._hoverVisibleKey);\r\n        }\r\n        return this._contentWidget;\r\n    }\r\n    isColorPickerVisible() {\r\n        var _a;\r\n        return ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()) || false;\r\n    }\r\n    showContentHover(range, mode, focus) {\r\n        this._getOrCreateContentWidget().startShowingAtRange(range, mode, focus);\r\n    }\r\n    dispose() {\r\n        var _a, _b;\r\n        this._unhookEvents();\r\n        this._toUnhook.dispose();\r\n        this._didChangeConfigurationHandler.dispose();\r\n        (_a = this._glyphWidget) === null || _a === void 0 ? void 0 : _a.dispose();\r\n        (_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.dispose();\r\n    }\r\n};\r\nModesHoverController.ID = 'editor.contrib.hover';\r\nModesHoverController = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IOpenerService),\r\n    __param(3, IModeService),\r\n    __param(4, IContextKeyService)\r\n], ModesHoverController);\r\nexport { ModesHoverController };\r\nclass ShowHoverAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.showHover',\r\n            label: nls.localize({\r\n                key: 'showHover',\r\n                comment: [\r\n                    'Label for action that will trigger the showing of a hover in the editor.',\r\n                    'This allows for users to show the hover without using the mouse.'\r\n                ]\r\n            }, \"Show Hover\"),\r\n            alias: 'Show Hover',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 39 /* KEY_I */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        let controller = ModesHoverController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        const position = editor.getPosition();\r\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\r\n        const focus = editor.getOption(2 /* accessibilitySupport */) === 2 /* Enabled */;\r\n        controller.showContentHover(range, 1 /* Immediate */, focus);\r\n    }\r\n}\r\nclass ShowDefinitionPreviewHoverAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.showDefinitionPreviewHover',\r\n            label: nls.localize({\r\n                key: 'showDefinitionPreviewHover',\r\n                comment: [\r\n                    'Label for action that will trigger the showing of definition preview hover in the editor.',\r\n                    'This allows for users to show the definition preview hover without using the mouse.'\r\n                ]\r\n            }, \"Show Definition Preview Hover\"),\r\n            alias: 'Show Definition Preview Hover',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let controller = ModesHoverController.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        const position = editor.getPosition();\r\n        if (!position) {\r\n            return;\r\n        }\r\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\r\n        const goto = GotoDefinitionAtPositionEditorContribution.get(editor);\r\n        const promise = goto.startFindDefinitionFromCursor(position);\r\n        promise.then(() => {\r\n            controller.showContentHover(range, 1 /* Immediate */, true);\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(ModesHoverController.ID, ModesHoverController);\r\nregisterEditorAction(ShowHoverAction);\r\nregisterEditorAction(ShowDefinitionPreviewHoverAction);\r\n// theming\r\nregisterThemingParticipant((theme, collector) => {\r\n    const editorHoverHighlightColor = theme.getColor(editorHoverHighlight);\r\n    if (editorHoverHighlightColor) {\r\n        collector.addRule(`.monaco-editor .hoverHighlight { background-color: ${editorHoverHighlightColor}; }`);\r\n    }\r\n    const hoverBackground = theme.getColor(editorHoverBackground);\r\n    if (hoverBackground) {\r\n        collector.addRule(`.monaco-editor .monaco-hover { background-color: ${hoverBackground}; }`);\r\n    }\r\n    const hoverBorder = theme.getColor(editorHoverBorder);\r\n    if (hoverBorder) {\r\n        collector.addRule(`.monaco-editor .monaco-hover { border: 1px solid ${hoverBorder}; }`);\r\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\r\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\r\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(0.5)}; }`);\r\n    }\r\n    const link = theme.getColor(textLinkForeground);\r\n    if (link) {\r\n        collector.addRule(`.monaco-editor .monaco-hover a { color: ${link}; }`);\r\n    }\r\n    const linkHover = theme.getColor(textLinkActiveForeground);\r\n    if (linkHover) {\r\n        collector.addRule(`.monaco-editor .monaco-hover a:hover { color: ${linkHover}; }`);\r\n    }\r\n    const hoverForeground = theme.getColor(editorHoverForeground);\r\n    if (hoverForeground) {\r\n        collector.addRule(`.monaco-editor .monaco-hover { color: ${hoverForeground}; }`);\r\n    }\r\n    const actionsBackground = theme.getColor(editorHoverStatusBarBackground);\r\n    if (actionsBackground) {\r\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row .actions { background-color: ${actionsBackground}; }`);\r\n    }\r\n    const codeBackground = theme.getColor(textCodeBlockBackground);\r\n    if (codeBackground) {\r\n        collector.addRule(`.monaco-editor .monaco-hover code { background-color: ${codeBackground}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n// import color detector contribution\r\nimport './colorDetector.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ModesHoverController } from '../hover/hover.js';\r\nimport { Range } from '../../common/core/range.js';\r\nexport class ColorContribution extends Disposable {\r\n    constructor(_editor) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._register(_editor.onMouseDown((e) => this.onMouseDown(e)));\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n    onMouseDown(mouseEvent) {\r\n        var _a;\r\n        const targetType = mouseEvent.target.type;\r\n        if (targetType !== 6 /* CONTENT_TEXT */) {\r\n            return;\r\n        }\r\n        const hoverOnColorDecorator = [...((_a = mouseEvent.target.element) === null || _a === void 0 ? void 0 : _a.classList.values()) || []].find(className => className.startsWith('ced-colorBox'));\r\n        if (!hoverOnColorDecorator) {\r\n            return;\r\n        }\r\n        if (!mouseEvent.target.range) {\r\n            return;\r\n        }\r\n        const hoverController = this._editor.getContribution(ModesHoverController.ID);\r\n        if (!hoverController.isColorPickerVisible()) {\r\n            const range = new Range(mouseEvent.target.range.startLineNumber, mouseEvent.target.range.startColumn + 1, mouseEvent.target.range.endLineNumber, mouseEvent.target.range.endColumn + 1);\r\n            hoverController.showContentHover(range, 0 /* Delayed */, false);\r\n        }\r\n    }\r\n}\r\nColorContribution.ID = 'editor.contrib.colorContribution'; // ms\r\nregisterEditorContribution(ColorContribution.ID, ColorContribution);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nexport class BlockCommentCommand {\r\n    constructor(selection, insertSpace) {\r\n        this._selection = selection;\r\n        this._insertSpace = insertSpace;\r\n        this._usedEndToken = null;\r\n    }\r\n    static _haystackHasNeedleAtOffset(haystack, needle, offset) {\r\n        if (offset < 0) {\r\n            return false;\r\n        }\r\n        const needleLength = needle.length;\r\n        const haystackLength = haystack.length;\r\n        if (offset + needleLength > haystackLength) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < needleLength; i++) {\r\n            const codeA = haystack.charCodeAt(offset + i);\r\n            const codeB = needle.charCodeAt(i);\r\n            if (codeA === codeB) {\r\n                continue;\r\n            }\r\n            if (codeA >= 65 /* A */ && codeA <= 90 /* Z */ && codeA + 32 === codeB) {\r\n                // codeA is upper-case variant of codeB\r\n                continue;\r\n            }\r\n            if (codeB >= 65 /* A */ && codeB <= 90 /* Z */ && codeB + 32 === codeA) {\r\n                // codeB is upper-case variant of codeA\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    _createOperationsForBlockComment(selection, startToken, endToken, insertSpace, model, builder) {\r\n        const startLineNumber = selection.startLineNumber;\r\n        const startColumn = selection.startColumn;\r\n        const endLineNumber = selection.endLineNumber;\r\n        const endColumn = selection.endColumn;\r\n        const startLineText = model.getLineContent(startLineNumber);\r\n        const endLineText = model.getLineContent(endLineNumber);\r\n        let startTokenIndex = startLineText.lastIndexOf(startToken, startColumn - 1 + startToken.length);\r\n        let endTokenIndex = endLineText.indexOf(endToken, endColumn - 1 - endToken.length);\r\n        if (startTokenIndex !== -1 && endTokenIndex !== -1) {\r\n            if (startLineNumber === endLineNumber) {\r\n                const lineBetweenTokens = startLineText.substring(startTokenIndex + startToken.length, endTokenIndex);\r\n                if (lineBetweenTokens.indexOf(endToken) >= 0) {\r\n                    // force to add a block comment\r\n                    startTokenIndex = -1;\r\n                    endTokenIndex = -1;\r\n                }\r\n            }\r\n            else {\r\n                const startLineAfterStartToken = startLineText.substring(startTokenIndex + startToken.length);\r\n                const endLineBeforeEndToken = endLineText.substring(0, endTokenIndex);\r\n                if (startLineAfterStartToken.indexOf(endToken) >= 0 || endLineBeforeEndToken.indexOf(endToken) >= 0) {\r\n                    // force to add a block comment\r\n                    startTokenIndex = -1;\r\n                    endTokenIndex = -1;\r\n                }\r\n            }\r\n        }\r\n        let ops;\r\n        if (startTokenIndex !== -1 && endTokenIndex !== -1) {\r\n            // Consider spaces as part of the comment tokens\r\n            if (insertSpace && startTokenIndex + startToken.length < startLineText.length && startLineText.charCodeAt(startTokenIndex + startToken.length) === 32 /* Space */) {\r\n                // Pretend the start token contains a trailing space\r\n                startToken = startToken + ' ';\r\n            }\r\n            if (insertSpace && endTokenIndex > 0 && endLineText.charCodeAt(endTokenIndex - 1) === 32 /* Space */) {\r\n                // Pretend the end token contains a leading space\r\n                endToken = ' ' + endToken;\r\n                endTokenIndex -= 1;\r\n            }\r\n            ops = BlockCommentCommand._createRemoveBlockCommentOperations(new Range(startLineNumber, startTokenIndex + startToken.length + 1, endLineNumber, endTokenIndex + 1), startToken, endToken);\r\n        }\r\n        else {\r\n            ops = BlockCommentCommand._createAddBlockCommentOperations(selection, startToken, endToken, this._insertSpace);\r\n            this._usedEndToken = ops.length === 1 ? endToken : null;\r\n        }\r\n        for (const op of ops) {\r\n            builder.addTrackedEditOperation(op.range, op.text);\r\n        }\r\n    }\r\n    static _createRemoveBlockCommentOperations(r, startToken, endToken) {\r\n        let res = [];\r\n        if (!Range.isEmpty(r)) {\r\n            // Remove block comment start\r\n            res.push(EditOperation.delete(new Range(r.startLineNumber, r.startColumn - startToken.length, r.startLineNumber, r.startColumn)));\r\n            // Remove block comment end\r\n            res.push(EditOperation.delete(new Range(r.endLineNumber, r.endColumn, r.endLineNumber, r.endColumn + endToken.length)));\r\n        }\r\n        else {\r\n            // Remove both continuously\r\n            res.push(EditOperation.delete(new Range(r.startLineNumber, r.startColumn - startToken.length, r.endLineNumber, r.endColumn + endToken.length)));\r\n        }\r\n        return res;\r\n    }\r\n    static _createAddBlockCommentOperations(r, startToken, endToken, insertSpace) {\r\n        let res = [];\r\n        if (!Range.isEmpty(r)) {\r\n            // Insert block comment start\r\n            res.push(EditOperation.insert(new Position(r.startLineNumber, r.startColumn), startToken + (insertSpace ? ' ' : '')));\r\n            // Insert block comment end\r\n            res.push(EditOperation.insert(new Position(r.endLineNumber, r.endColumn), (insertSpace ? ' ' : '') + endToken));\r\n        }\r\n        else {\r\n            // Insert both continuously\r\n            res.push(EditOperation.replace(new Range(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn), startToken + '  ' + endToken));\r\n        }\r\n        return res;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        const startLineNumber = this._selection.startLineNumber;\r\n        const startColumn = this._selection.startColumn;\r\n        model.tokenizeIfCheap(startLineNumber);\r\n        const languageId = model.getLanguageIdAtPosition(startLineNumber, startColumn);\r\n        const config = LanguageConfigurationRegistry.getComments(languageId);\r\n        if (!config || !config.blockCommentStartToken || !config.blockCommentEndToken) {\r\n            // Mode does not support block comments\r\n            return;\r\n        }\r\n        this._createOperationsForBlockComment(this._selection, config.blockCommentStartToken, config.blockCommentEndToken, this._insertSpace, model, builder);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        const inverseEditOperations = helper.getInverseEditOperations();\r\n        if (inverseEditOperations.length === 2) {\r\n            const startTokenEditOperation = inverseEditOperations[0];\r\n            const endTokenEditOperation = inverseEditOperations[1];\r\n            return new Selection(startTokenEditOperation.range.endLineNumber, startTokenEditOperation.range.endColumn, endTokenEditOperation.range.startLineNumber, endTokenEditOperation.range.startColumn);\r\n        }\r\n        else {\r\n            const srcRange = inverseEditOperations[0].range;\r\n            const deltaColumn = this._usedEndToken ? -this._usedEndToken.length - 1 : 0; // minus 1 space before endToken\r\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn + deltaColumn, srcRange.endLineNumber, srcRange.endColumn + deltaColumn);\r\n        }\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { BlockCommentCommand } from './blockCommentCommand.js';\r\nexport class LineCommentCommand {\r\n    constructor(selection, tabSize, type, insertSpace, ignoreEmptyLines, ignoreFirstLine) {\r\n        this._selection = selection;\r\n        this._tabSize = tabSize;\r\n        this._type = type;\r\n        this._insertSpace = insertSpace;\r\n        this._selectionId = null;\r\n        this._deltaColumn = 0;\r\n        this._moveEndPositionDown = false;\r\n        this._ignoreEmptyLines = ignoreEmptyLines;\r\n        this._ignoreFirstLine = ignoreFirstLine || false;\r\n    }\r\n    /**\r\n     * Do an initial pass over the lines and gather info about the line comment string.\r\n     * Returns null if any of the lines doesn't support a line comment string.\r\n     */\r\n    static _gatherPreflightCommentStrings(model, startLineNumber, endLineNumber) {\r\n        model.tokenizeIfCheap(startLineNumber);\r\n        const languageId = model.getLanguageIdAtPosition(startLineNumber, 1);\r\n        const config = LanguageConfigurationRegistry.getComments(languageId);\r\n        const commentStr = (config ? config.lineCommentToken : null);\r\n        if (!commentStr) {\r\n            // Mode does not support line comments\r\n            return null;\r\n        }\r\n        let lines = [];\r\n        for (let i = 0, lineCount = endLineNumber - startLineNumber + 1; i < lineCount; i++) {\r\n            lines[i] = {\r\n                ignore: false,\r\n                commentStr: commentStr,\r\n                commentStrOffset: 0,\r\n                commentStrLength: commentStr.length\r\n            };\r\n        }\r\n        return lines;\r\n    }\r\n    /**\r\n     * Analyze lines and decide which lines are relevant and what the toggle should do.\r\n     * Also, build up several offsets and lengths useful in the generation of editor operations.\r\n     */\r\n    static _analyzeLines(type, insertSpace, model, lines, startLineNumber, ignoreEmptyLines, ignoreFirstLine) {\r\n        let onlyWhitespaceLines = true;\r\n        let shouldRemoveComments;\r\n        if (type === 0 /* Toggle */) {\r\n            shouldRemoveComments = true;\r\n        }\r\n        else if (type === 1 /* ForceAdd */) {\r\n            shouldRemoveComments = false;\r\n        }\r\n        else {\r\n            shouldRemoveComments = true;\r\n        }\r\n        for (let i = 0, lineCount = lines.length; i < lineCount; i++) {\r\n            const lineData = lines[i];\r\n            const lineNumber = startLineNumber + i;\r\n            if (lineNumber === startLineNumber && ignoreFirstLine) {\r\n                // first line ignored\r\n                lineData.ignore = true;\r\n                continue;\r\n            }\r\n            const lineContent = model.getLineContent(lineNumber);\r\n            const lineContentStartOffset = strings.firstNonWhitespaceIndex(lineContent);\r\n            if (lineContentStartOffset === -1) {\r\n                // Empty or whitespace only line\r\n                lineData.ignore = ignoreEmptyLines;\r\n                lineData.commentStrOffset = lineContent.length;\r\n                continue;\r\n            }\r\n            onlyWhitespaceLines = false;\r\n            lineData.ignore = false;\r\n            lineData.commentStrOffset = lineContentStartOffset;\r\n            if (shouldRemoveComments && !BlockCommentCommand._haystackHasNeedleAtOffset(lineContent, lineData.commentStr, lineContentStartOffset)) {\r\n                if (type === 0 /* Toggle */) {\r\n                    // Every line so far has been a line comment, but this one is not\r\n                    shouldRemoveComments = false;\r\n                }\r\n                else if (type === 1 /* ForceAdd */) {\r\n                    // Will not happen\r\n                }\r\n                else {\r\n                    lineData.ignore = true;\r\n                }\r\n            }\r\n            if (shouldRemoveComments && insertSpace) {\r\n                // Remove a following space if present\r\n                const commentStrEndOffset = lineContentStartOffset + lineData.commentStrLength;\r\n                if (commentStrEndOffset < lineContent.length && lineContent.charCodeAt(commentStrEndOffset) === 32 /* Space */) {\r\n                    lineData.commentStrLength += 1;\r\n                }\r\n            }\r\n        }\r\n        if (type === 0 /* Toggle */ && onlyWhitespaceLines) {\r\n            // For only whitespace lines, we insert comments\r\n            shouldRemoveComments = false;\r\n            // Also, no longer ignore them\r\n            for (let i = 0, lineCount = lines.length; i < lineCount; i++) {\r\n                lines[i].ignore = false;\r\n            }\r\n        }\r\n        return {\r\n            supported: true,\r\n            shouldRemoveComments: shouldRemoveComments,\r\n            lines: lines\r\n        };\r\n    }\r\n    /**\r\n     * Analyze all lines and decide exactly what to do => not supported | insert line comments | remove line comments\r\n     */\r\n    static _gatherPreflightData(type, insertSpace, model, startLineNumber, endLineNumber, ignoreEmptyLines, ignoreFirstLine) {\r\n        const lines = LineCommentCommand._gatherPreflightCommentStrings(model, startLineNumber, endLineNumber);\r\n        if (lines === null) {\r\n            return {\r\n                supported: false\r\n            };\r\n        }\r\n        return LineCommentCommand._analyzeLines(type, insertSpace, model, lines, startLineNumber, ignoreEmptyLines, ignoreFirstLine);\r\n    }\r\n    /**\r\n     * Given a successful analysis, execute either insert line comments, either remove line comments\r\n     */\r\n    _executeLineComments(model, builder, data, s) {\r\n        let ops;\r\n        if (data.shouldRemoveComments) {\r\n            ops = LineCommentCommand._createRemoveLineCommentsOperations(data.lines, s.startLineNumber);\r\n        }\r\n        else {\r\n            LineCommentCommand._normalizeInsertionPoint(model, data.lines, s.startLineNumber, this._tabSize);\r\n            ops = this._createAddLineCommentsOperations(data.lines, s.startLineNumber);\r\n        }\r\n        const cursorPosition = new Position(s.positionLineNumber, s.positionColumn);\r\n        for (let i = 0, len = ops.length; i < len; i++) {\r\n            builder.addEditOperation(ops[i].range, ops[i].text);\r\n            if (Range.isEmpty(ops[i].range) && Range.getStartPosition(ops[i].range).equals(cursorPosition)) {\r\n                const lineContent = model.getLineContent(cursorPosition.lineNumber);\r\n                if (lineContent.length + 1 === cursorPosition.column) {\r\n                    this._deltaColumn = (ops[i].text || '').length;\r\n                }\r\n            }\r\n        }\r\n        this._selectionId = builder.trackSelection(s);\r\n    }\r\n    _attemptRemoveBlockComment(model, s, startToken, endToken) {\r\n        let startLineNumber = s.startLineNumber;\r\n        let endLineNumber = s.endLineNumber;\r\n        let startTokenAllowedBeforeColumn = endToken.length + Math.max(model.getLineFirstNonWhitespaceColumn(s.startLineNumber), s.startColumn);\r\n        let startTokenIndex = model.getLineContent(startLineNumber).lastIndexOf(startToken, startTokenAllowedBeforeColumn - 1);\r\n        let endTokenIndex = model.getLineContent(endLineNumber).indexOf(endToken, s.endColumn - 1 - startToken.length);\r\n        if (startTokenIndex !== -1 && endTokenIndex === -1) {\r\n            endTokenIndex = model.getLineContent(startLineNumber).indexOf(endToken, startTokenIndex + startToken.length);\r\n            endLineNumber = startLineNumber;\r\n        }\r\n        if (startTokenIndex === -1 && endTokenIndex !== -1) {\r\n            startTokenIndex = model.getLineContent(endLineNumber).lastIndexOf(startToken, endTokenIndex);\r\n            startLineNumber = endLineNumber;\r\n        }\r\n        if (s.isEmpty() && (startTokenIndex === -1 || endTokenIndex === -1)) {\r\n            startTokenIndex = model.getLineContent(startLineNumber).indexOf(startToken);\r\n            if (startTokenIndex !== -1) {\r\n                endTokenIndex = model.getLineContent(startLineNumber).indexOf(endToken, startTokenIndex + startToken.length);\r\n            }\r\n        }\r\n        // We have to adjust to possible inner white space.\r\n        // For Space after startToken, add Space to startToken - range math will work out.\r\n        if (startTokenIndex !== -1 && model.getLineContent(startLineNumber).charCodeAt(startTokenIndex + startToken.length) === 32 /* Space */) {\r\n            startToken += ' ';\r\n        }\r\n        // For Space before endToken, add Space before endToken and shift index one left.\r\n        if (endTokenIndex !== -1 && model.getLineContent(endLineNumber).charCodeAt(endTokenIndex - 1) === 32 /* Space */) {\r\n            endToken = ' ' + endToken;\r\n            endTokenIndex -= 1;\r\n        }\r\n        if (startTokenIndex !== -1 && endTokenIndex !== -1) {\r\n            return BlockCommentCommand._createRemoveBlockCommentOperations(new Range(startLineNumber, startTokenIndex + startToken.length + 1, endLineNumber, endTokenIndex + 1), startToken, endToken);\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Given an unsuccessful analysis, delegate to the block comment command\r\n     */\r\n    _executeBlockComment(model, builder, s) {\r\n        model.tokenizeIfCheap(s.startLineNumber);\r\n        let languageId = model.getLanguageIdAtPosition(s.startLineNumber, 1);\r\n        let config = LanguageConfigurationRegistry.getComments(languageId);\r\n        if (!config || !config.blockCommentStartToken || !config.blockCommentEndToken) {\r\n            // Mode does not support block comments\r\n            return;\r\n        }\r\n        const startToken = config.blockCommentStartToken;\r\n        const endToken = config.blockCommentEndToken;\r\n        let ops = this._attemptRemoveBlockComment(model, s, startToken, endToken);\r\n        if (!ops) {\r\n            if (s.isEmpty()) {\r\n                const lineContent = model.getLineContent(s.startLineNumber);\r\n                let firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\r\n                if (firstNonWhitespaceIndex === -1) {\r\n                    // Line is empty or contains only whitespace\r\n                    firstNonWhitespaceIndex = lineContent.length;\r\n                }\r\n                ops = BlockCommentCommand._createAddBlockCommentOperations(new Range(s.startLineNumber, firstNonWhitespaceIndex + 1, s.startLineNumber, lineContent.length + 1), startToken, endToken, this._insertSpace);\r\n            }\r\n            else {\r\n                ops = BlockCommentCommand._createAddBlockCommentOperations(new Range(s.startLineNumber, model.getLineFirstNonWhitespaceColumn(s.startLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), startToken, endToken, this._insertSpace);\r\n            }\r\n            if (ops.length === 1) {\r\n                // Leave cursor after token and Space\r\n                this._deltaColumn = startToken.length + 1;\r\n            }\r\n        }\r\n        this._selectionId = builder.trackSelection(s);\r\n        for (const op of ops) {\r\n            builder.addEditOperation(op.range, op.text);\r\n        }\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let s = this._selection;\r\n        this._moveEndPositionDown = false;\r\n        if (s.startLineNumber === s.endLineNumber && this._ignoreFirstLine) {\r\n            builder.addEditOperation(new Range(s.startLineNumber, model.getLineMaxColumn(s.startLineNumber), s.startLineNumber + 1, 1), s.startLineNumber === model.getLineCount() ? '' : '\\n');\r\n            this._selectionId = builder.trackSelection(s);\r\n            return;\r\n        }\r\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\r\n            this._moveEndPositionDown = true;\r\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\r\n        }\r\n        const data = LineCommentCommand._gatherPreflightData(this._type, this._insertSpace, model, s.startLineNumber, s.endLineNumber, this._ignoreEmptyLines, this._ignoreFirstLine);\r\n        if (data.supported) {\r\n            return this._executeLineComments(model, builder, data, s);\r\n        }\r\n        return this._executeBlockComment(model, builder, s);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        let result = helper.getTrackedSelection(this._selectionId);\r\n        if (this._moveEndPositionDown) {\r\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\r\n        }\r\n        return new Selection(result.selectionStartLineNumber, result.selectionStartColumn + this._deltaColumn, result.positionLineNumber, result.positionColumn + this._deltaColumn);\r\n    }\r\n    /**\r\n     * Generate edit operations in the remove line comment case\r\n     */\r\n    static _createRemoveLineCommentsOperations(lines, startLineNumber) {\r\n        let res = [];\r\n        for (let i = 0, len = lines.length; i < len; i++) {\r\n            const lineData = lines[i];\r\n            if (lineData.ignore) {\r\n                continue;\r\n            }\r\n            res.push(EditOperation.delete(new Range(startLineNumber + i, lineData.commentStrOffset + 1, startLineNumber + i, lineData.commentStrOffset + lineData.commentStrLength + 1)));\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Generate edit operations in the add line comment case\r\n     */\r\n    _createAddLineCommentsOperations(lines, startLineNumber) {\r\n        let res = [];\r\n        const afterCommentStr = this._insertSpace ? ' ' : '';\r\n        for (let i = 0, len = lines.length; i < len; i++) {\r\n            const lineData = lines[i];\r\n            if (lineData.ignore) {\r\n                continue;\r\n            }\r\n            res.push(EditOperation.insert(new Position(startLineNumber + i, lineData.commentStrOffset + 1), lineData.commentStr + afterCommentStr));\r\n        }\r\n        return res;\r\n    }\r\n    static nextVisibleColumn(currentVisibleColumn, tabSize, isTab, columnSize) {\r\n        if (isTab) {\r\n            return currentVisibleColumn + (tabSize - (currentVisibleColumn % tabSize));\r\n        }\r\n        return currentVisibleColumn + columnSize;\r\n    }\r\n    /**\r\n     * Adjust insertion points to have them vertically aligned in the add line comment case\r\n     */\r\n    static _normalizeInsertionPoint(model, lines, startLineNumber, tabSize) {\r\n        let minVisibleColumn = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\r\n        let j;\r\n        let lenJ;\r\n        for (let i = 0, len = lines.length; i < len; i++) {\r\n            if (lines[i].ignore) {\r\n                continue;\r\n            }\r\n            const lineContent = model.getLineContent(startLineNumber + i);\r\n            let currentVisibleColumn = 0;\r\n            for (let j = 0, lenJ = lines[i].commentStrOffset; currentVisibleColumn < minVisibleColumn && j < lenJ; j++) {\r\n                currentVisibleColumn = LineCommentCommand.nextVisibleColumn(currentVisibleColumn, tabSize, lineContent.charCodeAt(j) === 9 /* Tab */, 1);\r\n            }\r\n            if (currentVisibleColumn < minVisibleColumn) {\r\n                minVisibleColumn = currentVisibleColumn;\r\n            }\r\n        }\r\n        minVisibleColumn = Math.floor(minVisibleColumn / tabSize) * tabSize;\r\n        for (let i = 0, len = lines.length; i < len; i++) {\r\n            if (lines[i].ignore) {\r\n                continue;\r\n            }\r\n            const lineContent = model.getLineContent(startLineNumber + i);\r\n            let currentVisibleColumn = 0;\r\n            for (j = 0, lenJ = lines[i].commentStrOffset; currentVisibleColumn < minVisibleColumn && j < lenJ; j++) {\r\n                currentVisibleColumn = LineCommentCommand.nextVisibleColumn(currentVisibleColumn, tabSize, lineContent.charCodeAt(j) === 9 /* Tab */, 1);\r\n            }\r\n            if (currentVisibleColumn > minVisibleColumn) {\r\n                lines[i].commentStrOffset = j - 1;\r\n            }\r\n            else {\r\n                lines[i].commentStrOffset = j;\r\n            }\r\n        }\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { BlockCommentCommand } from './blockCommentCommand.js';\r\nimport { LineCommentCommand } from './lineCommentCommand.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nclass CommentLineAction extends EditorAction {\r\n    constructor(type, opts) {\r\n        super(opts);\r\n        this._type = type;\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = editor.getModel();\r\n        const commands = [];\r\n        const modelOptions = model.getOptions();\r\n        const commentsOptions = editor.getOption(17 /* comments */);\r\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignoreFirstLine: false }));\r\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\r\n        // Remove selections that would result in copying the same line\r\n        let prev = selections[0];\r\n        for (let i = 1; i < selections.length; i++) {\r\n            const curr = selections[i];\r\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\r\n                // these two selections would copy the same line\r\n                if (prev.index < curr.index) {\r\n                    // prev wins\r\n                    curr.ignoreFirstLine = true;\r\n                }\r\n                else {\r\n                    // curr wins\r\n                    prev.ignoreFirstLine = true;\r\n                    prev = curr;\r\n                }\r\n            }\r\n        }\r\n        for (const selection of selections) {\r\n            commands.push(new LineCommentCommand(selection.selection, modelOptions.tabSize, this._type, commentsOptions.insertSpace, commentsOptions.ignoreEmptyLines, selection.ignoreFirstLine));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nclass ToggleCommentLineAction extends CommentLineAction {\r\n    constructor() {\r\n        super(0 /* Toggle */, {\r\n            id: 'editor.action.commentLine',\r\n            label: nls.localize('comment.line', \"Toggle Line Comment\"),\r\n            alias: 'Toggle Line Comment',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 85 /* US_SLASH */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarEditMenu,\r\n                group: '5_insert',\r\n                title: nls.localize({ key: 'miToggleLineComment', comment: ['&& denotes a mnemonic'] }, \"&&Toggle Line Comment\"),\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n}\r\nclass AddLineCommentAction extends CommentLineAction {\r\n    constructor() {\r\n        super(1 /* ForceAdd */, {\r\n            id: 'editor.action.addCommentLine',\r\n            label: nls.localize('comment.line.add', \"Add Line Comment\"),\r\n            alias: 'Add Line Comment',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 33 /* KEY_C */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nclass RemoveLineCommentAction extends CommentLineAction {\r\n    constructor() {\r\n        super(2 /* ForceRemove */, {\r\n            id: 'editor.action.removeCommentLine',\r\n            label: nls.localize('comment.line.remove', \"Remove Line Comment\"),\r\n            alias: 'Remove Line Comment',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 51 /* KEY_U */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nclass BlockCommentAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.blockComment',\r\n            label: nls.localize('comment.block', \"Toggle Block Comment\"),\r\n            alias: 'Toggle Block Comment',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 31 /* KEY_A */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 31 /* KEY_A */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarEditMenu,\r\n                group: '5_insert',\r\n                title: nls.localize({ key: 'miToggleBlockComment', comment: ['&& denotes a mnemonic'] }, \"Toggle &&Block Comment\"),\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const commentsOptions = editor.getOption(17 /* comments */);\r\n        const commands = [];\r\n        const selections = editor.getSelections();\r\n        for (const selection of selections) {\r\n            commands.push(new BlockCommentCommand(selection, commentsOptions.insertSpace));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nregisterEditorAction(ToggleCommentLineAction);\r\nregisterEditorAction(AddLineCommentAction);\r\nregisterEditorAction(RemoveLineCommentAction);\r\nregisterEditorAction(BlockCommentAction);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { Separator, SubmenuAction } from '../../../base/common/actions.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { IMenuService, MenuId, SubmenuItemAction } from '../../../platform/actions/common/actions.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { ActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\r\nimport { isIOS } from '../../../base/common/platform.js';\r\nlet ContextMenuController = class ContextMenuController {\r\n    constructor(editor, _contextMenuService, _contextViewService, _contextKeyService, _keybindingService, _menuService) {\r\n        this._contextMenuService = _contextMenuService;\r\n        this._contextViewService = _contextViewService;\r\n        this._contextKeyService = _contextKeyService;\r\n        this._keybindingService = _keybindingService;\r\n        this._menuService = _menuService;\r\n        this._toDispose = new DisposableStore();\r\n        this._contextMenuIsBeingShownCount = 0;\r\n        this._editor = editor;\r\n        this._toDispose.add(this._editor.onContextMenu((e) => this._onContextMenu(e)));\r\n        this._toDispose.add(this._editor.onMouseWheel((e) => {\r\n            if (this._contextMenuIsBeingShownCount > 0) {\r\n                const view = this._contextViewService.getContextViewElement();\r\n                const target = e.srcElement;\r\n                // Event triggers on shadow root host first\r\n                // Check if the context view is under this host before hiding it #103169\r\n                if (!(target.shadowRoot && dom.getShadowRoot(view) === target.shadowRoot)) {\r\n                    this._contextViewService.hideContextView();\r\n                }\r\n            }\r\n        }));\r\n        this._toDispose.add(this._editor.onKeyDown((e) => {\r\n            if (e.keyCode === 58 /* ContextMenu */) {\r\n                // Chrome is funny like that\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                this.showContextMenu();\r\n            }\r\n        }));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(ContextMenuController.ID);\r\n    }\r\n    _onContextMenu(e) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (!this._editor.getOption(18 /* contextmenu */)) {\r\n            this._editor.focus();\r\n            // Ensure the cursor is at the position of the mouse click\r\n            if (e.target.position && !this._editor.getSelection().containsPosition(e.target.position)) {\r\n                this._editor.setPosition(e.target.position);\r\n            }\r\n            return; // Context menu is turned off through configuration\r\n        }\r\n        if (e.target.type === 12 /* OVERLAY_WIDGET */) {\r\n            return; // allow native menu on widgets to support right click on input field for example in find\r\n        }\r\n        e.event.preventDefault();\r\n        if (e.target.type !== 6 /* CONTENT_TEXT */ && e.target.type !== 7 /* CONTENT_EMPTY */ && e.target.type !== 1 /* TEXTAREA */) {\r\n            return; // only support mouse click into text or native context menu key for now\r\n        }\r\n        // Ensure the editor gets focus if it hasn't, so the right events are being sent to other contributions\r\n        this._editor.focus();\r\n        // Ensure the cursor is at the position of the mouse click\r\n        if (e.target.position) {\r\n            let hasSelectionAtPosition = false;\r\n            for (const selection of this._editor.getSelections()) {\r\n                if (selection.containsPosition(e.target.position)) {\r\n                    hasSelectionAtPosition = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!hasSelectionAtPosition) {\r\n                this._editor.setPosition(e.target.position);\r\n            }\r\n        }\r\n        // Unless the user triggerd the context menu through Shift+F10, use the mouse position as menu position\r\n        let anchor = null;\r\n        if (e.target.type !== 1 /* TEXTAREA */) {\r\n            anchor = { x: e.event.posx - 1, width: 2, y: e.event.posy - 1, height: 2 };\r\n        }\r\n        // Show the context menu\r\n        this.showContextMenu(anchor);\r\n    }\r\n    showContextMenu(anchor) {\r\n        if (!this._editor.getOption(18 /* contextmenu */)) {\r\n            return; // Context menu is turned off through configuration\r\n        }\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (!this._contextMenuService) {\r\n            this._editor.focus();\r\n            return; // We need the context menu service to function\r\n        }\r\n        // Find actions available for menu\r\n        const menuActions = this._getMenuActions(this._editor.getModel(), this._editor.isSimpleWidget ? MenuId.SimpleEditorContext : MenuId.EditorContext);\r\n        // Show menu if we have actions to show\r\n        if (menuActions.length > 0) {\r\n            this._doShowContextMenu(menuActions, anchor);\r\n        }\r\n    }\r\n    _getMenuActions(model, menuId) {\r\n        const result = [];\r\n        // get menu groups\r\n        const menu = this._menuService.createMenu(menuId, this._contextKeyService);\r\n        const groups = menu.getActions({ arg: model.uri });\r\n        menu.dispose();\r\n        // translate them into other actions\r\n        for (let group of groups) {\r\n            const [, actions] = group;\r\n            let addedItems = 0;\r\n            for (const action of actions) {\r\n                if (action instanceof SubmenuItemAction) {\r\n                    const subActions = this._getMenuActions(model, action.item.submenu);\r\n                    if (subActions.length > 0) {\r\n                        result.push(new SubmenuAction(action.id, action.label, subActions));\r\n                        addedItems++;\r\n                    }\r\n                }\r\n                else {\r\n                    result.push(action);\r\n                    addedItems++;\r\n                }\r\n            }\r\n            if (addedItems) {\r\n                result.push(new Separator());\r\n            }\r\n        }\r\n        if (result.length) {\r\n            result.pop(); // remove last separator\r\n        }\r\n        return result;\r\n    }\r\n    _doShowContextMenu(actions, anchor = null) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // Disable hover\r\n        const oldHoverSetting = this._editor.getOption(50 /* hover */);\r\n        this._editor.updateOptions({\r\n            hover: {\r\n                enabled: false\r\n            }\r\n        });\r\n        if (!anchor) {\r\n            // Ensure selection is visible\r\n            this._editor.revealPosition(this._editor.getPosition(), 1 /* Immediate */);\r\n            this._editor.render();\r\n            const cursorCoords = this._editor.getScrolledVisiblePosition(this._editor.getPosition());\r\n            // Translate to absolute editor position\r\n            const editorCoords = dom.getDomNodePagePosition(this._editor.getDomNode());\r\n            const posx = editorCoords.left + cursorCoords.left;\r\n            const posy = editorCoords.top + cursorCoords.top + cursorCoords.height;\r\n            anchor = { x: posx, y: posy };\r\n        }\r\n        const useShadowDOM = this._editor.getOption(112 /* useShadowDOM */) && !isIOS; // Do not use shadow dom on IOS #122035\r\n        // Show menu\r\n        this._contextMenuIsBeingShownCount++;\r\n        this._contextMenuService.showContextMenu({\r\n            domForShadowRoot: useShadowDOM ? this._editor.getDomNode() : undefined,\r\n            getAnchor: () => anchor,\r\n            getActions: () => actions,\r\n            getActionViewItem: (action) => {\r\n                const keybinding = this._keybindingFor(action);\r\n                if (keybinding) {\r\n                    return new ActionViewItem(action, action, { label: true, keybinding: keybinding.getLabel(), isMenu: true });\r\n                }\r\n                const customActionViewItem = action;\r\n                if (typeof customActionViewItem.getActionViewItem === 'function') {\r\n                    return customActionViewItem.getActionViewItem();\r\n                }\r\n                return new ActionViewItem(action, action, { icon: true, label: true, isMenu: true });\r\n            },\r\n            getKeyBinding: (action) => {\r\n                return this._keybindingFor(action);\r\n            },\r\n            onHide: (wasCancelled) => {\r\n                this._contextMenuIsBeingShownCount--;\r\n                this._editor.focus();\r\n                this._editor.updateOptions({\r\n                    hover: oldHoverSetting\r\n                });\r\n            }\r\n        });\r\n    }\r\n    _keybindingFor(action) {\r\n        return this._keybindingService.lookupKeybinding(action.id);\r\n    }\r\n    dispose() {\r\n        if (this._contextMenuIsBeingShownCount > 0) {\r\n            this._contextViewService.hideContextView();\r\n        }\r\n        this._toDispose.dispose();\r\n    }\r\n};\r\nContextMenuController.ID = 'editor.contrib.contextmenu';\r\nContextMenuController = __decorate([\r\n    __param(1, IContextMenuService),\r\n    __param(2, IContextViewService),\r\n    __param(3, IContextKeyService),\r\n    __param(4, IKeybindingService),\r\n    __param(5, IMenuService)\r\n], ContextMenuController);\r\nexport { ContextMenuController };\r\nclass ShowContextMenu extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.showContextMenu',\r\n            label: nls.localize('action.showContextMenu.label', \"Show Editor Context Menu\"),\r\n            alias: 'Show Editor Context Menu',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 1024 /* Shift */ | 68 /* F10 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let contribution = ContextMenuController.get(editor);\r\n        contribution.showContextMenu();\r\n    }\r\n}\r\nregisterEditorContribution(ContextMenuController.ID, ContextMenuController);\r\nregisterEditorAction(ShowContextMenu);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nclass CursorState {\r\n    constructor(selections) {\r\n        this.selections = selections;\r\n    }\r\n    equals(other) {\r\n        const thisLen = this.selections.length;\r\n        const otherLen = other.selections.length;\r\n        if (thisLen !== otherLen) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < thisLen; i++) {\r\n            if (!this.selections[i].equalsSelection(other.selections[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\nclass StackElement {\r\n    constructor(cursorState, scrollTop, scrollLeft) {\r\n        this.cursorState = cursorState;\r\n        this.scrollTop = scrollTop;\r\n        this.scrollLeft = scrollLeft;\r\n    }\r\n}\r\nexport class CursorUndoRedoController extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._editor = editor;\r\n        this._isCursorUndoRedo = false;\r\n        this._undoStack = [];\r\n        this._redoStack = [];\r\n        this._register(editor.onDidChangeModel((e) => {\r\n            this._undoStack = [];\r\n            this._redoStack = [];\r\n        }));\r\n        this._register(editor.onDidChangeModelContent((e) => {\r\n            this._undoStack = [];\r\n            this._redoStack = [];\r\n        }));\r\n        this._register(editor.onDidChangeCursorSelection((e) => {\r\n            if (this._isCursorUndoRedo) {\r\n                return;\r\n            }\r\n            if (!e.oldSelections) {\r\n                return;\r\n            }\r\n            if (e.oldModelVersionId !== e.modelVersionId) {\r\n                return;\r\n            }\r\n            const prevState = new CursorState(e.oldSelections);\r\n            const isEqualToLastUndoStack = (this._undoStack.length > 0 && this._undoStack[this._undoStack.length - 1].cursorState.equals(prevState));\r\n            if (!isEqualToLastUndoStack) {\r\n                this._undoStack.push(new StackElement(prevState, editor.getScrollTop(), editor.getScrollLeft()));\r\n                this._redoStack = [];\r\n                if (this._undoStack.length > 50) {\r\n                    // keep the cursor undo stack bounded\r\n                    this._undoStack.shift();\r\n                }\r\n            }\r\n        }));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(CursorUndoRedoController.ID);\r\n    }\r\n    cursorUndo() {\r\n        if (!this._editor.hasModel() || this._undoStack.length === 0) {\r\n            return;\r\n        }\r\n        this._redoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\r\n        this._applyState(this._undoStack.pop());\r\n    }\r\n    cursorRedo() {\r\n        if (!this._editor.hasModel() || this._redoStack.length === 0) {\r\n            return;\r\n        }\r\n        this._undoStack.push(new StackElement(new CursorState(this._editor.getSelections()), this._editor.getScrollTop(), this._editor.getScrollLeft()));\r\n        this._applyState(this._redoStack.pop());\r\n    }\r\n    _applyState(stackElement) {\r\n        this._isCursorUndoRedo = true;\r\n        this._editor.setSelections(stackElement.cursorState.selections);\r\n        this._editor.setScrollPosition({\r\n            scrollTop: stackElement.scrollTop,\r\n            scrollLeft: stackElement.scrollLeft\r\n        });\r\n        this._isCursorUndoRedo = false;\r\n    }\r\n}\r\nCursorUndoRedoController.ID = 'editor.contrib.cursorUndoRedoController';\r\nexport class CursorUndo extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'cursorUndo',\r\n            label: nls.localize('cursor.undo', \"Cursor Undo\"),\r\n            alias: 'Cursor Undo',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 51 /* KEY_U */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        CursorUndoRedoController.get(editor).cursorUndo();\r\n    }\r\n}\r\nexport class CursorRedo extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'cursorRedo',\r\n            label: nls.localize('cursor.redo', \"Cursor Redo\"),\r\n            alias: 'Cursor Redo',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        CursorUndoRedoController.get(editor).cursorRedo();\r\n    }\r\n}\r\nregisterEditorContribution(CursorUndoRedoController.ID, CursorUndoRedoController);\r\nregisterEditorAction(CursorUndo);\r\nregisterEditorAction(CursorRedo);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './dnd.css';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { isMacintosh } from '../../../base/common/platform.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nfunction hasTriggerModifier(e) {\r\n    if (isMacintosh) {\r\n        return e.altKey;\r\n    }\r\n    else {\r\n        return e.ctrlKey;\r\n    }\r\n}\r\nexport class DragAndDropController extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._editor = editor;\r\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\r\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\r\n        this._register(this._editor.onMouseDrag((e) => this._onEditorMouseDrag(e)));\r\n        this._register(this._editor.onMouseDrop((e) => this._onEditorMouseDrop(e)));\r\n        this._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\r\n        this._register(this._editor.onKeyDown((e) => this.onEditorKeyDown(e)));\r\n        this._register(this._editor.onKeyUp((e) => this.onEditorKeyUp(e)));\r\n        this._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\r\n        this._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\r\n        this._dndDecorationIds = [];\r\n        this._mouseDown = false;\r\n        this._modifierPressed = false;\r\n        this._dragSelection = null;\r\n    }\r\n    onEditorBlur() {\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n        this._modifierPressed = false;\r\n    }\r\n    onEditorKeyDown(e) {\r\n        if (!this._editor.getOption(29 /* dragAndDrop */) || this._editor.getOption(16 /* columnSelection */)) {\r\n            return;\r\n        }\r\n        if (hasTriggerModifier(e)) {\r\n            this._modifierPressed = true;\r\n        }\r\n        if (this._mouseDown && hasTriggerModifier(e)) {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'copy'\r\n            });\r\n        }\r\n    }\r\n    onEditorKeyUp(e) {\r\n        if (!this._editor.getOption(29 /* dragAndDrop */) || this._editor.getOption(16 /* columnSelection */)) {\r\n            return;\r\n        }\r\n        if (hasTriggerModifier(e)) {\r\n            this._modifierPressed = false;\r\n        }\r\n        if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'default'\r\n            });\r\n        }\r\n    }\r\n    _onEditorMouseDown(mouseEvent) {\r\n        this._mouseDown = true;\r\n    }\r\n    _onEditorMouseUp(mouseEvent) {\r\n        this._mouseDown = false;\r\n        // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\r\n        this._editor.updateOptions({\r\n            mouseStyle: 'text'\r\n        });\r\n    }\r\n    _onEditorMouseDrag(mouseEvent) {\r\n        let target = mouseEvent.target;\r\n        if (this._dragSelection === null) {\r\n            const selections = this._editor.getSelections() || [];\r\n            let possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\r\n            if (possibleSelections.length === 1) {\r\n                this._dragSelection = possibleSelections[0];\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        if (hasTriggerModifier(mouseEvent.event)) {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'copy'\r\n            });\r\n        }\r\n        else {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'default'\r\n            });\r\n        }\r\n        if (target.position) {\r\n            if (this._dragSelection.containsPosition(target.position)) {\r\n                this._removeDecoration();\r\n            }\r\n            else {\r\n                this.showAt(target.position);\r\n            }\r\n        }\r\n    }\r\n    _onEditorMouseDropCanceled() {\r\n        this._editor.updateOptions({\r\n            mouseStyle: 'text'\r\n        });\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n    }\r\n    _onEditorMouseDrop(mouseEvent) {\r\n        if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\r\n            let newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\r\n            if (this._dragSelection === null) {\r\n                let newSelections = null;\r\n                if (mouseEvent.event.shiftKey) {\r\n                    let primarySelection = this._editor.getSelection();\r\n                    if (primarySelection) {\r\n                        const { selectionStartLineNumber, selectionStartColumn } = primarySelection;\r\n                        newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\r\n                    }\r\n                }\r\n                else {\r\n                    newSelections = (this._editor.getSelections() || []).map(selection => {\r\n                        if (selection.containsPosition(newCursorPosition)) {\r\n                            return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\r\n                        }\r\n                        else {\r\n                            return selection;\r\n                        }\r\n                    });\r\n                }\r\n                // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\r\n                this._editor.setSelections(newSelections || [], 'mouse', 3 /* Explicit */);\r\n            }\r\n            else if (!this._dragSelection.containsPosition(newCursorPosition) ||\r\n                ((hasTriggerModifier(mouseEvent.event) ||\r\n                    this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)) // we allow users to paste content beside the selection\r\n                )) {\r\n                this._editor.pushUndoStop();\r\n                this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\r\n                this._editor.pushUndoStop();\r\n            }\r\n        }\r\n        this._editor.updateOptions({\r\n            mouseStyle: 'text'\r\n        });\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n    }\r\n    showAt(position) {\r\n        let newDecorations = [{\r\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\r\n                options: DragAndDropController._DECORATION_OPTIONS\r\n            }];\r\n        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, newDecorations);\r\n        this._editor.revealPosition(position, 1 /* Immediate */);\r\n    }\r\n    _removeDecoration() {\r\n        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, []);\r\n    }\r\n    _hitContent(target) {\r\n        return target.type === 6 /* CONTENT_TEXT */ ||\r\n            target.type === 7 /* CONTENT_EMPTY */;\r\n    }\r\n    _hitMargin(target) {\r\n        return target.type === 2 /* GUTTER_GLYPH_MARGIN */ ||\r\n            target.type === 3 /* GUTTER_LINE_NUMBERS */ ||\r\n            target.type === 4 /* GUTTER_LINE_DECORATIONS */;\r\n    }\r\n    dispose() {\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n        this._modifierPressed = false;\r\n        super.dispose();\r\n    }\r\n}\r\nDragAndDropController.ID = 'editor.contrib.dragAndDrop';\r\nDragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* Alt */ : 5 /* Ctrl */;\r\nDragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\r\n    description: 'dnd-target',\r\n    className: 'dnd-target'\r\n});\r\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { Range } from '../../common/core/range.js';\r\nexport class DragAndDropCommand {\r\n    constructor(selection, targetPosition, copy) {\r\n        this.selection = selection;\r\n        this.targetPosition = targetPosition;\r\n        this.copy = copy;\r\n        this.targetSelection = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let text = model.getValueInRange(this.selection);\r\n        if (!this.copy) {\r\n            builder.addEditOperation(this.selection, null);\r\n        }\r\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\r\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\r\n        )) {\r\n            this.targetSelection = this.selection;\r\n            return;\r\n        }\r\n        if (this.copy) {\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\r\n                this.selection.endColumn);\r\n            return;\r\n        }\r\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\r\n            // Drag the selection downwards\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\r\n                this.selection.endColumn);\r\n            return;\r\n        }\r\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\r\n            // Drag the selection upwards\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\r\n                this.selection.endColumn);\r\n            return;\r\n        }\r\n        // The target position is at the same line as the selection's end position.\r\n        if (this.selection.endColumn <= this.targetPosition.column) {\r\n            // The target position is after the selection's end position\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\r\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\r\n                this.targetPosition.column :\r\n                this.selection.endColumn);\r\n        }\r\n        else {\r\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\r\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\r\n        }\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return this.targetSelection;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nimport { OverviewRulerLane, MinimapPosition } from '../../common/model.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { overviewRulerFindMatchForeground, minimapFindMatch } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nexport class FindDecorations {\r\n    constructor(editor) {\r\n        this._editor = editor;\r\n        this._decorations = [];\r\n        this._overviewRulerApproximateDecorations = [];\r\n        this._findScopeDecorationIds = [];\r\n        this._rangeHighlightDecorationId = null;\r\n        this._highlightedDecorationId = null;\r\n        this._startPosition = this._editor.getPosition();\r\n    }\r\n    dispose() {\r\n        this._editor.deltaDecorations(this._allDecorations(), []);\r\n        this._decorations = [];\r\n        this._overviewRulerApproximateDecorations = [];\r\n        this._findScopeDecorationIds = [];\r\n        this._rangeHighlightDecorationId = null;\r\n        this._highlightedDecorationId = null;\r\n    }\r\n    reset() {\r\n        this._decorations = [];\r\n        this._overviewRulerApproximateDecorations = [];\r\n        this._findScopeDecorationIds = [];\r\n        this._rangeHighlightDecorationId = null;\r\n        this._highlightedDecorationId = null;\r\n    }\r\n    getCount() {\r\n        return this._decorations.length;\r\n    }\r\n    /** @deprecated use getFindScopes to support multiple selections */\r\n    getFindScope() {\r\n        if (this._findScopeDecorationIds[0]) {\r\n            return this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);\r\n        }\r\n        return null;\r\n    }\r\n    getFindScopes() {\r\n        if (this._findScopeDecorationIds.length) {\r\n            const scopes = this._findScopeDecorationIds.map(findScopeDecorationId => this._editor.getModel().getDecorationRange(findScopeDecorationId)).filter(element => !!element);\r\n            if (scopes.length) {\r\n                return scopes;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getStartPosition() {\r\n        return this._startPosition;\r\n    }\r\n    setStartPosition(newStartPosition) {\r\n        this._startPosition = newStartPosition;\r\n        this.setCurrentFindMatch(null);\r\n    }\r\n    _getDecorationIndex(decorationId) {\r\n        const index = this._decorations.indexOf(decorationId);\r\n        if (index >= 0) {\r\n            return index + 1;\r\n        }\r\n        return 1;\r\n    }\r\n    getCurrentMatchesPosition(desiredRange) {\r\n        let candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\r\n        for (const candidate of candidates) {\r\n            const candidateOpts = candidate.options;\r\n            if (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\r\n                return this._getDecorationIndex(candidate.id);\r\n            }\r\n        }\r\n        // We don't know the current match position, so returns zero to show '?' in find widget\r\n        return 0;\r\n    }\r\n    setCurrentFindMatch(nextMatch) {\r\n        let newCurrentDecorationId = null;\r\n        let matchPosition = 0;\r\n        if (nextMatch) {\r\n            for (let i = 0, len = this._decorations.length; i < len; i++) {\r\n                let range = this._editor.getModel().getDecorationRange(this._decorations[i]);\r\n                if (nextMatch.equalsRange(range)) {\r\n                    newCurrentDecorationId = this._decorations[i];\r\n                    matchPosition = (i + 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\r\n            this._editor.changeDecorations((changeAccessor) => {\r\n                if (this._highlightedDecorationId !== null) {\r\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\r\n                    this._highlightedDecorationId = null;\r\n                }\r\n                if (newCurrentDecorationId !== null) {\r\n                    this._highlightedDecorationId = newCurrentDecorationId;\r\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\r\n                }\r\n                if (this._rangeHighlightDecorationId !== null) {\r\n                    changeAccessor.removeDecoration(this._rangeHighlightDecorationId);\r\n                    this._rangeHighlightDecorationId = null;\r\n                }\r\n                if (newCurrentDecorationId !== null) {\r\n                    let rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId);\r\n                    if (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\r\n                        let lineBeforeEnd = rng.endLineNumber - 1;\r\n                        let lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\r\n                        rng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\r\n                    }\r\n                    this._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\r\n                }\r\n            });\r\n        }\r\n        return matchPosition;\r\n    }\r\n    set(findMatches, findScopes) {\r\n        this._editor.changeDecorations((accessor) => {\r\n            let findMatchesOptions = FindDecorations._FIND_MATCH_DECORATION;\r\n            let newOverviewRulerApproximateDecorations = [];\r\n            if (findMatches.length > 1000) {\r\n                // we go into a mode where the overview ruler gets \"approximate\" decorations\r\n                // the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\r\n                findMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\r\n                // approximate a distance in lines where matches should be merged\r\n                const lineCount = this._editor.getModel().getLineCount();\r\n                const height = this._editor.getLayoutInfo().height;\r\n                const approxPixelsPerLine = height / lineCount;\r\n                const mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\r\n                // merge decorations as much as possible\r\n                let prevStartLineNumber = findMatches[0].range.startLineNumber;\r\n                let prevEndLineNumber = findMatches[0].range.endLineNumber;\r\n                for (let i = 1, len = findMatches.length; i < len; i++) {\r\n                    const range = findMatches[i].range;\r\n                    if (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\r\n                        if (range.endLineNumber > prevEndLineNumber) {\r\n                            prevEndLineNumber = range.endLineNumber;\r\n                        }\r\n                    }\r\n                    else {\r\n                        newOverviewRulerApproximateDecorations.push({\r\n                            range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\r\n                            options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\r\n                        });\r\n                        prevStartLineNumber = range.startLineNumber;\r\n                        prevEndLineNumber = range.endLineNumber;\r\n                    }\r\n                }\r\n                newOverviewRulerApproximateDecorations.push({\r\n                    range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\r\n                    options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\r\n                });\r\n            }\r\n            // Find matches\r\n            let newFindMatchesDecorations = new Array(findMatches.length);\r\n            for (let i = 0, len = findMatches.length; i < len; i++) {\r\n                newFindMatchesDecorations[i] = {\r\n                    range: findMatches[i].range,\r\n                    options: findMatchesOptions\r\n                };\r\n            }\r\n            this._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);\r\n            // Overview ruler approximate decorations\r\n            this._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\r\n            // Range highlight\r\n            if (this._rangeHighlightDecorationId) {\r\n                accessor.removeDecoration(this._rangeHighlightDecorationId);\r\n                this._rangeHighlightDecorationId = null;\r\n            }\r\n            // Find scope\r\n            if (this._findScopeDecorationIds.length) {\r\n                this._findScopeDecorationIds.forEach(findScopeDecorationId => accessor.removeDecoration(findScopeDecorationId));\r\n                this._findScopeDecorationIds = [];\r\n            }\r\n            if (findScopes === null || findScopes === void 0 ? void 0 : findScopes.length) {\r\n                this._findScopeDecorationIds = findScopes.map(findScope => accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION));\r\n            }\r\n        });\r\n    }\r\n    matchBeforePosition(position) {\r\n        if (this._decorations.length === 0) {\r\n            return null;\r\n        }\r\n        for (let i = this._decorations.length - 1; i >= 0; i--) {\r\n            let decorationId = this._decorations[i];\r\n            let r = this._editor.getModel().getDecorationRange(decorationId);\r\n            if (!r || r.endLineNumber > position.lineNumber) {\r\n                continue;\r\n            }\r\n            if (r.endLineNumber < position.lineNumber) {\r\n                return r;\r\n            }\r\n            if (r.endColumn > position.column) {\r\n                continue;\r\n            }\r\n            return r;\r\n        }\r\n        return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\r\n    }\r\n    matchAfterPosition(position) {\r\n        if (this._decorations.length === 0) {\r\n            return null;\r\n        }\r\n        for (let i = 0, len = this._decorations.length; i < len; i++) {\r\n            let decorationId = this._decorations[i];\r\n            let r = this._editor.getModel().getDecorationRange(decorationId);\r\n            if (!r || r.startLineNumber < position.lineNumber) {\r\n                continue;\r\n            }\r\n            if (r.startLineNumber > position.lineNumber) {\r\n                return r;\r\n            }\r\n            if (r.startColumn < position.column) {\r\n                continue;\r\n            }\r\n            return r;\r\n        }\r\n        return this._editor.getModel().getDecorationRange(this._decorations[0]);\r\n    }\r\n    _allDecorations() {\r\n        let result = [];\r\n        result = result.concat(this._decorations);\r\n        result = result.concat(this._overviewRulerApproximateDecorations);\r\n        if (this._findScopeDecorationIds.length) {\r\n            result.push(...this._findScopeDecorationIds);\r\n        }\r\n        if (this._rangeHighlightDecorationId) {\r\n            result.push(this._rangeHighlightDecorationId);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nFindDecorations._CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\r\n    description: 'current-find-match',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    zIndex: 13,\r\n    className: 'currentFindMatch',\r\n    showIfCollapsed: true,\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerFindMatchForeground),\r\n        position: OverviewRulerLane.Center\r\n    },\r\n    minimap: {\r\n        color: themeColorFromId(minimapFindMatch),\r\n        position: MinimapPosition.Inline\r\n    }\r\n});\r\nFindDecorations._FIND_MATCH_DECORATION = ModelDecorationOptions.register({\r\n    description: 'find-match',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'findMatch',\r\n    showIfCollapsed: true,\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerFindMatchForeground),\r\n        position: OverviewRulerLane.Center\r\n    },\r\n    minimap: {\r\n        color: themeColorFromId(minimapFindMatch),\r\n        position: MinimapPosition.Inline\r\n    }\r\n});\r\nFindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\r\n    description: 'find-match-no-overview',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'findMatch',\r\n    showIfCollapsed: true\r\n});\r\nFindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\r\n    description: 'find-match-only-overview',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerFindMatchForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nFindDecorations._RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\r\n    description: 'find-range-highlight',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'rangeHighlight',\r\n    isWholeLine: true\r\n});\r\nFindDecorations._FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\r\n    description: 'find-scope',\r\n    className: 'findScope',\r\n    isWholeLine: true\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nexport class ReplaceAllCommand {\r\n    constructor(editorSelection, ranges, replaceStrings) {\r\n        this._editorSelection = editorSelection;\r\n        this._ranges = ranges;\r\n        this._replaceStrings = replaceStrings;\r\n        this._trackedEditorSelectionId = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        if (this._ranges.length > 0) {\r\n            // Collect all edit operations\r\n            let ops = [];\r\n            for (let i = 0; i < this._ranges.length; i++) {\r\n                ops.push({\r\n                    range: this._ranges[i],\r\n                    text: this._replaceStrings[i]\r\n                });\r\n            }\r\n            // Sort them in ascending order by range starts\r\n            ops.sort((o1, o2) => {\r\n                return Range.compareRangesUsingStarts(o1.range, o2.range);\r\n            });\r\n            // Merge operations that touch each other\r\n            let resultOps = [];\r\n            let previousOp = ops[0];\r\n            for (let i = 1; i < ops.length; i++) {\r\n                if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\r\n                    // These operations are one after another and can be merged\r\n                    previousOp.range = previousOp.range.plusRange(ops[i].range);\r\n                    previousOp.text = previousOp.text + ops[i].text;\r\n                }\r\n                else {\r\n                    resultOps.push(previousOp);\r\n                    previousOp = ops[i];\r\n                }\r\n            }\r\n            resultOps.push(previousOp);\r\n            for (const op of resultOps) {\r\n                builder.addEditOperation(op.range, op.text);\r\n            }\r\n        }\r\n        this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this._trackedEditorSelectionId);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from './strings.js';\r\nexport function buildReplaceStringWithCasePreserved(matches, pattern) {\r\n    if (matches && (matches[0] !== '')) {\r\n        const containsHyphens = validateSpecificSpecialCharacter(matches, pattern, '-');\r\n        const containsUnderscores = validateSpecificSpecialCharacter(matches, pattern, '_');\r\n        if (containsHyphens && !containsUnderscores) {\r\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '-');\r\n        }\r\n        else if (!containsHyphens && containsUnderscores) {\r\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '_');\r\n        }\r\n        if (matches[0].toUpperCase() === matches[0]) {\r\n            return pattern.toUpperCase();\r\n        }\r\n        else if (matches[0].toLowerCase() === matches[0]) {\r\n            return pattern.toLowerCase();\r\n        }\r\n        else if (strings.containsUppercaseCharacter(matches[0][0]) && pattern.length > 0) {\r\n            return pattern[0].toUpperCase() + pattern.substr(1);\r\n        }\r\n        else if (matches[0][0].toUpperCase() !== matches[0][0] && pattern.length > 0) {\r\n            return pattern[0].toLowerCase() + pattern.substr(1);\r\n        }\r\n        else {\r\n            // we don't understand its pattern yet.\r\n            return pattern;\r\n        }\r\n    }\r\n    else {\r\n        return pattern;\r\n    }\r\n}\r\nfunction validateSpecificSpecialCharacter(matches, pattern, specialCharacter) {\r\n    const doesContainSpecialCharacter = matches[0].indexOf(specialCharacter) !== -1 && pattern.indexOf(specialCharacter) !== -1;\r\n    return doesContainSpecialCharacter && matches[0].split(specialCharacter).length === pattern.split(specialCharacter).length;\r\n}\r\nfunction buildReplaceStringForSpecificSpecialCharacter(matches, pattern, specialCharacter) {\r\n    const splitPatternAtSpecialCharacter = pattern.split(specialCharacter);\r\n    const splitMatchAtSpecialCharacter = matches[0].split(specialCharacter);\r\n    let replaceString = '';\r\n    splitPatternAtSpecialCharacter.forEach((splitValue, index) => {\r\n        replaceString += buildReplaceStringWithCasePreserved([splitMatchAtSpecialCharacter[index]], splitValue) + specialCharacter;\r\n    });\r\n    return replaceString.slice(0, -1);\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { buildReplaceStringWithCasePreserved } from '../../../base/common/search.js';\r\n/**\r\n * Assigned when the replace pattern is entirely static.\r\n */\r\nclass StaticValueReplacePattern {\r\n    constructor(staticValue) {\r\n        this.staticValue = staticValue;\r\n        this.kind = 0 /* StaticValue */;\r\n    }\r\n}\r\n/**\r\n * Assigned when the replace pattern has replacement patterns.\r\n */\r\nclass DynamicPiecesReplacePattern {\r\n    constructor(pieces) {\r\n        this.pieces = pieces;\r\n        this.kind = 1 /* DynamicPieces */;\r\n    }\r\n}\r\nexport class ReplacePattern {\r\n    constructor(pieces) {\r\n        if (!pieces || pieces.length === 0) {\r\n            this._state = new StaticValueReplacePattern('');\r\n        }\r\n        else if (pieces.length === 1 && pieces[0].staticValue !== null) {\r\n            this._state = new StaticValueReplacePattern(pieces[0].staticValue);\r\n        }\r\n        else {\r\n            this._state = new DynamicPiecesReplacePattern(pieces);\r\n        }\r\n    }\r\n    static fromStaticValue(value) {\r\n        return new ReplacePattern([ReplacePiece.staticValue(value)]);\r\n    }\r\n    get hasReplacementPatterns() {\r\n        return (this._state.kind === 1 /* DynamicPieces */);\r\n    }\r\n    buildReplaceString(matches, preserveCase) {\r\n        if (this._state.kind === 0 /* StaticValue */) {\r\n            if (preserveCase) {\r\n                return buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\r\n            }\r\n            else {\r\n                return this._state.staticValue;\r\n            }\r\n        }\r\n        let result = '';\r\n        for (let i = 0, len = this._state.pieces.length; i < len; i++) {\r\n            let piece = this._state.pieces[i];\r\n            if (piece.staticValue !== null) {\r\n                // static value ReplacePiece\r\n                result += piece.staticValue;\r\n                continue;\r\n            }\r\n            // match index ReplacePiece\r\n            let match = ReplacePattern._substitute(piece.matchIndex, matches);\r\n            if (piece.caseOps !== null && piece.caseOps.length > 0) {\r\n                let repl = [];\r\n                let lenOps = piece.caseOps.length;\r\n                let opIdx = 0;\r\n                for (let idx = 0, len = match.length; idx < len; idx++) {\r\n                    if (opIdx >= lenOps) {\r\n                        repl.push(match.slice(idx));\r\n                        break;\r\n                    }\r\n                    switch (piece.caseOps[opIdx]) {\r\n                        case 'U':\r\n                            repl.push(match[idx].toUpperCase());\r\n                            break;\r\n                        case 'u':\r\n                            repl.push(match[idx].toUpperCase());\r\n                            opIdx++;\r\n                            break;\r\n                        case 'L':\r\n                            repl.push(match[idx].toLowerCase());\r\n                            break;\r\n                        case 'l':\r\n                            repl.push(match[idx].toLowerCase());\r\n                            opIdx++;\r\n                            break;\r\n                        default:\r\n                            repl.push(match[idx]);\r\n                    }\r\n                }\r\n                match = repl.join('');\r\n            }\r\n            result += match;\r\n        }\r\n        return result;\r\n    }\r\n    static _substitute(matchIndex, matches) {\r\n        if (matches === null) {\r\n            return '';\r\n        }\r\n        if (matchIndex === 0) {\r\n            return matches[0];\r\n        }\r\n        let remainder = '';\r\n        while (matchIndex > 0) {\r\n            if (matchIndex < matches.length) {\r\n                // A match can be undefined\r\n                let match = (matches[matchIndex] || '');\r\n                return match + remainder;\r\n            }\r\n            remainder = String(matchIndex % 10) + remainder;\r\n            matchIndex = Math.floor(matchIndex / 10);\r\n        }\r\n        return '$' + remainder;\r\n    }\r\n}\r\n/**\r\n * A replace piece can either be a static string or an index to a specific match.\r\n */\r\nexport class ReplacePiece {\r\n    constructor(staticValue, matchIndex, caseOps) {\r\n        this.staticValue = staticValue;\r\n        this.matchIndex = matchIndex;\r\n        if (!caseOps || caseOps.length === 0) {\r\n            this.caseOps = null;\r\n        }\r\n        else {\r\n            this.caseOps = caseOps.slice(0);\r\n        }\r\n    }\r\n    static staticValue(value) {\r\n        return new ReplacePiece(value, -1, null);\r\n    }\r\n    static caseOps(index, caseOps) {\r\n        return new ReplacePiece(null, index, caseOps);\r\n    }\r\n}\r\nclass ReplacePieceBuilder {\r\n    constructor(source) {\r\n        this._source = source;\r\n        this._lastCharIndex = 0;\r\n        this._result = [];\r\n        this._resultLen = 0;\r\n        this._currentStaticPiece = '';\r\n    }\r\n    emitUnchanged(toCharIndex) {\r\n        this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\r\n        this._lastCharIndex = toCharIndex;\r\n    }\r\n    emitStatic(value, toCharIndex) {\r\n        this._emitStatic(value);\r\n        this._lastCharIndex = toCharIndex;\r\n    }\r\n    _emitStatic(value) {\r\n        if (value.length === 0) {\r\n            return;\r\n        }\r\n        this._currentStaticPiece += value;\r\n    }\r\n    emitMatchIndex(index, toCharIndex, caseOps) {\r\n        if (this._currentStaticPiece.length !== 0) {\r\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\r\n            this._currentStaticPiece = '';\r\n        }\r\n        this._result[this._resultLen++] = ReplacePiece.caseOps(index, caseOps);\r\n        this._lastCharIndex = toCharIndex;\r\n    }\r\n    finalize() {\r\n        this.emitUnchanged(this._source.length);\r\n        if (this._currentStaticPiece.length !== 0) {\r\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\r\n            this._currentStaticPiece = '';\r\n        }\r\n        return new ReplacePattern(this._result);\r\n    }\r\n}\r\n/**\r\n * \\n\t\t\t=> inserts a LF\r\n * \\t\t\t\t=> inserts a TAB\r\n * \\\\\t\t\t=> inserts a \"\\\".\r\n * \\u\t\t\t=> upper-cases one character in a match.\r\n * \\U\t\t\t=> upper-cases ALL remaining characters in a match.\r\n * \\l\t\t\t=> lower-cases one character in a match.\r\n * \\L\t\t\t=> lower-cases ALL remaining characters in a match.\r\n * $$\t\t\t=> inserts a \"$\".\r\n * $& and $0\t=> inserts the matched substring.\r\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\r\n * everything else stays untouched\r\n *\r\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\r\n */\r\nexport function parseReplaceString(replaceString) {\r\n    if (!replaceString || replaceString.length === 0) {\r\n        return new ReplacePattern(null);\r\n    }\r\n    let caseOps = [];\r\n    let result = new ReplacePieceBuilder(replaceString);\r\n    for (let i = 0, len = replaceString.length; i < len; i++) {\r\n        let chCode = replaceString.charCodeAt(i);\r\n        if (chCode === 92 /* Backslash */) {\r\n            // move to next char\r\n            i++;\r\n            if (i >= len) {\r\n                // string ends with a \\\r\n                break;\r\n            }\r\n            let nextChCode = replaceString.charCodeAt(i);\r\n            // let replaceWithCharacter: string | null = null;\r\n            switch (nextChCode) {\r\n                case 92 /* Backslash */:\r\n                    // \\\\ => inserts a \"\\\"\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('\\\\', i + 1);\r\n                    break;\r\n                case 110 /* n */:\r\n                    // \\n => inserts a LF\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('\\n', i + 1);\r\n                    break;\r\n                case 116 /* t */:\r\n                    // \\t => inserts a TAB\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('\\t', i + 1);\r\n                    break;\r\n                // Case modification of string replacements, patterned after Boost, but only applied\r\n                // to the replacement text, not subsequent content.\r\n                case 117 /* u */:\r\n                // \\u => upper-cases one character.\r\n                case 85 /* U */:\r\n                // \\U => upper-cases ALL following characters.\r\n                case 108 /* l */:\r\n                // \\l => lower-cases one character.\r\n                case 76 /* L */:\r\n                    // \\L => lower-cases ALL following characters.\r\n                    result.emitUnchanged(i - 1);\r\n                    result.emitStatic('', i + 1);\r\n                    caseOps.push(String.fromCharCode(nextChCode));\r\n                    break;\r\n            }\r\n            continue;\r\n        }\r\n        if (chCode === 36 /* DollarSign */) {\r\n            // move to next char\r\n            i++;\r\n            if (i >= len) {\r\n                // string ends with a $\r\n                break;\r\n            }\r\n            let nextChCode = replaceString.charCodeAt(i);\r\n            if (nextChCode === 36 /* DollarSign */) {\r\n                // $$ => inserts a \"$\"\r\n                result.emitUnchanged(i - 1);\r\n                result.emitStatic('$', i + 1);\r\n                continue;\r\n            }\r\n            if (nextChCode === 48 /* Digit0 */ || nextChCode === 38 /* Ampersand */) {\r\n                // $& and $0 => inserts the matched substring.\r\n                result.emitUnchanged(i - 1);\r\n                result.emitMatchIndex(0, i + 1, caseOps);\r\n                caseOps.length = 0;\r\n                continue;\r\n            }\r\n            if (49 /* Digit1 */ <= nextChCode && nextChCode <= 57 /* Digit9 */) {\r\n                // $n\r\n                let matchIndex = nextChCode - 48 /* Digit0 */;\r\n                // peek next char to probe for $nn\r\n                if (i + 1 < len) {\r\n                    let nextNextChCode = replaceString.charCodeAt(i + 1);\r\n                    if (48 /* Digit0 */ <= nextNextChCode && nextNextChCode <= 57 /* Digit9 */) {\r\n                        // $nn\r\n                        // move to next char\r\n                        i++;\r\n                        matchIndex = matchIndex * 10 + (nextNextChCode - 48 /* Digit0 */);\r\n                        result.emitUnchanged(i - 2);\r\n                        result.emitMatchIndex(matchIndex, i + 1, caseOps);\r\n                        caseOps.length = 0;\r\n                        continue;\r\n                    }\r\n                }\r\n                result.emitUnchanged(i - 1);\r\n                result.emitMatchIndex(matchIndex, i + 1, caseOps);\r\n                caseOps.length = 0;\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n    return result.finalize();\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { RunOnceScheduler, TimeoutTimer } from '../../../base/common/async.js';\r\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from '../../common/commands/replaceCommand.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { SearchParams } from '../../common/model/textModelSearch.js';\r\nimport { FindDecorations } from './findDecorations.js';\r\nimport { ReplaceAllCommand } from './replaceAllCommand.js';\r\nimport { ReplacePattern, parseReplaceString } from './replacePattern.js';\r\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { findFirstInSorted } from '../../../base/common/arrays.js';\r\nexport const CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey('findWidgetVisible', false);\r\n// Keep ContextKey use of 'Focussed' to not break when clauses\r\nexport const CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey('findInputFocussed', false);\r\nexport const CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey('replaceInputFocussed', false);\r\nexport const ToggleCaseSensitiveKeybinding = {\r\n    primary: 512 /* Alt */ | 33 /* KEY_C */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 33 /* KEY_C */ }\r\n};\r\nexport const ToggleWholeWordKeybinding = {\r\n    primary: 512 /* Alt */ | 53 /* KEY_W */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 53 /* KEY_W */ }\r\n};\r\nexport const ToggleRegexKeybinding = {\r\n    primary: 512 /* Alt */ | 48 /* KEY_R */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 48 /* KEY_R */ }\r\n};\r\nexport const ToggleSearchScopeKeybinding = {\r\n    primary: 512 /* Alt */ | 42 /* KEY_L */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 42 /* KEY_L */ }\r\n};\r\nexport const TogglePreserveCaseKeybinding = {\r\n    primary: 512 /* Alt */ | 46 /* KEY_P */,\r\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 46 /* KEY_P */ }\r\n};\r\nexport const FIND_IDS = {\r\n    StartFindAction: 'actions.find',\r\n    StartFindWithSelection: 'actions.findWithSelection',\r\n    NextMatchFindAction: 'editor.action.nextMatchFindAction',\r\n    PreviousMatchFindAction: 'editor.action.previousMatchFindAction',\r\n    NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\r\n    PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\r\n    StartFindReplaceAction: 'editor.action.startFindReplaceAction',\r\n    CloseFindWidgetCommand: 'closeFindWidget',\r\n    ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\r\n    ToggleWholeWordCommand: 'toggleFindWholeWord',\r\n    ToggleRegexCommand: 'toggleFindRegex',\r\n    ToggleSearchScopeCommand: 'toggleFindInSelection',\r\n    TogglePreserveCaseCommand: 'togglePreserveCase',\r\n    ReplaceOneAction: 'editor.action.replaceOne',\r\n    ReplaceAllAction: 'editor.action.replaceAll',\r\n    SelectAllMatchesAction: 'editor.action.selectAllMatches'\r\n};\r\nexport const MATCHES_LIMIT = 19999;\r\nconst RESEARCH_DELAY = 240;\r\nexport class FindModelBoundToEditorModel {\r\n    constructor(editor, state) {\r\n        this._toDispose = new DisposableStore();\r\n        this._editor = editor;\r\n        this._state = state;\r\n        this._isDisposed = false;\r\n        this._startSearchingTimer = new TimeoutTimer();\r\n        this._decorations = new FindDecorations(editor);\r\n        this._toDispose.add(this._decorations);\r\n        this._updateDecorationsScheduler = new RunOnceScheduler(() => this.research(false), 100);\r\n        this._toDispose.add(this._updateDecorationsScheduler);\r\n        this._toDispose.add(this._editor.onDidChangeCursorPosition((e) => {\r\n            if (e.reason === 3 /* Explicit */\r\n                || e.reason === 5 /* Undo */\r\n                || e.reason === 6 /* Redo */) {\r\n                this._decorations.setStartPosition(this._editor.getPosition());\r\n            }\r\n        }));\r\n        this._ignoreModelContentChanged = false;\r\n        this._toDispose.add(this._editor.onDidChangeModelContent((e) => {\r\n            if (this._ignoreModelContentChanged) {\r\n                return;\r\n            }\r\n            if (e.isFlush) {\r\n                // a model.setValue() was called\r\n                this._decorations.reset();\r\n            }\r\n            this._decorations.setStartPosition(this._editor.getPosition());\r\n            this._updateDecorationsScheduler.schedule();\r\n        }));\r\n        this._toDispose.add(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\r\n        this.research(false, this._state.searchScope);\r\n    }\r\n    dispose() {\r\n        this._isDisposed = true;\r\n        dispose(this._startSearchingTimer);\r\n        this._toDispose.dispose();\r\n    }\r\n    _onStateChanged(e) {\r\n        if (this._isDisposed) {\r\n            // The find model is disposed during a find state changed event\r\n            return;\r\n        }\r\n        if (!this._editor.hasModel()) {\r\n            // The find model will be disposed momentarily\r\n            return;\r\n        }\r\n        if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\r\n            let model = this._editor.getModel();\r\n            if (model.isTooLargeForSyncing()) {\r\n                this._startSearchingTimer.cancel();\r\n                this._startSearchingTimer.setIfNotSet(() => {\r\n                    if (e.searchScope) {\r\n                        this.research(e.moveCursor, this._state.searchScope);\r\n                    }\r\n                    else {\r\n                        this.research(e.moveCursor);\r\n                    }\r\n                }, RESEARCH_DELAY);\r\n            }\r\n            else {\r\n                if (e.searchScope) {\r\n                    this.research(e.moveCursor, this._state.searchScope);\r\n                }\r\n                else {\r\n                    this.research(e.moveCursor);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    static _getSearchRange(model, findScope) {\r\n        // If we have set now or before a find scope, use it for computing the search range\r\n        if (findScope) {\r\n            return findScope;\r\n        }\r\n        return model.getFullModelRange();\r\n    }\r\n    research(moveCursor, newFindScope) {\r\n        let findScopes = null;\r\n        if (typeof newFindScope !== 'undefined') {\r\n            if (newFindScope !== null) {\r\n                if (!Array.isArray(newFindScope)) {\r\n                    findScopes = [newFindScope];\r\n                }\r\n                else {\r\n                    findScopes = newFindScope;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            findScopes = this._decorations.getFindScopes();\r\n        }\r\n        if (findScopes !== null) {\r\n            findScopes = findScopes.map(findScope => {\r\n                if (findScope.startLineNumber !== findScope.endLineNumber) {\r\n                    let endLineNumber = findScope.endLineNumber;\r\n                    if (findScope.endColumn === 1) {\r\n                        endLineNumber = endLineNumber - 1;\r\n                    }\r\n                    return new Range(findScope.startLineNumber, 1, endLineNumber, this._editor.getModel().getLineMaxColumn(endLineNumber));\r\n                }\r\n                return findScope;\r\n            });\r\n        }\r\n        let findMatches = this._findMatches(findScopes, false, MATCHES_LIMIT);\r\n        this._decorations.set(findMatches, findScopes);\r\n        const editorSelection = this._editor.getSelection();\r\n        let currentMatchesPosition = this._decorations.getCurrentMatchesPosition(editorSelection);\r\n        if (currentMatchesPosition === 0 && findMatches.length > 0) {\r\n            // current selection is not on top of a match\r\n            // try to find its nearest result from the top of the document\r\n            const matchAfterSelection = findFirstInSorted(findMatches.map(match => match.range), range => Range.compareRangesUsingStarts(range, editorSelection) >= 0);\r\n            currentMatchesPosition = matchAfterSelection > 0 ? matchAfterSelection - 1 + 1 /** match position is one based */ : currentMatchesPosition;\r\n        }\r\n        this._state.changeMatchInfo(currentMatchesPosition, this._decorations.getCount(), undefined);\r\n        if (moveCursor && this._editor.getOption(33 /* find */).cursorMoveOnType) {\r\n            this._moveToNextMatch(this._decorations.getStartPosition());\r\n        }\r\n    }\r\n    _hasMatches() {\r\n        return (this._state.matchesCount > 0);\r\n    }\r\n    _cannotFind() {\r\n        if (!this._hasMatches()) {\r\n            let findScope = this._decorations.getFindScope();\r\n            if (findScope) {\r\n                // Reveal the selection so user is reminded that 'selection find' is on.\r\n                this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0 /* Smooth */);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    _setCurrentFindMatch(match) {\r\n        let matchesPosition = this._decorations.setCurrentFindMatch(match);\r\n        this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);\r\n        this._editor.setSelection(match);\r\n        this._editor.revealRangeInCenterIfOutsideViewport(match, 0 /* Smooth */);\r\n    }\r\n    _prevSearchPosition(before) {\r\n        let isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\r\n            || this._state.searchString.indexOf('$') >= 0);\r\n        let { lineNumber, column } = before;\r\n        let model = this._editor.getModel();\r\n        if (isUsingLineStops || column === 1) {\r\n            if (lineNumber === 1) {\r\n                lineNumber = model.getLineCount();\r\n            }\r\n            else {\r\n                lineNumber--;\r\n            }\r\n            column = model.getLineMaxColumn(lineNumber);\r\n        }\r\n        else {\r\n            column--;\r\n        }\r\n        return new Position(lineNumber, column);\r\n    }\r\n    _moveToPrevMatch(before, isRecursed = false) {\r\n        if (!this._state.canNavigateBack()) {\r\n            // we are beyond the first matched find result\r\n            // instead of doing nothing, we should refocus the first item\r\n            const nextMatchRange = this._decorations.matchAfterPosition(before);\r\n            if (nextMatchRange) {\r\n                this._setCurrentFindMatch(nextMatchRange);\r\n            }\r\n            return;\r\n        }\r\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\r\n            let prevMatchRange = this._decorations.matchBeforePosition(before);\r\n            if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\r\n                before = this._prevSearchPosition(before);\r\n                prevMatchRange = this._decorations.matchBeforePosition(before);\r\n            }\r\n            if (prevMatchRange) {\r\n                this._setCurrentFindMatch(prevMatchRange);\r\n            }\r\n            return;\r\n        }\r\n        if (this._cannotFind()) {\r\n            return;\r\n        }\r\n        let findScope = this._decorations.getFindScope();\r\n        let searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\r\n        // ...(----)...|...\r\n        if (searchRange.getEndPosition().isBefore(before)) {\r\n            before = searchRange.getEndPosition();\r\n        }\r\n        // ...|...(----)...\r\n        if (before.isBefore(searchRange.getStartPosition())) {\r\n            before = searchRange.getEndPosition();\r\n        }\r\n        let { lineNumber, column } = before;\r\n        let model = this._editor.getModel();\r\n        let position = new Position(lineNumber, column);\r\n        let prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(114 /* wordSeparators */) : null, false);\r\n        if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\r\n            // Looks like we're stuck at this position, unacceptable!\r\n            position = this._prevSearchPosition(position);\r\n            prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(114 /* wordSeparators */) : null, false);\r\n        }\r\n        if (!prevMatch) {\r\n            // there is precisely one match and selection is on top of it\r\n            return;\r\n        }\r\n        if (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\r\n            return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\r\n        }\r\n        this._setCurrentFindMatch(prevMatch.range);\r\n    }\r\n    moveToPrevMatch() {\r\n        this._moveToPrevMatch(this._editor.getSelection().getStartPosition());\r\n    }\r\n    _nextSearchPosition(after) {\r\n        let isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\r\n            || this._state.searchString.indexOf('$') >= 0);\r\n        let { lineNumber, column } = after;\r\n        let model = this._editor.getModel();\r\n        if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\r\n            if (lineNumber === model.getLineCount()) {\r\n                lineNumber = 1;\r\n            }\r\n            else {\r\n                lineNumber++;\r\n            }\r\n            column = 1;\r\n        }\r\n        else {\r\n            column++;\r\n        }\r\n        return new Position(lineNumber, column);\r\n    }\r\n    _moveToNextMatch(after) {\r\n        if (!this._state.canNavigateForward()) {\r\n            // we are beyond the last matched find result\r\n            // instead of doing nothing, we should refocus the last item\r\n            const prevMatchRange = this._decorations.matchBeforePosition(after);\r\n            if (prevMatchRange) {\r\n                this._setCurrentFindMatch(prevMatchRange);\r\n            }\r\n            return;\r\n        }\r\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\r\n            let nextMatchRange = this._decorations.matchAfterPosition(after);\r\n            if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\r\n                // Looks like we're stuck at this position, unacceptable!\r\n                after = this._nextSearchPosition(after);\r\n                nextMatchRange = this._decorations.matchAfterPosition(after);\r\n            }\r\n            if (nextMatchRange) {\r\n                this._setCurrentFindMatch(nextMatchRange);\r\n            }\r\n            return;\r\n        }\r\n        let nextMatch = this._getNextMatch(after, false, true);\r\n        if (nextMatch) {\r\n            this._setCurrentFindMatch(nextMatch.range);\r\n        }\r\n    }\r\n    _getNextMatch(after, captureMatches, forceMove, isRecursed = false) {\r\n        if (this._cannotFind()) {\r\n            return null;\r\n        }\r\n        let findScope = this._decorations.getFindScope();\r\n        let searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\r\n        // ...(----)...|...\r\n        if (searchRange.getEndPosition().isBefore(after)) {\r\n            after = searchRange.getStartPosition();\r\n        }\r\n        // ...|...(----)...\r\n        if (after.isBefore(searchRange.getStartPosition())) {\r\n            after = searchRange.getStartPosition();\r\n        }\r\n        let { lineNumber, column } = after;\r\n        let model = this._editor.getModel();\r\n        let position = new Position(lineNumber, column);\r\n        let nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(114 /* wordSeparators */) : null, captureMatches);\r\n        if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\r\n            // Looks like we're stuck at this position, unacceptable!\r\n            position = this._nextSearchPosition(position);\r\n            nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(114 /* wordSeparators */) : null, captureMatches);\r\n        }\r\n        if (!nextMatch) {\r\n            // there is precisely one match and selection is on top of it\r\n            return null;\r\n        }\r\n        if (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\r\n            return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\r\n        }\r\n        return nextMatch;\r\n    }\r\n    moveToNextMatch() {\r\n        this._moveToNextMatch(this._editor.getSelection().getEndPosition());\r\n    }\r\n    _getReplacePattern() {\r\n        if (this._state.isRegex) {\r\n            return parseReplaceString(this._state.replaceString);\r\n        }\r\n        return ReplacePattern.fromStaticValue(this._state.replaceString);\r\n    }\r\n    replace() {\r\n        if (!this._hasMatches()) {\r\n            return;\r\n        }\r\n        let replacePattern = this._getReplacePattern();\r\n        let selection = this._editor.getSelection();\r\n        let nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\r\n        if (nextMatch) {\r\n            if (selection.equalsRange(nextMatch.range)) {\r\n                // selection sits on a find match => replace it!\r\n                let replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\r\n                let command = new ReplaceCommand(selection, replaceString);\r\n                this._executeEditorCommand('replace', command);\r\n                this._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\r\n                this.research(true);\r\n            }\r\n            else {\r\n                this._decorations.setStartPosition(this._editor.getPosition());\r\n                this._setCurrentFindMatch(nextMatch.range);\r\n            }\r\n        }\r\n    }\r\n    _findMatches(findScopes, captureMatches, limitResultCount) {\r\n        const searchRanges = (findScopes || [null]).map((scope) => FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), scope));\r\n        return this._editor.getModel().findMatches(this._state.searchString, searchRanges, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(114 /* wordSeparators */) : null, captureMatches, limitResultCount);\r\n    }\r\n    replaceAll() {\r\n        if (!this._hasMatches()) {\r\n            return;\r\n        }\r\n        const findScopes = this._decorations.getFindScopes();\r\n        if (findScopes === null && this._state.matchesCount >= MATCHES_LIMIT) {\r\n            // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\r\n            this._largeReplaceAll();\r\n        }\r\n        else {\r\n            this._regularReplaceAll(findScopes);\r\n        }\r\n        this.research(false);\r\n    }\r\n    _largeReplaceAll() {\r\n        const searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(114 /* wordSeparators */) : null);\r\n        const searchData = searchParams.parseSearchRequest();\r\n        if (!searchData) {\r\n            return;\r\n        }\r\n        let searchRegex = searchData.regex;\r\n        if (!searchRegex.multiline) {\r\n            let mod = 'mu';\r\n            if (searchRegex.ignoreCase) {\r\n                mod += 'i';\r\n            }\r\n            if (searchRegex.global) {\r\n                mod += 'g';\r\n            }\r\n            searchRegex = new RegExp(searchRegex.source, mod);\r\n        }\r\n        const model = this._editor.getModel();\r\n        const modelText = model.getValue(1 /* LF */);\r\n        const fullModelRange = model.getFullModelRange();\r\n        const replacePattern = this._getReplacePattern();\r\n        let resultText;\r\n        const preserveCase = this._state.preserveCase;\r\n        if (replacePattern.hasReplacementPatterns || preserveCase) {\r\n            resultText = modelText.replace(searchRegex, function () {\r\n                return replacePattern.buildReplaceString(arguments, preserveCase);\r\n            });\r\n        }\r\n        else {\r\n            resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\r\n        }\r\n        let command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\r\n        this._executeEditorCommand('replaceAll', command);\r\n    }\r\n    _regularReplaceAll(findScopes) {\r\n        const replacePattern = this._getReplacePattern();\r\n        // Get all the ranges (even more than the highlighted ones)\r\n        let matches = this._findMatches(findScopes, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n        let replaceStrings = [];\r\n        for (let i = 0, len = matches.length; i < len; i++) {\r\n            replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\r\n        }\r\n        let command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(m => m.range), replaceStrings);\r\n        this._executeEditorCommand('replaceAll', command);\r\n    }\r\n    selectAllMatches() {\r\n        if (!this._hasMatches()) {\r\n            return;\r\n        }\r\n        let findScopes = this._decorations.getFindScopes();\r\n        // Get all the ranges (even more than the highlighted ones)\r\n        let matches = this._findMatches(findScopes, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n        let selections = matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn));\r\n        // If one of the ranges is the editor selection, then maintain it as primary\r\n        let editorSelection = this._editor.getSelection();\r\n        for (let i = 0, len = selections.length; i < len; i++) {\r\n            let sel = selections[i];\r\n            if (sel.equalsRange(editorSelection)) {\r\n                selections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        this._editor.setSelections(selections);\r\n    }\r\n    _executeEditorCommand(source, command) {\r\n        try {\r\n            this._ignoreModelContentChanged = true;\r\n            this._editor.pushUndoStop();\r\n            this._editor.executeCommand(source, command);\r\n            this._editor.pushUndoStop();\r\n        }\r\n        finally {\r\n            this._ignoreModelContentChanged = false;\r\n        }\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './checkbox.css';\r\nimport { Widget } from '../widget.js';\r\nimport { Color } from '../../../common/color.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport { CSSIcon } from '../../../common/codicons.js';\r\nconst defaultOpts = {\r\n    inputActiveOptionBorder: Color.fromHex('#007ACC00'),\r\n    inputActiveOptionForeground: Color.fromHex('#FFFFFF'),\r\n    inputActiveOptionBackground: Color.fromHex('#0E639C50')\r\n};\r\nexport class Checkbox extends Widget {\r\n    constructor(opts) {\r\n        super();\r\n        this._onChange = this._register(new Emitter());\r\n        this.onChange = this._onChange.event;\r\n        this._onKeyDown = this._register(new Emitter());\r\n        this.onKeyDown = this._onKeyDown.event;\r\n        this._opts = Object.assign(Object.assign({}, defaultOpts), opts);\r\n        this._checked = this._opts.isChecked;\r\n        const classes = ['monaco-custom-checkbox'];\r\n        if (this._opts.icon) {\r\n            classes.push(...CSSIcon.asClassNameArray(this._opts.icon));\r\n        }\r\n        if (this._opts.actionClassName) {\r\n            classes.push(...this._opts.actionClassName.split(' '));\r\n        }\r\n        if (this._checked) {\r\n            classes.push('checked');\r\n        }\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.title = this._opts.title;\r\n        this.domNode.classList.add(...classes);\r\n        if (!this._opts.notFocusable) {\r\n            this.domNode.tabIndex = 0;\r\n        }\r\n        this.domNode.setAttribute('role', 'checkbox');\r\n        this.domNode.setAttribute('aria-checked', String(this._checked));\r\n        this.domNode.setAttribute('aria-label', this._opts.title);\r\n        this.applyStyles();\r\n        this.onclick(this.domNode, (ev) => {\r\n            this.checked = !this._checked;\r\n            this._onChange.fire(false);\r\n            ev.preventDefault();\r\n        });\r\n        this.ignoreGesture(this.domNode);\r\n        this.onkeydown(this.domNode, (keyboardEvent) => {\r\n            if (keyboardEvent.keyCode === 10 /* Space */ || keyboardEvent.keyCode === 3 /* Enter */) {\r\n                this.checked = !this._checked;\r\n                this._onChange.fire(true);\r\n                keyboardEvent.preventDefault();\r\n                return;\r\n            }\r\n            this._onKeyDown.fire(keyboardEvent);\r\n        });\r\n    }\r\n    get enabled() {\r\n        return this.domNode.getAttribute('aria-disabled') !== 'true';\r\n    }\r\n    focus() {\r\n        this.domNode.focus();\r\n    }\r\n    get checked() {\r\n        return this._checked;\r\n    }\r\n    set checked(newIsChecked) {\r\n        this._checked = newIsChecked;\r\n        this.domNode.setAttribute('aria-checked', String(this._checked));\r\n        this.domNode.classList.toggle('checked', this._checked);\r\n        this.applyStyles();\r\n    }\r\n    width() {\r\n        return 2 /*marginleft*/ + 2 /*border*/ + 2 /*padding*/ + 16 /* icon width */;\r\n    }\r\n    style(styles) {\r\n        if (styles.inputActiveOptionBorder) {\r\n            this._opts.inputActiveOptionBorder = styles.inputActiveOptionBorder;\r\n        }\r\n        if (styles.inputActiveOptionForeground) {\r\n            this._opts.inputActiveOptionForeground = styles.inputActiveOptionForeground;\r\n        }\r\n        if (styles.inputActiveOptionBackground) {\r\n            this._opts.inputActiveOptionBackground = styles.inputActiveOptionBackground;\r\n        }\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        if (this.domNode) {\r\n            this.domNode.style.borderColor = this._checked && this._opts.inputActiveOptionBorder ? this._opts.inputActiveOptionBorder.toString() : 'transparent';\r\n            this.domNode.style.color = this._checked && this._opts.inputActiveOptionForeground ? this._opts.inputActiveOptionForeground.toString() : 'inherit';\r\n            this.domNode.style.backgroundColor = this._checked && this._opts.inputActiveOptionBackground ? this._opts.inputActiveOptionBackground.toString() : 'transparent';\r\n        }\r\n    }\r\n    enable() {\r\n        this.domNode.setAttribute('aria-disabled', String(false));\r\n    }\r\n    disable() {\r\n        this.domNode.setAttribute('aria-disabled', String(true));\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Checkbox } from '../checkbox/checkbox.js';\r\nimport * as nls from '../../../../nls.js';\r\nimport { Codicon } from '../../../common/codicons.js';\r\nconst NLS_CASE_SENSITIVE_CHECKBOX_LABEL = nls.localize('caseDescription', \"Match Case\");\r\nconst NLS_WHOLE_WORD_CHECKBOX_LABEL = nls.localize('wordsDescription', \"Match Whole Word\");\r\nconst NLS_REGEX_CHECKBOX_LABEL = nls.localize('regexDescription', \"Use Regular Expression\");\r\nexport class CaseSensitiveCheckbox extends Checkbox {\r\n    constructor(opts) {\r\n        super({\r\n            icon: Codicon.caseSensitive,\r\n            title: NLS_CASE_SENSITIVE_CHECKBOX_LABEL + opts.appendTitle,\r\n            isChecked: opts.isChecked,\r\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\r\n        });\r\n    }\r\n}\r\nexport class WholeWordsCheckbox extends Checkbox {\r\n    constructor(opts) {\r\n        super({\r\n            icon: Codicon.wholeWord,\r\n            title: NLS_WHOLE_WORD_CHECKBOX_LABEL + opts.appendTitle,\r\n            isChecked: opts.isChecked,\r\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\r\n        });\r\n    }\r\n}\r\nexport class RegexCheckbox extends Checkbox {\r\n    constructor(opts) {\r\n        super({\r\n            icon: Codicon.regex,\r\n            title: NLS_REGEX_CHECKBOX_LABEL + opts.appendTitle,\r\n            isChecked: opts.isChecked,\r\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\r\n        });\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { CaseSensitiveCheckbox, RegexCheckbox, WholeWordsCheckbox } from '../../../base/browser/ui/findinput/findInputCheckboxes.js';\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { FIND_IDS } from './findModel.js';\r\nimport { contrastBorder, editorWidgetBackground, inputActiveOptionBorder, inputActiveOptionBackground, widgetShadow, editorWidgetForeground, inputActiveOptionForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nexport class FindOptionsWidget extends Widget {\r\n    constructor(editor, state, keybindingService, themeService) {\r\n        super();\r\n        this._hideSoon = this._register(new RunOnceScheduler(() => this._hide(), 2000));\r\n        this._isVisible = false;\r\n        this._editor = editor;\r\n        this._state = state;\r\n        this._keybindingService = keybindingService;\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = 'findOptionsWidget';\r\n        this._domNode.style.display = 'none';\r\n        this._domNode.style.top = '10px';\r\n        this._domNode.setAttribute('role', 'presentation');\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        const inputActiveOptionBorderColor = themeService.getColorTheme().getColor(inputActiveOptionBorder);\r\n        const inputActiveOptionForegroundColor = themeService.getColorTheme().getColor(inputActiveOptionForeground);\r\n        const inputActiveOptionBackgroundColor = themeService.getColorTheme().getColor(inputActiveOptionBackground);\r\n        this.caseSensitive = this._register(new CaseSensitiveCheckbox({\r\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\r\n            isChecked: this._state.matchCase,\r\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\r\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\r\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\r\n        }));\r\n        this._domNode.appendChild(this.caseSensitive.domNode);\r\n        this._register(this.caseSensitive.onChange(() => {\r\n            this._state.change({\r\n                matchCase: this.caseSensitive.checked\r\n            }, false);\r\n        }));\r\n        this.wholeWords = this._register(new WholeWordsCheckbox({\r\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\r\n            isChecked: this._state.wholeWord,\r\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\r\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\r\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\r\n        }));\r\n        this._domNode.appendChild(this.wholeWords.domNode);\r\n        this._register(this.wholeWords.onChange(() => {\r\n            this._state.change({\r\n                wholeWord: this.wholeWords.checked\r\n            }, false);\r\n        }));\r\n        this.regex = this._register(new RegexCheckbox({\r\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\r\n            isChecked: this._state.isRegex,\r\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\r\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\r\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\r\n        }));\r\n        this._domNode.appendChild(this.regex.domNode);\r\n        this._register(this.regex.onChange(() => {\r\n            this._state.change({\r\n                isRegex: this.regex.checked\r\n            }, false);\r\n        }));\r\n        this._editor.addOverlayWidget(this);\r\n        this._register(this._state.onFindReplaceStateChange((e) => {\r\n            let somethingChanged = false;\r\n            if (e.isRegex) {\r\n                this.regex.checked = this._state.isRegex;\r\n                somethingChanged = true;\r\n            }\r\n            if (e.wholeWord) {\r\n                this.wholeWords.checked = this._state.wholeWord;\r\n                somethingChanged = true;\r\n            }\r\n            if (e.matchCase) {\r\n                this.caseSensitive.checked = this._state.matchCase;\r\n                somethingChanged = true;\r\n            }\r\n            if (!this._state.isRevealed && somethingChanged) {\r\n                this._revealTemporarily();\r\n            }\r\n        }));\r\n        this._register(dom.addDisposableNonBubblingMouseOutListener(this._domNode, (e) => this._onMouseOut()));\r\n        this._register(dom.addDisposableListener(this._domNode, 'mouseover', (e) => this._onMouseOver()));\r\n        this._applyTheme(themeService.getColorTheme());\r\n        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\r\n    }\r\n    _keybindingLabelFor(actionId) {\r\n        let kb = this._keybindingService.lookupKeybinding(actionId);\r\n        if (!kb) {\r\n            return '';\r\n        }\r\n        return ` (${kb.getLabel()})`;\r\n    }\r\n    dispose() {\r\n        this._editor.removeOverlayWidget(this);\r\n        super.dispose();\r\n    }\r\n    // ----- IOverlayWidget API\r\n    getId() {\r\n        return FindOptionsWidget.ID;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            preference: 0 /* TOP_RIGHT_CORNER */\r\n        };\r\n    }\r\n    highlightFindOptions() {\r\n        this._revealTemporarily();\r\n    }\r\n    _revealTemporarily() {\r\n        this._show();\r\n        this._hideSoon.schedule();\r\n    }\r\n    _onMouseOut() {\r\n        this._hideSoon.schedule();\r\n    }\r\n    _onMouseOver() {\r\n        this._hideSoon.cancel();\r\n    }\r\n    _show() {\r\n        if (this._isVisible) {\r\n            return;\r\n        }\r\n        this._isVisible = true;\r\n        this._domNode.style.display = 'block';\r\n    }\r\n    _hide() {\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        this._isVisible = false;\r\n        this._domNode.style.display = 'none';\r\n    }\r\n    _applyTheme(theme) {\r\n        let inputStyles = {\r\n            inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\r\n            inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\r\n            inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground)\r\n        };\r\n        this.caseSensitive.style(inputStyles);\r\n        this.wholeWords.style(inputStyles);\r\n        this.regex.style(inputStyles);\r\n    }\r\n}\r\nFindOptionsWidget.ID = 'editor.contrib.findOptionsWidget';\r\nregisterThemingParticipant((theme, collector) => {\r\n    const widgetBackground = theme.getColor(editorWidgetBackground);\r\n    if (widgetBackground) {\r\n        collector.addRule(`.monaco-editor .findOptionsWidget { background-color: ${widgetBackground}; }`);\r\n    }\r\n    const widgetForeground = theme.getColor(editorWidgetForeground);\r\n    if (widgetForeground) {\r\n        collector.addRule(`.monaco-editor .findOptionsWidget { color: ${widgetForeground}; }`);\r\n    }\r\n    const widgetShadowColor = theme.getColor(widgetShadow);\r\n    if (widgetShadowColor) {\r\n        collector.addRule(`.monaco-editor .findOptionsWidget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\r\n    }\r\n    const hcBorder = theme.getColor(contrastBorder);\r\n    if (hcBorder) {\r\n        collector.addRule(`.monaco-editor .findOptionsWidget { border: 2px solid ${hcBorder}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { MATCHES_LIMIT } from './findModel.js';\r\nfunction effectiveOptionValue(override, value) {\r\n    if (override === 1 /* True */) {\r\n        return true;\r\n    }\r\n    if (override === 2 /* False */) {\r\n        return false;\r\n    }\r\n    return value;\r\n}\r\nexport class FindReplaceState extends Disposable {\r\n    constructor() {\r\n        super();\r\n        this._onFindReplaceStateChange = this._register(new Emitter());\r\n        this.onFindReplaceStateChange = this._onFindReplaceStateChange.event;\r\n        this._searchString = '';\r\n        this._replaceString = '';\r\n        this._isRevealed = false;\r\n        this._isReplaceRevealed = false;\r\n        this._isRegex = false;\r\n        this._isRegexOverride = 0 /* NotSet */;\r\n        this._wholeWord = false;\r\n        this._wholeWordOverride = 0 /* NotSet */;\r\n        this._matchCase = false;\r\n        this._matchCaseOverride = 0 /* NotSet */;\r\n        this._preserveCase = false;\r\n        this._preserveCaseOverride = 0 /* NotSet */;\r\n        this._searchScope = null;\r\n        this._matchesPosition = 0;\r\n        this._matchesCount = 0;\r\n        this._currentMatch = null;\r\n        this._loop = true;\r\n    }\r\n    get searchString() { return this._searchString; }\r\n    get replaceString() { return this._replaceString; }\r\n    get isRevealed() { return this._isRevealed; }\r\n    get isReplaceRevealed() { return this._isReplaceRevealed; }\r\n    get isRegex() { return effectiveOptionValue(this._isRegexOverride, this._isRegex); }\r\n    get wholeWord() { return effectiveOptionValue(this._wholeWordOverride, this._wholeWord); }\r\n    get matchCase() { return effectiveOptionValue(this._matchCaseOverride, this._matchCase); }\r\n    get preserveCase() { return effectiveOptionValue(this._preserveCaseOverride, this._preserveCase); }\r\n    get actualIsRegex() { return this._isRegex; }\r\n    get actualWholeWord() { return this._wholeWord; }\r\n    get actualMatchCase() { return this._matchCase; }\r\n    get actualPreserveCase() { return this._preserveCase; }\r\n    get searchScope() { return this._searchScope; }\r\n    get matchesPosition() { return this._matchesPosition; }\r\n    get matchesCount() { return this._matchesCount; }\r\n    get currentMatch() { return this._currentMatch; }\r\n    changeMatchInfo(matchesPosition, matchesCount, currentMatch) {\r\n        let changeEvent = {\r\n            moveCursor: false,\r\n            updateHistory: false,\r\n            searchString: false,\r\n            replaceString: false,\r\n            isRevealed: false,\r\n            isReplaceRevealed: false,\r\n            isRegex: false,\r\n            wholeWord: false,\r\n            matchCase: false,\r\n            preserveCase: false,\r\n            searchScope: false,\r\n            matchesPosition: false,\r\n            matchesCount: false,\r\n            currentMatch: false,\r\n            loop: false\r\n        };\r\n        let somethingChanged = false;\r\n        if (matchesCount === 0) {\r\n            matchesPosition = 0;\r\n        }\r\n        if (matchesPosition > matchesCount) {\r\n            matchesPosition = matchesCount;\r\n        }\r\n        if (this._matchesPosition !== matchesPosition) {\r\n            this._matchesPosition = matchesPosition;\r\n            changeEvent.matchesPosition = true;\r\n            somethingChanged = true;\r\n        }\r\n        if (this._matchesCount !== matchesCount) {\r\n            this._matchesCount = matchesCount;\r\n            changeEvent.matchesCount = true;\r\n            somethingChanged = true;\r\n        }\r\n        if (typeof currentMatch !== 'undefined') {\r\n            if (!Range.equalsRange(this._currentMatch, currentMatch)) {\r\n                this._currentMatch = currentMatch;\r\n                changeEvent.currentMatch = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (somethingChanged) {\r\n            this._onFindReplaceStateChange.fire(changeEvent);\r\n        }\r\n    }\r\n    change(newState, moveCursor, updateHistory = true) {\r\n        var _a;\r\n        let changeEvent = {\r\n            moveCursor: moveCursor,\r\n            updateHistory: updateHistory,\r\n            searchString: false,\r\n            replaceString: false,\r\n            isRevealed: false,\r\n            isReplaceRevealed: false,\r\n            isRegex: false,\r\n            wholeWord: false,\r\n            matchCase: false,\r\n            preserveCase: false,\r\n            searchScope: false,\r\n            matchesPosition: false,\r\n            matchesCount: false,\r\n            currentMatch: false,\r\n            loop: false\r\n        };\r\n        let somethingChanged = false;\r\n        const oldEffectiveIsRegex = this.isRegex;\r\n        const oldEffectiveWholeWords = this.wholeWord;\r\n        const oldEffectiveMatchCase = this.matchCase;\r\n        const oldEffectivePreserveCase = this.preserveCase;\r\n        if (typeof newState.searchString !== 'undefined') {\r\n            if (this._searchString !== newState.searchString) {\r\n                this._searchString = newState.searchString;\r\n                changeEvent.searchString = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (typeof newState.replaceString !== 'undefined') {\r\n            if (this._replaceString !== newState.replaceString) {\r\n                this._replaceString = newState.replaceString;\r\n                changeEvent.replaceString = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (typeof newState.isRevealed !== 'undefined') {\r\n            if (this._isRevealed !== newState.isRevealed) {\r\n                this._isRevealed = newState.isRevealed;\r\n                changeEvent.isRevealed = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (typeof newState.isReplaceRevealed !== 'undefined') {\r\n            if (this._isReplaceRevealed !== newState.isReplaceRevealed) {\r\n                this._isReplaceRevealed = newState.isReplaceRevealed;\r\n                changeEvent.isReplaceRevealed = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (typeof newState.isRegex !== 'undefined') {\r\n            this._isRegex = newState.isRegex;\r\n        }\r\n        if (typeof newState.wholeWord !== 'undefined') {\r\n            this._wholeWord = newState.wholeWord;\r\n        }\r\n        if (typeof newState.matchCase !== 'undefined') {\r\n            this._matchCase = newState.matchCase;\r\n        }\r\n        if (typeof newState.preserveCase !== 'undefined') {\r\n            this._preserveCase = newState.preserveCase;\r\n        }\r\n        if (typeof newState.searchScope !== 'undefined') {\r\n            if (!((_a = newState.searchScope) === null || _a === void 0 ? void 0 : _a.every((newSearchScope) => {\r\n                var _a;\r\n                return (_a = this._searchScope) === null || _a === void 0 ? void 0 : _a.some(existingSearchScope => {\r\n                    return !Range.equalsRange(existingSearchScope, newSearchScope);\r\n                });\r\n            }))) {\r\n                this._searchScope = newState.searchScope;\r\n                changeEvent.searchScope = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        if (typeof newState.loop !== 'undefined') {\r\n            if (this._loop !== newState.loop) {\r\n                this._loop = newState.loop;\r\n                changeEvent.loop = true;\r\n                somethingChanged = true;\r\n            }\r\n        }\r\n        // Overrides get set when they explicitly come in and get reset anytime something else changes\r\n        this._isRegexOverride = (typeof newState.isRegexOverride !== 'undefined' ? newState.isRegexOverride : 0 /* NotSet */);\r\n        this._wholeWordOverride = (typeof newState.wholeWordOverride !== 'undefined' ? newState.wholeWordOverride : 0 /* NotSet */);\r\n        this._matchCaseOverride = (typeof newState.matchCaseOverride !== 'undefined' ? newState.matchCaseOverride : 0 /* NotSet */);\r\n        this._preserveCaseOverride = (typeof newState.preserveCaseOverride !== 'undefined' ? newState.preserveCaseOverride : 0 /* NotSet */);\r\n        if (oldEffectiveIsRegex !== this.isRegex) {\r\n            somethingChanged = true;\r\n            changeEvent.isRegex = true;\r\n        }\r\n        if (oldEffectiveWholeWords !== this.wholeWord) {\r\n            somethingChanged = true;\r\n            changeEvent.wholeWord = true;\r\n        }\r\n        if (oldEffectiveMatchCase !== this.matchCase) {\r\n            somethingChanged = true;\r\n            changeEvent.matchCase = true;\r\n        }\r\n        if (oldEffectivePreserveCase !== this.preserveCase) {\r\n            somethingChanged = true;\r\n            changeEvent.preserveCase = true;\r\n        }\r\n        if (somethingChanged) {\r\n            this._onFindReplaceStateChange.fire(changeEvent);\r\n        }\r\n    }\r\n    canNavigateBack() {\r\n        return this.canNavigateInLoop() || (this.matchesPosition !== 1);\r\n    }\r\n    canNavigateForward() {\r\n        return this.canNavigateInLoop() || (this.matchesPosition < this.matchesCount);\r\n    }\r\n    canNavigateInLoop() {\r\n        return this._loop || (this.matchesCount >= MATCHES_LIMIT);\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './findWidget.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport { alert as alertFn } from '../../../base/browser/ui/aria/aria.js';\r\nimport { Checkbox } from '../../../base/browser/ui/checkbox/checkbox.js';\r\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\r\nimport { Widget } from '../../../base/browser/ui/widget.js';\r\nimport { Delayer } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { toDisposable } from '../../../base/common/lifecycle.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\r\nimport { contrastBorder, editorFindMatch, editorFindMatchBorder, editorFindMatchHighlight, editorFindMatchHighlightBorder, editorFindRangeHighlight, editorFindRangeHighlightBorder, editorWidgetBackground, editorWidgetBorder, editorWidgetResizeBorder, errorForeground, inputActiveOptionBorder, inputActiveOptionBackground, inputActiveOptionForeground, inputBackground, inputBorder, inputForeground, inputValidationErrorBackground, inputValidationErrorBorder, inputValidationErrorForeground, inputValidationInfoBackground, inputValidationInfoBorder, inputValidationInfoForeground, inputValidationWarningBackground, inputValidationWarningBorder, inputValidationWarningForeground, widgetShadow, editorWidgetForeground, focusBorder } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../platform/browser/contextScopedHistoryWidget.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { registerIcon, widgetClose } from '../../../platform/theme/common/iconRegistry.js';\r\nconst findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\r\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\r\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\r\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\r\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\r\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\r\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\r\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\r\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\r\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous match\");\r\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next match\");\r\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in selection\");\r\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\r\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\r\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\r\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\r\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\r\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace mode\");\r\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\r\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\r\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\r\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\r\nconst PART_WIDTH = 275;\r\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\r\nlet MAX_MATCHES_COUNT_WIDTH = 69;\r\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\r\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\r\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\r\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* WinCtrl */ : 2048 /* CtrlCmd */);\r\nexport class FindWidgetViewZone {\r\n    constructor(afterLineNumber) {\r\n        this.afterLineNumber = afterLineNumber;\r\n        this.heightInPx = FIND_INPUT_AREA_HEIGHT;\r\n        this.suppressMouseDown = false;\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.className = 'dock-find-viewzone';\r\n    }\r\n}\r\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\r\n    const isMultiline = !!value.match(/\\n/);\r\n    if (textarea && isMultiline && textarea.selectionStart > 0) {\r\n        event.stopPropagation();\r\n        return;\r\n    }\r\n}\r\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\r\n    const isMultiline = !!value.match(/\\n/);\r\n    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\r\n        event.stopPropagation();\r\n        return;\r\n    }\r\n}\r\nexport class FindWidget extends Widget {\r\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService) {\r\n        super();\r\n        this._cachedHeight = null;\r\n        this._revealTimeouts = [];\r\n        this._codeEditor = codeEditor;\r\n        this._controller = controller;\r\n        this._state = state;\r\n        this._contextViewProvider = contextViewProvider;\r\n        this._keybindingService = keybindingService;\r\n        this._contextKeyService = contextKeyService;\r\n        this._storageService = storageService;\r\n        this._notificationService = notificationService;\r\n        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* GLOBAL */);\r\n        this._isVisible = false;\r\n        this._isReplaceVisible = false;\r\n        this._ignoreChangeEvent = false;\r\n        this._updateHistoryDelayer = new Delayer(500);\r\n        this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\r\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\r\n        this._buildDomNode();\r\n        this._updateButtons();\r\n        this._tryUpdateWidgetWidth();\r\n        this._findInput.inputBox.layout();\r\n        this._register(this._codeEditor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(78 /* readOnly */)) {\r\n                if (this._codeEditor.getOption(78 /* readOnly */)) {\r\n                    // Hide replace part if editor becomes read only\r\n                    this._state.change({ isReplaceRevealed: false }, false);\r\n                }\r\n                this._updateButtons();\r\n            }\r\n            if (e.hasChanged(128 /* layoutInfo */)) {\r\n                this._tryUpdateWidgetWidth();\r\n            }\r\n            if (e.hasChanged(2 /* accessibilitySupport */)) {\r\n                this.updateAccessibilitySupport();\r\n            }\r\n            if (e.hasChanged(33 /* find */)) {\r\n                const addExtraSpaceOnTop = this._codeEditor.getOption(33 /* find */).addExtraSpaceOnTop;\r\n                if (addExtraSpaceOnTop && !this._viewZone) {\r\n                    this._viewZone = new FindWidgetViewZone(0);\r\n                    this._showViewZone();\r\n                }\r\n                if (!addExtraSpaceOnTop && this._viewZone) {\r\n                    this._removeViewZone();\r\n                }\r\n            }\r\n        }));\r\n        this.updateAccessibilitySupport();\r\n        this._register(this._codeEditor.onDidChangeCursorSelection(() => {\r\n            if (this._isVisible) {\r\n                this._updateToggleSelectionFindButton();\r\n            }\r\n        }));\r\n        this._register(this._codeEditor.onDidFocusEditorWidget(() => __awaiter(this, void 0, void 0, function* () {\r\n            if (this._isVisible) {\r\n                let globalBufferTerm = yield this._controller.getGlobalBufferTerm();\r\n                if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\r\n                    this._state.change({ searchString: globalBufferTerm }, false);\r\n                    this._findInput.select();\r\n                }\r\n            }\r\n        })));\r\n        this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\r\n        this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\r\n        this._register(this._findFocusTracker.onDidFocus(() => {\r\n            this._findInputFocused.set(true);\r\n            this._updateSearchScope();\r\n        }));\r\n        this._register(this._findFocusTracker.onDidBlur(() => {\r\n            this._findInputFocused.set(false);\r\n        }));\r\n        this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\r\n        this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\r\n        this._register(this._replaceFocusTracker.onDidFocus(() => {\r\n            this._replaceInputFocused.set(true);\r\n            this._updateSearchScope();\r\n        }));\r\n        this._register(this._replaceFocusTracker.onDidBlur(() => {\r\n            this._replaceInputFocused.set(false);\r\n        }));\r\n        this._codeEditor.addOverlayWidget(this);\r\n        if (this._codeEditor.getOption(33 /* find */).addExtraSpaceOnTop) {\r\n            this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\r\n        }\r\n        this._applyTheme(themeService.getColorTheme());\r\n        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\r\n        this._register(this._codeEditor.onDidChangeModel(() => {\r\n            if (!this._isVisible) {\r\n                return;\r\n            }\r\n            this._viewZoneId = undefined;\r\n        }));\r\n        this._register(this._codeEditor.onDidScrollChange((e) => {\r\n            if (e.scrollTopChanged) {\r\n                this._layoutViewZone();\r\n                return;\r\n            }\r\n            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\r\n            setTimeout(() => {\r\n                this._layoutViewZone();\r\n            }, 0);\r\n        }));\r\n    }\r\n    // ----- IOverlayWidget API\r\n    getId() {\r\n        return FindWidget.ID;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        if (this._isVisible) {\r\n            return {\r\n                preference: 0 /* TOP_RIGHT_CORNER */\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    // ----- React to state changes\r\n    _onStateChanged(e) {\r\n        if (e.searchString) {\r\n            try {\r\n                this._ignoreChangeEvent = true;\r\n                this._findInput.setValue(this._state.searchString);\r\n            }\r\n            finally {\r\n                this._ignoreChangeEvent = false;\r\n            }\r\n            this._updateButtons();\r\n        }\r\n        if (e.replaceString) {\r\n            this._replaceInput.inputBox.value = this._state.replaceString;\r\n        }\r\n        if (e.isRevealed) {\r\n            if (this._state.isRevealed) {\r\n                this._reveal();\r\n            }\r\n            else {\r\n                this._hide(true);\r\n            }\r\n        }\r\n        if (e.isReplaceRevealed) {\r\n            if (this._state.isReplaceRevealed) {\r\n                if (!this._codeEditor.getOption(78 /* readOnly */) && !this._isReplaceVisible) {\r\n                    this._isReplaceVisible = true;\r\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n                    this._updateButtons();\r\n                    this._replaceInput.inputBox.layout();\r\n                }\r\n            }\r\n            else {\r\n                if (this._isReplaceVisible) {\r\n                    this._isReplaceVisible = false;\r\n                    this._updateButtons();\r\n                }\r\n            }\r\n        }\r\n        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\r\n            if (this._tryUpdateHeight()) {\r\n                this._showViewZone();\r\n            }\r\n        }\r\n        if (e.isRegex) {\r\n            this._findInput.setRegex(this._state.isRegex);\r\n        }\r\n        if (e.wholeWord) {\r\n            this._findInput.setWholeWords(this._state.wholeWord);\r\n        }\r\n        if (e.matchCase) {\r\n            this._findInput.setCaseSensitive(this._state.matchCase);\r\n        }\r\n        if (e.preserveCase) {\r\n            this._replaceInput.setPreserveCase(this._state.preserveCase);\r\n        }\r\n        if (e.searchScope) {\r\n            if (this._state.searchScope) {\r\n                this._toggleSelectionFind.checked = true;\r\n            }\r\n            else {\r\n                this._toggleSelectionFind.checked = false;\r\n            }\r\n            this._updateToggleSelectionFindButton();\r\n        }\r\n        if (e.searchString || e.matchesCount || e.matchesPosition) {\r\n            let showRedOutline = (this._state.searchString.length > 0 && this._state.matchesCount === 0);\r\n            this._domNode.classList.toggle('no-results', showRedOutline);\r\n            this._updateMatchesCount();\r\n            this._updateButtons();\r\n        }\r\n        if (e.searchString || e.currentMatch) {\r\n            this._layoutViewZone();\r\n        }\r\n        if (e.updateHistory) {\r\n            this._delayedUpdateHistory();\r\n        }\r\n        if (e.loop) {\r\n            this._updateButtons();\r\n        }\r\n    }\r\n    _delayedUpdateHistory() {\r\n        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\r\n    }\r\n    _updateHistory() {\r\n        if (this._state.searchString) {\r\n            this._findInput.inputBox.addToHistory();\r\n        }\r\n        if (this._state.replaceString) {\r\n            this._replaceInput.inputBox.addToHistory();\r\n        }\r\n    }\r\n    _updateMatchesCount() {\r\n        this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\r\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\r\n            this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\r\n        }\r\n        else {\r\n            this._matchesCount.title = '';\r\n        }\r\n        // remove previous content\r\n        if (this._matchesCount.firstChild) {\r\n            this._matchesCount.removeChild(this._matchesCount.firstChild);\r\n        }\r\n        let label;\r\n        if (this._state.matchesCount > 0) {\r\n            let matchesCount = String(this._state.matchesCount);\r\n            if (this._state.matchesCount >= MATCHES_LIMIT) {\r\n                matchesCount += '+';\r\n            }\r\n            let matchesPosition = String(this._state.matchesPosition);\r\n            if (matchesPosition === '0') {\r\n                matchesPosition = '?';\r\n            }\r\n            label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\r\n        }\r\n        else {\r\n            label = NLS_NO_RESULTS;\r\n        }\r\n        this._matchesCount.appendChild(document.createTextNode(label));\r\n        alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\r\n        MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\r\n    }\r\n    // ----- actions\r\n    _getAriaLabel(label, currentMatch, searchString) {\r\n        if (label === NLS_NO_RESULTS) {\r\n            return searchString === ''\r\n                ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label)\r\n                : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\r\n        }\r\n        if (currentMatch) {\r\n            const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\r\n            const model = this._codeEditor.getModel();\r\n            if (model && (currentMatch.startLineNumber <= model.getLineCount()) && (currentMatch.startLineNumber >= 1)) {\r\n                const lineContent = model.getLineContent(currentMatch.startLineNumber);\r\n                return `${lineContent}, ${ariaLabel}`;\r\n            }\r\n            return ariaLabel;\r\n        }\r\n        return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\r\n    }\r\n    /**\r\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\r\n     * If 'selection find' is OFF we enable the button only if there is a selection.\r\n     */\r\n    _updateToggleSelectionFindButton() {\r\n        let selection = this._codeEditor.getSelection();\r\n        let isSelection = selection ? (selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn) : false;\r\n        let isChecked = this._toggleSelectionFind.checked;\r\n        if (this._isVisible && (isChecked || isSelection)) {\r\n            this._toggleSelectionFind.enable();\r\n        }\r\n        else {\r\n            this._toggleSelectionFind.disable();\r\n        }\r\n    }\r\n    _updateButtons() {\r\n        this._findInput.setEnabled(this._isVisible);\r\n        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\r\n        this._updateToggleSelectionFindButton();\r\n        this._closeBtn.setEnabled(this._isVisible);\r\n        let findInputIsNonEmpty = (this._state.searchString.length > 0);\r\n        let matchesCount = this._state.matchesCount ? true : false;\r\n        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\r\n        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\r\n        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\r\n        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\r\n        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\r\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\r\n        let canReplace = !this._codeEditor.getOption(78 /* readOnly */);\r\n        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\r\n    }\r\n    _reveal() {\r\n        this._revealTimeouts.forEach(e => {\r\n            clearTimeout(e);\r\n        });\r\n        this._revealTimeouts = [];\r\n        if (!this._isVisible) {\r\n            this._isVisible = true;\r\n            const selection = this._codeEditor.getSelection();\r\n            switch (this._codeEditor.getOption(33 /* find */).autoFindInSelection) {\r\n                case 'always':\r\n                    this._toggleSelectionFind.checked = true;\r\n                    break;\r\n                case 'never':\r\n                    this._toggleSelectionFind.checked = false;\r\n                    break;\r\n                case 'multiline':\r\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\r\n                    this._toggleSelectionFind.checked = isSelectionMultipleLine;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            this._tryUpdateWidgetWidth();\r\n            this._updateButtons();\r\n            this._revealTimeouts.push(setTimeout(() => {\r\n                this._domNode.classList.add('visible');\r\n                this._domNode.setAttribute('aria-hidden', 'false');\r\n            }, 0));\r\n            // validate query again as it's being dismissed when we hide the find widget.\r\n            this._revealTimeouts.push(setTimeout(() => {\r\n                this._findInput.validate();\r\n            }, 200));\r\n            this._codeEditor.layoutOverlayWidget(this);\r\n            let adjustEditorScrollTop = true;\r\n            if (this._codeEditor.getOption(33 /* find */).seedSearchStringFromSelection && selection) {\r\n                const domNode = this._codeEditor.getDomNode();\r\n                if (domNode) {\r\n                    const editorCoords = dom.getDomNodePagePosition(domNode);\r\n                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\r\n                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\r\n                    const startTop = startCoords ? startCoords.top : 0;\r\n                    if (this._viewZone && startTop < this._viewZone.heightInPx) {\r\n                        if (selection.endLineNumber > selection.startLineNumber) {\r\n                            adjustEditorScrollTop = false;\r\n                        }\r\n                        const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\r\n                        if (startLeft > leftOfFindWidget) {\r\n                            adjustEditorScrollTop = false;\r\n                        }\r\n                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\r\n                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\r\n                        if (endLeft > leftOfFindWidget) {\r\n                            adjustEditorScrollTop = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this._showViewZone(adjustEditorScrollTop);\r\n        }\r\n    }\r\n    _hide(focusTheEditor) {\r\n        this._revealTimeouts.forEach(e => {\r\n            clearTimeout(e);\r\n        });\r\n        this._revealTimeouts = [];\r\n        if (this._isVisible) {\r\n            this._isVisible = false;\r\n            this._updateButtons();\r\n            this._domNode.classList.remove('visible');\r\n            this._domNode.setAttribute('aria-hidden', 'true');\r\n            this._findInput.clearMessage();\r\n            if (focusTheEditor) {\r\n                this._codeEditor.focus();\r\n            }\r\n            this._codeEditor.layoutOverlayWidget(this);\r\n            this._removeViewZone();\r\n        }\r\n    }\r\n    _layoutViewZone(targetScrollTop) {\r\n        const addExtraSpaceOnTop = this._codeEditor.getOption(33 /* find */).addExtraSpaceOnTop;\r\n        if (!addExtraSpaceOnTop) {\r\n            this._removeViewZone();\r\n            return;\r\n        }\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        const viewZone = this._viewZone;\r\n        if (this._viewZoneId !== undefined || !viewZone) {\r\n            return;\r\n        }\r\n        this._codeEditor.changeViewZones((accessor) => {\r\n            viewZone.heightInPx = this._getHeight();\r\n            this._viewZoneId = accessor.addZone(viewZone);\r\n            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\r\n            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\r\n        });\r\n    }\r\n    _showViewZone(adjustScroll = true) {\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        const addExtraSpaceOnTop = this._codeEditor.getOption(33 /* find */).addExtraSpaceOnTop;\r\n        if (!addExtraSpaceOnTop) {\r\n            return;\r\n        }\r\n        if (this._viewZone === undefined) {\r\n            this._viewZone = new FindWidgetViewZone(0);\r\n        }\r\n        const viewZone = this._viewZone;\r\n        this._codeEditor.changeViewZones((accessor) => {\r\n            if (this._viewZoneId !== undefined) {\r\n                // the view zone already exists, we need to update the height\r\n                const newHeight = this._getHeight();\r\n                if (newHeight === viewZone.heightInPx) {\r\n                    return;\r\n                }\r\n                let scrollAdjustment = newHeight - viewZone.heightInPx;\r\n                viewZone.heightInPx = newHeight;\r\n                accessor.layoutZone(this._viewZoneId);\r\n                if (adjustScroll) {\r\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                let scrollAdjustment = this._getHeight();\r\n                // if the editor has top padding, factor that into the zone height\r\n                scrollAdjustment -= this._codeEditor.getOption(72 /* padding */).top;\r\n                if (scrollAdjustment <= 0) {\r\n                    return;\r\n                }\r\n                viewZone.heightInPx = scrollAdjustment;\r\n                this._viewZoneId = accessor.addZone(viewZone);\r\n                if (adjustScroll) {\r\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _removeViewZone() {\r\n        this._codeEditor.changeViewZones((accessor) => {\r\n            if (this._viewZoneId !== undefined) {\r\n                accessor.removeZone(this._viewZoneId);\r\n                this._viewZoneId = undefined;\r\n                if (this._viewZone) {\r\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\r\n                    this._viewZone = undefined;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    _applyTheme(theme) {\r\n        let inputStyles = {\r\n            inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\r\n            inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground),\r\n            inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\r\n            inputBackground: theme.getColor(inputBackground),\r\n            inputForeground: theme.getColor(inputForeground),\r\n            inputBorder: theme.getColor(inputBorder),\r\n            inputValidationInfoBackground: theme.getColor(inputValidationInfoBackground),\r\n            inputValidationInfoForeground: theme.getColor(inputValidationInfoForeground),\r\n            inputValidationInfoBorder: theme.getColor(inputValidationInfoBorder),\r\n            inputValidationWarningBackground: theme.getColor(inputValidationWarningBackground),\r\n            inputValidationWarningForeground: theme.getColor(inputValidationWarningForeground),\r\n            inputValidationWarningBorder: theme.getColor(inputValidationWarningBorder),\r\n            inputValidationErrorBackground: theme.getColor(inputValidationErrorBackground),\r\n            inputValidationErrorForeground: theme.getColor(inputValidationErrorForeground),\r\n            inputValidationErrorBorder: theme.getColor(inputValidationErrorBorder),\r\n        };\r\n        this._findInput.style(inputStyles);\r\n        this._replaceInput.style(inputStyles);\r\n        this._toggleSelectionFind.style(inputStyles);\r\n    }\r\n    _tryUpdateWidgetWidth() {\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        if (!dom.isInDOM(this._domNode)) {\r\n            // the widget is not in the DOM\r\n            return;\r\n        }\r\n        const layoutInfo = this._codeEditor.getLayoutInfo();\r\n        const editorContentWidth = layoutInfo.contentWidth;\r\n        if (editorContentWidth <= 0) {\r\n            // for example, diff view original editor\r\n            this._domNode.classList.add('hiddenEditor');\r\n            return;\r\n        }\r\n        else if (this._domNode.classList.contains('hiddenEditor')) {\r\n            this._domNode.classList.remove('hiddenEditor');\r\n        }\r\n        const editorWidth = layoutInfo.width;\r\n        const minimapWidth = layoutInfo.minimap.minimapWidth;\r\n        let collapsedFindWidget = false;\r\n        let reducedFindWidget = false;\r\n        let narrowFindWidget = false;\r\n        if (this._resized) {\r\n            let widgetWidth = dom.getTotalWidth(this._domNode);\r\n            if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\r\n                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\r\n                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\r\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n                return;\r\n            }\r\n        }\r\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\r\n            reducedFindWidget = true;\r\n        }\r\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\r\n            narrowFindWidget = true;\r\n        }\r\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\r\n            collapsedFindWidget = true;\r\n        }\r\n        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\r\n        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\r\n        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\r\n        if (!narrowFindWidget && !collapsedFindWidget) {\r\n            // the minimal left offset of findwidget is 15px.\r\n            this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\r\n        }\r\n        if (this._resized) {\r\n            this._findInput.inputBox.layout();\r\n            let findInputWidth = this._findInput.inputBox.element.clientWidth;\r\n            if (findInputWidth > 0) {\r\n                this._replaceInput.width = findInputWidth;\r\n            }\r\n        }\r\n        else if (this._isReplaceVisible) {\r\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n        }\r\n    }\r\n    _getHeight() {\r\n        let totalheight = 0;\r\n        // find input margin top\r\n        totalheight += 4;\r\n        // find input height\r\n        totalheight += this._findInput.inputBox.height + 2 /** input box border */;\r\n        if (this._isReplaceVisible) {\r\n            // replace input margin\r\n            totalheight += 4;\r\n            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\r\n        }\r\n        // margin bottom\r\n        totalheight += 4;\r\n        return totalheight;\r\n    }\r\n    _tryUpdateHeight() {\r\n        const totalHeight = this._getHeight();\r\n        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\r\n            return false;\r\n        }\r\n        this._cachedHeight = totalHeight;\r\n        this._domNode.style.height = `${totalHeight}px`;\r\n        return true;\r\n    }\r\n    // ----- Public\r\n    focusFindInput() {\r\n        this._findInput.select();\r\n        // Edge browser requires focus() in addition to select()\r\n        this._findInput.focus();\r\n    }\r\n    focusReplaceInput() {\r\n        this._replaceInput.select();\r\n        // Edge browser requires focus() in addition to select()\r\n        this._replaceInput.focus();\r\n    }\r\n    highlightFindOptions() {\r\n        this._findInput.highlightFindOptions();\r\n    }\r\n    _updateSearchScope() {\r\n        if (!this._codeEditor.hasModel()) {\r\n            return;\r\n        }\r\n        if (this._toggleSelectionFind.checked) {\r\n            let selections = this._codeEditor.getSelections();\r\n            selections.map(selection => {\r\n                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\r\n                    selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\r\n                }\r\n                const currentMatch = this._state.currentMatch;\r\n                if (selection.startLineNumber !== selection.endLineNumber) {\r\n                    if (!Range.equalsRange(selection, currentMatch)) {\r\n                        return selection;\r\n                    }\r\n                }\r\n                return null;\r\n            }).filter(element => !!element);\r\n            if (selections.length) {\r\n                this._state.change({ searchScope: selections }, true);\r\n            }\r\n        }\r\n    }\r\n    _onFindInputMouseDown(e) {\r\n        // on linux, middle key does pasting.\r\n        if (e.middleButton) {\r\n            e.stopPropagation();\r\n        }\r\n    }\r\n    _onFindInputKeyDown(e) {\r\n        if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\r\n            this._findInput.inputBox.insertAtCursor('\\n');\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2 /* Tab */)) {\r\n            if (this._isReplaceVisible) {\r\n                this._replaceInput.focus();\r\n            }\r\n            else {\r\n                this._findInput.focusOnCaseSensitive();\r\n            }\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\r\n            this._codeEditor.focus();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(16 /* UpArrow */)) {\r\n            return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\r\n        }\r\n        if (e.equals(18 /* DownArrow */)) {\r\n            return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\r\n        }\r\n    }\r\n    _onReplaceInputKeyDown(e) {\r\n        if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\r\n            if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\r\n                // this is the first time when users press Ctrl + Enter to replace all\r\n                this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\r\n                this._ctrlEnterReplaceAllWarningPrompted = true;\r\n                this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* GLOBAL */, 0 /* USER */);\r\n            }\r\n            this._replaceInput.inputBox.insertAtCursor('\\n');\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2 /* Tab */)) {\r\n            this._findInput.focusOnCaseSensitive();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\r\n            this._findInput.focus();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\r\n            this._codeEditor.focus();\r\n            e.preventDefault();\r\n            return;\r\n        }\r\n        if (e.equals(16 /* UpArrow */)) {\r\n            return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\r\n        }\r\n        if (e.equals(18 /* DownArrow */)) {\r\n            return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\r\n        }\r\n    }\r\n    // ----- sash\r\n    getVerticalSashLeft(_sash) {\r\n        return 0;\r\n    }\r\n    // ----- initialization\r\n    _keybindingLabelFor(actionId) {\r\n        let kb = this._keybindingService.lookupKeybinding(actionId);\r\n        if (!kb) {\r\n            return '';\r\n        }\r\n        return ` (${kb.getLabel()})`;\r\n    }\r\n    _buildDomNode() {\r\n        const flexibleHeight = true;\r\n        const flexibleWidth = true;\r\n        // Find input\r\n        this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\r\n            width: FIND_INPUT_AREA_WIDTH,\r\n            label: NLS_FIND_INPUT_LABEL,\r\n            placeholder: NLS_FIND_INPUT_PLACEHOLDER,\r\n            appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\r\n            appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\r\n            appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\r\n            validation: (value) => {\r\n                if (value.length === 0 || !this._findInput.getRegex()) {\r\n                    return null;\r\n                }\r\n                try {\r\n                    // use `g` and `u` which are also used by the TextModel search\r\n                    new RegExp(value, 'gu');\r\n                    return null;\r\n                }\r\n                catch (e) {\r\n                    return { content: e.message };\r\n                }\r\n            },\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight: 118\r\n        }, this._contextKeyService, true));\r\n        this._findInput.setRegex(!!this._state.isRegex);\r\n        this._findInput.setCaseSensitive(!!this._state.matchCase);\r\n        this._findInput.setWholeWords(!!this._state.wholeWord);\r\n        this._register(this._findInput.onKeyDown((e) => this._onFindInputKeyDown(e)));\r\n        this._register(this._findInput.inputBox.onDidChange(() => {\r\n            if (this._ignoreChangeEvent) {\r\n                return;\r\n            }\r\n            this._state.change({ searchString: this._findInput.getValue() }, true);\r\n        }));\r\n        this._register(this._findInput.onDidOptionChange(() => {\r\n            this._state.change({\r\n                isRegex: this._findInput.getRegex(),\r\n                wholeWord: this._findInput.getWholeWords(),\r\n                matchCase: this._findInput.getCaseSensitive()\r\n            }, true);\r\n        }));\r\n        this._register(this._findInput.onCaseSensitiveKeyDown((e) => {\r\n            if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\r\n                if (this._isReplaceVisible) {\r\n                    this._replaceInput.focus();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }));\r\n        this._register(this._findInput.onRegexKeyDown((e) => {\r\n            if (e.equals(2 /* Tab */)) {\r\n                if (this._isReplaceVisible) {\r\n                    this._replaceInput.focusOnPreserve();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }));\r\n        this._register(this._findInput.inputBox.onDidHeightChange((e) => {\r\n            if (this._tryUpdateHeight()) {\r\n                this._showViewZone();\r\n            }\r\n        }));\r\n        if (platform.isLinux) {\r\n            this._register(this._findInput.onMouseDown((e) => this._onFindInputMouseDown(e)));\r\n        }\r\n        this._matchesCount = document.createElement('div');\r\n        this._matchesCount.className = 'matchesCount';\r\n        this._updateMatchesCount();\r\n        // Previous button\r\n        this._prevBtn = this._register(new SimpleButton({\r\n            label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\r\n            icon: findPreviousMatchIcon,\r\n            onTrigger: () => {\r\n                this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction).run().then(undefined, onUnexpectedError);\r\n            }\r\n        }));\r\n        // Next button\r\n        this._nextBtn = this._register(new SimpleButton({\r\n            label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\r\n            icon: findNextMatchIcon,\r\n            onTrigger: () => {\r\n                this._codeEditor.getAction(FIND_IDS.NextMatchFindAction).run().then(undefined, onUnexpectedError);\r\n            }\r\n        }));\r\n        let findPart = document.createElement('div');\r\n        findPart.className = 'find-part';\r\n        findPart.appendChild(this._findInput.domNode);\r\n        const actionsContainer = document.createElement('div');\r\n        actionsContainer.className = 'find-actions';\r\n        findPart.appendChild(actionsContainer);\r\n        actionsContainer.appendChild(this._matchesCount);\r\n        actionsContainer.appendChild(this._prevBtn.domNode);\r\n        actionsContainer.appendChild(this._nextBtn.domNode);\r\n        // Toggle selection button\r\n        this._toggleSelectionFind = this._register(new Checkbox({\r\n            icon: findSelectionIcon,\r\n            title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\r\n            isChecked: false\r\n        }));\r\n        this._register(this._toggleSelectionFind.onChange(() => {\r\n            if (this._toggleSelectionFind.checked) {\r\n                if (this._codeEditor.hasModel()) {\r\n                    let selections = this._codeEditor.getSelections();\r\n                    selections.map(selection => {\r\n                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\r\n                            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\r\n                        }\r\n                        if (!selection.isEmpty()) {\r\n                            return selection;\r\n                        }\r\n                        return null;\r\n                    }).filter(element => !!element);\r\n                    if (selections.length) {\r\n                        this._state.change({ searchScope: selections }, true);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._state.change({ searchScope: null }, true);\r\n            }\r\n        }));\r\n        actionsContainer.appendChild(this._toggleSelectionFind.domNode);\r\n        // Close button\r\n        this._closeBtn = this._register(new SimpleButton({\r\n            label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\r\n            icon: widgetClose,\r\n            onTrigger: () => {\r\n                this._state.change({ isRevealed: false, searchScope: null }, false);\r\n            },\r\n            onKeyDown: (e) => {\r\n                if (e.equals(2 /* Tab */)) {\r\n                    if (this._isReplaceVisible) {\r\n                        if (this._replaceBtn.isEnabled()) {\r\n                            this._replaceBtn.focus();\r\n                        }\r\n                        else {\r\n                            this._codeEditor.focus();\r\n                        }\r\n                        e.preventDefault();\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n        actionsContainer.appendChild(this._closeBtn.domNode);\r\n        // Replace input\r\n        this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\r\n            label: NLS_REPLACE_INPUT_LABEL,\r\n            placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\r\n            appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\r\n            history: [],\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight: 118\r\n        }, this._contextKeyService, true));\r\n        this._replaceInput.setPreserveCase(!!this._state.preserveCase);\r\n        this._register(this._replaceInput.onKeyDown((e) => this._onReplaceInputKeyDown(e)));\r\n        this._register(this._replaceInput.inputBox.onDidChange(() => {\r\n            this._state.change({ replaceString: this._replaceInput.inputBox.value }, false);\r\n        }));\r\n        this._register(this._replaceInput.inputBox.onDidHeightChange((e) => {\r\n            if (this._isReplaceVisible && this._tryUpdateHeight()) {\r\n                this._showViewZone();\r\n            }\r\n        }));\r\n        this._register(this._replaceInput.onDidOptionChange(() => {\r\n            this._state.change({\r\n                preserveCase: this._replaceInput.getPreserveCase()\r\n            }, true);\r\n        }));\r\n        this._register(this._replaceInput.onPreserveCaseKeyDown((e) => {\r\n            if (e.equals(2 /* Tab */)) {\r\n                if (this._prevBtn.isEnabled()) {\r\n                    this._prevBtn.focus();\r\n                }\r\n                else if (this._nextBtn.isEnabled()) {\r\n                    this._nextBtn.focus();\r\n                }\r\n                else if (this._toggleSelectionFind.enabled) {\r\n                    this._toggleSelectionFind.focus();\r\n                }\r\n                else if (this._closeBtn.isEnabled()) {\r\n                    this._closeBtn.focus();\r\n                }\r\n                e.preventDefault();\r\n            }\r\n        }));\r\n        // Replace one button\r\n        this._replaceBtn = this._register(new SimpleButton({\r\n            label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\r\n            icon: findReplaceIcon,\r\n            onTrigger: () => {\r\n                this._controller.replace();\r\n            },\r\n            onKeyDown: (e) => {\r\n                if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\r\n                    this._closeBtn.focus();\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }));\r\n        // Replace all button\r\n        this._replaceAllBtn = this._register(new SimpleButton({\r\n            label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\r\n            icon: findReplaceAllIcon,\r\n            onTrigger: () => {\r\n                this._controller.replaceAll();\r\n            }\r\n        }));\r\n        let replacePart = document.createElement('div');\r\n        replacePart.className = 'replace-part';\r\n        replacePart.appendChild(this._replaceInput.domNode);\r\n        const replaceActionsContainer = document.createElement('div');\r\n        replaceActionsContainer.className = 'replace-actions';\r\n        replacePart.appendChild(replaceActionsContainer);\r\n        replaceActionsContainer.appendChild(this._replaceBtn.domNode);\r\n        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\r\n        // Toggle replace button\r\n        this._toggleReplaceBtn = this._register(new SimpleButton({\r\n            label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\r\n            className: 'codicon toggle left',\r\n            onTrigger: () => {\r\n                this._state.change({ isReplaceRevealed: !this._isReplaceVisible }, false);\r\n                if (this._isReplaceVisible) {\r\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n                    this._replaceInput.inputBox.layout();\r\n                }\r\n                this._showViewZone();\r\n            }\r\n        }));\r\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\r\n        // Widget\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = 'editor-widget find-widget';\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\r\n        this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\r\n        this._domNode.appendChild(this._toggleReplaceBtn.domNode);\r\n        this._domNode.appendChild(findPart);\r\n        this._domNode.appendChild(replacePart);\r\n        this._resizeSash = new Sash(this._domNode, this, { orientation: 0 /* VERTICAL */, size: 2 });\r\n        this._resized = false;\r\n        let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\r\n        this._register(this._resizeSash.onDidStart(() => {\r\n            originalWidth = dom.getTotalWidth(this._domNode);\r\n        }));\r\n        this._register(this._resizeSash.onDidChange((evt) => {\r\n            this._resized = true;\r\n            let width = originalWidth + evt.startX - evt.currentX;\r\n            if (width < FIND_WIDGET_INITIAL_WIDTH) {\r\n                // narrow down the find widget should be handled by CSS.\r\n                return;\r\n            }\r\n            const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\r\n            if (width > maxWidth) {\r\n                return;\r\n            }\r\n            this._domNode.style.width = `${width}px`;\r\n            if (this._isReplaceVisible) {\r\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n            }\r\n            this._findInput.inputBox.layout();\r\n            this._tryUpdateHeight();\r\n        }));\r\n        this._register(this._resizeSash.onDidReset(() => {\r\n            // users double click on the sash\r\n            const currentWidth = dom.getTotalWidth(this._domNode);\r\n            if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\r\n                // The editor is narrow and the width of the find widget is controlled fully by CSS.\r\n                return;\r\n            }\r\n            let width = FIND_WIDGET_INITIAL_WIDTH;\r\n            if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\r\n                // 1. never resized before, double click should maximizes it\r\n                // 2. users resized it already but its width is the same as default\r\n                const layoutInfo = this._codeEditor.getLayoutInfo();\r\n                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\r\n                this._resized = true;\r\n            }\r\n            else {\r\n                /**\r\n                 * no op, the find widget should be shrinked to its default size.\r\n                 */\r\n            }\r\n            this._domNode.style.width = `${width}px`;\r\n            if (this._isReplaceVisible) {\r\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\r\n            }\r\n            this._findInput.inputBox.layout();\r\n        }));\r\n    }\r\n    updateAccessibilitySupport() {\r\n        const value = this._codeEditor.getOption(2 /* accessibilitySupport */);\r\n        this._findInput.setFocusInputOnOptionClick(value !== 2 /* Enabled */);\r\n    }\r\n}\r\nFindWidget.ID = 'editor.contrib.findWidget';\r\nexport class SimpleButton extends Widget {\r\n    constructor(opts) {\r\n        super();\r\n        this._opts = opts;\r\n        let className = 'button';\r\n        if (this._opts.className) {\r\n            className = className + ' ' + this._opts.className;\r\n        }\r\n        if (this._opts.icon) {\r\n            className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\r\n        }\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.title = this._opts.label;\r\n        this._domNode.tabIndex = 0;\r\n        this._domNode.className = className;\r\n        this._domNode.setAttribute('role', 'button');\r\n        this._domNode.setAttribute('aria-label', this._opts.label);\r\n        this.onclick(this._domNode, (e) => {\r\n            this._opts.onTrigger();\r\n            e.preventDefault();\r\n        });\r\n        this.onkeydown(this._domNode, (e) => {\r\n            if (e.equals(10 /* Space */) || e.equals(3 /* Enter */)) {\r\n                this._opts.onTrigger();\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n            if (this._opts.onKeyDown) {\r\n                this._opts.onKeyDown(e);\r\n            }\r\n        });\r\n    }\r\n    get domNode() {\r\n        return this._domNode;\r\n    }\r\n    isEnabled() {\r\n        return (this._domNode.tabIndex >= 0);\r\n    }\r\n    focus() {\r\n        this._domNode.focus();\r\n    }\r\n    setEnabled(enabled) {\r\n        this._domNode.classList.toggle('disabled', !enabled);\r\n        this._domNode.setAttribute('aria-disabled', String(!enabled));\r\n        this._domNode.tabIndex = enabled ? 0 : -1;\r\n    }\r\n    setExpanded(expanded) {\r\n        this._domNode.setAttribute('aria-expanded', String(!!expanded));\r\n        if (expanded) {\r\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\r\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\r\n        }\r\n        else {\r\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\r\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\r\n        }\r\n    }\r\n}\r\n// theming\r\nregisterThemingParticipant((theme, collector) => {\r\n    const addBackgroundColorRule = (selector, color) => {\r\n        if (color) {\r\n            collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\r\n        }\r\n    };\r\n    addBackgroundColorRule('.findMatch', theme.getColor(editorFindMatchHighlight));\r\n    addBackgroundColorRule('.currentFindMatch', theme.getColor(editorFindMatch));\r\n    addBackgroundColorRule('.findScope', theme.getColor(editorFindRangeHighlight));\r\n    const widgetBackground = theme.getColor(editorWidgetBackground);\r\n    addBackgroundColorRule('.find-widget', widgetBackground);\r\n    const widgetShadowColor = theme.getColor(widgetShadow);\r\n    if (widgetShadowColor) {\r\n        collector.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\r\n    }\r\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\r\n    if (findMatchHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .findMatch { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\r\n    }\r\n    const findMatchBorder = theme.getColor(editorFindMatchBorder);\r\n    if (findMatchBorder) {\r\n        collector.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${findMatchBorder}; padding: 1px; box-sizing: border-box; }`);\r\n    }\r\n    const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\r\n    if (findRangeHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .findScope { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\r\n    }\r\n    const hcBorder = theme.getColor(contrastBorder);\r\n    if (hcBorder) {\r\n        collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\r\n    }\r\n    const foreground = theme.getColor(editorWidgetForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .find-widget { color: ${foreground}; }`);\r\n    }\r\n    const error = theme.getColor(errorForeground);\r\n    if (error) {\r\n        collector.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${error}; }`);\r\n    }\r\n    const resizeBorderBackground = theme.getColor(editorWidgetResizeBorder);\r\n    if (resizeBorderBackground) {\r\n        collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${resizeBorderBackground}; }`);\r\n    }\r\n    else {\r\n        const border = theme.getColor(editorWidgetBorder);\r\n        if (border) {\r\n            collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${border}; }`);\r\n        }\r\n    }\r\n    // This rule is used to override the outline color for synthetic-focus find input.\r\n    const focusOutline = theme.getColor(focusBorder);\r\n    if (focusOutline) {\r\n        collector.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${focusOutline}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './findInput.css';\r\nimport * as nls from '../../../../nls.js';\r\nimport * as dom from '../../dom.js';\r\nimport { HistoryInputBox } from '../inputbox/inputBox.js';\r\nimport { Widget } from '../widget.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport { CaseSensitiveCheckbox, WholeWordsCheckbox, RegexCheckbox } from './findInputCheckboxes.js';\r\nconst NLS_DEFAULT_LABEL = nls.localize('defaultLabel', \"input\");\r\nexport class FindInput extends Widget {\r\n    constructor(parent, contextViewProvider, _showOptionButtons, options) {\r\n        super();\r\n        this._showOptionButtons = _showOptionButtons;\r\n        this.fixFocusOnOptionClickEnabled = true;\r\n        this.imeSessionInProgress = false;\r\n        this._onDidOptionChange = this._register(new Emitter());\r\n        this.onDidOptionChange = this._onDidOptionChange.event;\r\n        this._onKeyDown = this._register(new Emitter());\r\n        this.onKeyDown = this._onKeyDown.event;\r\n        this._onMouseDown = this._register(new Emitter());\r\n        this.onMouseDown = this._onMouseDown.event;\r\n        this._onInput = this._register(new Emitter());\r\n        this._onKeyUp = this._register(new Emitter());\r\n        this._onCaseSensitiveKeyDown = this._register(new Emitter());\r\n        this.onCaseSensitiveKeyDown = this._onCaseSensitiveKeyDown.event;\r\n        this._onRegexKeyDown = this._register(new Emitter());\r\n        this.onRegexKeyDown = this._onRegexKeyDown.event;\r\n        this._lastHighlightFindOptions = 0;\r\n        this.contextViewProvider = contextViewProvider;\r\n        this.placeholder = options.placeholder || '';\r\n        this.validation = options.validation;\r\n        this.label = options.label || NLS_DEFAULT_LABEL;\r\n        this.inputActiveOptionBorder = options.inputActiveOptionBorder;\r\n        this.inputActiveOptionForeground = options.inputActiveOptionForeground;\r\n        this.inputActiveOptionBackground = options.inputActiveOptionBackground;\r\n        this.inputBackground = options.inputBackground;\r\n        this.inputForeground = options.inputForeground;\r\n        this.inputBorder = options.inputBorder;\r\n        this.inputValidationInfoBorder = options.inputValidationInfoBorder;\r\n        this.inputValidationInfoBackground = options.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = options.inputValidationInfoForeground;\r\n        this.inputValidationWarningBorder = options.inputValidationWarningBorder;\r\n        this.inputValidationWarningBackground = options.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = options.inputValidationWarningForeground;\r\n        this.inputValidationErrorBorder = options.inputValidationErrorBorder;\r\n        this.inputValidationErrorBackground = options.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = options.inputValidationErrorForeground;\r\n        const appendCaseSensitiveLabel = options.appendCaseSensitiveLabel || '';\r\n        const appendWholeWordsLabel = options.appendWholeWordsLabel || '';\r\n        const appendRegexLabel = options.appendRegexLabel || '';\r\n        const history = options.history || [];\r\n        const flexibleHeight = !!options.flexibleHeight;\r\n        const flexibleWidth = !!options.flexibleWidth;\r\n        const flexibleMaxHeight = options.flexibleMaxHeight;\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.classList.add('monaco-findInput');\r\n        this.inputBox = this._register(new HistoryInputBox(this.domNode, this.contextViewProvider, {\r\n            placeholder: this.placeholder || '',\r\n            ariaLabel: this.label || '',\r\n            validationOptions: {\r\n                validation: this.validation\r\n            },\r\n            inputBackground: this.inputBackground,\r\n            inputForeground: this.inputForeground,\r\n            inputBorder: this.inputBorder,\r\n            inputValidationInfoBackground: this.inputValidationInfoBackground,\r\n            inputValidationInfoForeground: this.inputValidationInfoForeground,\r\n            inputValidationInfoBorder: this.inputValidationInfoBorder,\r\n            inputValidationWarningBackground: this.inputValidationWarningBackground,\r\n            inputValidationWarningForeground: this.inputValidationWarningForeground,\r\n            inputValidationWarningBorder: this.inputValidationWarningBorder,\r\n            inputValidationErrorBackground: this.inputValidationErrorBackground,\r\n            inputValidationErrorForeground: this.inputValidationErrorForeground,\r\n            inputValidationErrorBorder: this.inputValidationErrorBorder,\r\n            history,\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight\r\n        }));\r\n        this.regex = this._register(new RegexCheckbox({\r\n            appendTitle: appendRegexLabel,\r\n            isChecked: false,\r\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: this.inputActiveOptionBackground\r\n        }));\r\n        this._register(this.regex.onChange(viaKeyboard => {\r\n            this._onDidOptionChange.fire(viaKeyboard);\r\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\r\n                this.inputBox.focus();\r\n            }\r\n            this.validate();\r\n        }));\r\n        this._register(this.regex.onKeyDown(e => {\r\n            this._onRegexKeyDown.fire(e);\r\n        }));\r\n        this.wholeWords = this._register(new WholeWordsCheckbox({\r\n            appendTitle: appendWholeWordsLabel,\r\n            isChecked: false,\r\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: this.inputActiveOptionBackground\r\n        }));\r\n        this._register(this.wholeWords.onChange(viaKeyboard => {\r\n            this._onDidOptionChange.fire(viaKeyboard);\r\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\r\n                this.inputBox.focus();\r\n            }\r\n            this.validate();\r\n        }));\r\n        this.caseSensitive = this._register(new CaseSensitiveCheckbox({\r\n            appendTitle: appendCaseSensitiveLabel,\r\n            isChecked: false,\r\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: this.inputActiveOptionBackground\r\n        }));\r\n        this._register(this.caseSensitive.onChange(viaKeyboard => {\r\n            this._onDidOptionChange.fire(viaKeyboard);\r\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\r\n                this.inputBox.focus();\r\n            }\r\n            this.validate();\r\n        }));\r\n        this._register(this.caseSensitive.onKeyDown(e => {\r\n            this._onCaseSensitiveKeyDown.fire(e);\r\n        }));\r\n        if (this._showOptionButtons) {\r\n            this.inputBox.paddingRight = this.caseSensitive.width() + this.wholeWords.width() + this.regex.width();\r\n        }\r\n        // Arrow-Key support to navigate between options\r\n        let indexes = [this.caseSensitive.domNode, this.wholeWords.domNode, this.regex.domNode];\r\n        this.onkeydown(this.domNode, (event) => {\r\n            if (event.equals(15 /* LeftArrow */) || event.equals(17 /* RightArrow */) || event.equals(9 /* Escape */)) {\r\n                let index = indexes.indexOf(document.activeElement);\r\n                if (index >= 0) {\r\n                    let newIndex = -1;\r\n                    if (event.equals(17 /* RightArrow */)) {\r\n                        newIndex = (index + 1) % indexes.length;\r\n                    }\r\n                    else if (event.equals(15 /* LeftArrow */)) {\r\n                        if (index === 0) {\r\n                            newIndex = indexes.length - 1;\r\n                        }\r\n                        else {\r\n                            newIndex = index - 1;\r\n                        }\r\n                    }\r\n                    if (event.equals(9 /* Escape */)) {\r\n                        indexes[index].blur();\r\n                        this.inputBox.focus();\r\n                    }\r\n                    else if (newIndex >= 0) {\r\n                        indexes[newIndex].focus();\r\n                    }\r\n                    dom.EventHelper.stop(event, true);\r\n                }\r\n            }\r\n        });\r\n        let controls = document.createElement('div');\r\n        controls.className = 'controls';\r\n        controls.style.display = this._showOptionButtons ? 'block' : 'none';\r\n        controls.appendChild(this.caseSensitive.domNode);\r\n        controls.appendChild(this.wholeWords.domNode);\r\n        controls.appendChild(this.regex.domNode);\r\n        this.domNode.appendChild(controls);\r\n        if (parent) {\r\n            parent.appendChild(this.domNode);\r\n        }\r\n        this._register(dom.addDisposableListener(this.inputBox.inputElement, 'compositionstart', (e) => {\r\n            this.imeSessionInProgress = true;\r\n        }));\r\n        this._register(dom.addDisposableListener(this.inputBox.inputElement, 'compositionend', (e) => {\r\n            this.imeSessionInProgress = false;\r\n            this._onInput.fire();\r\n        }));\r\n        this.onkeydown(this.inputBox.inputElement, (e) => this._onKeyDown.fire(e));\r\n        this.onkeyup(this.inputBox.inputElement, (e) => this._onKeyUp.fire(e));\r\n        this.oninput(this.inputBox.inputElement, (e) => this._onInput.fire());\r\n        this.onmousedown(this.inputBox.inputElement, (e) => this._onMouseDown.fire(e));\r\n    }\r\n    enable() {\r\n        this.domNode.classList.remove('disabled');\r\n        this.inputBox.enable();\r\n        this.regex.enable();\r\n        this.wholeWords.enable();\r\n        this.caseSensitive.enable();\r\n    }\r\n    disable() {\r\n        this.domNode.classList.add('disabled');\r\n        this.inputBox.disable();\r\n        this.regex.disable();\r\n        this.wholeWords.disable();\r\n        this.caseSensitive.disable();\r\n    }\r\n    setFocusInputOnOptionClick(value) {\r\n        this.fixFocusOnOptionClickEnabled = value;\r\n    }\r\n    setEnabled(enabled) {\r\n        if (enabled) {\r\n            this.enable();\r\n        }\r\n        else {\r\n            this.disable();\r\n        }\r\n    }\r\n    getValue() {\r\n        return this.inputBox.value;\r\n    }\r\n    setValue(value) {\r\n        if (this.inputBox.value !== value) {\r\n            this.inputBox.value = value;\r\n        }\r\n    }\r\n    style(styles) {\r\n        this.inputActiveOptionBorder = styles.inputActiveOptionBorder;\r\n        this.inputActiveOptionForeground = styles.inputActiveOptionForeground;\r\n        this.inputActiveOptionBackground = styles.inputActiveOptionBackground;\r\n        this.inputBackground = styles.inputBackground;\r\n        this.inputForeground = styles.inputForeground;\r\n        this.inputBorder = styles.inputBorder;\r\n        this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\r\n        this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\r\n        this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\r\n        this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\r\n        this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\r\n        this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        if (this.domNode) {\r\n            const checkBoxStyles = {\r\n                inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n                inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n                inputActiveOptionBackground: this.inputActiveOptionBackground,\r\n            };\r\n            this.regex.style(checkBoxStyles);\r\n            this.wholeWords.style(checkBoxStyles);\r\n            this.caseSensitive.style(checkBoxStyles);\r\n            const inputBoxStyles = {\r\n                inputBackground: this.inputBackground,\r\n                inputForeground: this.inputForeground,\r\n                inputBorder: this.inputBorder,\r\n                inputValidationInfoBackground: this.inputValidationInfoBackground,\r\n                inputValidationInfoForeground: this.inputValidationInfoForeground,\r\n                inputValidationInfoBorder: this.inputValidationInfoBorder,\r\n                inputValidationWarningBackground: this.inputValidationWarningBackground,\r\n                inputValidationWarningForeground: this.inputValidationWarningForeground,\r\n                inputValidationWarningBorder: this.inputValidationWarningBorder,\r\n                inputValidationErrorBackground: this.inputValidationErrorBackground,\r\n                inputValidationErrorForeground: this.inputValidationErrorForeground,\r\n                inputValidationErrorBorder: this.inputValidationErrorBorder\r\n            };\r\n            this.inputBox.style(inputBoxStyles);\r\n        }\r\n    }\r\n    select() {\r\n        this.inputBox.select();\r\n    }\r\n    focus() {\r\n        this.inputBox.focus();\r\n    }\r\n    getCaseSensitive() {\r\n        return this.caseSensitive.checked;\r\n    }\r\n    setCaseSensitive(value) {\r\n        this.caseSensitive.checked = value;\r\n    }\r\n    getWholeWords() {\r\n        return this.wholeWords.checked;\r\n    }\r\n    setWholeWords(value) {\r\n        this.wholeWords.checked = value;\r\n    }\r\n    getRegex() {\r\n        return this.regex.checked;\r\n    }\r\n    setRegex(value) {\r\n        this.regex.checked = value;\r\n        this.validate();\r\n    }\r\n    focusOnCaseSensitive() {\r\n        this.caseSensitive.focus();\r\n    }\r\n    highlightFindOptions() {\r\n        this.domNode.classList.remove('highlight-' + (this._lastHighlightFindOptions));\r\n        this._lastHighlightFindOptions = 1 - this._lastHighlightFindOptions;\r\n        this.domNode.classList.add('highlight-' + (this._lastHighlightFindOptions));\r\n    }\r\n    validate() {\r\n        this.inputBox.validate();\r\n    }\r\n    clearMessage() {\r\n        this.inputBox.hideMessage();\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './findInput.css';\r\nimport * as nls from '../../../../nls.js';\r\nimport * as dom from '../../dom.js';\r\nimport { HistoryInputBox } from '../inputbox/inputBox.js';\r\nimport { Widget } from '../widget.js';\r\nimport { Emitter } from '../../../common/event.js';\r\nimport { Checkbox } from '../checkbox/checkbox.js';\r\nimport { Codicon } from '../../../common/codicons.js';\r\nconst NLS_DEFAULT_LABEL = nls.localize('defaultLabel', \"input\");\r\nconst NLS_PRESERVE_CASE_LABEL = nls.localize('label.preserveCaseCheckbox', \"Preserve Case\");\r\nexport class PreserveCaseCheckbox extends Checkbox {\r\n    constructor(opts) {\r\n        super({\r\n            // TODO: does this need its own icon?\r\n            icon: Codicon.preserveCase,\r\n            title: NLS_PRESERVE_CASE_LABEL + opts.appendTitle,\r\n            isChecked: opts.isChecked,\r\n            inputActiveOptionBorder: opts.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: opts.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: opts.inputActiveOptionBackground\r\n        });\r\n    }\r\n}\r\nexport class ReplaceInput extends Widget {\r\n    constructor(parent, contextViewProvider, _showOptionButtons, options) {\r\n        super();\r\n        this._showOptionButtons = _showOptionButtons;\r\n        this.fixFocusOnOptionClickEnabled = true;\r\n        this.cachedOptionsWidth = 0;\r\n        this._onDidOptionChange = this._register(new Emitter());\r\n        this.onDidOptionChange = this._onDidOptionChange.event;\r\n        this._onKeyDown = this._register(new Emitter());\r\n        this.onKeyDown = this._onKeyDown.event;\r\n        this._onMouseDown = this._register(new Emitter());\r\n        this._onInput = this._register(new Emitter());\r\n        this._onKeyUp = this._register(new Emitter());\r\n        this._onPreserveCaseKeyDown = this._register(new Emitter());\r\n        this.onPreserveCaseKeyDown = this._onPreserveCaseKeyDown.event;\r\n        this.contextViewProvider = contextViewProvider;\r\n        this.placeholder = options.placeholder || '';\r\n        this.validation = options.validation;\r\n        this.label = options.label || NLS_DEFAULT_LABEL;\r\n        this.inputActiveOptionBorder = options.inputActiveOptionBorder;\r\n        this.inputActiveOptionForeground = options.inputActiveOptionForeground;\r\n        this.inputActiveOptionBackground = options.inputActiveOptionBackground;\r\n        this.inputBackground = options.inputBackground;\r\n        this.inputForeground = options.inputForeground;\r\n        this.inputBorder = options.inputBorder;\r\n        this.inputValidationInfoBorder = options.inputValidationInfoBorder;\r\n        this.inputValidationInfoBackground = options.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = options.inputValidationInfoForeground;\r\n        this.inputValidationWarningBorder = options.inputValidationWarningBorder;\r\n        this.inputValidationWarningBackground = options.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = options.inputValidationWarningForeground;\r\n        this.inputValidationErrorBorder = options.inputValidationErrorBorder;\r\n        this.inputValidationErrorBackground = options.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = options.inputValidationErrorForeground;\r\n        const appendPreserveCaseLabel = options.appendPreserveCaseLabel || '';\r\n        const history = options.history || [];\r\n        const flexibleHeight = !!options.flexibleHeight;\r\n        const flexibleWidth = !!options.flexibleWidth;\r\n        const flexibleMaxHeight = options.flexibleMaxHeight;\r\n        this.domNode = document.createElement('div');\r\n        this.domNode.classList.add('monaco-findInput');\r\n        this.inputBox = this._register(new HistoryInputBox(this.domNode, this.contextViewProvider, {\r\n            ariaLabel: this.label || '',\r\n            placeholder: this.placeholder || '',\r\n            validationOptions: {\r\n                validation: this.validation\r\n            },\r\n            inputBackground: this.inputBackground,\r\n            inputForeground: this.inputForeground,\r\n            inputBorder: this.inputBorder,\r\n            inputValidationInfoBackground: this.inputValidationInfoBackground,\r\n            inputValidationInfoForeground: this.inputValidationInfoForeground,\r\n            inputValidationInfoBorder: this.inputValidationInfoBorder,\r\n            inputValidationWarningBackground: this.inputValidationWarningBackground,\r\n            inputValidationWarningForeground: this.inputValidationWarningForeground,\r\n            inputValidationWarningBorder: this.inputValidationWarningBorder,\r\n            inputValidationErrorBackground: this.inputValidationErrorBackground,\r\n            inputValidationErrorForeground: this.inputValidationErrorForeground,\r\n            inputValidationErrorBorder: this.inputValidationErrorBorder,\r\n            history,\r\n            flexibleHeight,\r\n            flexibleWidth,\r\n            flexibleMaxHeight\r\n        }));\r\n        this.preserveCase = this._register(new PreserveCaseCheckbox({\r\n            appendTitle: appendPreserveCaseLabel,\r\n            isChecked: false,\r\n            inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n            inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n            inputActiveOptionBackground: this.inputActiveOptionBackground,\r\n        }));\r\n        this._register(this.preserveCase.onChange(viaKeyboard => {\r\n            this._onDidOptionChange.fire(viaKeyboard);\r\n            if (!viaKeyboard && this.fixFocusOnOptionClickEnabled) {\r\n                this.inputBox.focus();\r\n            }\r\n            this.validate();\r\n        }));\r\n        this._register(this.preserveCase.onKeyDown(e => {\r\n            this._onPreserveCaseKeyDown.fire(e);\r\n        }));\r\n        if (this._showOptionButtons) {\r\n            this.cachedOptionsWidth = this.preserveCase.width();\r\n        }\r\n        else {\r\n            this.cachedOptionsWidth = 0;\r\n        }\r\n        // Arrow-Key support to navigate between options\r\n        let indexes = [this.preserveCase.domNode];\r\n        this.onkeydown(this.domNode, (event) => {\r\n            if (event.equals(15 /* LeftArrow */) || event.equals(17 /* RightArrow */) || event.equals(9 /* Escape */)) {\r\n                let index = indexes.indexOf(document.activeElement);\r\n                if (index >= 0) {\r\n                    let newIndex = -1;\r\n                    if (event.equals(17 /* RightArrow */)) {\r\n                        newIndex = (index + 1) % indexes.length;\r\n                    }\r\n                    else if (event.equals(15 /* LeftArrow */)) {\r\n                        if (index === 0) {\r\n                            newIndex = indexes.length - 1;\r\n                        }\r\n                        else {\r\n                            newIndex = index - 1;\r\n                        }\r\n                    }\r\n                    if (event.equals(9 /* Escape */)) {\r\n                        indexes[index].blur();\r\n                        this.inputBox.focus();\r\n                    }\r\n                    else if (newIndex >= 0) {\r\n                        indexes[newIndex].focus();\r\n                    }\r\n                    dom.EventHelper.stop(event, true);\r\n                }\r\n            }\r\n        });\r\n        let controls = document.createElement('div');\r\n        controls.className = 'controls';\r\n        controls.style.display = this._showOptionButtons ? 'block' : 'none';\r\n        controls.appendChild(this.preserveCase.domNode);\r\n        this.domNode.appendChild(controls);\r\n        if (parent) {\r\n            parent.appendChild(this.domNode);\r\n        }\r\n        this.onkeydown(this.inputBox.inputElement, (e) => this._onKeyDown.fire(e));\r\n        this.onkeyup(this.inputBox.inputElement, (e) => this._onKeyUp.fire(e));\r\n        this.oninput(this.inputBox.inputElement, (e) => this._onInput.fire());\r\n        this.onmousedown(this.inputBox.inputElement, (e) => this._onMouseDown.fire(e));\r\n    }\r\n    enable() {\r\n        this.domNode.classList.remove('disabled');\r\n        this.inputBox.enable();\r\n        this.preserveCase.enable();\r\n    }\r\n    disable() {\r\n        this.domNode.classList.add('disabled');\r\n        this.inputBox.disable();\r\n        this.preserveCase.disable();\r\n    }\r\n    setEnabled(enabled) {\r\n        if (enabled) {\r\n            this.enable();\r\n        }\r\n        else {\r\n            this.disable();\r\n        }\r\n    }\r\n    style(styles) {\r\n        this.inputActiveOptionBorder = styles.inputActiveOptionBorder;\r\n        this.inputActiveOptionForeground = styles.inputActiveOptionForeground;\r\n        this.inputActiveOptionBackground = styles.inputActiveOptionBackground;\r\n        this.inputBackground = styles.inputBackground;\r\n        this.inputForeground = styles.inputForeground;\r\n        this.inputBorder = styles.inputBorder;\r\n        this.inputValidationInfoBackground = styles.inputValidationInfoBackground;\r\n        this.inputValidationInfoForeground = styles.inputValidationInfoForeground;\r\n        this.inputValidationInfoBorder = styles.inputValidationInfoBorder;\r\n        this.inputValidationWarningBackground = styles.inputValidationWarningBackground;\r\n        this.inputValidationWarningForeground = styles.inputValidationWarningForeground;\r\n        this.inputValidationWarningBorder = styles.inputValidationWarningBorder;\r\n        this.inputValidationErrorBackground = styles.inputValidationErrorBackground;\r\n        this.inputValidationErrorForeground = styles.inputValidationErrorForeground;\r\n        this.inputValidationErrorBorder = styles.inputValidationErrorBorder;\r\n        this.applyStyles();\r\n    }\r\n    applyStyles() {\r\n        if (this.domNode) {\r\n            const checkBoxStyles = {\r\n                inputActiveOptionBorder: this.inputActiveOptionBorder,\r\n                inputActiveOptionForeground: this.inputActiveOptionForeground,\r\n                inputActiveOptionBackground: this.inputActiveOptionBackground,\r\n            };\r\n            this.preserveCase.style(checkBoxStyles);\r\n            const inputBoxStyles = {\r\n                inputBackground: this.inputBackground,\r\n                inputForeground: this.inputForeground,\r\n                inputBorder: this.inputBorder,\r\n                inputValidationInfoBackground: this.inputValidationInfoBackground,\r\n                inputValidationInfoForeground: this.inputValidationInfoForeground,\r\n                inputValidationInfoBorder: this.inputValidationInfoBorder,\r\n                inputValidationWarningBackground: this.inputValidationWarningBackground,\r\n                inputValidationWarningForeground: this.inputValidationWarningForeground,\r\n                inputValidationWarningBorder: this.inputValidationWarningBorder,\r\n                inputValidationErrorBackground: this.inputValidationErrorBackground,\r\n                inputValidationErrorForeground: this.inputValidationErrorForeground,\r\n                inputValidationErrorBorder: this.inputValidationErrorBorder\r\n            };\r\n            this.inputBox.style(inputBoxStyles);\r\n        }\r\n    }\r\n    select() {\r\n        this.inputBox.select();\r\n    }\r\n    focus() {\r\n        this.inputBox.focus();\r\n    }\r\n    getPreserveCase() {\r\n        return this.preserveCase.checked;\r\n    }\r\n    setPreserveCase(value) {\r\n        this.preserveCase.checked = value;\r\n    }\r\n    focusOnPreserve() {\r\n        this.preserveCase.focus();\r\n    }\r\n    validate() {\r\n        if (this.inputBox) {\r\n            this.inputBox.validate();\r\n        }\r\n    }\r\n    set width(newWidth) {\r\n        this.inputBox.paddingRight = this.cachedOptionsWidth;\r\n        this.inputBox.width = newWidth;\r\n        this.domNode.style.width = newWidth + 'px';\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { IContextKeyService, ContextKeyExpr, RawContextKey } from '../contextkey/common/contextkey.js';\r\nimport { FindInput } from '../../base/browser/ui/findinput/findInput.js';\r\nimport { KeybindingsRegistry } from '../keybinding/common/keybindingsRegistry.js';\r\nimport { ReplaceInput } from '../../base/browser/ui/findinput/replaceInput.js';\r\nexport const HistoryNavigationWidgetContext = 'historyNavigationWidget';\r\nexport const HistoryNavigationEnablementContext = 'historyNavigationEnabled';\r\nfunction bindContextScopedWidget(contextKeyService, widget, contextKey) {\r\n    new RawContextKey(contextKey, widget).bindTo(contextKeyService);\r\n}\r\nfunction createWidgetScopedContextKeyService(contextKeyService, widget) {\r\n    return contextKeyService.createScoped(widget.target);\r\n}\r\nfunction getContextScopedWidget(contextKeyService, contextKey) {\r\n    return contextKeyService.getContext(document.activeElement).getValue(contextKey);\r\n}\r\nexport function createAndBindHistoryNavigationWidgetScopedContextKeyService(contextKeyService, widget) {\r\n    const scopedContextKeyService = createWidgetScopedContextKeyService(contextKeyService, widget);\r\n    bindContextScopedWidget(scopedContextKeyService, widget, HistoryNavigationWidgetContext);\r\n    const historyNavigationEnablement = new RawContextKey(HistoryNavigationEnablementContext, true).bindTo(scopedContextKeyService);\r\n    return { scopedContextKeyService, historyNavigationEnablement };\r\n}\r\nlet ContextScopedFindInput = class ContextScopedFindInput extends FindInput {\r\n    constructor(container, contextViewProvider, options, contextKeyService, showFindOptions = false) {\r\n        super(container, contextViewProvider, showFindOptions, options);\r\n        this._register(createAndBindHistoryNavigationWidgetScopedContextKeyService(contextKeyService, { target: this.inputBox.element, historyNavigator: this.inputBox }).scopedContextKeyService);\r\n    }\r\n};\r\nContextScopedFindInput = __decorate([\r\n    __param(3, IContextKeyService)\r\n], ContextScopedFindInput);\r\nexport { ContextScopedFindInput };\r\nlet ContextScopedReplaceInput = class ContextScopedReplaceInput extends ReplaceInput {\r\n    constructor(container, contextViewProvider, options, contextKeyService, showReplaceOptions = false) {\r\n        super(container, contextViewProvider, showReplaceOptions, options);\r\n        this._register(createAndBindHistoryNavigationWidgetScopedContextKeyService(contextKeyService, { target: this.inputBox.element, historyNavigator: this.inputBox }).scopedContextKeyService);\r\n    }\r\n};\r\nContextScopedReplaceInput = __decorate([\r\n    __param(3, IContextKeyService)\r\n], ContextScopedReplaceInput);\r\nexport { ContextScopedReplaceInput };\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'history.showPrevious',\r\n    weight: 200 /* WorkbenchContrib */,\r\n    when: ContextKeyExpr.and(ContextKeyExpr.has(HistoryNavigationWidgetContext), ContextKeyExpr.equals(HistoryNavigationEnablementContext, true)),\r\n    primary: 16 /* UpArrow */,\r\n    secondary: [512 /* Alt */ | 16 /* UpArrow */],\r\n    handler: (accessor, arg2) => {\r\n        const widget = getContextScopedWidget(accessor.get(IContextKeyService), HistoryNavigationWidgetContext);\r\n        if (widget) {\r\n            const historyInputBox = widget.historyNavigator;\r\n            historyInputBox.showPreviousValue();\r\n        }\r\n    }\r\n});\r\nKeybindingsRegistry.registerCommandAndKeybindingRule({\r\n    id: 'history.showNext',\r\n    weight: 200 /* WorkbenchContrib */,\r\n    when: ContextKeyExpr.and(ContextKeyExpr.has(HistoryNavigationWidgetContext), ContextKeyExpr.equals(HistoryNavigationEnablementContext, true)),\r\n    primary: 18 /* DownArrow */,\r\n    secondary: [512 /* Alt */ | 18 /* DownArrow */],\r\n    handler: (accessor, arg2) => {\r\n        const widget = getContextScopedWidget(accessor.get(IContextKeyService), HistoryNavigationWidgetContext);\r\n        if (widget) {\r\n            const historyInputBox = widget.historyNavigator;\r\n            historyInputBox.showNextValue();\r\n        }\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { Delayer } from '../../../base/common/async.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, MultiEditorAction, registerMultiEditorAction } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, FIND_IDS, FindModelBoundToEditorModel, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding, CONTEXT_REPLACE_INPUT_FOCUSED } from './findModel.js';\r\nimport { FindOptionsWidget } from './findOptionsWidget.js';\r\nimport { FindReplaceState } from './findState.js';\r\nimport { FindWidget } from './findWidget.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { IContextKeyService, ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IContextViewService } from '../../../platform/contextview/browser/contextView.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nimport { IStorageService } from '../../../platform/storage/common/storage.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nconst SEARCH_STRING_MAX_LENGTH = 524288;\r\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single') {\r\n    if (!editor.hasModel()) {\r\n        return null;\r\n    }\r\n    const selection = editor.getSelection();\r\n    // if selection spans multiple lines, default search string to empty\r\n    if ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\r\n        || seedSearchStringFromSelection === 'multiple') {\r\n        if (selection.isEmpty()) {\r\n            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\r\n            if (wordAtPosition) {\r\n                return wordAtPosition.word;\r\n            }\r\n        }\r\n        else {\r\n            if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\r\n                return editor.getModel().getValueInRange(selection);\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nlet CommonFindController = class CommonFindController extends Disposable {\r\n    constructor(editor, contextKeyService, storageService, clipboardService) {\r\n        super();\r\n        this._editor = editor;\r\n        this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\r\n        this._contextKeyService = contextKeyService;\r\n        this._storageService = storageService;\r\n        this._clipboardService = clipboardService;\r\n        this._updateHistoryDelayer = new Delayer(500);\r\n        this._state = this._register(new FindReplaceState());\r\n        this.loadQueryState();\r\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\r\n        this._model = null;\r\n        this._register(this._editor.onDidChangeModel(() => {\r\n            let shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\r\n            this.disposeModel();\r\n            this._state.change({\r\n                searchScope: null,\r\n                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */, false),\r\n                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */, false),\r\n                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */, false),\r\n                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */, false)\r\n            }, false);\r\n            if (shouldRestartFind) {\r\n                this._start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: 'none',\r\n                    seedSearchStringFromGlobalClipboard: false,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: false,\r\n                    updateSearchScope: false,\r\n                    loop: this._editor.getOption(33 /* find */).loop\r\n                });\r\n            }\r\n        }));\r\n    }\r\n    get editor() {\r\n        return this._editor;\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(CommonFindController.ID);\r\n    }\r\n    dispose() {\r\n        this.disposeModel();\r\n        super.dispose();\r\n    }\r\n    disposeModel() {\r\n        if (this._model) {\r\n            this._model.dispose();\r\n            this._model = null;\r\n        }\r\n    }\r\n    _onStateChanged(e) {\r\n        this.saveQueryState(e);\r\n        if (e.isRevealed) {\r\n            if (this._state.isRevealed) {\r\n                this._findWidgetVisible.set(true);\r\n            }\r\n            else {\r\n                this._findWidgetVisible.reset();\r\n                this.disposeModel();\r\n            }\r\n        }\r\n        if (e.searchString) {\r\n            this.setGlobalBufferTerm(this._state.searchString);\r\n        }\r\n    }\r\n    saveQueryState(e) {\r\n        if (e.isRegex) {\r\n            this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n        if (e.wholeWord) {\r\n            this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n        if (e.matchCase) {\r\n            this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n        if (e.preserveCase) {\r\n            this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* WORKSPACE */, 0 /* USER */);\r\n        }\r\n    }\r\n    loadQueryState() {\r\n        this._state.change({\r\n            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */, this._state.matchCase),\r\n            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */, this._state.wholeWord),\r\n            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */, this._state.isRegex),\r\n            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */, this._state.preserveCase)\r\n        }, false);\r\n    }\r\n    isFindInputFocused() {\r\n        return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\r\n    }\r\n    getState() {\r\n        return this._state;\r\n    }\r\n    closeFindWidget() {\r\n        this._state.change({\r\n            isRevealed: false,\r\n            searchScope: null\r\n        }, false);\r\n        this._editor.focus();\r\n    }\r\n    toggleCaseSensitive() {\r\n        this._state.change({ matchCase: !this._state.matchCase }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    toggleWholeWords() {\r\n        this._state.change({ wholeWord: !this._state.wholeWord }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    toggleRegex() {\r\n        this._state.change({ isRegex: !this._state.isRegex }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    togglePreserveCase() {\r\n        this._state.change({ preserveCase: !this._state.preserveCase }, false);\r\n        if (!this._state.isRevealed) {\r\n            this.highlightFindOptions();\r\n        }\r\n    }\r\n    toggleSearchScope() {\r\n        if (this._state.searchScope) {\r\n            this._state.change({ searchScope: null }, true);\r\n        }\r\n        else {\r\n            if (this._editor.hasModel()) {\r\n                let selections = this._editor.getSelections();\r\n                selections.map(selection => {\r\n                    if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\r\n                        selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\r\n                    }\r\n                    if (!selection.isEmpty()) {\r\n                        return selection;\r\n                    }\r\n                    return null;\r\n                }).filter(element => !!element);\r\n                if (selections.length) {\r\n                    this._state.change({ searchScope: selections }, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setSearchString(searchString) {\r\n        if (this._state.isRegex) {\r\n            searchString = strings.escapeRegExpCharacters(searchString);\r\n        }\r\n        this._state.change({ searchString: searchString }, false);\r\n    }\r\n    highlightFindOptions(ignoreWhenVisible = false) {\r\n        // overwritten in subclass\r\n    }\r\n    _start(opts) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.disposeModel();\r\n            if (!this._editor.hasModel()) {\r\n                // cannot do anything with an editor that doesn't have a model...\r\n                return;\r\n            }\r\n            let stateChanges = {\r\n                isRevealed: true\r\n            };\r\n            if (opts.seedSearchStringFromSelection === 'single') {\r\n                let selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\r\n                if (selectionSearchString) {\r\n                    if (this._state.isRegex) {\r\n                        stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\r\n                    }\r\n                    else {\r\n                        stateChanges.searchString = selectionSearchString;\r\n                    }\r\n                }\r\n            }\r\n            else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\r\n                let selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\r\n                if (selectionSearchString) {\r\n                    stateChanges.searchString = selectionSearchString;\r\n                }\r\n            }\r\n            if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\r\n                let selectionSearchString = yield this.getGlobalBufferTerm();\r\n                if (!this._editor.hasModel()) {\r\n                    // the editor has lost its model in the meantime\r\n                    return;\r\n                }\r\n                if (selectionSearchString) {\r\n                    stateChanges.searchString = selectionSearchString;\r\n                }\r\n            }\r\n            // Overwrite isReplaceRevealed\r\n            if (opts.forceRevealReplace) {\r\n                stateChanges.isReplaceRevealed = true;\r\n            }\r\n            else if (!this._findWidgetVisible.get()) {\r\n                stateChanges.isReplaceRevealed = false;\r\n            }\r\n            if (opts.updateSearchScope) {\r\n                let currentSelections = this._editor.getSelections();\r\n                if (currentSelections.some(selection => !selection.isEmpty())) {\r\n                    stateChanges.searchScope = currentSelections;\r\n                }\r\n            }\r\n            stateChanges.loop = opts.loop;\r\n            this._state.change(stateChanges, false);\r\n            if (!this._model) {\r\n                this._model = new FindModelBoundToEditorModel(this._editor, this._state);\r\n            }\r\n        });\r\n    }\r\n    start(opts) {\r\n        return this._start(opts);\r\n    }\r\n    moveToNextMatch() {\r\n        if (this._model) {\r\n            this._model.moveToNextMatch();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    moveToPrevMatch() {\r\n        if (this._model) {\r\n            this._model.moveToPrevMatch();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    replace() {\r\n        if (this._model) {\r\n            this._model.replace();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    replaceAll() {\r\n        if (this._model) {\r\n            this._model.replaceAll();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    selectAllMatches() {\r\n        if (this._model) {\r\n            this._model.selectAllMatches();\r\n            this._editor.focus();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    getGlobalBufferTerm() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._editor.getOption(33 /* find */).globalFindClipboard\r\n                && this._editor.hasModel()\r\n                && !this._editor.getModel().isTooLargeForSyncing()) {\r\n                return this._clipboardService.readFindText();\r\n            }\r\n            return '';\r\n        });\r\n    }\r\n    setGlobalBufferTerm(text) {\r\n        if (this._editor.getOption(33 /* find */).globalFindClipboard\r\n            && this._editor.hasModel()\r\n            && !this._editor.getModel().isTooLargeForSyncing()) {\r\n            // intentionally not awaited\r\n            this._clipboardService.writeFindText(text);\r\n        }\r\n    }\r\n};\r\nCommonFindController.ID = 'editor.contrib.findController';\r\nCommonFindController = __decorate([\r\n    __param(1, IContextKeyService),\r\n    __param(2, IStorageService),\r\n    __param(3, IClipboardService)\r\n], CommonFindController);\r\nexport { CommonFindController };\r\nlet FindController = class FindController extends CommonFindController {\r\n    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, _notificationService, _storageService, clipboardService) {\r\n        super(editor, _contextKeyService, _storageService, clipboardService);\r\n        this._contextViewService = _contextViewService;\r\n        this._keybindingService = _keybindingService;\r\n        this._themeService = _themeService;\r\n        this._notificationService = _notificationService;\r\n        this._widget = null;\r\n        this._findOptionsWidget = null;\r\n    }\r\n    _start(opts) {\r\n        const _super = Object.create(null, {\r\n            _start: { get: () => super._start }\r\n        });\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._widget) {\r\n                this._createFindWidget();\r\n            }\r\n            const selection = this._editor.getSelection();\r\n            let updateSearchScope = false;\r\n            switch (this._editor.getOption(33 /* find */).autoFindInSelection) {\r\n                case 'always':\r\n                    updateSearchScope = true;\r\n                    break;\r\n                case 'never':\r\n                    updateSearchScope = false;\r\n                    break;\r\n                case 'multiline':\r\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\r\n                    updateSearchScope = isSelectionMultipleLine;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            opts.updateSearchScope = updateSearchScope;\r\n            yield _super._start.call(this, opts);\r\n            if (this._widget) {\r\n                if (opts.shouldFocus === 2 /* FocusReplaceInput */) {\r\n                    this._widget.focusReplaceInput();\r\n                }\r\n                else if (opts.shouldFocus === 1 /* FocusFindInput */) {\r\n                    this._widget.focusFindInput();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    highlightFindOptions(ignoreWhenVisible = false) {\r\n        if (!this._widget) {\r\n            this._createFindWidget();\r\n        }\r\n        if (this._state.isRevealed && !ignoreWhenVisible) {\r\n            this._widget.highlightFindOptions();\r\n        }\r\n        else {\r\n            this._findOptionsWidget.highlightFindOptions();\r\n        }\r\n    }\r\n    _createFindWidget() {\r\n        this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\r\n        this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService, this._themeService));\r\n    }\r\n};\r\nFindController = __decorate([\r\n    __param(1, IContextViewService),\r\n    __param(2, IContextKeyService),\r\n    __param(3, IKeybindingService),\r\n    __param(4, IThemeService),\r\n    __param(5, INotificationService),\r\n    __param(6, IStorageService),\r\n    __param(7, IClipboardService)\r\n], FindController);\r\nexport { FindController };\r\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\r\n    id: FIND_IDS.StartFindAction,\r\n    label: nls.localize('startFindAction', \"Find\"),\r\n    alias: 'Find',\r\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\r\n    kbOpts: {\r\n        kbExpr: null,\r\n        primary: 2048 /* CtrlCmd */ | 36 /* KEY_F */,\r\n        weight: 100 /* EditorContrib */\r\n    },\r\n    menuOpts: {\r\n        menuId: MenuId.MenubarEditMenu,\r\n        group: '3_find',\r\n        title: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\r\n        order: 1\r\n    }\r\n}));\r\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\r\n    const controller = CommonFindController.get(editor);\r\n    if (!controller) {\r\n        return false;\r\n    }\r\n    return controller.start({\r\n        forceRevealReplace: false,\r\n        seedSearchStringFromSelection: editor.getOption(33 /* find */).seedSearchStringFromSelection ? 'single' : 'none',\r\n        seedSearchStringFromGlobalClipboard: editor.getOption(33 /* find */).globalFindClipboard,\r\n        shouldFocus: 1 /* FocusFindInput */,\r\n        shouldAnimate: true,\r\n        updateSearchScope: false,\r\n        loop: editor.getOption(33 /* find */).loop\r\n    });\r\n});\r\nexport class StartFindWithSelectionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.StartFindWithSelection,\r\n            label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\r\n            alias: 'Find With Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 0,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 35 /* KEY_E */,\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = CommonFindController.get(editor);\r\n            if (controller) {\r\n                yield controller.start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: 'multiple',\r\n                    seedSearchStringFromGlobalClipboard: false,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: true,\r\n                    updateSearchScope: false,\r\n                    loop: editor.getOption(33 /* find */).loop\r\n                });\r\n                controller.setGlobalBufferTerm(controller.getState().searchString);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class MatchFindAction extends EditorAction {\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = CommonFindController.get(editor);\r\n            if (controller && !this._run(controller)) {\r\n                yield controller.start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(33 /* find */).seedSearchStringFromSelection ? 'single' : 'none',\r\n                    seedSearchStringFromGlobalClipboard: true,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: true,\r\n                    updateSearchScope: false,\r\n                    loop: editor.getOption(33 /* find */).loop\r\n                });\r\n                this._run(controller);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class NextMatchFindAction extends MatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.NextMatchFindAction,\r\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\r\n            alias: 'Find Next',\r\n            precondition: undefined,\r\n            kbOpts: [{\r\n                    kbExpr: EditorContextKeys.focus,\r\n                    primary: 61 /* F3 */,\r\n                    mac: { primary: 2048 /* CtrlCmd */ | 37 /* KEY_G */, secondary: [61 /* F3 */] },\r\n                    weight: 100 /* EditorContrib */\r\n                }, {\r\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\r\n                    primary: 3 /* Enter */,\r\n                    weight: 100 /* EditorContrib */\r\n                }]\r\n        });\r\n    }\r\n    _run(controller) {\r\n        const result = controller.moveToNextMatch();\r\n        if (result) {\r\n            controller.editor.pushUndoStop();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nexport class PreviousMatchFindAction extends MatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.PreviousMatchFindAction,\r\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\r\n            alias: 'Find Previous',\r\n            precondition: undefined,\r\n            kbOpts: [{\r\n                    kbExpr: EditorContextKeys.focus,\r\n                    primary: 1024 /* Shift */ | 61 /* F3 */,\r\n                    mac: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 37 /* KEY_G */, secondary: [1024 /* Shift */ | 61 /* F3 */] },\r\n                    weight: 100 /* EditorContrib */\r\n                }, {\r\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\r\n                    primary: 1024 /* Shift */ | 3 /* Enter */,\r\n                    weight: 100 /* EditorContrib */\r\n                }\r\n            ]\r\n        });\r\n    }\r\n    _run(controller) {\r\n        return controller.moveToPrevMatch();\r\n    }\r\n}\r\nexport class SelectionMatchFindAction extends EditorAction {\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = CommonFindController.get(editor);\r\n            if (!controller) {\r\n                return;\r\n            }\r\n            let selectionSearchString = getSelectionSearchString(editor);\r\n            if (selectionSearchString) {\r\n                controller.setSearchString(selectionSearchString);\r\n            }\r\n            if (!this._run(controller)) {\r\n                yield controller.start({\r\n                    forceRevealReplace: false,\r\n                    seedSearchStringFromSelection: editor.getOption(33 /* find */).seedSearchStringFromSelection ? 'single' : 'none',\r\n                    seedSearchStringFromGlobalClipboard: false,\r\n                    shouldFocus: 0 /* NoFocusChange */,\r\n                    shouldAnimate: true,\r\n                    updateSearchScope: false,\r\n                    loop: editor.getOption(33 /* find */).loop\r\n                });\r\n                this._run(controller);\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.NextSelectionMatchFindAction,\r\n            label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\r\n            alias: 'Find Next Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 61 /* F3 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _run(controller) {\r\n        return controller.moveToNextMatch();\r\n    }\r\n}\r\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\r\n    constructor() {\r\n        super({\r\n            id: FIND_IDS.PreviousSelectionMatchFindAction,\r\n            label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\r\n            alias: 'Find Previous Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 61 /* F3 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _run(controller) {\r\n        return controller.moveToPrevMatch();\r\n    }\r\n}\r\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\r\n    id: FIND_IDS.StartFindReplaceAction,\r\n    label: nls.localize('startReplace', \"Replace\"),\r\n    alias: 'Replace',\r\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\r\n    kbOpts: {\r\n        kbExpr: null,\r\n        primary: 2048 /* CtrlCmd */ | 38 /* KEY_H */,\r\n        mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 36 /* KEY_F */ },\r\n        weight: 100 /* EditorContrib */\r\n    },\r\n    menuOpts: {\r\n        menuId: MenuId.MenubarEditMenu,\r\n        group: '3_find',\r\n        title: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\r\n        order: 2\r\n    }\r\n}));\r\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\r\n    if (!editor.hasModel() || editor.getOption(78 /* readOnly */)) {\r\n        return false;\r\n    }\r\n    const controller = CommonFindController.get(editor);\r\n    if (!controller) {\r\n        return false;\r\n    }\r\n    const currentSelection = editor.getSelection();\r\n    const findInputFocused = controller.isFindInputFocused();\r\n    // we only seed search string from selection when the current selection is single line and not empty,\r\n    // + the find input is not focused\r\n    const seedSearchStringFromSelection = !currentSelection.isEmpty()\r\n        && currentSelection.startLineNumber === currentSelection.endLineNumber && editor.getOption(33 /* find */).seedSearchStringFromSelection\r\n        && !findInputFocused;\r\n    /*\r\n    * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\r\n\r\n    * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\r\n    * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\r\n    * findInputFocused false seedSearchStringFromSelection false FocusFindInput\r\n    */\r\n    const shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\r\n        2 /* FocusReplaceInput */ : 1 /* FocusFindInput */;\r\n    return controller.start({\r\n        forceRevealReplace: true,\r\n        seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\r\n        seedSearchStringFromGlobalClipboard: editor.getOption(33 /* find */).seedSearchStringFromSelection,\r\n        shouldFocus: shouldFocus,\r\n        shouldAnimate: true,\r\n        updateSearchScope: false,\r\n        loop: editor.getOption(33 /* find */).loop\r\n    });\r\n});\r\nregisterEditorContribution(CommonFindController.ID, FindController);\r\nregisterEditorAction(StartFindWithSelectionAction);\r\nregisterEditorAction(NextMatchFindAction);\r\nregisterEditorAction(PreviousMatchFindAction);\r\nregisterEditorAction(NextSelectionMatchFindAction);\r\nregisterEditorAction(PreviousSelectionMatchFindAction);\r\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.CloseFindWidgetCommand,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.closeFindWidget(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleCaseSensitiveCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleCaseSensitive(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleCaseSensitiveKeybinding.primary,\r\n        mac: ToggleCaseSensitiveKeybinding.mac,\r\n        win: ToggleCaseSensitiveKeybinding.win,\r\n        linux: ToggleCaseSensitiveKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleWholeWordCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleWholeWords(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleWholeWordKeybinding.primary,\r\n        mac: ToggleWholeWordKeybinding.mac,\r\n        win: ToggleWholeWordKeybinding.win,\r\n        linux: ToggleWholeWordKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleRegexCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleRegex(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleRegexKeybinding.primary,\r\n        mac: ToggleRegexKeybinding.mac,\r\n        win: ToggleRegexKeybinding.win,\r\n        linux: ToggleRegexKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ToggleSearchScopeCommand,\r\n    precondition: undefined,\r\n    handler: x => x.toggleSearchScope(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: ToggleSearchScopeKeybinding.primary,\r\n        mac: ToggleSearchScopeKeybinding.mac,\r\n        win: ToggleSearchScopeKeybinding.win,\r\n        linux: ToggleSearchScopeKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.TogglePreserveCaseCommand,\r\n    precondition: undefined,\r\n    handler: x => x.togglePreserveCase(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: TogglePreserveCaseKeybinding.primary,\r\n        mac: TogglePreserveCaseKeybinding.mac,\r\n        win: TogglePreserveCaseKeybinding.win,\r\n        linux: TogglePreserveCaseKeybinding.linux\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceOneAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replace(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 22 /* KEY_1 */\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceOneAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replace(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\r\n        primary: 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceAllAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replaceAll(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.ReplaceAllAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.replaceAll(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\r\n        primary: undefined,\r\n        mac: {\r\n            primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\r\n        }\r\n    }\r\n}));\r\nregisterEditorCommand(new FindCommand({\r\n    id: FIND_IDS.SelectAllMatchesAction,\r\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\r\n    handler: x => x.selectAllMatches(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 5,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 512 /* Alt */ | 3 /* Enter */\r\n    }\r\n}));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './folding.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as types from '../../../base/common/types.js';\r\nimport { escapeRegExpCharacters } from '../../../base/common/strings.js';\r\nimport { RunOnceScheduler, Delayer, createCancelablePromise } from '../../../base/common/async.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorAction, registerEditorContribution, EditorAction, registerInstantiatedEditorAction } from '../../browser/editorExtensions.js';\r\nimport { FoldingModel, setCollapseStateAtLevel, setCollapseStateLevelsDown, setCollapseStateLevelsUp, setCollapseStateForMatchingLines, setCollapseStateForType, setCollapseStateForRest, toggleCollapseState, setCollapseStateUp } from './foldingModel.js';\r\nimport { FoldingDecorationProvider, foldingCollapsedIcon, foldingExpandedIcon } from './foldingDecorations.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { HiddenRangeModel } from './hiddenRangeModel.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { IndentRangeProvider } from './indentRangeProvider.js';\r\nimport { FoldingRangeProviderRegistry, FoldingRangeKind } from '../../common/modes.js';\r\nimport { SyntaxRangeProvider, ID_SYNTAX_PROVIDER } from './syntaxRangeProvider.js';\r\nimport { InitializingRangeProvider, ID_INIT_PROVIDER } from './intializingRangeProvider.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { registerColor, editorSelectionBackground, transparent, iconForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nconst CONTEXT_FOLDING_ENABLED = new RawContextKey('foldingEnabled', false);\r\nlet FoldingController = class FoldingController extends Disposable {\r\n    constructor(editor, contextKeyService) {\r\n        super();\r\n        this.contextKeyService = contextKeyService;\r\n        this.localToDispose = this._register(new DisposableStore());\r\n        this.editor = editor;\r\n        const options = this.editor.getOptions();\r\n        this._isEnabled = options.get(35 /* folding */);\r\n        this._useFoldingProviders = options.get(36 /* foldingStrategy */) !== 'indentation';\r\n        this._unfoldOnClickAfterEndOfLine = options.get(38 /* unfoldOnClickAfterEndOfLine */);\r\n        this._restoringViewState = false;\r\n        this.foldingModel = null;\r\n        this.hiddenRangeModel = null;\r\n        this.rangeProvider = null;\r\n        this.foldingRegionPromise = null;\r\n        this.foldingStateMemento = null;\r\n        this.foldingModelPromise = null;\r\n        this.updateScheduler = null;\r\n        this.cursorChangedScheduler = null;\r\n        this.mouseDownInfo = null;\r\n        this.foldingDecorationProvider = new FoldingDecorationProvider(editor);\r\n        this.foldingDecorationProvider.autoHideFoldingControls = options.get(97 /* showFoldingControls */) === 'mouseover';\r\n        this.foldingDecorationProvider.showFoldingHighlights = options.get(37 /* foldingHighlight */);\r\n        this.foldingEnabled = CONTEXT_FOLDING_ENABLED.bindTo(this.contextKeyService);\r\n        this.foldingEnabled.set(this._isEnabled);\r\n        this._register(this.editor.onDidChangeModel(() => this.onModelChanged()));\r\n        this._register(this.editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(35 /* folding */)) {\r\n                this._isEnabled = this.editor.getOptions().get(35 /* folding */);\r\n                this.foldingEnabled.set(this._isEnabled);\r\n                this.onModelChanged();\r\n            }\r\n            if (e.hasChanged(97 /* showFoldingControls */) || e.hasChanged(37 /* foldingHighlight */)) {\r\n                const options = this.editor.getOptions();\r\n                this.foldingDecorationProvider.autoHideFoldingControls = options.get(97 /* showFoldingControls */) === 'mouseover';\r\n                this.foldingDecorationProvider.showFoldingHighlights = options.get(37 /* foldingHighlight */);\r\n                this.onModelContentChanged();\r\n            }\r\n            if (e.hasChanged(36 /* foldingStrategy */)) {\r\n                this._useFoldingProviders = this.editor.getOptions().get(36 /* foldingStrategy */) !== 'indentation';\r\n                this.onFoldingStrategyChanged();\r\n            }\r\n            if (e.hasChanged(38 /* unfoldOnClickAfterEndOfLine */)) {\r\n                this._unfoldOnClickAfterEndOfLine = this.editor.getOptions().get(38 /* unfoldOnClickAfterEndOfLine */);\r\n            }\r\n        }));\r\n        this.onModelChanged();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(FoldingController.ID);\r\n    }\r\n    /**\r\n     * Store view state.\r\n     */\r\n    saveViewState() {\r\n        let model = this.editor.getModel();\r\n        if (!model || !this._isEnabled || model.isTooLargeForTokenization()) {\r\n            return {};\r\n        }\r\n        if (this.foldingModel) { // disposed ?\r\n            let collapsedRegions = this.foldingModel.isInitialized ? this.foldingModel.getMemento() : this.hiddenRangeModel.getMemento();\r\n            let provider = this.rangeProvider ? this.rangeProvider.id : undefined;\r\n            return { collapsedRegions, lineCount: model.getLineCount(), provider };\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Restore view state.\r\n     */\r\n    restoreViewState(state) {\r\n        let model = this.editor.getModel();\r\n        if (!model || !this._isEnabled || model.isTooLargeForTokenization() || !this.hiddenRangeModel) {\r\n            return;\r\n        }\r\n        if (!state || !state.collapsedRegions || state.lineCount !== model.getLineCount()) {\r\n            return;\r\n        }\r\n        if (state.provider === ID_SYNTAX_PROVIDER || state.provider === ID_INIT_PROVIDER) {\r\n            this.foldingStateMemento = state;\r\n        }\r\n        const collapsedRegions = state.collapsedRegions;\r\n        // set the hidden ranges right away, before waiting for the folding model.\r\n        if (this.hiddenRangeModel.applyMemento(collapsedRegions)) {\r\n            const foldingModel = this.getFoldingModel();\r\n            if (foldingModel) {\r\n                foldingModel.then(foldingModel => {\r\n                    if (foldingModel) {\r\n                        this._restoringViewState = true;\r\n                        try {\r\n                            foldingModel.applyMemento(collapsedRegions);\r\n                        }\r\n                        finally {\r\n                            this._restoringViewState = false;\r\n                        }\r\n                    }\r\n                }).then(undefined, onUnexpectedError);\r\n            }\r\n        }\r\n    }\r\n    onModelChanged() {\r\n        this.localToDispose.clear();\r\n        let model = this.editor.getModel();\r\n        if (!this._isEnabled || !model || model.isTooLargeForTokenization()) {\r\n            // huge files get no view model, so they cannot support hidden areas\r\n            return;\r\n        }\r\n        this.foldingModel = new FoldingModel(model, this.foldingDecorationProvider);\r\n        this.localToDispose.add(this.foldingModel);\r\n        this.hiddenRangeModel = new HiddenRangeModel(this.foldingModel);\r\n        this.localToDispose.add(this.hiddenRangeModel);\r\n        this.localToDispose.add(this.hiddenRangeModel.onDidChange(hr => this.onHiddenRangesChanges(hr)));\r\n        this.updateScheduler = new Delayer(200);\r\n        this.cursorChangedScheduler = new RunOnceScheduler(() => this.revealCursor(), 200);\r\n        this.localToDispose.add(this.cursorChangedScheduler);\r\n        this.localToDispose.add(FoldingRangeProviderRegistry.onDidChange(() => this.onFoldingStrategyChanged()));\r\n        this.localToDispose.add(this.editor.onDidChangeModelLanguageConfiguration(() => this.onFoldingStrategyChanged())); // covers model language changes as well\r\n        this.localToDispose.add(this.editor.onDidChangeModelContent(() => this.onModelContentChanged()));\r\n        this.localToDispose.add(this.editor.onDidChangeCursorPosition(() => this.onCursorPositionChanged()));\r\n        this.localToDispose.add(this.editor.onMouseDown(e => this.onEditorMouseDown(e)));\r\n        this.localToDispose.add(this.editor.onMouseUp(e => this.onEditorMouseUp(e)));\r\n        this.localToDispose.add({\r\n            dispose: () => {\r\n                if (this.foldingRegionPromise) {\r\n                    this.foldingRegionPromise.cancel();\r\n                    this.foldingRegionPromise = null;\r\n                }\r\n                if (this.updateScheduler) {\r\n                    this.updateScheduler.cancel();\r\n                }\r\n                this.updateScheduler = null;\r\n                this.foldingModel = null;\r\n                this.foldingModelPromise = null;\r\n                this.hiddenRangeModel = null;\r\n                this.cursorChangedScheduler = null;\r\n                this.foldingStateMemento = null;\r\n                if (this.rangeProvider) {\r\n                    this.rangeProvider.dispose();\r\n                }\r\n                this.rangeProvider = null;\r\n            }\r\n        });\r\n        this.onModelContentChanged();\r\n    }\r\n    onFoldingStrategyChanged() {\r\n        if (this.rangeProvider) {\r\n            this.rangeProvider.dispose();\r\n        }\r\n        this.rangeProvider = null;\r\n        this.onModelContentChanged();\r\n    }\r\n    getRangeProvider(editorModel) {\r\n        if (this.rangeProvider) {\r\n            return this.rangeProvider;\r\n        }\r\n        this.rangeProvider = new IndentRangeProvider(editorModel); // fallback\r\n        if (this._useFoldingProviders && this.foldingModel) {\r\n            let foldingProviders = FoldingRangeProviderRegistry.ordered(this.foldingModel.textModel);\r\n            if (foldingProviders.length === 0 && this.foldingStateMemento && this.foldingStateMemento.collapsedRegions) {\r\n                const rangeProvider = this.rangeProvider = new InitializingRangeProvider(editorModel, this.foldingStateMemento.collapsedRegions, () => {\r\n                    // if after 30 the InitializingRangeProvider is still not replaced, force a refresh\r\n                    this.foldingStateMemento = null;\r\n                    this.onFoldingStrategyChanged();\r\n                }, 30000);\r\n                return rangeProvider; // keep memento in case there are still no foldingProviders on the next request.\r\n            }\r\n            else if (foldingProviders.length > 0) {\r\n                this.rangeProvider = new SyntaxRangeProvider(editorModel, foldingProviders, () => this.onModelContentChanged());\r\n            }\r\n        }\r\n        this.foldingStateMemento = null;\r\n        return this.rangeProvider;\r\n    }\r\n    getFoldingModel() {\r\n        return this.foldingModelPromise;\r\n    }\r\n    onModelContentChanged() {\r\n        if (this.updateScheduler) {\r\n            if (this.foldingRegionPromise) {\r\n                this.foldingRegionPromise.cancel();\r\n                this.foldingRegionPromise = null;\r\n            }\r\n            this.foldingModelPromise = this.updateScheduler.trigger(() => {\r\n                const foldingModel = this.foldingModel;\r\n                if (!foldingModel) { // null if editor has been disposed, or folding turned off\r\n                    return null;\r\n                }\r\n                let foldingRegionPromise = this.foldingRegionPromise = createCancelablePromise(token => this.getRangeProvider(foldingModel.textModel).compute(token));\r\n                return foldingRegionPromise.then(foldingRanges => {\r\n                    if (foldingRanges && foldingRegionPromise === this.foldingRegionPromise) { // new request or cancelled in the meantime?\r\n                        // some cursors might have moved into hidden regions, make sure they are in expanded regions\r\n                        let selections = this.editor.getSelections();\r\n                        let selectionLineNumbers = selections ? selections.map(s => s.startLineNumber) : [];\r\n                        foldingModel.update(foldingRanges, selectionLineNumbers);\r\n                    }\r\n                    return foldingModel;\r\n                });\r\n            }).then(undefined, (err) => {\r\n                onUnexpectedError(err);\r\n                return null;\r\n            });\r\n        }\r\n    }\r\n    onHiddenRangesChanges(hiddenRanges) {\r\n        if (this.hiddenRangeModel && hiddenRanges.length && !this._restoringViewState) {\r\n            let selections = this.editor.getSelections();\r\n            if (selections) {\r\n                if (this.hiddenRangeModel.adjustSelections(selections)) {\r\n                    this.editor.setSelections(selections);\r\n                }\r\n            }\r\n        }\r\n        this.editor.setHiddenAreas(hiddenRanges);\r\n    }\r\n    onCursorPositionChanged() {\r\n        if (this.hiddenRangeModel && this.hiddenRangeModel.hasRanges()) {\r\n            this.cursorChangedScheduler.schedule();\r\n        }\r\n    }\r\n    revealCursor() {\r\n        const foldingModel = this.getFoldingModel();\r\n        if (!foldingModel) {\r\n            return;\r\n        }\r\n        foldingModel.then(foldingModel => {\r\n            if (foldingModel) {\r\n                let selections = this.editor.getSelections();\r\n                if (selections && selections.length > 0) {\r\n                    let toToggle = [];\r\n                    for (let selection of selections) {\r\n                        let lineNumber = selection.selectionStartLineNumber;\r\n                        if (this.hiddenRangeModel && this.hiddenRangeModel.isHidden(lineNumber)) {\r\n                            toToggle.push(...foldingModel.getAllRegionsAtLine(lineNumber, r => r.isCollapsed && lineNumber > r.startLineNumber));\r\n                        }\r\n                    }\r\n                    if (toToggle.length) {\r\n                        foldingModel.toggleCollapseState(toToggle);\r\n                        this.reveal(selections[0].getPosition());\r\n                    }\r\n                }\r\n            }\r\n        }).then(undefined, onUnexpectedError);\r\n    }\r\n    onEditorMouseDown(e) {\r\n        this.mouseDownInfo = null;\r\n        if (!this.hiddenRangeModel || !e.target || !e.target.range) {\r\n            return;\r\n        }\r\n        if (!e.event.leftButton && !e.event.middleButton) {\r\n            return;\r\n        }\r\n        const range = e.target.range;\r\n        let iconClicked = false;\r\n        switch (e.target.type) {\r\n            case 4 /* GUTTER_LINE_DECORATIONS */:\r\n                const data = e.target.detail;\r\n                const offsetLeftInGutter = e.target.element.offsetLeft;\r\n                const gutterOffsetX = data.offsetX - offsetLeftInGutter;\r\n                // const gutterOffsetX = data.offsetX - data.glyphMarginWidth - data.lineNumbersWidth - data.glyphMarginLeft;\r\n                // TODO@joao TODO@alex TODO@martin this is such that we don't collide with dirty diff\r\n                if (gutterOffsetX < 5) { // the whitespace between the border and the real folding icon border is 5px\r\n                    return;\r\n                }\r\n                iconClicked = true;\r\n                break;\r\n            case 7 /* CONTENT_EMPTY */: {\r\n                if (this._unfoldOnClickAfterEndOfLine && this.hiddenRangeModel.hasRanges()) {\r\n                    const data = e.target.detail;\r\n                    if (!data.isAfterLines) {\r\n                        break;\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            case 6 /* CONTENT_TEXT */: {\r\n                if (this.hiddenRangeModel.hasRanges()) {\r\n                    let model = this.editor.getModel();\r\n                    if (model && range.startColumn === model.getLineMaxColumn(range.startLineNumber)) {\r\n                        break;\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n            default:\r\n                return;\r\n        }\r\n        this.mouseDownInfo = { lineNumber: range.startLineNumber, iconClicked };\r\n    }\r\n    onEditorMouseUp(e) {\r\n        const foldingModel = this.getFoldingModel();\r\n        if (!foldingModel || !this.mouseDownInfo || !e.target) {\r\n            return;\r\n        }\r\n        let lineNumber = this.mouseDownInfo.lineNumber;\r\n        let iconClicked = this.mouseDownInfo.iconClicked;\r\n        let range = e.target.range;\r\n        if (!range || range.startLineNumber !== lineNumber) {\r\n            return;\r\n        }\r\n        if (iconClicked) {\r\n            if (e.target.type !== 4 /* GUTTER_LINE_DECORATIONS */) {\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            let model = this.editor.getModel();\r\n            if (!model || range.startColumn !== model.getLineMaxColumn(lineNumber)) {\r\n                return;\r\n            }\r\n        }\r\n        foldingModel.then(foldingModel => {\r\n            if (foldingModel) {\r\n                let region = foldingModel.getRegionAtLine(lineNumber);\r\n                if (region && region.startLineNumber === lineNumber) {\r\n                    let isCollapsed = region.isCollapsed;\r\n                    if (iconClicked || isCollapsed) {\r\n                        let surrounding = e.event.altKey;\r\n                        let toToggle = [];\r\n                        if (surrounding) {\r\n                            let filter = (otherRegion) => !otherRegion.containedBy(region) && !region.containedBy(otherRegion);\r\n                            let toMaybeToggle = foldingModel.getRegionsInside(null, filter);\r\n                            for (const r of toMaybeToggle) {\r\n                                if (r.isCollapsed) {\r\n                                    toToggle.push(r);\r\n                                }\r\n                            }\r\n                            // if any surrounding regions are folded, unfold those. Otherwise, fold all surrounding\r\n                            if (toToggle.length === 0) {\r\n                                toToggle = toMaybeToggle;\r\n                            }\r\n                        }\r\n                        else {\r\n                            let recursive = e.event.middleButton || e.event.shiftKey;\r\n                            if (recursive) {\r\n                                for (const r of foldingModel.getRegionsInside(region)) {\r\n                                    if (r.isCollapsed === isCollapsed) {\r\n                                        toToggle.push(r);\r\n                                    }\r\n                                }\r\n                            }\r\n                            // when recursive, first only collapse all children. If all are already folded or there are no children, also fold parent.\r\n                            if (isCollapsed || !recursive || toToggle.length === 0) {\r\n                                toToggle.push(region);\r\n                            }\r\n                        }\r\n                        foldingModel.toggleCollapseState(toToggle);\r\n                        this.reveal({ lineNumber, column: 1 });\r\n                    }\r\n                }\r\n            }\r\n        }).then(undefined, onUnexpectedError);\r\n    }\r\n    reveal(position) {\r\n        this.editor.revealPositionInCenterIfOutsideViewport(position, 0 /* Smooth */);\r\n    }\r\n};\r\nFoldingController.ID = 'editor.contrib.folding';\r\nFoldingController = __decorate([\r\n    __param(1, IContextKeyService)\r\n], FoldingController);\r\nexport { FoldingController };\r\nclass FoldingAction extends EditorAction {\r\n    runEditorCommand(accessor, editor, args) {\r\n        let foldingController = FoldingController.get(editor);\r\n        if (!foldingController) {\r\n            return;\r\n        }\r\n        let foldingModelPromise = foldingController.getFoldingModel();\r\n        if (foldingModelPromise) {\r\n            this.reportTelemetry(accessor, editor);\r\n            return foldingModelPromise.then(foldingModel => {\r\n                if (foldingModel) {\r\n                    this.invoke(foldingController, foldingModel, editor, args);\r\n                    const selection = editor.getSelection();\r\n                    if (selection) {\r\n                        foldingController.reveal(selection.getStartPosition());\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    getSelectedLines(editor) {\r\n        let selections = editor.getSelections();\r\n        return selections ? selections.map(s => s.startLineNumber) : [];\r\n    }\r\n    getLineNumbers(args, editor) {\r\n        if (args && args.selectionLines) {\r\n            return args.selectionLines.map(l => l + 1); // to 0-bases line numbers\r\n        }\r\n        return this.getSelectedLines(editor);\r\n    }\r\n    run(_accessor, _editor) {\r\n    }\r\n}\r\nfunction foldingArgumentsConstraint(args) {\r\n    if (!types.isUndefined(args)) {\r\n        if (!types.isObject(args)) {\r\n            return false;\r\n        }\r\n        const foldingArgs = args;\r\n        if (!types.isUndefined(foldingArgs.levels) && !types.isNumber(foldingArgs.levels)) {\r\n            return false;\r\n        }\r\n        if (!types.isUndefined(foldingArgs.direction) && !types.isString(foldingArgs.direction)) {\r\n            return false;\r\n        }\r\n        if (!types.isUndefined(foldingArgs.selectionLines) && (!types.isArray(foldingArgs.selectionLines) || !foldingArgs.selectionLines.every(types.isNumber))) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nclass UnfoldAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.unfold',\r\n            label: nls.localize('unfoldAction.label', \"Unfold\"),\r\n            alias: 'Unfold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 89 /* US_CLOSE_SQUARE_BRACKET */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 89 /* US_CLOSE_SQUARE_BRACKET */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            description: {\r\n                description: 'Unfold the content in the editor',\r\n                args: [\r\n                    {\r\n                        name: 'Unfold editor argument',\r\n                        description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t\t* 'levels': Number of levels to unfold. If not set, defaults to 1.\n\t\t\t\t\t\t* 'direction': If 'up', unfold given number of levels up otherwise unfolds down.\n\t\t\t\t\t\t* 'selectionLines': The start lines (0-based) of the editor selections to apply the unfold action to. If not set, the active selection(s) will be used.\n\t\t\t\t\t\t`,\r\n                        constraint: foldingArgumentsConstraint,\r\n                        schema: {\r\n                            'type': 'object',\r\n                            'properties': {\r\n                                'levels': {\r\n                                    'type': 'number',\r\n                                    'default': 1\r\n                                },\r\n                                'direction': {\r\n                                    'type': 'string',\r\n                                    'enum': ['up', 'down'],\r\n                                    'default': 'down'\r\n                                },\r\n                                'selectionLines': {\r\n                                    'type': 'array',\r\n                                    'items': {\r\n                                        'type': 'number'\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor, args) {\r\n        let levels = args && args.levels || 1;\r\n        let lineNumbers = this.getLineNumbers(args, editor);\r\n        if (args && args.direction === 'up') {\r\n            setCollapseStateLevelsUp(foldingModel, false, levels, lineNumbers);\r\n        }\r\n        else {\r\n            setCollapseStateLevelsDown(foldingModel, false, levels, lineNumbers);\r\n        }\r\n    }\r\n}\r\nclass UnFoldRecursivelyAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.unfoldRecursively',\r\n            label: nls.localize('unFoldRecursivelyAction.label', \"Unfold Recursively\"),\r\n            alias: 'Unfold Recursively',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 89 /* US_CLOSE_SQUARE_BRACKET */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor, _args) {\r\n        setCollapseStateLevelsDown(foldingModel, false, Number.MAX_VALUE, this.getSelectedLines(editor));\r\n    }\r\n}\r\nclass FoldAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.fold',\r\n            label: nls.localize('foldAction.label', \"Fold\"),\r\n            alias: 'Fold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 87 /* US_OPEN_SQUARE_BRACKET */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 87 /* US_OPEN_SQUARE_BRACKET */\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            description: {\r\n                description: 'Fold the content in the editor',\r\n                args: [\r\n                    {\r\n                        name: 'Fold editor argument',\r\n                        description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t\t\t* 'levels': Number of levels to fold.\n\t\t\t\t\t\t\t* 'direction': If 'up', folds given number of levels up otherwise folds down.\n\t\t\t\t\t\t\t* 'selectionLines': The start lines (0-based) of the editor selections to apply the fold action to. If not set, the active selection(s) will be used.\n\t\t\t\t\t\t\tIf no levels or direction is set, folds the region at the locations or if already collapsed, the first uncollapsed parent instead.\n\t\t\t\t\t\t`,\r\n                        constraint: foldingArgumentsConstraint,\r\n                        schema: {\r\n                            'type': 'object',\r\n                            'properties': {\r\n                                'levels': {\r\n                                    'type': 'number',\r\n                                },\r\n                                'direction': {\r\n                                    'type': 'string',\r\n                                    'enum': ['up', 'down'],\r\n                                },\r\n                                'selectionLines': {\r\n                                    'type': 'array',\r\n                                    'items': {\r\n                                        'type': 'number'\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor, args) {\r\n        let lineNumbers = this.getLineNumbers(args, editor);\r\n        const levels = args && args.levels;\r\n        const direction = args && args.direction;\r\n        if (typeof levels !== 'number' && typeof direction !== 'string') {\r\n            // fold the region at the location or if already collapsed, the first uncollapsed parent instead.\r\n            setCollapseStateUp(foldingModel, true, lineNumbers);\r\n        }\r\n        else {\r\n            if (direction === 'up') {\r\n                setCollapseStateLevelsUp(foldingModel, true, levels || 1, lineNumbers);\r\n            }\r\n            else {\r\n                setCollapseStateLevelsDown(foldingModel, true, levels || 1, lineNumbers);\r\n            }\r\n        }\r\n    }\r\n}\r\nclass ToggleFoldAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.toggleFold',\r\n            label: nls.localize('toggleFoldAction.label', \"Toggle Fold\"),\r\n            alias: 'Toggle Fold',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 42 /* KEY_L */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        toggleCollapseState(foldingModel, 1, selectedLines);\r\n    }\r\n}\r\nclass FoldRecursivelyAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.foldRecursively',\r\n            label: nls.localize('foldRecursivelyAction.label', \"Fold Recursively\"),\r\n            alias: 'Fold Recursively',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 87 /* US_OPEN_SQUARE_BRACKET */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        setCollapseStateLevelsDown(foldingModel, true, Number.MAX_VALUE, selectedLines);\r\n    }\r\n}\r\nclass FoldAllBlockCommentsAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.foldAllBlockComments',\r\n            label: nls.localize('foldAllBlockComments.label', \"Fold All Block Comments\"),\r\n            alias: 'Fold All Block Comments',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 85 /* US_SLASH */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        if (foldingModel.regions.hasTypes()) {\r\n            setCollapseStateForType(foldingModel, FoldingRangeKind.Comment.value, true);\r\n        }\r\n        else {\r\n            const editorModel = editor.getModel();\r\n            if (!editorModel) {\r\n                return;\r\n            }\r\n            let comments = LanguageConfigurationRegistry.getComments(editorModel.getLanguageIdentifier().id);\r\n            if (comments && comments.blockCommentStartToken) {\r\n                let regExp = new RegExp('^\\\\s*' + escapeRegExpCharacters(comments.blockCommentStartToken));\r\n                setCollapseStateForMatchingLines(foldingModel, regExp, true);\r\n            }\r\n        }\r\n    }\r\n}\r\nclass FoldAllRegionsAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.foldAllMarkerRegions',\r\n            label: nls.localize('foldAllMarkerRegions.label', \"Fold All Regions\"),\r\n            alias: 'Fold All Regions',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 29 /* KEY_8 */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        if (foldingModel.regions.hasTypes()) {\r\n            setCollapseStateForType(foldingModel, FoldingRangeKind.Region.value, true);\r\n        }\r\n        else {\r\n            const editorModel = editor.getModel();\r\n            if (!editorModel) {\r\n                return;\r\n            }\r\n            let foldingRules = LanguageConfigurationRegistry.getFoldingRules(editorModel.getLanguageIdentifier().id);\r\n            if (foldingRules && foldingRules.markers && foldingRules.markers.start) {\r\n                let regExp = new RegExp(foldingRules.markers.start);\r\n                setCollapseStateForMatchingLines(foldingModel, regExp, true);\r\n            }\r\n        }\r\n    }\r\n}\r\nclass UnfoldAllRegionsAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.unfoldAllMarkerRegions',\r\n            label: nls.localize('unfoldAllMarkerRegions.label', \"Unfold All Regions\"),\r\n            alias: 'Unfold All Regions',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 30 /* KEY_9 */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        if (foldingModel.regions.hasTypes()) {\r\n            setCollapseStateForType(foldingModel, FoldingRangeKind.Region.value, false);\r\n        }\r\n        else {\r\n            const editorModel = editor.getModel();\r\n            if (!editorModel) {\r\n                return;\r\n            }\r\n            let foldingRules = LanguageConfigurationRegistry.getFoldingRules(editorModel.getLanguageIdentifier().id);\r\n            if (foldingRules && foldingRules.markers && foldingRules.markers.start) {\r\n                let regExp = new RegExp(foldingRules.markers.start);\r\n                setCollapseStateForMatchingLines(foldingModel, regExp, false);\r\n            }\r\n        }\r\n    }\r\n}\r\nclass FoldAllRegionsExceptAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.foldAllExcept',\r\n            label: nls.localize('foldAllExcept.label', \"Fold All Regions Except Selected\"),\r\n            alias: 'Fold All Regions Except Selected',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 83 /* US_MINUS */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        setCollapseStateForRest(foldingModel, true, selectedLines);\r\n    }\r\n}\r\nclass UnfoldAllRegionsExceptAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.unfoldAllExcept',\r\n            label: nls.localize('unfoldAllExcept.label', \"Unfold All Regions Except Selected\"),\r\n            alias: 'Unfold All Regions Except Selected',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 81 /* US_EQUAL */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        let selectedLines = this.getSelectedLines(editor);\r\n        setCollapseStateForRest(foldingModel, false, selectedLines);\r\n    }\r\n}\r\nclass FoldAllAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.foldAll',\r\n            label: nls.localize('foldAllAction.label', \"Fold All\"),\r\n            alias: 'Fold All',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 21 /* KEY_0 */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, _editor) {\r\n        setCollapseStateLevelsDown(foldingModel, true);\r\n    }\r\n}\r\nclass UnfoldAllAction extends FoldingAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.unfoldAll',\r\n            label: nls.localize('unfoldAllAction.label', \"Unfold All\"),\r\n            alias: 'Unfold All',\r\n            precondition: CONTEXT_FOLDING_ENABLED,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 40 /* KEY_J */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    invoke(_foldingController, foldingModel, _editor) {\r\n        setCollapseStateLevelsDown(foldingModel, false);\r\n    }\r\n}\r\nclass FoldLevelAction extends FoldingAction {\r\n    getFoldingLevel() {\r\n        return parseInt(this.id.substr(FoldLevelAction.ID_PREFIX.length));\r\n    }\r\n    invoke(_foldingController, foldingModel, editor) {\r\n        setCollapseStateAtLevel(foldingModel, this.getFoldingLevel(), true, this.getSelectedLines(editor));\r\n    }\r\n}\r\nFoldLevelAction.ID_PREFIX = 'editor.foldLevel';\r\nFoldLevelAction.ID = (level) => FoldLevelAction.ID_PREFIX + level;\r\nregisterEditorContribution(FoldingController.ID, FoldingController);\r\nregisterEditorAction(UnfoldAction);\r\nregisterEditorAction(UnFoldRecursivelyAction);\r\nregisterEditorAction(FoldAction);\r\nregisterEditorAction(FoldRecursivelyAction);\r\nregisterEditorAction(FoldAllAction);\r\nregisterEditorAction(UnfoldAllAction);\r\nregisterEditorAction(FoldAllBlockCommentsAction);\r\nregisterEditorAction(FoldAllRegionsAction);\r\nregisterEditorAction(UnfoldAllRegionsAction);\r\nregisterEditorAction(FoldAllRegionsExceptAction);\r\nregisterEditorAction(UnfoldAllRegionsExceptAction);\r\nregisterEditorAction(ToggleFoldAction);\r\nfor (let i = 1; i <= 7; i++) {\r\n    registerInstantiatedEditorAction(new FoldLevelAction({\r\n        id: FoldLevelAction.ID(i),\r\n        label: nls.localize('foldLevelAction.label', \"Fold Level {0}\", i),\r\n        alias: `Fold Level ${i}`,\r\n        precondition: CONTEXT_FOLDING_ENABLED,\r\n        kbOpts: {\r\n            kbExpr: EditorContextKeys.editorTextFocus,\r\n            primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | (21 /* KEY_0 */ + i)),\r\n            weight: 100 /* EditorContrib */\r\n        }\r\n    }));\r\n}\r\nexport const foldBackgroundBackground = registerColor('editor.foldBackground', { light: transparent(editorSelectionBackground, 0.3), dark: transparent(editorSelectionBackground, 0.3), hc: null }, nls.localize('foldBackgroundBackground', \"Background color behind folded ranges. The color must not be opaque so as not to hide underlying decorations.\"), true);\r\nexport const editorFoldForeground = registerColor('editorGutter.foldingControlForeground', { dark: iconForeground, light: iconForeground, hc: iconForeground }, nls.localize('editorGutter.foldingControlForeground', 'Color of the folding control in the editor gutter.'));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const foldBackground = theme.getColor(foldBackgroundBackground);\r\n    if (foldBackground) {\r\n        collector.addRule(`.monaco-editor .folded-background { background-color: ${foldBackground}; }`);\r\n    }\r\n    const editorFoldColor = theme.getColor(editorFoldForeground);\r\n    if (editorFoldColor) {\r\n        collector.addRule(`\n\t\t.monaco-editor .cldr${ThemeIcon.asCSSSelector(foldingExpandedIcon)},\n\t\t.monaco-editor .cldr${ThemeIcon.asCSSSelector(foldingCollapsedIcon)} {\n\t\t\tcolor: ${editorFoldColor} !important;\n\t\t}\n\t\t`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport const MAX_FOLDING_REGIONS = 0xFFFF;\r\nexport const MAX_LINE_NUMBER = 0xFFFFFF;\r\nconst MASK_INDENT = 0xFF000000;\r\nexport class FoldingRegions {\r\n    constructor(startIndexes, endIndexes, types) {\r\n        if (startIndexes.length !== endIndexes.length || startIndexes.length > MAX_FOLDING_REGIONS) {\r\n            throw new Error('invalid startIndexes or endIndexes size');\r\n        }\r\n        this._startIndexes = startIndexes;\r\n        this._endIndexes = endIndexes;\r\n        this._collapseStates = new Uint32Array(Math.ceil(startIndexes.length / 32));\r\n        this._types = types;\r\n        this._parentsComputed = false;\r\n    }\r\n    ensureParentIndices() {\r\n        if (!this._parentsComputed) {\r\n            this._parentsComputed = true;\r\n            let parentIndexes = [];\r\n            let isInsideLast = (startLineNumber, endLineNumber) => {\r\n                let index = parentIndexes[parentIndexes.length - 1];\r\n                return this.getStartLineNumber(index) <= startLineNumber && this.getEndLineNumber(index) >= endLineNumber;\r\n            };\r\n            for (let i = 0, len = this._startIndexes.length; i < len; i++) {\r\n                let startLineNumber = this._startIndexes[i];\r\n                let endLineNumber = this._endIndexes[i];\r\n                if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\r\n                    throw new Error('startLineNumber or endLineNumber must not exceed ' + MAX_LINE_NUMBER);\r\n                }\r\n                while (parentIndexes.length > 0 && !isInsideLast(startLineNumber, endLineNumber)) {\r\n                    parentIndexes.pop();\r\n                }\r\n                let parentIndex = parentIndexes.length > 0 ? parentIndexes[parentIndexes.length - 1] : -1;\r\n                parentIndexes.push(i);\r\n                this._startIndexes[i] = startLineNumber + ((parentIndex & 0xFF) << 24);\r\n                this._endIndexes[i] = endLineNumber + ((parentIndex & 0xFF00) << 16);\r\n            }\r\n        }\r\n    }\r\n    get length() {\r\n        return this._startIndexes.length;\r\n    }\r\n    getStartLineNumber(index) {\r\n        return this._startIndexes[index] & MAX_LINE_NUMBER;\r\n    }\r\n    getEndLineNumber(index) {\r\n        return this._endIndexes[index] & MAX_LINE_NUMBER;\r\n    }\r\n    getType(index) {\r\n        return this._types ? this._types[index] : undefined;\r\n    }\r\n    hasTypes() {\r\n        return !!this._types;\r\n    }\r\n    isCollapsed(index) {\r\n        let arrayIndex = (index / 32) | 0;\r\n        let bit = index % 32;\r\n        return (this._collapseStates[arrayIndex] & (1 << bit)) !== 0;\r\n    }\r\n    setCollapsed(index, newState) {\r\n        let arrayIndex = (index / 32) | 0;\r\n        let bit = index % 32;\r\n        let value = this._collapseStates[arrayIndex];\r\n        if (newState) {\r\n            this._collapseStates[arrayIndex] = value | (1 << bit);\r\n        }\r\n        else {\r\n            this._collapseStates[arrayIndex] = value & ~(1 << bit);\r\n        }\r\n    }\r\n    toRegion(index) {\r\n        return new FoldingRegion(this, index);\r\n    }\r\n    getParentIndex(index) {\r\n        this.ensureParentIndices();\r\n        let parent = ((this._startIndexes[index] & MASK_INDENT) >>> 24) + ((this._endIndexes[index] & MASK_INDENT) >>> 16);\r\n        if (parent === MAX_FOLDING_REGIONS) {\r\n            return -1;\r\n        }\r\n        return parent;\r\n    }\r\n    contains(index, line) {\r\n        return this.getStartLineNumber(index) <= line && this.getEndLineNumber(index) >= line;\r\n    }\r\n    findIndex(line) {\r\n        let low = 0, high = this._startIndexes.length;\r\n        if (high === 0) {\r\n            return -1; // no children\r\n        }\r\n        while (low < high) {\r\n            let mid = Math.floor((low + high) / 2);\r\n            if (line < this.getStartLineNumber(mid)) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        return low - 1;\r\n    }\r\n    findRange(line) {\r\n        let index = this.findIndex(line);\r\n        if (index >= 0) {\r\n            let endLineNumber = this.getEndLineNumber(index);\r\n            if (endLineNumber >= line) {\r\n                return index;\r\n            }\r\n            index = this.getParentIndex(index);\r\n            while (index !== -1) {\r\n                if (this.contains(index, line)) {\r\n                    return index;\r\n                }\r\n                index = this.getParentIndex(index);\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    toString() {\r\n        let res = [];\r\n        for (let i = 0; i < this.length; i++) {\r\n            res[i] = `[${this.isCollapsed(i) ? '+' : '-'}] ${this.getStartLineNumber(i)}/${this.getEndLineNumber(i)}`;\r\n        }\r\n        return res.join(', ');\r\n    }\r\n}\r\nexport class FoldingRegion {\r\n    constructor(ranges, index) {\r\n        this.ranges = ranges;\r\n        this.index = index;\r\n    }\r\n    get startLineNumber() {\r\n        return this.ranges.getStartLineNumber(this.index);\r\n    }\r\n    get endLineNumber() {\r\n        return this.ranges.getEndLineNumber(this.index);\r\n    }\r\n    get regionIndex() {\r\n        return this.index;\r\n    }\r\n    get parentIndex() {\r\n        return this.ranges.getParentIndex(this.index);\r\n    }\r\n    get isCollapsed() {\r\n        return this.ranges.isCollapsed(this.index);\r\n    }\r\n    containedBy(range) {\r\n        return range.startLineNumber <= this.startLineNumber && range.endLineNumber >= this.endLineNumber;\r\n    }\r\n    containsLine(lineNumber) {\r\n        return this.startLineNumber <= lineNumber && lineNumber <= this.endLineNumber;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { FoldingRegions } from './foldingRanges.js';\r\nexport class FoldingModel {\r\n    constructor(textModel, decorationProvider) {\r\n        this._updateEventEmitter = new Emitter();\r\n        this.onDidChange = this._updateEventEmitter.event;\r\n        this._textModel = textModel;\r\n        this._decorationProvider = decorationProvider;\r\n        this._regions = new FoldingRegions(new Uint32Array(0), new Uint32Array(0));\r\n        this._editorDecorationIds = [];\r\n        this._isInitialized = false;\r\n    }\r\n    get regions() { return this._regions; }\r\n    get textModel() { return this._textModel; }\r\n    get isInitialized() { return this._isInitialized; }\r\n    toggleCollapseState(toggledRegions) {\r\n        if (!toggledRegions.length) {\r\n            return;\r\n        }\r\n        toggledRegions = toggledRegions.sort((r1, r2) => r1.regionIndex - r2.regionIndex);\r\n        const processed = {};\r\n        this._decorationProvider.changeDecorations(accessor => {\r\n            let k = 0; // index from [0 ... this.regions.length]\r\n            let dirtyRegionEndLine = -1; // end of the range where decorations need to be updated\r\n            let lastHiddenLine = -1; // the end of the last hidden lines\r\n            const updateDecorationsUntil = (index) => {\r\n                while (k < index) {\r\n                    const endLineNumber = this._regions.getEndLineNumber(k);\r\n                    const isCollapsed = this._regions.isCollapsed(k);\r\n                    if (endLineNumber <= dirtyRegionEndLine) {\r\n                        accessor.changeDecorationOptions(this._editorDecorationIds[k], this._decorationProvider.getDecorationOption(isCollapsed, endLineNumber <= lastHiddenLine));\r\n                    }\r\n                    if (isCollapsed && endLineNumber > lastHiddenLine) {\r\n                        lastHiddenLine = endLineNumber;\r\n                    }\r\n                    k++;\r\n                }\r\n            };\r\n            for (let region of toggledRegions) {\r\n                let index = region.regionIndex;\r\n                let editorDecorationId = this._editorDecorationIds[index];\r\n                if (editorDecorationId && !processed[editorDecorationId]) {\r\n                    processed[editorDecorationId] = true;\r\n                    updateDecorationsUntil(index); // update all decorations up to current index using the old dirtyRegionEndLine\r\n                    let newCollapseState = !this._regions.isCollapsed(index);\r\n                    this._regions.setCollapsed(index, newCollapseState);\r\n                    dirtyRegionEndLine = Math.max(dirtyRegionEndLine, this._regions.getEndLineNumber(index));\r\n                }\r\n            }\r\n            updateDecorationsUntil(this._regions.length);\r\n        });\r\n        this._updateEventEmitter.fire({ model: this, collapseStateChanged: toggledRegions });\r\n    }\r\n    update(newRegions, blockedLineNumers = []) {\r\n        let newEditorDecorations = [];\r\n        let isBlocked = (startLineNumber, endLineNumber) => {\r\n            for (let blockedLineNumber of blockedLineNumers) {\r\n                if (startLineNumber < blockedLineNumber && blockedLineNumber <= endLineNumber) { // first line is visible\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        let lastHiddenLine = -1;\r\n        let initRange = (index, isCollapsed) => {\r\n            const startLineNumber = newRegions.getStartLineNumber(index);\r\n            const endLineNumber = newRegions.getEndLineNumber(index);\r\n            if (isCollapsed && isBlocked(startLineNumber, endLineNumber)) {\r\n                isCollapsed = false;\r\n            }\r\n            newRegions.setCollapsed(index, isCollapsed);\r\n            const maxColumn = this._textModel.getLineMaxColumn(startLineNumber);\r\n            const decorationRange = {\r\n                startLineNumber: startLineNumber,\r\n                startColumn: Math.max(maxColumn - 1, 1),\r\n                endLineNumber: startLineNumber,\r\n                endColumn: maxColumn\r\n            };\r\n            newEditorDecorations.push({ range: decorationRange, options: this._decorationProvider.getDecorationOption(isCollapsed, endLineNumber <= lastHiddenLine) });\r\n            if (isCollapsed && endLineNumber > lastHiddenLine) {\r\n                lastHiddenLine = endLineNumber;\r\n            }\r\n        };\r\n        let i = 0;\r\n        let nextCollapsed = () => {\r\n            while (i < this._regions.length) {\r\n                let isCollapsed = this._regions.isCollapsed(i);\r\n                i++;\r\n                if (isCollapsed) {\r\n                    return i - 1;\r\n                }\r\n            }\r\n            return -1;\r\n        };\r\n        let k = 0;\r\n        let collapsedIndex = nextCollapsed();\r\n        while (collapsedIndex !== -1 && k < newRegions.length) {\r\n            // get the latest range\r\n            let decRange = this._textModel.getDecorationRange(this._editorDecorationIds[collapsedIndex]);\r\n            if (decRange) {\r\n                let collapsedStartLineNumber = decRange.startLineNumber;\r\n                if (decRange.startColumn === Math.max(decRange.endColumn - 1, 1) && this._textModel.getLineMaxColumn(collapsedStartLineNumber) === decRange.endColumn) { // test that the decoration is still covering the full line else it got deleted\r\n                    while (k < newRegions.length) {\r\n                        let startLineNumber = newRegions.getStartLineNumber(k);\r\n                        if (collapsedStartLineNumber >= startLineNumber) {\r\n                            initRange(k, collapsedStartLineNumber === startLineNumber);\r\n                            k++;\r\n                        }\r\n                        else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            collapsedIndex = nextCollapsed();\r\n        }\r\n        while (k < newRegions.length) {\r\n            initRange(k, false);\r\n            k++;\r\n        }\r\n        this._editorDecorationIds = this._decorationProvider.deltaDecorations(this._editorDecorationIds, newEditorDecorations);\r\n        this._regions = newRegions;\r\n        this._isInitialized = true;\r\n        this._updateEventEmitter.fire({ model: this });\r\n    }\r\n    /**\r\n     * Collapse state memento, for persistence only\r\n     */\r\n    getMemento() {\r\n        let collapsedRanges = [];\r\n        for (let i = 0; i < this._regions.length; i++) {\r\n            if (this._regions.isCollapsed(i)) {\r\n                let range = this._textModel.getDecorationRange(this._editorDecorationIds[i]);\r\n                if (range) {\r\n                    let startLineNumber = range.startLineNumber;\r\n                    let endLineNumber = range.endLineNumber + this._regions.getEndLineNumber(i) - this._regions.getStartLineNumber(i);\r\n                    collapsedRanges.push({ startLineNumber, endLineNumber });\r\n                }\r\n            }\r\n        }\r\n        if (collapsedRanges.length > 0) {\r\n            return collapsedRanges;\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Apply persisted state, for persistence only\r\n     */\r\n    applyMemento(state) {\r\n        if (!Array.isArray(state)) {\r\n            return;\r\n        }\r\n        let toToogle = [];\r\n        for (let range of state) {\r\n            let region = this.getRegionAtLine(range.startLineNumber);\r\n            if (region && !region.isCollapsed) {\r\n                toToogle.push(region);\r\n            }\r\n        }\r\n        this.toggleCollapseState(toToogle);\r\n    }\r\n    dispose() {\r\n        this._decorationProvider.deltaDecorations(this._editorDecorationIds, []);\r\n    }\r\n    getAllRegionsAtLine(lineNumber, filter) {\r\n        let result = [];\r\n        if (this._regions) {\r\n            let index = this._regions.findRange(lineNumber);\r\n            let level = 1;\r\n            while (index >= 0) {\r\n                let current = this._regions.toRegion(index);\r\n                if (!filter || filter(current, level)) {\r\n                    result.push(current);\r\n                }\r\n                level++;\r\n                index = current.parentIndex;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    getRegionAtLine(lineNumber) {\r\n        if (this._regions) {\r\n            let index = this._regions.findRange(lineNumber);\r\n            if (index >= 0) {\r\n                return this._regions.toRegion(index);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    getRegionsInside(region, filter) {\r\n        let result = [];\r\n        let index = region ? region.regionIndex + 1 : 0;\r\n        let endLineNumber = region ? region.endLineNumber : Number.MAX_VALUE;\r\n        if (filter && filter.length === 2) {\r\n            const levelStack = [];\r\n            for (let i = index, len = this._regions.length; i < len; i++) {\r\n                let current = this._regions.toRegion(i);\r\n                if (this._regions.getStartLineNumber(i) < endLineNumber) {\r\n                    while (levelStack.length > 0 && !current.containedBy(levelStack[levelStack.length - 1])) {\r\n                        levelStack.pop();\r\n                    }\r\n                    levelStack.push(current);\r\n                    if (filter(current, levelStack.length)) {\r\n                        result.push(current);\r\n                    }\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let i = index, len = this._regions.length; i < len; i++) {\r\n                let current = this._regions.toRegion(i);\r\n                if (this._regions.getStartLineNumber(i) < endLineNumber) {\r\n                    if (!filter || filter(current)) {\r\n                        result.push(current);\r\n                    }\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\n/**\r\n * Collapse or expand the regions at the given locations\r\n * @param levels The number of levels. Use 1 to only impact the regions at the location, use Number.MAX_VALUE for all levels.\r\n * @param lineNumbers the location of the regions to collapse or expand, or if not set, all regions in the model.\r\n */\r\nexport function toggleCollapseState(foldingModel, levels, lineNumbers) {\r\n    let toToggle = [];\r\n    for (let lineNumber of lineNumbers) {\r\n        let region = foldingModel.getRegionAtLine(lineNumber);\r\n        if (region) {\r\n            const doCollapse = !region.isCollapsed;\r\n            toToggle.push(region);\r\n            if (levels > 1) {\r\n                let regionsInside = foldingModel.getRegionsInside(region, (r, level) => r.isCollapsed !== doCollapse && level < levels);\r\n                toToggle.push(...regionsInside);\r\n            }\r\n        }\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Collapse or expand the regions at the given locations including all children.\r\n * @param doCollapse Whether to collapse or expand\r\n * @param levels The number of levels. Use 1 to only impact the regions at the location, use Number.MAX_VALUE for all levels.\r\n * @param lineNumbers the location of the regions to collapse or expand, or if not set, all regions in the model.\r\n */\r\nexport function setCollapseStateLevelsDown(foldingModel, doCollapse, levels = Number.MAX_VALUE, lineNumbers) {\r\n    let toToggle = [];\r\n    if (lineNumbers && lineNumbers.length > 0) {\r\n        for (let lineNumber of lineNumbers) {\r\n            let region = foldingModel.getRegionAtLine(lineNumber);\r\n            if (region) {\r\n                if (region.isCollapsed !== doCollapse) {\r\n                    toToggle.push(region);\r\n                }\r\n                if (levels > 1) {\r\n                    let regionsInside = foldingModel.getRegionsInside(region, (r, level) => r.isCollapsed !== doCollapse && level < levels);\r\n                    toToggle.push(...regionsInside);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        let regionsInside = foldingModel.getRegionsInside(null, (r, level) => r.isCollapsed !== doCollapse && level < levels);\r\n        toToggle.push(...regionsInside);\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Collapse or expand the regions at the given locations including all parents.\r\n * @param doCollapse Whether to collapse or expand\r\n * @param levels The number of levels. Use 1 to only impact the regions at the location, use Number.MAX_VALUE for all levels.\r\n * @param lineNumbers the location of the regions to collapse or expand.\r\n */\r\nexport function setCollapseStateLevelsUp(foldingModel, doCollapse, levels, lineNumbers) {\r\n    let toToggle = [];\r\n    for (let lineNumber of lineNumbers) {\r\n        let regions = foldingModel.getAllRegionsAtLine(lineNumber, (region, level) => region.isCollapsed !== doCollapse && level <= levels);\r\n        toToggle.push(...regions);\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Collapse or expand a region at the given locations. If the inner most region is already collapsed/expanded, uses the first parent instead.\r\n * @param doCollapse Whether to collapse or expand\r\n * @param lineNumbers the location of the regions to collapse or expand.\r\n */\r\nexport function setCollapseStateUp(foldingModel, doCollapse, lineNumbers) {\r\n    let toToggle = [];\r\n    for (let lineNumber of lineNumbers) {\r\n        let regions = foldingModel.getAllRegionsAtLine(lineNumber, (region) => region.isCollapsed !== doCollapse);\r\n        if (regions.length > 0) {\r\n            toToggle.push(regions[0]);\r\n        }\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Folds or unfolds all regions that have a given level, except if they contain one of the blocked lines.\r\n * @param foldLevel level. Level == 1 is the top level\r\n * @param doCollapse Whether to collapse or expand\r\n*/\r\nexport function setCollapseStateAtLevel(foldingModel, foldLevel, doCollapse, blockedLineNumbers) {\r\n    let filter = (region, level) => level === foldLevel && region.isCollapsed !== doCollapse && !blockedLineNumbers.some(line => region.containsLine(line));\r\n    let toToggle = foldingModel.getRegionsInside(null, filter);\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Folds or unfolds all regions, except if they contain or are contained by a region of one of the blocked lines.\r\n * @param doCollapse Whether to collapse or expand\r\n * @param blockedLineNumbers the location of regions to not collapse or expand\r\n */\r\nexport function setCollapseStateForRest(foldingModel, doCollapse, blockedLineNumbers) {\r\n    let filteredRegions = [];\r\n    for (let lineNumber of blockedLineNumbers) {\r\n        filteredRegions.push(foldingModel.getAllRegionsAtLine(lineNumber, undefined)[0]);\r\n    }\r\n    let filter = (region) => filteredRegions.every((filteredRegion) => !filteredRegion.containedBy(region) && !region.containedBy(filteredRegion)) && region.isCollapsed !== doCollapse;\r\n    let toToggle = foldingModel.getRegionsInside(null, filter);\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Folds all regions for which the lines start with a given regex\r\n * @param foldingModel the folding model\r\n */\r\nexport function setCollapseStateForMatchingLines(foldingModel, regExp, doCollapse) {\r\n    let editorModel = foldingModel.textModel;\r\n    let regions = foldingModel.regions;\r\n    let toToggle = [];\r\n    for (let i = regions.length - 1; i >= 0; i--) {\r\n        if (doCollapse !== regions.isCollapsed(i)) {\r\n            let startLineNumber = regions.getStartLineNumber(i);\r\n            if (regExp.test(editorModel.getLineContent(startLineNumber))) {\r\n                toToggle.push(regions.toRegion(i));\r\n            }\r\n        }\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n/**\r\n * Folds all regions of the given type\r\n * @param foldingModel the folding model\r\n */\r\nexport function setCollapseStateForType(foldingModel, type, doCollapse) {\r\n    let regions = foldingModel.regions;\r\n    let toToggle = [];\r\n    for (let i = regions.length - 1; i >= 0; i--) {\r\n        if (doCollapse !== regions.isCollapsed(i) && type === regions.getType(i)) {\r\n            toToggle.push(regions.toRegion(i));\r\n        }\r\n    }\r\n    foldingModel.toggleCollapseState(toToggle);\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nimport { ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nexport const foldingExpandedIcon = registerIcon('folding-expanded', Codicon.chevronDown, localize('foldingExpandedIcon', 'Icon for expanded ranges in the editor glyph margin.'));\r\nexport const foldingCollapsedIcon = registerIcon('folding-collapsed', Codicon.chevronRight, localize('foldingCollapsedIcon', 'Icon for collapsed ranges in the editor glyph margin.'));\r\nexport class FoldingDecorationProvider {\r\n    constructor(editor) {\r\n        this.editor = editor;\r\n        this.autoHideFoldingControls = true;\r\n        this.showFoldingHighlights = true;\r\n    }\r\n    getDecorationOption(isCollapsed, isHidden) {\r\n        if (isHidden) {\r\n            return FoldingDecorationProvider.HIDDEN_RANGE_DECORATION;\r\n        }\r\n        if (isCollapsed) {\r\n            return this.showFoldingHighlights ? FoldingDecorationProvider.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION : FoldingDecorationProvider.COLLAPSED_VISUAL_DECORATION;\r\n        }\r\n        else if (this.autoHideFoldingControls) {\r\n            return FoldingDecorationProvider.EXPANDED_AUTO_HIDE_VISUAL_DECORATION;\r\n        }\r\n        else {\r\n            return FoldingDecorationProvider.EXPANDED_VISUAL_DECORATION;\r\n        }\r\n    }\r\n    deltaDecorations(oldDecorations, newDecorations) {\r\n        return this.editor.deltaDecorations(oldDecorations, newDecorations);\r\n    }\r\n    changeDecorations(callback) {\r\n        return this.editor.changeDecorations(callback);\r\n    }\r\n}\r\nFoldingDecorationProvider.COLLAPSED_VISUAL_DECORATION = ModelDecorationOptions.register({\r\n    description: 'folding-collapsed-visual-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    afterContentClassName: 'inline-folded',\r\n    isWholeLine: true,\r\n    firstLineDecorationClassName: ThemeIcon.asClassName(foldingCollapsedIcon)\r\n});\r\nFoldingDecorationProvider.COLLAPSED_HIGHLIGHTED_VISUAL_DECORATION = ModelDecorationOptions.register({\r\n    description: 'folding-collapsed-highlighted-visual-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    afterContentClassName: 'inline-folded',\r\n    className: 'folded-background',\r\n    isWholeLine: true,\r\n    firstLineDecorationClassName: ThemeIcon.asClassName(foldingCollapsedIcon)\r\n});\r\nFoldingDecorationProvider.EXPANDED_AUTO_HIDE_VISUAL_DECORATION = ModelDecorationOptions.register({\r\n    description: 'folding-expanded-auto-hide-visual-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    isWholeLine: true,\r\n    firstLineDecorationClassName: ThemeIcon.asClassName(foldingExpandedIcon)\r\n});\r\nFoldingDecorationProvider.EXPANDED_VISUAL_DECORATION = ModelDecorationOptions.register({\r\n    description: 'folding-expanded-visual-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    isWholeLine: true,\r\n    firstLineDecorationClassName: 'alwaysShowFoldIcons ' + ThemeIcon.asClassName(foldingExpandedIcon)\r\n});\r\nFoldingDecorationProvider.HIDDEN_RANGE_DECORATION = ModelDecorationOptions.register({\r\n    description: 'folding-hidden-range-decoration',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { findFirstInSorted } from '../../../base/common/arrays.js';\r\nexport class HiddenRangeModel {\r\n    constructor(model) {\r\n        this._updateEventEmitter = new Emitter();\r\n        this._foldingModel = model;\r\n        this._foldingModelListener = model.onDidChange(_ => this.updateHiddenRanges());\r\n        this._hiddenRanges = [];\r\n        if (model.regions.length) {\r\n            this.updateHiddenRanges();\r\n        }\r\n    }\r\n    get onDidChange() { return this._updateEventEmitter.event; }\r\n    get hiddenRanges() { return this._hiddenRanges; }\r\n    updateHiddenRanges() {\r\n        let updateHiddenAreas = false;\r\n        let newHiddenAreas = [];\r\n        let i = 0; // index into hidden\r\n        let k = 0;\r\n        let lastCollapsedStart = Number.MAX_VALUE;\r\n        let lastCollapsedEnd = -1;\r\n        let ranges = this._foldingModel.regions;\r\n        for (; i < ranges.length; i++) {\r\n            if (!ranges.isCollapsed(i)) {\r\n                continue;\r\n            }\r\n            let startLineNumber = ranges.getStartLineNumber(i) + 1; // the first line is not hidden\r\n            let endLineNumber = ranges.getEndLineNumber(i);\r\n            if (lastCollapsedStart <= startLineNumber && endLineNumber <= lastCollapsedEnd) {\r\n                // ignore ranges contained in collapsed regions\r\n                continue;\r\n            }\r\n            if (!updateHiddenAreas && k < this._hiddenRanges.length && this._hiddenRanges[k].startLineNumber === startLineNumber && this._hiddenRanges[k].endLineNumber === endLineNumber) {\r\n                // reuse the old ranges\r\n                newHiddenAreas.push(this._hiddenRanges[k]);\r\n                k++;\r\n            }\r\n            else {\r\n                updateHiddenAreas = true;\r\n                newHiddenAreas.push(new Range(startLineNumber, 1, endLineNumber, 1));\r\n            }\r\n            lastCollapsedStart = startLineNumber;\r\n            lastCollapsedEnd = endLineNumber;\r\n        }\r\n        if (updateHiddenAreas || k < this._hiddenRanges.length) {\r\n            this.applyHiddenRanges(newHiddenAreas);\r\n        }\r\n    }\r\n    applyMemento(state) {\r\n        if (!Array.isArray(state) || state.length === 0) {\r\n            return false;\r\n        }\r\n        let hiddenRanges = [];\r\n        for (let r of state) {\r\n            if (!r.startLineNumber || !r.endLineNumber) {\r\n                return false;\r\n            }\r\n            hiddenRanges.push(new Range(r.startLineNumber + 1, 1, r.endLineNumber, 1));\r\n        }\r\n        this.applyHiddenRanges(hiddenRanges);\r\n        return true;\r\n    }\r\n    /**\r\n     * Collapse state memento, for persistence only, only used if folding model is not yet initialized\r\n     */\r\n    getMemento() {\r\n        return this._hiddenRanges.map(r => ({ startLineNumber: r.startLineNumber - 1, endLineNumber: r.endLineNumber }));\r\n    }\r\n    applyHiddenRanges(newHiddenAreas) {\r\n        this._hiddenRanges = newHiddenAreas;\r\n        this._updateEventEmitter.fire(newHiddenAreas);\r\n    }\r\n    hasRanges() {\r\n        return this._hiddenRanges.length > 0;\r\n    }\r\n    isHidden(line) {\r\n        return findRange(this._hiddenRanges, line) !== null;\r\n    }\r\n    adjustSelections(selections) {\r\n        let hasChanges = false;\r\n        let editorModel = this._foldingModel.textModel;\r\n        let lastRange = null;\r\n        let adjustLine = (line) => {\r\n            if (!lastRange || !isInside(line, lastRange)) {\r\n                lastRange = findRange(this._hiddenRanges, line);\r\n            }\r\n            if (lastRange) {\r\n                return lastRange.startLineNumber - 1;\r\n            }\r\n            return null;\r\n        };\r\n        for (let i = 0, len = selections.length; i < len; i++) {\r\n            let selection = selections[i];\r\n            let adjustedStartLine = adjustLine(selection.startLineNumber);\r\n            if (adjustedStartLine) {\r\n                selection = selection.setStartPosition(adjustedStartLine, editorModel.getLineMaxColumn(adjustedStartLine));\r\n                hasChanges = true;\r\n            }\r\n            let adjustedEndLine = adjustLine(selection.endLineNumber);\r\n            if (adjustedEndLine) {\r\n                selection = selection.setEndPosition(adjustedEndLine, editorModel.getLineMaxColumn(adjustedEndLine));\r\n                hasChanges = true;\r\n            }\r\n            selections[i] = selection;\r\n        }\r\n        return hasChanges;\r\n    }\r\n    dispose() {\r\n        if (this.hiddenRanges.length > 0) {\r\n            this._hiddenRanges = [];\r\n            this._updateEventEmitter.fire(this._hiddenRanges);\r\n        }\r\n        if (this._foldingModelListener) {\r\n            this._foldingModelListener.dispose();\r\n            this._foldingModelListener = null;\r\n        }\r\n    }\r\n}\r\nfunction isInside(line, range) {\r\n    return line >= range.startLineNumber && line <= range.endLineNumber;\r\n}\r\nfunction findRange(ranges, line) {\r\n    let i = findFirstInSorted(ranges, r => line < r.startLineNumber) - 1;\r\n    if (i >= 0 && ranges[i].endLineNumber >= line) {\r\n        return ranges[i];\r\n    }\r\n    return null;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { FoldingRegions, MAX_LINE_NUMBER } from './foldingRanges.js';\r\nimport { TextModel } from '../../common/model/textModel.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nconst MAX_FOLDING_REGIONS_FOR_INDENT_LIMIT = 5000;\r\nexport const ID_INDENT_PROVIDER = 'indent';\r\nexport class IndentRangeProvider {\r\n    constructor(editorModel) {\r\n        this.editorModel = editorModel;\r\n        this.id = ID_INDENT_PROVIDER;\r\n    }\r\n    dispose() {\r\n    }\r\n    compute(cancelationToken) {\r\n        let foldingRules = LanguageConfigurationRegistry.getFoldingRules(this.editorModel.getLanguageIdentifier().id);\r\n        let offSide = foldingRules && !!foldingRules.offSide;\r\n        let markers = foldingRules && foldingRules.markers;\r\n        return Promise.resolve(computeRanges(this.editorModel, offSide, markers));\r\n    }\r\n}\r\n// public only for testing\r\nexport class RangesCollector {\r\n    constructor(foldingRangesLimit) {\r\n        this._startIndexes = [];\r\n        this._endIndexes = [];\r\n        this._indentOccurrences = [];\r\n        this._length = 0;\r\n        this._foldingRangesLimit = foldingRangesLimit;\r\n    }\r\n    insertFirst(startLineNumber, endLineNumber, indent) {\r\n        if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\r\n            return;\r\n        }\r\n        let index = this._length;\r\n        this._startIndexes[index] = startLineNumber;\r\n        this._endIndexes[index] = endLineNumber;\r\n        this._length++;\r\n        if (indent < 1000) {\r\n            this._indentOccurrences[indent] = (this._indentOccurrences[indent] || 0) + 1;\r\n        }\r\n    }\r\n    toIndentRanges(model) {\r\n        if (this._length <= this._foldingRangesLimit) {\r\n            // reverse and create arrays of the exact length\r\n            let startIndexes = new Uint32Array(this._length);\r\n            let endIndexes = new Uint32Array(this._length);\r\n            for (let i = this._length - 1, k = 0; i >= 0; i--, k++) {\r\n                startIndexes[k] = this._startIndexes[i];\r\n                endIndexes[k] = this._endIndexes[i];\r\n            }\r\n            return new FoldingRegions(startIndexes, endIndexes);\r\n        }\r\n        else {\r\n            let entries = 0;\r\n            let maxIndent = this._indentOccurrences.length;\r\n            for (let i = 0; i < this._indentOccurrences.length; i++) {\r\n                let n = this._indentOccurrences[i];\r\n                if (n) {\r\n                    if (n + entries > this._foldingRangesLimit) {\r\n                        maxIndent = i;\r\n                        break;\r\n                    }\r\n                    entries += n;\r\n                }\r\n            }\r\n            const tabSize = model.getOptions().tabSize;\r\n            // reverse and create arrays of the exact length\r\n            let startIndexes = new Uint32Array(this._foldingRangesLimit);\r\n            let endIndexes = new Uint32Array(this._foldingRangesLimit);\r\n            for (let i = this._length - 1, k = 0; i >= 0; i--) {\r\n                let startIndex = this._startIndexes[i];\r\n                let lineContent = model.getLineContent(startIndex);\r\n                let indent = TextModel.computeIndentLevel(lineContent, tabSize);\r\n                if (indent < maxIndent || (indent === maxIndent && entries++ < this._foldingRangesLimit)) {\r\n                    startIndexes[k] = startIndex;\r\n                    endIndexes[k] = this._endIndexes[i];\r\n                    k++;\r\n                }\r\n            }\r\n            return new FoldingRegions(startIndexes, endIndexes);\r\n        }\r\n    }\r\n}\r\nexport function computeRanges(model, offSide, markers, foldingRangesLimit = MAX_FOLDING_REGIONS_FOR_INDENT_LIMIT) {\r\n    const tabSize = model.getOptions().tabSize;\r\n    let result = new RangesCollector(foldingRangesLimit);\r\n    let pattern = undefined;\r\n    if (markers) {\r\n        pattern = new RegExp(`(${markers.start.source})|(?:${markers.end.source})`);\r\n    }\r\n    let previousRegions = [];\r\n    let line = model.getLineCount() + 1;\r\n    previousRegions.push({ indent: -1, endAbove: line, line }); // sentinel, to make sure there's at least one entry\r\n    for (let line = model.getLineCount(); line > 0; line--) {\r\n        let lineContent = model.getLineContent(line);\r\n        let indent = TextModel.computeIndentLevel(lineContent, tabSize);\r\n        let previous = previousRegions[previousRegions.length - 1];\r\n        if (indent === -1) {\r\n            if (offSide) {\r\n                // for offSide languages, empty lines are associated to the previous block\r\n                // note: the next block is already written to the results, so this only\r\n                // impacts the end position of the block before\r\n                previous.endAbove = line;\r\n            }\r\n            continue; // only whitespace\r\n        }\r\n        let m;\r\n        if (pattern && (m = lineContent.match(pattern))) {\r\n            // folding pattern match\r\n            if (m[1]) { // start pattern match\r\n                // discard all regions until the folding pattern\r\n                let i = previousRegions.length - 1;\r\n                while (i > 0 && previousRegions[i].indent !== -2) {\r\n                    i--;\r\n                }\r\n                if (i > 0) {\r\n                    previousRegions.length = i + 1;\r\n                    previous = previousRegions[i];\r\n                    // new folding range from pattern, includes the end line\r\n                    result.insertFirst(line, previous.line, indent);\r\n                    previous.line = line;\r\n                    previous.indent = indent;\r\n                    previous.endAbove = line;\r\n                    continue;\r\n                }\r\n                else {\r\n                    // no end marker found, treat line as a regular line\r\n                }\r\n            }\r\n            else { // end pattern match\r\n                previousRegions.push({ indent: -2, endAbove: line, line });\r\n                continue;\r\n            }\r\n        }\r\n        if (previous.indent > indent) {\r\n            // discard all regions with larger indent\r\n            do {\r\n                previousRegions.pop();\r\n                previous = previousRegions[previousRegions.length - 1];\r\n            } while (previous.indent > indent);\r\n            // new folding range\r\n            let endLineNumber = previous.endAbove - 1;\r\n            if (endLineNumber - line >= 1) { // needs at east size 1\r\n                result.insertFirst(line, endLineNumber, indent);\r\n            }\r\n        }\r\n        if (previous.indent === indent) {\r\n            previous.endAbove = line;\r\n        }\r\n        else { // previous.indent < indent\r\n            // new region with a bigger indent\r\n            previousRegions.push({ indent, endAbove: line, line });\r\n        }\r\n    }\r\n    return result.toIndentRanges(model);\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { MAX_LINE_NUMBER, FoldingRegions } from './foldingRanges.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nconst MAX_FOLDING_REGIONS = 5000;\r\nconst foldingContext = {};\r\nexport const ID_SYNTAX_PROVIDER = 'syntax';\r\nexport class SyntaxRangeProvider {\r\n    constructor(editorModel, providers, handleFoldingRangesChange, limit = MAX_FOLDING_REGIONS) {\r\n        this.editorModel = editorModel;\r\n        this.providers = providers;\r\n        this.limit = limit;\r\n        this.id = ID_SYNTAX_PROVIDER;\r\n        for (const provider of providers) {\r\n            if (typeof provider.onDidChange === 'function') {\r\n                if (!this.disposables) {\r\n                    this.disposables = new DisposableStore();\r\n                }\r\n                this.disposables.add(provider.onDidChange(handleFoldingRangesChange));\r\n            }\r\n        }\r\n    }\r\n    compute(cancellationToken) {\r\n        return collectSyntaxRanges(this.providers, this.editorModel, cancellationToken).then(ranges => {\r\n            if (ranges) {\r\n                let res = sanitizeRanges(ranges, this.limit);\r\n                return res;\r\n            }\r\n            return null;\r\n        });\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        (_a = this.disposables) === null || _a === void 0 ? void 0 : _a.dispose();\r\n    }\r\n}\r\nfunction collectSyntaxRanges(providers, model, cancellationToken) {\r\n    let rangeData = null;\r\n    let promises = providers.map((provider, i) => {\r\n        return Promise.resolve(provider.provideFoldingRanges(model, foldingContext, cancellationToken)).then(ranges => {\r\n            if (cancellationToken.isCancellationRequested) {\r\n                return;\r\n            }\r\n            if (Array.isArray(ranges)) {\r\n                if (!Array.isArray(rangeData)) {\r\n                    rangeData = [];\r\n                }\r\n                let nLines = model.getLineCount();\r\n                for (let r of ranges) {\r\n                    if (r.start > 0 && r.end > r.start && r.end <= nLines) {\r\n                        rangeData.push({ start: r.start, end: r.end, rank: i, kind: r.kind });\r\n                    }\r\n                }\r\n            }\r\n        }, onUnexpectedExternalError);\r\n    });\r\n    return Promise.all(promises).then(_ => {\r\n        return rangeData;\r\n    });\r\n}\r\nexport class RangesCollector {\r\n    constructor(foldingRangesLimit) {\r\n        this._startIndexes = [];\r\n        this._endIndexes = [];\r\n        this._nestingLevels = [];\r\n        this._nestingLevelCounts = [];\r\n        this._types = [];\r\n        this._length = 0;\r\n        this._foldingRangesLimit = foldingRangesLimit;\r\n    }\r\n    add(startLineNumber, endLineNumber, type, nestingLevel) {\r\n        if (startLineNumber > MAX_LINE_NUMBER || endLineNumber > MAX_LINE_NUMBER) {\r\n            return;\r\n        }\r\n        let index = this._length;\r\n        this._startIndexes[index] = startLineNumber;\r\n        this._endIndexes[index] = endLineNumber;\r\n        this._nestingLevels[index] = nestingLevel;\r\n        this._types[index] = type;\r\n        this._length++;\r\n        if (nestingLevel < 30) {\r\n            this._nestingLevelCounts[nestingLevel] = (this._nestingLevelCounts[nestingLevel] || 0) + 1;\r\n        }\r\n    }\r\n    toIndentRanges() {\r\n        if (this._length <= this._foldingRangesLimit) {\r\n            let startIndexes = new Uint32Array(this._length);\r\n            let endIndexes = new Uint32Array(this._length);\r\n            for (let i = 0; i < this._length; i++) {\r\n                startIndexes[i] = this._startIndexes[i];\r\n                endIndexes[i] = this._endIndexes[i];\r\n            }\r\n            return new FoldingRegions(startIndexes, endIndexes, this._types);\r\n        }\r\n        else {\r\n            let entries = 0;\r\n            let maxLevel = this._nestingLevelCounts.length;\r\n            for (let i = 0; i < this._nestingLevelCounts.length; i++) {\r\n                let n = this._nestingLevelCounts[i];\r\n                if (n) {\r\n                    if (n + entries > this._foldingRangesLimit) {\r\n                        maxLevel = i;\r\n                        break;\r\n                    }\r\n                    entries += n;\r\n                }\r\n            }\r\n            let startIndexes = new Uint32Array(this._foldingRangesLimit);\r\n            let endIndexes = new Uint32Array(this._foldingRangesLimit);\r\n            let types = [];\r\n            for (let i = 0, k = 0; i < this._length; i++) {\r\n                let level = this._nestingLevels[i];\r\n                if (level < maxLevel || (level === maxLevel && entries++ < this._foldingRangesLimit)) {\r\n                    startIndexes[k] = this._startIndexes[i];\r\n                    endIndexes[k] = this._endIndexes[i];\r\n                    types[k] = this._types[i];\r\n                    k++;\r\n                }\r\n            }\r\n            return new FoldingRegions(startIndexes, endIndexes, types);\r\n        }\r\n    }\r\n}\r\nexport function sanitizeRanges(rangeData, limit) {\r\n    let sorted = rangeData.sort((d1, d2) => {\r\n        let diff = d1.start - d2.start;\r\n        if (diff === 0) {\r\n            diff = d1.rank - d2.rank;\r\n        }\r\n        return diff;\r\n    });\r\n    let collector = new RangesCollector(limit);\r\n    let top = undefined;\r\n    let previous = [];\r\n    for (let entry of sorted) {\r\n        if (!top) {\r\n            top = entry;\r\n            collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\r\n        }\r\n        else {\r\n            if (entry.start > top.start) {\r\n                if (entry.end <= top.end) {\r\n                    previous.push(top);\r\n                    top = entry;\r\n                    collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\r\n                }\r\n                else {\r\n                    if (entry.start > top.end) {\r\n                        do {\r\n                            top = previous.pop();\r\n                        } while (top && entry.start > top.end);\r\n                        if (top) {\r\n                            previous.push(top);\r\n                        }\r\n                        top = entry;\r\n                    }\r\n                    collector.add(entry.start, entry.end, entry.kind && entry.kind.value, previous.length);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return collector.toIndentRanges();\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { sanitizeRanges } from './syntaxRangeProvider.js';\r\nexport const ID_INIT_PROVIDER = 'init';\r\nexport class InitializingRangeProvider {\r\n    constructor(editorModel, initialRanges, onTimeout, timeoutTime) {\r\n        this.editorModel = editorModel;\r\n        this.id = ID_INIT_PROVIDER;\r\n        if (initialRanges.length) {\r\n            let toDecorationRange = (range) => {\r\n                return {\r\n                    range: {\r\n                        startLineNumber: range.startLineNumber,\r\n                        startColumn: 0,\r\n                        endLineNumber: range.endLineNumber,\r\n                        endColumn: editorModel.getLineLength(range.endLineNumber)\r\n                    },\r\n                    options: {\r\n                        description: 'folding-initializing-range-provider',\r\n                        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */\r\n                    }\r\n                };\r\n            };\r\n            this.decorationIds = editorModel.deltaDecorations([], initialRanges.map(toDecorationRange));\r\n            this.timeout = setTimeout(onTimeout, timeoutTime);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this.decorationIds) {\r\n            this.editorModel.deltaDecorations(this.decorationIds, []);\r\n            this.decorationIds = undefined;\r\n        }\r\n        if (typeof this.timeout === 'number') {\r\n            clearTimeout(this.timeout);\r\n            this.timeout = undefined;\r\n        }\r\n    }\r\n    compute(cancelationToken) {\r\n        let foldingRangeData = [];\r\n        if (this.decorationIds) {\r\n            for (let id of this.decorationIds) {\r\n                let range = this.editorModel.getDecorationRange(id);\r\n                if (range) {\r\n                    foldingRangeData.push({ start: range.startLineNumber, end: range.endLineNumber, rank: 1 });\r\n                }\r\n            }\r\n        }\r\n        return Promise.resolve(sanitizeRanges(foldingRangeData, Number.MAX_VALUE));\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { EditorZoom } from '../../common/config/editorZoom.js';\r\nclass EditorFontZoomIn extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.fontZoomIn',\r\n            label: nls.localize('EditorFontZoomIn.label', \"Editor Font Zoom In\"),\r\n            alias: 'Editor Font Zoom In',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() + 1);\r\n    }\r\n}\r\nclass EditorFontZoomOut extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.fontZoomOut',\r\n            label: nls.localize('EditorFontZoomOut.label', \"Editor Font Zoom Out\"),\r\n            alias: 'Editor Font Zoom Out',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        EditorZoom.setZoomLevel(EditorZoom.getZoomLevel() - 1);\r\n    }\r\n}\r\nclass EditorFontZoomReset extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.fontZoomReset',\r\n            label: nls.localize('EditorFontZoomReset.label', \"Editor Font Zoom Reset\"),\r\n            alias: 'Editor Font Zoom Reset',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        EditorZoom.setZoomLevel(0);\r\n    }\r\n}\r\nregisterEditorAction(EditorFontZoomIn);\r\nregisterEditorAction(EditorFontZoomOut);\r\nregisterEditorAction(EditorFontZoomReset);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { isNonEmptyArray } from '../../../base/common/arrays.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { DocumentRangeFormattingEditProviderRegistry, OnTypeFormattingEditProviderRegistry } from '../../common/modes.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { getOnTypeFormattingEdits, alertFormattingEdits, formatDocumentRangesWithSelectedProvider, formatDocumentWithSelectedProvider } from './format.js';\r\nimport { FormattingEdit } from './formattingEdit.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Progress, IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nlet FormatOnType = class FormatOnType {\r\n    constructor(editor, _workerService) {\r\n        this._workerService = _workerService;\r\n        this._callOnDispose = new DisposableStore();\r\n        this._callOnModel = new DisposableStore();\r\n        this._editor = editor;\r\n        this._callOnDispose.add(editor.onDidChangeConfiguration(() => this._update()));\r\n        this._callOnDispose.add(editor.onDidChangeModel(() => this._update()));\r\n        this._callOnDispose.add(editor.onDidChangeModelLanguage(() => this._update()));\r\n        this._callOnDispose.add(OnTypeFormattingEditProviderRegistry.onDidChange(this._update, this));\r\n    }\r\n    dispose() {\r\n        this._callOnDispose.dispose();\r\n        this._callOnModel.dispose();\r\n    }\r\n    _update() {\r\n        // clean up\r\n        this._callOnModel.clear();\r\n        // we are disabled\r\n        if (!this._editor.getOption(45 /* formatOnType */)) {\r\n            return;\r\n        }\r\n        // no model\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        // no support\r\n        const [support] = OnTypeFormattingEditProviderRegistry.ordered(model);\r\n        if (!support || !support.autoFormatTriggerCharacters) {\r\n            return;\r\n        }\r\n        // register typing listeners that will trigger the format\r\n        let triggerChars = new CharacterSet();\r\n        for (let ch of support.autoFormatTriggerCharacters) {\r\n            triggerChars.add(ch.charCodeAt(0));\r\n        }\r\n        this._callOnModel.add(this._editor.onDidType((text) => {\r\n            let lastCharCode = text.charCodeAt(text.length - 1);\r\n            if (triggerChars.has(lastCharCode)) {\r\n                this._trigger(String.fromCharCode(lastCharCode));\r\n            }\r\n        }));\r\n    }\r\n    _trigger(ch) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (this._editor.getSelections().length > 1) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const position = this._editor.getPosition();\r\n        let canceled = false;\r\n        // install a listener that checks if edits happens before the\r\n        // position on which we format right now. If so, we won't\r\n        // apply the format edits\r\n        const unbind = this._editor.onDidChangeModelContent((e) => {\r\n            if (e.isFlush) {\r\n                // a model.setValue() was called\r\n                // cancel only once\r\n                canceled = true;\r\n                unbind.dispose();\r\n                return;\r\n            }\r\n            for (let i = 0, len = e.changes.length; i < len; i++) {\r\n                const change = e.changes[i];\r\n                if (change.range.endLineNumber <= position.lineNumber) {\r\n                    // cancel only once\r\n                    canceled = true;\r\n                    unbind.dispose();\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n        getOnTypeFormattingEdits(this._workerService, model, position, ch, model.getFormattingOptions()).then(edits => {\r\n            unbind.dispose();\r\n            if (canceled) {\r\n                return;\r\n            }\r\n            if (isNonEmptyArray(edits)) {\r\n                FormattingEdit.execute(this._editor, edits, true);\r\n                alertFormattingEdits(edits);\r\n            }\r\n        }, (err) => {\r\n            unbind.dispose();\r\n            throw err;\r\n        });\r\n    }\r\n};\r\nFormatOnType.ID = 'editor.contrib.autoFormat';\r\nFormatOnType = __decorate([\r\n    __param(1, IEditorWorkerService)\r\n], FormatOnType);\r\nlet FormatOnPaste = class FormatOnPaste {\r\n    constructor(editor, _instantiationService) {\r\n        this.editor = editor;\r\n        this._instantiationService = _instantiationService;\r\n        this._callOnDispose = new DisposableStore();\r\n        this._callOnModel = new DisposableStore();\r\n        this._callOnDispose.add(editor.onDidChangeConfiguration(() => this._update()));\r\n        this._callOnDispose.add(editor.onDidChangeModel(() => this._update()));\r\n        this._callOnDispose.add(editor.onDidChangeModelLanguage(() => this._update()));\r\n        this._callOnDispose.add(DocumentRangeFormattingEditProviderRegistry.onDidChange(this._update, this));\r\n    }\r\n    dispose() {\r\n        this._callOnDispose.dispose();\r\n        this._callOnModel.dispose();\r\n    }\r\n    _update() {\r\n        // clean up\r\n        this._callOnModel.clear();\r\n        // we are disabled\r\n        if (!this.editor.getOption(44 /* formatOnPaste */)) {\r\n            return;\r\n        }\r\n        // no model\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        // no formatter\r\n        if (!DocumentRangeFormattingEditProviderRegistry.has(this.editor.getModel())) {\r\n            return;\r\n        }\r\n        this._callOnModel.add(this.editor.onDidPaste(({ range }) => this._trigger(range)));\r\n    }\r\n    _trigger(range) {\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (this.editor.getSelections().length > 1) {\r\n            return;\r\n        }\r\n        this._instantiationService.invokeFunction(formatDocumentRangesWithSelectedProvider, this.editor, range, 2 /* Silent */, Progress.None, CancellationToken.None).catch(onUnexpectedError);\r\n    }\r\n};\r\nFormatOnPaste.ID = 'editor.contrib.formatOnPaste';\r\nFormatOnPaste = __decorate([\r\n    __param(1, IInstantiationService)\r\n], FormatOnPaste);\r\nclass FormatDocumentAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.formatDocument',\r\n            label: nls.localize('formatDocument.label', \"Format Document\"),\r\n            alias: 'Format Document',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.notInCompositeEditor, EditorContextKeys.writable, EditorContextKeys.hasDocumentFormattingProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 36 /* KEY_F */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 39 /* KEY_I */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 1.3\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (editor.hasModel()) {\r\n                const instaService = accessor.get(IInstantiationService);\r\n                const progressService = accessor.get(IEditorProgressService);\r\n                yield progressService.showWhile(instaService.invokeFunction(formatDocumentWithSelectedProvider, editor, 1 /* Explicit */, Progress.None, CancellationToken.None), 250);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass FormatSelectionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.formatSelection',\r\n            label: nls.localize('formatSelection.label', \"Format Selection\"),\r\n            alias: 'Format Selection',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasDocumentSelectionFormattingProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 36 /* KEY_F */),\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                when: EditorContextKeys.hasNonEmptySelection,\r\n                group: '1_modification',\r\n                order: 1.31\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!editor.hasModel()) {\r\n                return;\r\n            }\r\n            const instaService = accessor.get(IInstantiationService);\r\n            const model = editor.getModel();\r\n            const ranges = editor.getSelections().map(range => {\r\n                return range.isEmpty()\r\n                    ? new Range(range.startLineNumber, 1, range.startLineNumber, model.getLineMaxColumn(range.startLineNumber))\r\n                    : range;\r\n            });\r\n            const progressService = accessor.get(IEditorProgressService);\r\n            yield progressService.showWhile(instaService.invokeFunction(formatDocumentRangesWithSelectedProvider, editor, ranges, 1 /* Explicit */, Progress.None, CancellationToken.None), 250);\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(FormatOnType.ID, FormatOnType);\r\nregisterEditorContribution(FormatOnPaste.ID, FormatOnPaste);\r\nregisterEditorAction(FormatDocumentAction);\r\nregisterEditorAction(FormatSelectionAction);\r\n// this is the old format action that does both (format document OR format selection)\r\n// and we keep it here such that existing keybinding configurations etc will still work\r\nCommandsRegistry.registerCommand('editor.action.format', (accessor) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\r\n    if (!editor || !editor.hasModel()) {\r\n        return;\r\n    }\r\n    const commandService = accessor.get(ICommandService);\r\n    if (editor.getSelection().isEmpty()) {\r\n        yield commandService.executeCommand('editor.action.formatDocument');\r\n    }\r\n    else {\r\n        yield commandService.executeCommand('editor.action.formatSelection');\r\n    }\r\n}));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { equals } from '../../../base/common/arrays.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { LRUCache } from '../../../base/common/map.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { DocumentSymbolProviderRegistry } from '../../common/modes.js';\r\nimport { Iterable } from '../../../base/common/iterator.js';\r\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\r\nexport class TreeElement {\r\n    remove() {\r\n        if (this.parent) {\r\n            this.parent.children.delete(this.id);\r\n        }\r\n    }\r\n    static findId(candidate, container) {\r\n        // complex id-computation which contains the origin/extension,\r\n        // the parent path, and some dedupe logic when names collide\r\n        let candidateId;\r\n        if (typeof candidate === 'string') {\r\n            candidateId = `${container.id}/${candidate}`;\r\n        }\r\n        else {\r\n            candidateId = `${container.id}/${candidate.name}`;\r\n            if (container.children.get(candidateId) !== undefined) {\r\n                candidateId = `${container.id}/${candidate.name}_${candidate.range.startLineNumber}_${candidate.range.startColumn}`;\r\n            }\r\n        }\r\n        let id = candidateId;\r\n        for (let i = 0; container.children.get(id) !== undefined; i++) {\r\n            id = `${candidateId}_${i}`;\r\n        }\r\n        return id;\r\n    }\r\n    static empty(element) {\r\n        return element.children.size === 0;\r\n    }\r\n}\r\nexport class OutlineElement extends TreeElement {\r\n    constructor(id, parent, symbol) {\r\n        super();\r\n        this.id = id;\r\n        this.parent = parent;\r\n        this.symbol = symbol;\r\n        this.children = new Map();\r\n    }\r\n}\r\nexport class OutlineGroup extends TreeElement {\r\n    constructor(id, parent, label, order) {\r\n        super();\r\n        this.id = id;\r\n        this.parent = parent;\r\n        this.label = label;\r\n        this.order = order;\r\n        this.children = new Map();\r\n    }\r\n}\r\nexport class OutlineModel extends TreeElement {\r\n    constructor(uri) {\r\n        super();\r\n        this.uri = uri;\r\n        this.id = 'root';\r\n        this.parent = undefined;\r\n        this._groups = new Map();\r\n        this.children = new Map();\r\n        this.id = 'root';\r\n        this.parent = undefined;\r\n    }\r\n    static create(textModel, token) {\r\n        let key = this._keys.for(textModel, true);\r\n        let data = OutlineModel._requests.get(key);\r\n        if (!data) {\r\n            let source = new CancellationTokenSource();\r\n            data = {\r\n                promiseCnt: 0,\r\n                source,\r\n                promise: OutlineModel._create(textModel, source.token),\r\n                model: undefined,\r\n            };\r\n            OutlineModel._requests.set(key, data);\r\n            // keep moving average of request durations\r\n            const now = Date.now();\r\n            data.promise.then(() => {\r\n                this._requestDurations.update(textModel, Date.now() - now);\r\n            });\r\n        }\r\n        if (data.model) {\r\n            // resolved -> return data\r\n            return Promise.resolve(data.model);\r\n        }\r\n        // increase usage counter\r\n        data.promiseCnt += 1;\r\n        token.onCancellationRequested(() => {\r\n            // last -> cancel provider request, remove cached promise\r\n            if (--data.promiseCnt === 0) {\r\n                data.source.cancel();\r\n                OutlineModel._requests.delete(key);\r\n            }\r\n        });\r\n        return new Promise((resolve, reject) => {\r\n            data.promise.then(model => {\r\n                data.model = model;\r\n                resolve(model);\r\n            }, err => {\r\n                OutlineModel._requests.delete(key);\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    static _create(textModel, token) {\r\n        const cts = new CancellationTokenSource(token);\r\n        const result = new OutlineModel(textModel.uri);\r\n        const provider = DocumentSymbolProviderRegistry.ordered(textModel);\r\n        const promises = provider.map((provider, index) => {\r\n            var _a;\r\n            let id = TreeElement.findId(`provider_${index}`, result);\r\n            let group = new OutlineGroup(id, result, (_a = provider.displayName) !== null && _a !== void 0 ? _a : 'Unknown Outline Provider', index);\r\n            return Promise.resolve(provider.provideDocumentSymbols(textModel, cts.token)).then(result => {\r\n                for (const info of result || []) {\r\n                    OutlineModel._makeOutlineElement(info, group);\r\n                }\r\n                return group;\r\n            }, err => {\r\n                onUnexpectedExternalError(err);\r\n                return group;\r\n            }).then(group => {\r\n                if (!TreeElement.empty(group)) {\r\n                    result._groups.set(id, group);\r\n                }\r\n                else {\r\n                    group.remove();\r\n                }\r\n            });\r\n        });\r\n        const listener = DocumentSymbolProviderRegistry.onDidChange(() => {\r\n            const newProvider = DocumentSymbolProviderRegistry.ordered(textModel);\r\n            if (!equals(newProvider, provider)) {\r\n                cts.cancel();\r\n            }\r\n        });\r\n        return Promise.all(promises).then(() => {\r\n            if (cts.token.isCancellationRequested && !token.isCancellationRequested) {\r\n                return OutlineModel._create(textModel, token);\r\n            }\r\n            else {\r\n                return result._compact();\r\n            }\r\n        }).finally(() => {\r\n            listener.dispose();\r\n        });\r\n    }\r\n    static _makeOutlineElement(info, container) {\r\n        let id = TreeElement.findId(info, container);\r\n        let res = new OutlineElement(id, container, info);\r\n        if (info.children) {\r\n            for (const childInfo of info.children) {\r\n                OutlineModel._makeOutlineElement(childInfo, res);\r\n            }\r\n        }\r\n        container.children.set(res.id, res);\r\n    }\r\n    _compact() {\r\n        let count = 0;\r\n        for (const [key, group] of this._groups) {\r\n            if (group.children.size === 0) { // empty\r\n                this._groups.delete(key);\r\n            }\r\n            else {\r\n                count += 1;\r\n            }\r\n        }\r\n        if (count !== 1) {\r\n            //\r\n            this.children = this._groups;\r\n        }\r\n        else {\r\n            // adopt all elements of the first group\r\n            let group = Iterable.first(this._groups.values());\r\n            for (let [, child] of group.children) {\r\n                child.parent = this;\r\n                this.children.set(child.id, child);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    getTopLevelSymbols() {\r\n        const roots = [];\r\n        for (const child of this.children.values()) {\r\n            if (child instanceof OutlineElement) {\r\n                roots.push(child.symbol);\r\n            }\r\n            else {\r\n                roots.push(...Iterable.map(child.children.values(), child => child.symbol));\r\n            }\r\n        }\r\n        return roots.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\r\n    }\r\n    asListOfDocumentSymbols() {\r\n        const roots = this.getTopLevelSymbols();\r\n        const bucket = [];\r\n        OutlineModel._flattenDocumentSymbols(bucket, roots, '');\r\n        return bucket.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\r\n    }\r\n    static _flattenDocumentSymbols(bucket, entries, overrideContainerLabel) {\r\n        for (const entry of entries) {\r\n            bucket.push({\r\n                kind: entry.kind,\r\n                tags: entry.tags,\r\n                name: entry.name,\r\n                detail: entry.detail,\r\n                containerName: entry.containerName || overrideContainerLabel,\r\n                range: entry.range,\r\n                selectionRange: entry.selectionRange,\r\n                children: undefined, // we flatten it...\r\n            });\r\n            // Recurse over children\r\n            if (entry.children) {\r\n                OutlineModel._flattenDocumentSymbols(bucket, entry.children, entry.name);\r\n            }\r\n        }\r\n    }\r\n}\r\nOutlineModel._requestDurations = new LanguageFeatureRequestDelays(DocumentSymbolProviderRegistry, 350);\r\nOutlineModel._requests = new LRUCache(9, 0.75);\r\nOutlineModel._keys = new class {\r\n    constructor() {\r\n        this._counter = 1;\r\n        this._data = new WeakMap();\r\n    }\r\n    for(textModel, version) {\r\n        return `${textModel.id}/${version ? textModel.getVersionId() : ''}/${this._hash(DocumentSymbolProviderRegistry.all(textModel))}`;\r\n    }\r\n    _hash(providers) {\r\n        let result = '';\r\n        for (const provider of providers) {\r\n            let n = this._data.get(provider);\r\n            if (typeof n === 'undefined') {\r\n                n = this._counter++;\r\n                this._data.set(provider, n);\r\n            }\r\n            result += n;\r\n        }\r\n        return result;\r\n    }\r\n};\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { ITextModelService } from '../../common/services/resolverService.js';\r\nimport { OutlineModel } from './outlineModel.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nexport function getDocumentSymbols(document, flat, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const model = yield OutlineModel.create(document, token);\r\n        return flat\r\n            ? model.asListOfDocumentSymbols()\r\n            : model.getTopLevelSymbols();\r\n    });\r\n}\r\nCommandsRegistry.registerCommand('_executeDocumentSymbolProvider', function (accessor, ...args) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const [resource] = args;\r\n        assertType(URI.isUri(resource));\r\n        const model = accessor.get(IModelService).getModel(resource);\r\n        if (model) {\r\n            return getDocumentSymbols(model, false, CancellationToken.None);\r\n        }\r\n        const reference = yield accessor.get(ITextModelService).createModelReference(resource);\r\n        try {\r\n            return yield getDocumentSymbols(reference.object.textEditorModel, false, CancellationToken.None);\r\n        }\r\n        finally {\r\n            reference.dispose();\r\n        }\r\n    });\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function getSpaceCnt(str, tabSize) {\r\n    let spacesCnt = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        if (str.charAt(i) === '\\t') {\r\n            spacesCnt += tabSize;\r\n        }\r\n        else {\r\n            spacesCnt++;\r\n        }\r\n    }\r\n    return spacesCnt;\r\n}\r\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\r\n    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\r\n    let result = '';\r\n    if (!insertSpaces) {\r\n        let tabsCnt = Math.floor(spacesCnt / tabSize);\r\n        spacesCnt = spacesCnt % tabSize;\r\n        for (let i = 0; i < tabsCnt; i++) {\r\n            result += '\\t';\r\n        }\r\n    }\r\n    for (let i = 0; i < spacesCnt; i++) {\r\n        result += ' ';\r\n    }\r\n    return result;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ShiftCommand } from '../../common/commands/shiftCommand.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { TextModel } from '../../common/model/textModel.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport * as indentUtils from './indentUtils.js';\r\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\r\nexport function getReindentEditOperations(model, startLineNumber, endLineNumber, inheritedIndent) {\r\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\r\n        // Model is empty\r\n        return [];\r\n    }\r\n    let indentationRules = LanguageConfigurationRegistry.getIndentationRules(model.getLanguageIdentifier().id);\r\n    if (!indentationRules) {\r\n        return [];\r\n    }\r\n    endLineNumber = Math.min(endLineNumber, model.getLineCount());\r\n    // Skip `unIndentedLinePattern` lines\r\n    while (startLineNumber <= endLineNumber) {\r\n        if (!indentationRules.unIndentedLinePattern) {\r\n            break;\r\n        }\r\n        let text = model.getLineContent(startLineNumber);\r\n        if (!indentationRules.unIndentedLinePattern.test(text)) {\r\n            break;\r\n        }\r\n        startLineNumber++;\r\n    }\r\n    if (startLineNumber > endLineNumber - 1) {\r\n        return [];\r\n    }\r\n    const { tabSize, indentSize, insertSpaces } = model.getOptions();\r\n    const shiftIndent = (indentation, count) => {\r\n        count = count || 1;\r\n        return ShiftCommand.shiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\r\n    };\r\n    const unshiftIndent = (indentation, count) => {\r\n        count = count || 1;\r\n        return ShiftCommand.unshiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\r\n    };\r\n    let indentEdits = [];\r\n    // indentation being passed to lines below\r\n    let globalIndent;\r\n    // Calculate indentation for the first line\r\n    // If there is no passed-in indentation, we use the indentation of the first line as base.\r\n    let currentLineText = model.getLineContent(startLineNumber);\r\n    let adjustedLineContent = currentLineText;\r\n    if (inheritedIndent !== undefined && inheritedIndent !== null) {\r\n        globalIndent = inheritedIndent;\r\n        let oldIndentation = strings.getLeadingWhitespace(currentLineText);\r\n        adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\r\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\r\n            globalIndent = unshiftIndent(globalIndent);\r\n            adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\r\n        }\r\n        if (currentLineText !== adjustedLineContent) {\r\n            indentEdits.push(EditOperation.replaceMove(new Selection(startLineNumber, 1, startLineNumber, oldIndentation.length + 1), TextModel.normalizeIndentation(globalIndent, indentSize, insertSpaces)));\r\n        }\r\n    }\r\n    else {\r\n        globalIndent = strings.getLeadingWhitespace(currentLineText);\r\n    }\r\n    // idealIndentForNextLine doesn't equal globalIndent when there is a line matching `indentNextLinePattern`.\r\n    let idealIndentForNextLine = globalIndent;\r\n    if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\r\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\r\n        globalIndent = shiftIndent(globalIndent);\r\n    }\r\n    else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\r\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\r\n    }\r\n    startLineNumber++;\r\n    // Calculate indentation adjustment for all following lines\r\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\r\n        let text = model.getLineContent(lineNumber);\r\n        let oldIndentation = strings.getLeadingWhitespace(text);\r\n        let adjustedLineContent = idealIndentForNextLine + text.substring(oldIndentation.length);\r\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\r\n            idealIndentForNextLine = unshiftIndent(idealIndentForNextLine);\r\n            globalIndent = unshiftIndent(globalIndent);\r\n        }\r\n        if (oldIndentation !== idealIndentForNextLine) {\r\n            indentEdits.push(EditOperation.replaceMove(new Selection(lineNumber, 1, lineNumber, oldIndentation.length + 1), TextModel.normalizeIndentation(idealIndentForNextLine, indentSize, insertSpaces)));\r\n        }\r\n        // calculate idealIndentForNextLine\r\n        if (indentationRules.unIndentedLinePattern && indentationRules.unIndentedLinePattern.test(text)) {\r\n            // In reindent phase, if the line matches `unIndentedLinePattern` we inherit indentation from above lines\r\n            // but don't change globalIndent and idealIndentForNextLine.\r\n            continue;\r\n        }\r\n        else if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\r\n            globalIndent = shiftIndent(globalIndent);\r\n            idealIndentForNextLine = globalIndent;\r\n        }\r\n        else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\r\n            idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\r\n        }\r\n        else {\r\n            idealIndentForNextLine = globalIndent;\r\n        }\r\n    }\r\n    return indentEdits;\r\n}\r\nexport class IndentationToSpacesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: IndentationToSpacesAction.ID,\r\n            label: nls.localize('indentationToSpaces', \"Convert Indentation to Spaces\"),\r\n            alias: 'Convert Indentation to Spaces',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let modelOpts = model.getOptions();\r\n        let selection = editor.getSelection();\r\n        if (!selection) {\r\n            return;\r\n        }\r\n        const command = new IndentationToSpacesCommand(selection, modelOpts.tabSize);\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, [command]);\r\n        editor.pushUndoStop();\r\n        model.updateOptions({\r\n            insertSpaces: true\r\n        });\r\n    }\r\n}\r\nIndentationToSpacesAction.ID = 'editor.action.indentationToSpaces';\r\nexport class IndentationToTabsAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: IndentationToTabsAction.ID,\r\n            label: nls.localize('indentationToTabs', \"Convert Indentation to Tabs\"),\r\n            alias: 'Convert Indentation to Tabs',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let modelOpts = model.getOptions();\r\n        let selection = editor.getSelection();\r\n        if (!selection) {\r\n            return;\r\n        }\r\n        const command = new IndentationToTabsCommand(selection, modelOpts.tabSize);\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, [command]);\r\n        editor.pushUndoStop();\r\n        model.updateOptions({\r\n            insertSpaces: false\r\n        });\r\n    }\r\n}\r\nIndentationToTabsAction.ID = 'editor.action.indentationToTabs';\r\nexport class ChangeIndentationSizeAction extends EditorAction {\r\n    constructor(insertSpaces, opts) {\r\n        super(opts);\r\n        this.insertSpaces = insertSpaces;\r\n    }\r\n    run(accessor, editor) {\r\n        const quickInputService = accessor.get(IQuickInputService);\r\n        const modelService = accessor.get(IModelService);\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let creationOpts = modelService.getCreationOptions(model.getLanguageIdentifier().language, model.uri, model.isForSimpleWidget);\r\n        const picks = [1, 2, 3, 4, 5, 6, 7, 8].map(n => ({\r\n            id: n.toString(),\r\n            label: n.toString(),\r\n            // add description for tabSize value set in the configuration\r\n            description: n === creationOpts.tabSize ? nls.localize('configuredTabSize', \"Configured Tab Size\") : undefined\r\n        }));\r\n        // auto focus the tabSize set for the current editor\r\n        const autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);\r\n        setTimeout(() => {\r\n            quickInputService.pick(picks, { placeHolder: nls.localize({ key: 'selectTabWidth', comment: ['Tab corresponds to the tab key'] }, \"Select Tab Size for Current File\"), activeItem: picks[autoFocusIndex] }).then(pick => {\r\n                if (pick) {\r\n                    if (model && !model.isDisposed()) {\r\n                        model.updateOptions({\r\n                            tabSize: parseInt(pick.label, 10),\r\n                            insertSpaces: this.insertSpaces\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }, 50 /* quick input is sensitive to being opened so soon after another */);\r\n    }\r\n}\r\nexport class IndentUsingTabs extends ChangeIndentationSizeAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: IndentUsingTabs.ID,\r\n            label: nls.localize('indentUsingTabs', \"Indent Using Tabs\"),\r\n            alias: 'Indent Using Tabs',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nIndentUsingTabs.ID = 'editor.action.indentUsingTabs';\r\nexport class IndentUsingSpaces extends ChangeIndentationSizeAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: IndentUsingSpaces.ID,\r\n            label: nls.localize('indentUsingSpaces', \"Indent Using Spaces\"),\r\n            alias: 'Indent Using Spaces',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nIndentUsingSpaces.ID = 'editor.action.indentUsingSpaces';\r\nexport class DetectIndentation extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: DetectIndentation.ID,\r\n            label: nls.localize('detectIndentation', \"Detect Indentation from Content\"),\r\n            alias: 'Detect Indentation from Content',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const modelService = accessor.get(IModelService);\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let creationOpts = modelService.getCreationOptions(model.getLanguageIdentifier().language, model.uri, model.isForSimpleWidget);\r\n        model.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);\r\n    }\r\n}\r\nDetectIndentation.ID = 'editor.action.detectIndentation';\r\nexport class ReindentLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.reindentlines',\r\n            label: nls.localize('editor.reindentlines', \"Reindent Lines\"),\r\n            alias: 'Reindent Lines',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let edits = getReindentEditOperations(model, 1, model.getLineCount());\r\n        if (edits.length > 0) {\r\n            editor.pushUndoStop();\r\n            editor.executeEdits(this.id, edits);\r\n            editor.pushUndoStop();\r\n        }\r\n    }\r\n}\r\nexport class ReindentSelectedLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.reindentselectedlines',\r\n            label: nls.localize('editor.reindentselectedlines', \"Reindent Selected Lines\"),\r\n            alias: 'Reindent Selected Lines',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let model = editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        let selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        let edits = [];\r\n        for (let selection of selections) {\r\n            let startLineNumber = selection.startLineNumber;\r\n            let endLineNumber = selection.endLineNumber;\r\n            if (startLineNumber !== endLineNumber && selection.endColumn === 1) {\r\n                endLineNumber--;\r\n            }\r\n            if (startLineNumber === 1) {\r\n                if (startLineNumber === endLineNumber) {\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                startLineNumber--;\r\n            }\r\n            let editOperations = getReindentEditOperations(model, startLineNumber, endLineNumber);\r\n            edits.push(...editOperations);\r\n        }\r\n        if (edits.length > 0) {\r\n            editor.pushUndoStop();\r\n            editor.executeEdits(this.id, edits);\r\n            editor.pushUndoStop();\r\n        }\r\n    }\r\n}\r\nexport class AutoIndentOnPasteCommand {\r\n    constructor(edits, initialSelection) {\r\n        this._initialSelection = initialSelection;\r\n        this._edits = [];\r\n        this._selectionId = null;\r\n        for (let edit of edits) {\r\n            if (edit.range && typeof edit.text === 'string') {\r\n                this._edits.push(edit);\r\n            }\r\n        }\r\n    }\r\n    getEditOperations(model, builder) {\r\n        for (let edit of this._edits) {\r\n            builder.addEditOperation(Range.lift(edit.range), edit.text);\r\n        }\r\n        let selectionIsSet = false;\r\n        if (Array.isArray(this._edits) && this._edits.length === 1 && this._initialSelection.isEmpty()) {\r\n            if (this._edits[0].range.startColumn === this._initialSelection.endColumn &&\r\n                this._edits[0].range.startLineNumber === this._initialSelection.endLineNumber) {\r\n                selectionIsSet = true;\r\n                this._selectionId = builder.trackSelection(this._initialSelection, true);\r\n            }\r\n            else if (this._edits[0].range.endColumn === this._initialSelection.startColumn &&\r\n                this._edits[0].range.endLineNumber === this._initialSelection.startLineNumber) {\r\n                selectionIsSet = true;\r\n                this._selectionId = builder.trackSelection(this._initialSelection, false);\r\n            }\r\n        }\r\n        if (!selectionIsSet) {\r\n            this._selectionId = builder.trackSelection(this._initialSelection);\r\n        }\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this._selectionId);\r\n    }\r\n}\r\nexport class AutoIndentOnPaste {\r\n    constructor(editor) {\r\n        this.callOnDispose = new DisposableStore();\r\n        this.callOnModel = new DisposableStore();\r\n        this.editor = editor;\r\n        this.callOnDispose.add(editor.onDidChangeConfiguration(() => this.update()));\r\n        this.callOnDispose.add(editor.onDidChangeModel(() => this.update()));\r\n        this.callOnDispose.add(editor.onDidChangeModelLanguage(() => this.update()));\r\n    }\r\n    update() {\r\n        // clean up\r\n        this.callOnModel.clear();\r\n        // we are disabled\r\n        if (this.editor.getOption(9 /* autoIndent */) < 4 /* Full */ || this.editor.getOption(44 /* formatOnPaste */)) {\r\n            return;\r\n        }\r\n        // no model\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        this.callOnModel.add(this.editor.onDidPaste(({ range }) => {\r\n            this.trigger(range);\r\n        }));\r\n    }\r\n    trigger(range) {\r\n        let selections = this.editor.getSelections();\r\n        if (selections === null || selections.length > 1) {\r\n            return;\r\n        }\r\n        const model = this.editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        if (!model.isCheapToTokenize(range.getStartPosition().lineNumber)) {\r\n            return;\r\n        }\r\n        const autoIndent = this.editor.getOption(9 /* autoIndent */);\r\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\r\n        let textEdits = [];\r\n        let indentConverter = {\r\n            shiftIndent: (indentation) => {\r\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\r\n            },\r\n            unshiftIndent: (indentation) => {\r\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\r\n            }\r\n        };\r\n        let startLineNumber = range.startLineNumber;\r\n        while (startLineNumber <= range.endLineNumber) {\r\n            if (this.shouldIgnoreLine(model, startLineNumber)) {\r\n                startLineNumber++;\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        if (startLineNumber > range.endLineNumber) {\r\n            return;\r\n        }\r\n        let firstLineText = model.getLineContent(startLineNumber);\r\n        if (!/\\S/.test(firstLineText.substring(0, range.startColumn - 1))) {\r\n            let indentOfFirstLine = LanguageConfigurationRegistry.getGoodIndentForLine(autoIndent, model, model.getLanguageIdentifier().id, startLineNumber, indentConverter);\r\n            if (indentOfFirstLine !== null) {\r\n                let oldIndentation = strings.getLeadingWhitespace(firstLineText);\r\n                let newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\r\n                let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\r\n                if (newSpaceCnt !== oldSpaceCnt) {\r\n                    let newIndent = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\r\n                    textEdits.push({\r\n                        range: new Range(startLineNumber, 1, startLineNumber, oldIndentation.length + 1),\r\n                        text: newIndent\r\n                    });\r\n                    firstLineText = newIndent + firstLineText.substr(oldIndentation.length);\r\n                }\r\n                else {\r\n                    let indentMetadata = LanguageConfigurationRegistry.getIndentMetadata(model, startLineNumber);\r\n                    if (indentMetadata === 0 || indentMetadata === 8 /* UNINDENT_MASK */) {\r\n                        // we paste content into a line where only contains whitespaces\r\n                        // after pasting, the indentation of the first line is already correct\r\n                        // the first line doesn't match any indentation rule\r\n                        // then no-op.\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        const firstLineNumber = startLineNumber;\r\n        // ignore empty or ignored lines\r\n        while (startLineNumber < range.endLineNumber) {\r\n            if (!/\\S/.test(model.getLineContent(startLineNumber + 1))) {\r\n                startLineNumber++;\r\n                continue;\r\n            }\r\n            break;\r\n        }\r\n        if (startLineNumber !== range.endLineNumber) {\r\n            let virtualModel = {\r\n                getLineTokens: (lineNumber) => {\r\n                    return model.getLineTokens(lineNumber);\r\n                },\r\n                getLanguageIdentifier: () => {\r\n                    return model.getLanguageIdentifier();\r\n                },\r\n                getLanguageIdAtPosition: (lineNumber, column) => {\r\n                    return model.getLanguageIdAtPosition(lineNumber, column);\r\n                },\r\n                getLineContent: (lineNumber) => {\r\n                    if (lineNumber === firstLineNumber) {\r\n                        return firstLineText;\r\n                    }\r\n                    else {\r\n                        return model.getLineContent(lineNumber);\r\n                    }\r\n                }\r\n            };\r\n            let indentOfSecondLine = LanguageConfigurationRegistry.getGoodIndentForLine(autoIndent, virtualModel, model.getLanguageIdentifier().id, startLineNumber + 1, indentConverter);\r\n            if (indentOfSecondLine !== null) {\r\n                let newSpaceCntOfSecondLine = indentUtils.getSpaceCnt(indentOfSecondLine, tabSize);\r\n                let oldSpaceCntOfSecondLine = indentUtils.getSpaceCnt(strings.getLeadingWhitespace(model.getLineContent(startLineNumber + 1)), tabSize);\r\n                if (newSpaceCntOfSecondLine !== oldSpaceCntOfSecondLine) {\r\n                    let spaceCntOffset = newSpaceCntOfSecondLine - oldSpaceCntOfSecondLine;\r\n                    for (let i = startLineNumber + 1; i <= range.endLineNumber; i++) {\r\n                        let lineContent = model.getLineContent(i);\r\n                        let originalIndent = strings.getLeadingWhitespace(lineContent);\r\n                        let originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\r\n                        let newSpacesCnt = originalSpacesCnt + spaceCntOffset;\r\n                        let newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\r\n                        if (newIndent !== originalIndent) {\r\n                            textEdits.push({\r\n                                range: new Range(i, 1, i, originalIndent.length + 1),\r\n                                text: newIndent\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (textEdits.length > 0) {\r\n            this.editor.pushUndoStop();\r\n            let cmd = new AutoIndentOnPasteCommand(textEdits, this.editor.getSelection());\r\n            this.editor.executeCommand('autoIndentOnPaste', cmd);\r\n            this.editor.pushUndoStop();\r\n        }\r\n    }\r\n    shouldIgnoreLine(model, lineNumber) {\r\n        model.forceTokenization(lineNumber);\r\n        let nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\r\n        if (nonWhitespaceColumn === 0) {\r\n            return true;\r\n        }\r\n        let tokens = model.getLineTokens(lineNumber);\r\n        if (tokens.getCount() > 0) {\r\n            let firstNonWhitespaceTokenIndex = tokens.findTokenIndexAtOffset(nonWhitespaceColumn);\r\n            if (firstNonWhitespaceTokenIndex >= 0 && tokens.getStandardTokenType(firstNonWhitespaceTokenIndex) === 1 /* Comment */) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    dispose() {\r\n        this.callOnDispose.dispose();\r\n        this.callOnModel.dispose();\r\n    }\r\n}\r\nAutoIndentOnPaste.ID = 'editor.contrib.autoIndentOnPaste';\r\nfunction getIndentationEditOperations(model, builder, tabSize, tabsToSpaces) {\r\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\r\n        // Model is empty\r\n        return;\r\n    }\r\n    let spaces = '';\r\n    for (let i = 0; i < tabSize; i++) {\r\n        spaces += ' ';\r\n    }\r\n    let spacesRegExp = new RegExp(spaces, 'gi');\r\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\r\n        let lastIndentationColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\r\n        if (lastIndentationColumn === 0) {\r\n            lastIndentationColumn = model.getLineMaxColumn(lineNumber);\r\n        }\r\n        if (lastIndentationColumn === 1) {\r\n            continue;\r\n        }\r\n        const originalIndentationRange = new Range(lineNumber, 1, lineNumber, lastIndentationColumn);\r\n        const originalIndentation = model.getValueInRange(originalIndentationRange);\r\n        const newIndentation = (tabsToSpaces\r\n            ? originalIndentation.replace(/\\t/ig, spaces)\r\n            : originalIndentation.replace(spacesRegExp, '\\t'));\r\n        builder.addEditOperation(originalIndentationRange, newIndentation);\r\n    }\r\n}\r\nexport class IndentationToSpacesCommand {\r\n    constructor(selection, tabSize) {\r\n        this.selection = selection;\r\n        this.tabSize = tabSize;\r\n        this.selectionId = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        this.selectionId = builder.trackSelection(this.selection);\r\n        getIndentationEditOperations(model, builder, this.tabSize, true);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this.selectionId);\r\n    }\r\n}\r\nexport class IndentationToTabsCommand {\r\n    constructor(selection, tabSize) {\r\n        this.selection = selection;\r\n        this.tabSize = tabSize;\r\n        this.selectionId = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        this.selectionId = builder.trackSelection(this.selection);\r\n        getIndentationEditOperations(model, builder, this.tabSize, false);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this.selectionId);\r\n    }\r\n}\r\nregisterEditorContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste);\r\nregisterEditorAction(IndentationToSpacesAction);\r\nregisterEditorAction(IndentationToTabsAction);\r\nregisterEditorAction(IndentUsingTabs);\r\nregisterEditorAction(IndentUsingSpaces);\r\nregisterEditorAction(DetectIndentation);\r\nregisterEditorAction(ReindentLinesAction);\r\nregisterEditorAction(ReindentSelectedLinesAction);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { hash } from '../../../base/common/hash.js';\r\nimport { DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { InlayHintsProviderRegistry } from '../../common/modes.js';\r\nimport { flatten } from '../../../base/common/arrays.js';\r\nimport { editorInlayHintForeground, editorInlayHintBackground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { CancellationToken, CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { LanguageFeatureRequestDelays } from '../../common/modes/languageFeatureRegistry.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { ITextModelService } from '../../common/services/resolverService.js';\r\nimport { Position } from '../../common/core/position.js';\r\nconst MAX_DECORATORS = 500;\r\nexport function getInlayHints(model, ranges, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const datas = [];\r\n        const providers = InlayHintsProviderRegistry.ordered(model).reverse();\r\n        const promises = flatten(providers.map(provider => ranges.map(range => Promise.resolve(provider.provideInlayHints(model, range, token)).then(result => {\r\n            if (result) {\r\n                datas.push({ list: result, provider });\r\n            }\r\n        }, err => {\r\n            onUnexpectedExternalError(err);\r\n        }))));\r\n        yield Promise.all(promises);\r\n        return datas;\r\n    });\r\n}\r\nlet InlayHintsController = class InlayHintsController {\r\n    constructor(_editor, _codeEditorService, _themeService) {\r\n        this._editor = _editor;\r\n        this._codeEditorService = _codeEditorService;\r\n        this._themeService = _themeService;\r\n        this._disposables = new DisposableStore();\r\n        this._sessionDisposables = new DisposableStore();\r\n        this._getInlayHintsDelays = new LanguageFeatureRequestDelays(InlayHintsProviderRegistry, 250, 2500);\r\n        this._decorationsTypeIds = [];\r\n        this._decorationIds = [];\r\n        this._disposables.add(InlayHintsProviderRegistry.onDidChange(() => this._update()));\r\n        this._disposables.add(_themeService.onDidColorThemeChange(() => this._update()));\r\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\r\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\r\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(124 /* inlayHints */)) {\r\n                this._update();\r\n            }\r\n        }));\r\n        this._update();\r\n    }\r\n    dispose() {\r\n        this._sessionDisposables.dispose();\r\n        this._removeAllDecorations();\r\n        this._disposables.dispose();\r\n    }\r\n    _update() {\r\n        this._sessionDisposables.clear();\r\n        if (!this._editor.getOption(124 /* inlayHints */).enabled) {\r\n            this._removeAllDecorations();\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        if (!model || !InlayHintsProviderRegistry.has(model)) {\r\n            this._removeAllDecorations();\r\n            return;\r\n        }\r\n        const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\r\n            const t1 = Date.now();\r\n            const cts = new CancellationTokenSource();\r\n            this._sessionDisposables.add(toDisposable(() => cts.dispose(true)));\r\n            const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\r\n            const result = yield getInlayHints(model, visibleRanges, cts.token);\r\n            // update moving average\r\n            const newDelay = this._getInlayHintsDelays.update(model, Date.now() - t1);\r\n            scheduler.delay = newDelay;\r\n            // render hints\r\n            this._updateHintsDecorators(result);\r\n        }), this._getInlayHintsDelays.get(model));\r\n        this._sessionDisposables.add(scheduler);\r\n        // update inline hints when content or scroll position changes\r\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent(() => scheduler.schedule()));\r\n        this._disposables.add(this._editor.onDidScrollChange(() => scheduler.schedule()));\r\n        scheduler.schedule();\r\n        // update inline hints when any any provider fires an event\r\n        const providerListener = new DisposableStore();\r\n        this._sessionDisposables.add(providerListener);\r\n        for (const provider of InlayHintsProviderRegistry.all(model)) {\r\n            if (typeof provider.onDidChangeInlayHints === 'function') {\r\n                providerListener.add(provider.onDidChangeInlayHints(() => scheduler.schedule()));\r\n            }\r\n        }\r\n    }\r\n    _updateHintsDecorators(hintsData) {\r\n        const { fontSize, fontFamily } = this._getLayoutInfo();\r\n        const backgroundColor = this._themeService.getColorTheme().getColor(editorInlayHintBackground);\r\n        const fontColor = this._themeService.getColorTheme().getColor(editorInlayHintForeground);\r\n        const newDecorationsTypeIds = [];\r\n        const newDecorationsData = [];\r\n        const fontFamilyVar = '--inlayHintsFontFamily';\r\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\r\n        for (const { list: hints } of hintsData) {\r\n            for (let j = 0; j < hints.length && newDecorationsData.length < MAX_DECORATORS; j++) {\r\n                const { text, position, whitespaceBefore, whitespaceAfter } = hints[j];\r\n                const marginBefore = whitespaceBefore ? (fontSize / 3) | 0 : 0;\r\n                const marginAfter = whitespaceAfter ? (fontSize / 3) | 0 : 0;\r\n                const before = {\r\n                    contentText: text,\r\n                    backgroundColor: `${backgroundColor}`,\r\n                    color: `${fontColor}`,\r\n                    margin: `0px ${marginAfter}px 0px ${marginBefore}px`,\r\n                    fontSize: `${fontSize}px`,\r\n                    fontFamily: `var(${fontFamilyVar})`,\r\n                    padding: `0px ${(fontSize / 4) | 0}px`,\r\n                    borderRadius: `${(fontSize / 4) | 0}px`,\r\n                };\r\n                const key = 'inlayHints-' + hash(before).toString(16);\r\n                this._codeEditorService.registerDecorationType('inlay-hints-controller', key, { before }, undefined, this._editor);\r\n                // decoration types are ref-counted which means we only need to\r\n                // call register und remove equally often\r\n                newDecorationsTypeIds.push(key);\r\n                const options = this._codeEditorService.resolveDecorationOptions(key, true);\r\n                newDecorationsData.push({\r\n                    range: Range.fromPositions(position),\r\n                    options\r\n                });\r\n            }\r\n        }\r\n        this._decorationsTypeIds.forEach(this._codeEditorService.removeDecorationType, this._codeEditorService);\r\n        this._decorationsTypeIds = newDecorationsTypeIds;\r\n        this._decorationIds = this._editor.deltaDecorations(this._decorationIds, newDecorationsData);\r\n    }\r\n    _getLayoutInfo() {\r\n        const options = this._editor.getOption(124 /* inlayHints */);\r\n        const editorFontSize = this._editor.getOption(42 /* fontSize */);\r\n        let fontSize = options.fontSize;\r\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\r\n            fontSize = (editorFontSize * .9) | 0;\r\n        }\r\n        const fontFamily = options.fontFamily;\r\n        return { fontSize, fontFamily };\r\n    }\r\n    _removeAllDecorations() {\r\n        this._decorationIds = this._editor.deltaDecorations(this._decorationIds, []);\r\n        this._decorationsTypeIds.forEach(this._codeEditorService.removeDecorationType, this._codeEditorService);\r\n        this._decorationsTypeIds = [];\r\n    }\r\n};\r\nInlayHintsController.ID = 'editor.contrib.InlayHints';\r\nInlayHintsController = __decorate([\r\n    __param(1, ICodeEditorService),\r\n    __param(2, IThemeService)\r\n], InlayHintsController);\r\nexport { InlayHintsController };\r\nregisterEditorContribution(InlayHintsController.ID, InlayHintsController);\r\nCommandsRegistry.registerCommand('_executeInlayHintProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri, range] = args;\r\n    assertType(URI.isUri(uri));\r\n    assertType(Range.isIRange(range));\r\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\r\n    try {\r\n        const data = yield getInlayHints(ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\r\n        return flatten(data.map(item => item.list)).sort((a, b) => Position.compare(a.position, b.position));\r\n    }\r\n    finally {\r\n        ref.dispose();\r\n    }\r\n}));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Selection } from '../../common/core/selection.js';\r\nexport class InPlaceReplaceCommand {\r\n    constructor(editRange, originalSelection, text) {\r\n        this._editRange = editRange;\r\n        this._originalSelection = originalSelection;\r\n        this._text = text;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        builder.addTrackedEditOperation(this._editRange, this._text);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        const inverseEditOperations = helper.getInverseEditOperations();\r\n        const srcRange = inverseEditOperations[0].range;\r\n        if (!this._originalSelection.isEmpty()) {\r\n            // Preserve selection and extends to typed text\r\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\r\n        }\r\n        return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { registerEditorAction, EditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { IEditorWorkerService } from '../../common/services/editorWorkerService.js';\r\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\r\nimport { EditorState } from '../../browser/core/editorState.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { editorBracketMatchBorder } from '../../common/view/editorColorRegistry.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { createCancelablePromise, timeout } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nlet InPlaceReplaceController = class InPlaceReplaceController {\r\n    constructor(editor, editorWorkerService) {\r\n        this.decorationIds = [];\r\n        this.editor = editor;\r\n        this.editorWorkerService = editorWorkerService;\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(InPlaceReplaceController.ID);\r\n    }\r\n    dispose() {\r\n    }\r\n    run(source, up) {\r\n        // cancel any pending request\r\n        if (this.currentRequest) {\r\n            this.currentRequest.cancel();\r\n        }\r\n        const editorSelection = this.editor.getSelection();\r\n        const model = this.editor.getModel();\r\n        if (!model || !editorSelection) {\r\n            return undefined;\r\n        }\r\n        let selection = editorSelection;\r\n        if (selection.startLineNumber !== selection.endLineNumber) {\r\n            // Can't accept multiline selection\r\n            return undefined;\r\n        }\r\n        const state = new EditorState(this.editor, 1 /* Value */ | 4 /* Position */);\r\n        const modelURI = model.uri;\r\n        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\r\n        return this.currentRequest.then(result => {\r\n            if (!result || !result.range || !result.value) {\r\n                // No proper result\r\n                return;\r\n            }\r\n            if (!state.validate(this.editor)) {\r\n                // state has changed\r\n                return;\r\n            }\r\n            // Selection\r\n            let editRange = Range.lift(result.range);\r\n            let highlightRange = result.range;\r\n            let diff = result.value.length - (selection.endColumn - selection.startColumn);\r\n            // highlight\r\n            highlightRange = {\r\n                startLineNumber: highlightRange.startLineNumber,\r\n                startColumn: highlightRange.startColumn,\r\n                endLineNumber: highlightRange.endLineNumber,\r\n                endColumn: highlightRange.startColumn + result.value.length\r\n            };\r\n            if (diff > 1) {\r\n                selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\r\n            }\r\n            // Insert new text\r\n            const command = new InPlaceReplaceCommand(editRange, selection, result.value);\r\n            this.editor.pushUndoStop();\r\n            this.editor.executeCommand(source, command);\r\n            this.editor.pushUndoStop();\r\n            // add decoration\r\n            this.decorationIds = this.editor.deltaDecorations(this.decorationIds, [{\r\n                    range: highlightRange,\r\n                    options: InPlaceReplaceController.DECORATION\r\n                }]);\r\n            // remove decoration after delay\r\n            if (this.decorationRemover) {\r\n                this.decorationRemover.cancel();\r\n            }\r\n            this.decorationRemover = timeout(350);\r\n            this.decorationRemover.then(() => this.decorationIds = this.editor.deltaDecorations(this.decorationIds, [])).catch(onUnexpectedError);\r\n        }).catch(onUnexpectedError);\r\n    }\r\n};\r\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\r\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\r\n    description: 'in-place-replace',\r\n    className: 'valueSetReplacement'\r\n});\r\nInPlaceReplaceController = __decorate([\r\n    __param(1, IEditorWorkerService)\r\n], InPlaceReplaceController);\r\nclass InPlaceReplaceUp extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inPlaceReplace.up',\r\n            label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\r\n            alias: 'Replace with Previous Value',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 82 /* US_COMMA */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = InPlaceReplaceController.get(editor);\r\n        if (!controller) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        return controller.run(this.id, true);\r\n    }\r\n}\r\nclass InPlaceReplaceDown extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inPlaceReplace.down',\r\n            label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\r\n            alias: 'Replace with Next Value',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 84 /* US_DOT */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = InPlaceReplaceController.get(editor);\r\n        if (!controller) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        return controller.run(this.id, false);\r\n    }\r\n}\r\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController);\r\nregisterEditorAction(InPlaceReplaceUp);\r\nregisterEditorAction(InPlaceReplaceDown);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const border = theme.getColor(editorBracketMatchBorder);\r\n    if (border) {\r\n        collector.addRule(`.monaco-editor.vs .valueSetReplacement { outline: solid 2px ${border}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { EditOperation } from '../core/editOperation.js';\r\nimport { Range } from '../core/range.js';\r\nexport class TrimTrailingWhitespaceCommand {\r\n    constructor(selection, cursors) {\r\n        this._selection = selection;\r\n        this._cursors = cursors;\r\n        this._selectionId = null;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let ops = trimTrailingWhitespace(model, this._cursors);\r\n        for (let i = 0, len = ops.length; i < len; i++) {\r\n            let op = ops[i];\r\n            builder.addEditOperation(op.range, op.text);\r\n        }\r\n        this._selectionId = builder.trackSelection(this._selection);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this._selectionId);\r\n    }\r\n}\r\n/**\r\n * Generate commands for trimming trailing whitespace on a model and ignore lines on which cursors are sitting.\r\n */\r\nexport function trimTrailingWhitespace(model, cursors) {\r\n    // Sort cursors ascending\r\n    cursors.sort((a, b) => {\r\n        if (a.lineNumber === b.lineNumber) {\r\n            return a.column - b.column;\r\n        }\r\n        return a.lineNumber - b.lineNumber;\r\n    });\r\n    // Reduce multiple cursors on the same line and only keep the last one on the line\r\n    for (let i = cursors.length - 2; i >= 0; i--) {\r\n        if (cursors[i].lineNumber === cursors[i + 1].lineNumber) {\r\n            // Remove cursor at `i`\r\n            cursors.splice(i, 1);\r\n        }\r\n    }\r\n    let r = [];\r\n    let rLen = 0;\r\n    let cursorIndex = 0;\r\n    let cursorLen = cursors.length;\r\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\r\n        let lineContent = model.getLineContent(lineNumber);\r\n        let maxLineColumn = lineContent.length + 1;\r\n        let minEditColumn = 0;\r\n        if (cursorIndex < cursorLen && cursors[cursorIndex].lineNumber === lineNumber) {\r\n            minEditColumn = cursors[cursorIndex].column;\r\n            cursorIndex++;\r\n            if (minEditColumn === maxLineColumn) {\r\n                // The cursor is at the end of the line => no edits for sure on this line\r\n                continue;\r\n            }\r\n        }\r\n        if (lineContent.length === 0) {\r\n            continue;\r\n        }\r\n        let lastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\r\n        let fromColumn = 0;\r\n        if (lastNonWhitespaceIndex === -1) {\r\n            // Entire line is whitespace\r\n            fromColumn = 1;\r\n        }\r\n        else if (lastNonWhitespaceIndex !== lineContent.length - 1) {\r\n            // There is trailing whitespace\r\n            fromColumn = lastNonWhitespaceIndex + 2;\r\n        }\r\n        else {\r\n            // There is no trailing whitespace\r\n            continue;\r\n        }\r\n        fromColumn = Math.max(minEditColumn, fromColumn);\r\n        r[rLen++] = EditOperation.delete(new Range(lineNumber, fromColumn, lineNumber, maxLineColumn));\r\n    }\r\n    return r;\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nexport class CopyLinesCommand {\r\n    constructor(selection, isCopyingDown, noop) {\r\n        this._selection = selection;\r\n        this._isCopyingDown = isCopyingDown;\r\n        this._noop = noop || false;\r\n        this._selectionDirection = 0 /* LTR */;\r\n        this._selectionId = null;\r\n        this._startLineNumberDelta = 0;\r\n        this._endLineNumberDelta = 0;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let s = this._selection;\r\n        this._startLineNumberDelta = 0;\r\n        this._endLineNumberDelta = 0;\r\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\r\n            this._endLineNumberDelta = 1;\r\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\r\n        }\r\n        let sourceLines = [];\r\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\r\n            sourceLines.push(model.getLineContent(i));\r\n        }\r\n        const sourceText = sourceLines.join('\\n');\r\n        if (sourceText === '') {\r\n            // Duplicating empty line\r\n            if (this._isCopyingDown) {\r\n                this._startLineNumberDelta++;\r\n                this._endLineNumberDelta++;\r\n            }\r\n        }\r\n        if (this._noop) {\r\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\r\n        }\r\n        else {\r\n            if (!this._isCopyingDown) {\r\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\r\n            }\r\n            else {\r\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\r\n            }\r\n        }\r\n        this._selectionId = builder.trackSelection(s);\r\n        this._selectionDirection = this._selection.getDirection();\r\n    }\r\n    computeCursorState(model, helper) {\r\n        let result = helper.getTrackedSelection(this._selectionId);\r\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\r\n            let startLineNumber = result.startLineNumber;\r\n            let startColumn = result.startColumn;\r\n            let endLineNumber = result.endLineNumber;\r\n            let endColumn = result.endColumn;\r\n            if (this._startLineNumberDelta !== 0) {\r\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\r\n                startColumn = 1;\r\n            }\r\n            if (this._endLineNumberDelta !== 0) {\r\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\r\n                endColumn = 1;\r\n            }\r\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { ShiftCommand } from '../../common/commands/shiftCommand.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { IndentAction } from '../../common/modes/languageConfiguration.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport * as indentUtils from '../indentation/indentUtils.js';\r\nexport class MoveLinesCommand {\r\n    constructor(selection, isMovingDown, autoIndent) {\r\n        this._selection = selection;\r\n        this._isMovingDown = isMovingDown;\r\n        this._autoIndent = autoIndent;\r\n        this._selectionId = null;\r\n        this._moveEndLineSelectionShrink = false;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let modelLineCount = model.getLineCount();\r\n        if (this._isMovingDown && this._selection.endLineNumber === modelLineCount) {\r\n            this._selectionId = builder.trackSelection(this._selection);\r\n            return;\r\n        }\r\n        if (!this._isMovingDown && this._selection.startLineNumber === 1) {\r\n            this._selectionId = builder.trackSelection(this._selection);\r\n            return;\r\n        }\r\n        this._moveEndPositionDown = false;\r\n        let s = this._selection;\r\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\r\n            this._moveEndPositionDown = true;\r\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\r\n        }\r\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\r\n        let indentConverter = this.buildIndentConverter(tabSize, indentSize, insertSpaces);\r\n        let virtualModel = {\r\n            getLineTokens: (lineNumber) => {\r\n                return model.getLineTokens(lineNumber);\r\n            },\r\n            getLanguageIdentifier: () => {\r\n                return model.getLanguageIdentifier();\r\n            },\r\n            getLanguageIdAtPosition: (lineNumber, column) => {\r\n                return model.getLanguageIdAtPosition(lineNumber, column);\r\n            },\r\n            getLineContent: null,\r\n        };\r\n        if (s.startLineNumber === s.endLineNumber && model.getLineMaxColumn(s.startLineNumber) === 1) {\r\n            // Current line is empty\r\n            let lineNumber = s.startLineNumber;\r\n            let otherLineNumber = (this._isMovingDown ? lineNumber + 1 : lineNumber - 1);\r\n            if (model.getLineMaxColumn(otherLineNumber) === 1) {\r\n                // Other line number is empty too, so no editing is needed\r\n                // Add a no-op to force running by the model\r\n                builder.addEditOperation(new Range(1, 1, 1, 1), null);\r\n            }\r\n            else {\r\n                // Type content from other line number on line number\r\n                builder.addEditOperation(new Range(lineNumber, 1, lineNumber, 1), model.getLineContent(otherLineNumber));\r\n                // Remove content from other line number\r\n                builder.addEditOperation(new Range(otherLineNumber, 1, otherLineNumber, model.getLineMaxColumn(otherLineNumber)), null);\r\n            }\r\n            // Track selection at the other line number\r\n            s = new Selection(otherLineNumber, 1, otherLineNumber, 1);\r\n        }\r\n        else {\r\n            let movingLineNumber;\r\n            let movingLineText;\r\n            if (this._isMovingDown) {\r\n                movingLineNumber = s.endLineNumber + 1;\r\n                movingLineText = model.getLineContent(movingLineNumber);\r\n                // Delete line that needs to be moved\r\n                builder.addEditOperation(new Range(movingLineNumber - 1, model.getLineMaxColumn(movingLineNumber - 1), movingLineNumber, model.getLineMaxColumn(movingLineNumber)), null);\r\n                let insertingText = movingLineText;\r\n                if (this.shouldAutoIndent(model, s)) {\r\n                    let movingLineMatchResult = this.matchEnterRule(model, indentConverter, tabSize, movingLineNumber, s.startLineNumber - 1);\r\n                    // if s.startLineNumber - 1 matches onEnter rule, we still honor that.\r\n                    if (movingLineMatchResult !== null) {\r\n                        let oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\r\n                        let newSpaceCnt = movingLineMatchResult + indentUtils.getSpaceCnt(oldIndentation, tabSize);\r\n                        let newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\r\n                        insertingText = newIndentation + this.trimLeft(movingLineText);\r\n                    }\r\n                    else {\r\n                        // no enter rule matches, let's check indentatin rules then.\r\n                        virtualModel.getLineContent = (lineNumber) => {\r\n                            if (lineNumber === s.startLineNumber) {\r\n                                return model.getLineContent(movingLineNumber);\r\n                            }\r\n                            else {\r\n                                return model.getLineContent(lineNumber);\r\n                            }\r\n                        };\r\n                        let indentOfMovingLine = LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber, indentConverter);\r\n                        if (indentOfMovingLine !== null) {\r\n                            let oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\r\n                            let newSpaceCnt = indentUtils.getSpaceCnt(indentOfMovingLine, tabSize);\r\n                            let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\r\n                            if (newSpaceCnt !== oldSpaceCnt) {\r\n                                let newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\r\n                                insertingText = newIndentation + this.trimLeft(movingLineText);\r\n                            }\r\n                        }\r\n                    }\r\n                    // add edit operations for moving line first to make sure it's executed after we make indentation change\r\n                    // to s.startLineNumber\r\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\r\n                    let ret = this.matchEnterRuleMovingDown(model, indentConverter, tabSize, s.startLineNumber, movingLineNumber, insertingText);\r\n                    // check if the line being moved before matches onEnter rules, if so let's adjust the indentation by onEnter rules.\r\n                    if (ret !== null) {\r\n                        if (ret !== 0) {\r\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // it doesn't match onEnter rules, let's check indentation rules then.\r\n                        virtualModel.getLineContent = (lineNumber) => {\r\n                            if (lineNumber === s.startLineNumber) {\r\n                                return insertingText;\r\n                            }\r\n                            else if (lineNumber >= s.startLineNumber + 1 && lineNumber <= s.endLineNumber + 1) {\r\n                                return model.getLineContent(lineNumber - 1);\r\n                            }\r\n                            else {\r\n                                return model.getLineContent(lineNumber);\r\n                            }\r\n                        };\r\n                        let newIndentatOfMovingBlock = LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber + 1, indentConverter);\r\n                        if (newIndentatOfMovingBlock !== null) {\r\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\r\n                            const newSpaceCnt = indentUtils.getSpaceCnt(newIndentatOfMovingBlock, tabSize);\r\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\r\n                            if (newSpaceCnt !== oldSpaceCnt) {\r\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\r\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    // Insert line that needs to be moved before\r\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\r\n                }\r\n            }\r\n            else {\r\n                movingLineNumber = s.startLineNumber - 1;\r\n                movingLineText = model.getLineContent(movingLineNumber);\r\n                // Delete line that needs to be moved\r\n                builder.addEditOperation(new Range(movingLineNumber, 1, movingLineNumber + 1, 1), null);\r\n                // Insert line that needs to be moved after\r\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + movingLineText);\r\n                if (this.shouldAutoIndent(model, s)) {\r\n                    virtualModel.getLineContent = (lineNumber) => {\r\n                        if (lineNumber === movingLineNumber) {\r\n                            return model.getLineContent(s.startLineNumber);\r\n                        }\r\n                        else {\r\n                            return model.getLineContent(lineNumber);\r\n                        }\r\n                    };\r\n                    let ret = this.matchEnterRule(model, indentConverter, tabSize, s.startLineNumber, s.startLineNumber - 2);\r\n                    // check if s.startLineNumber - 2 matches onEnter rules, if so adjust the moving block by onEnter rules.\r\n                    if (ret !== null) {\r\n                        if (ret !== 0) {\r\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // it doesn't match any onEnter rule, let's check indentation rules then.\r\n                        let indentOfFirstLine = LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(s.startLineNumber, 1), movingLineNumber, indentConverter);\r\n                        if (indentOfFirstLine !== null) {\r\n                            // adjust the indentation of the moving block\r\n                            let oldIndent = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\r\n                            let newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\r\n                            let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndent, tabSize);\r\n                            if (newSpaceCnt !== oldSpaceCnt) {\r\n                                let spaceCntOffset = newSpaceCnt - oldSpaceCnt;\r\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._selectionId = builder.trackSelection(s);\r\n    }\r\n    buildIndentConverter(tabSize, indentSize, insertSpaces) {\r\n        return {\r\n            shiftIndent: (indentation) => {\r\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\r\n            },\r\n            unshiftIndent: (indentation) => {\r\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\r\n            }\r\n        };\r\n    }\r\n    parseEnterResult(model, indentConverter, tabSize, line, enter) {\r\n        if (enter) {\r\n            let enterPrefix = enter.indentation;\r\n            if (enter.indentAction === IndentAction.None) {\r\n                enterPrefix = enter.indentation + enter.appendText;\r\n            }\r\n            else if (enter.indentAction === IndentAction.Indent) {\r\n                enterPrefix = enter.indentation + enter.appendText;\r\n            }\r\n            else if (enter.indentAction === IndentAction.IndentOutdent) {\r\n                enterPrefix = enter.indentation;\r\n            }\r\n            else if (enter.indentAction === IndentAction.Outdent) {\r\n                enterPrefix = indentConverter.unshiftIndent(enter.indentation) + enter.appendText;\r\n            }\r\n            let movingLineText = model.getLineContent(line);\r\n            if (this.trimLeft(movingLineText).indexOf(this.trimLeft(enterPrefix)) >= 0) {\r\n                let oldIndentation = strings.getLeadingWhitespace(model.getLineContent(line));\r\n                let newIndentation = strings.getLeadingWhitespace(enterPrefix);\r\n                let indentMetadataOfMovelingLine = LanguageConfigurationRegistry.getIndentMetadata(model, line);\r\n                if (indentMetadataOfMovelingLine !== null && indentMetadataOfMovelingLine & 2 /* DECREASE_MASK */) {\r\n                    newIndentation = indentConverter.unshiftIndent(newIndentation);\r\n                }\r\n                let newSpaceCnt = indentUtils.getSpaceCnt(newIndentation, tabSize);\r\n                let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\r\n                return newSpaceCnt - oldSpaceCnt;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     *\r\n     * @param model\r\n     * @param indentConverter\r\n     * @param tabSize\r\n     * @param line the line moving down\r\n     * @param futureAboveLineNumber the line which will be at the `line` position\r\n     * @param futureAboveLineText\r\n     */\r\n    matchEnterRuleMovingDown(model, indentConverter, tabSize, line, futureAboveLineNumber, futureAboveLineText) {\r\n        if (strings.lastNonWhitespaceIndex(futureAboveLineText) >= 0) {\r\n            // break\r\n            let maxColumn = model.getLineMaxColumn(futureAboveLineNumber);\r\n            let enter = LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new Range(futureAboveLineNumber, maxColumn, futureAboveLineNumber, maxColumn));\r\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\r\n        }\r\n        else {\r\n            // go upwards, starting from `line - 1`\r\n            let validPrecedingLine = line - 1;\r\n            while (validPrecedingLine >= 1) {\r\n                let lineContent = model.getLineContent(validPrecedingLine);\r\n                let nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\r\n                if (nonWhitespaceIdx >= 0) {\r\n                    break;\r\n                }\r\n                validPrecedingLine--;\r\n            }\r\n            if (validPrecedingLine < 1 || line > model.getLineCount()) {\r\n                return null;\r\n            }\r\n            let maxColumn = model.getLineMaxColumn(validPrecedingLine);\r\n            let enter = LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn));\r\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\r\n        }\r\n    }\r\n    matchEnterRule(model, indentConverter, tabSize, line, oneLineAbove, previousLineText) {\r\n        let validPrecedingLine = oneLineAbove;\r\n        while (validPrecedingLine >= 1) {\r\n            // ship empty lines as empty lines just inherit indentation\r\n            let lineContent;\r\n            if (validPrecedingLine === oneLineAbove && previousLineText !== undefined) {\r\n                lineContent = previousLineText;\r\n            }\r\n            else {\r\n                lineContent = model.getLineContent(validPrecedingLine);\r\n            }\r\n            let nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\r\n            if (nonWhitespaceIdx >= 0) {\r\n                break;\r\n            }\r\n            validPrecedingLine--;\r\n        }\r\n        if (validPrecedingLine < 1 || line > model.getLineCount()) {\r\n            return null;\r\n        }\r\n        let maxColumn = model.getLineMaxColumn(validPrecedingLine);\r\n        let enter = LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn));\r\n        return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\r\n    }\r\n    trimLeft(str) {\r\n        return str.replace(/^\\s+/, '');\r\n    }\r\n    shouldAutoIndent(model, selection) {\r\n        if (this._autoIndent < 4 /* Full */) {\r\n            return false;\r\n        }\r\n        // if it's not easy to tokenize, we stop auto indent.\r\n        if (!model.isCheapToTokenize(selection.startLineNumber)) {\r\n            return false;\r\n        }\r\n        let languageAtSelectionStart = model.getLanguageIdAtPosition(selection.startLineNumber, 1);\r\n        let languageAtSelectionEnd = model.getLanguageIdAtPosition(selection.endLineNumber, 1);\r\n        if (languageAtSelectionStart !== languageAtSelectionEnd) {\r\n            return false;\r\n        }\r\n        if (LanguageConfigurationRegistry.getIndentRulesSupport(languageAtSelectionStart) === null) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, offset) {\r\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\r\n            let lineContent = model.getLineContent(i);\r\n            let originalIndent = strings.getLeadingWhitespace(lineContent);\r\n            let originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\r\n            let newSpacesCnt = originalSpacesCnt + offset;\r\n            let newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\r\n            if (newIndent !== originalIndent) {\r\n                builder.addEditOperation(new Range(i, 1, i, originalIndent.length + 1), newIndent);\r\n                if (i === s.endLineNumber && s.endColumn <= originalIndent.length + 1 && newIndent === '') {\r\n                    // as users select part of the original indent white spaces\r\n                    // when we adjust the indentation of endLine, we should adjust the cursor position as well.\r\n                    this._moveEndLineSelectionShrink = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    computeCursorState(model, helper) {\r\n        let result = helper.getTrackedSelection(this._selectionId);\r\n        if (this._moveEndPositionDown) {\r\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\r\n        }\r\n        if (this._moveEndLineSelectionShrink && result.startLineNumber < result.endLineNumber) {\r\n            result = result.setEndPosition(result.endLineNumber, 2);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nexport class SortLinesCommand {\r\n    constructor(selection, descending) {\r\n        this.selection = selection;\r\n        this.descending = descending;\r\n        this.selectionId = null;\r\n    }\r\n    static getCollator() {\r\n        if (!SortLinesCommand._COLLATOR) {\r\n            SortLinesCommand._COLLATOR = new Intl.Collator();\r\n        }\r\n        return SortLinesCommand._COLLATOR;\r\n    }\r\n    getEditOperations(model, builder) {\r\n        let op = sortLines(model, this.selection, this.descending);\r\n        if (op) {\r\n            builder.addEditOperation(op.range, op.text);\r\n        }\r\n        this.selectionId = builder.trackSelection(this.selection);\r\n    }\r\n    computeCursorState(model, helper) {\r\n        return helper.getTrackedSelection(this.selectionId);\r\n    }\r\n    static canRun(model, selection, descending) {\r\n        if (model === null) {\r\n            return false;\r\n        }\r\n        let data = getSortData(model, selection, descending);\r\n        if (!data) {\r\n            return false;\r\n        }\r\n        for (let i = 0, len = data.before.length; i < len; i++) {\r\n            if (data.before[i] !== data.after[i]) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\nSortLinesCommand._COLLATOR = null;\r\nfunction getSortData(model, selection, descending) {\r\n    let startLineNumber = selection.startLineNumber;\r\n    let endLineNumber = selection.endLineNumber;\r\n    if (selection.endColumn === 1) {\r\n        endLineNumber--;\r\n    }\r\n    // Nothing to sort if user didn't select anything.\r\n    if (startLineNumber >= endLineNumber) {\r\n        return null;\r\n    }\r\n    let linesToSort = [];\r\n    // Get the contents of the selection to be sorted.\r\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\r\n        linesToSort.push(model.getLineContent(lineNumber));\r\n    }\r\n    let sorted = linesToSort.slice(0);\r\n    sorted.sort(SortLinesCommand.getCollator().compare);\r\n    // If descending, reverse the order.\r\n    if (descending === true) {\r\n        sorted = sorted.reverse();\r\n    }\r\n    return {\r\n        startLineNumber: startLineNumber,\r\n        endLineNumber: endLineNumber,\r\n        before: linesToSort,\r\n        after: sorted\r\n    };\r\n}\r\n/**\r\n * Generate commands for sorting lines on a model.\r\n */\r\nfunction sortLines(model, selection, descending) {\r\n    let data = getSortData(model, selection, descending);\r\n    if (!data) {\r\n        return null;\r\n    }\r\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { CoreEditingCommands } from '../../browser/controller/coreCommands.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../common/commands/replaceCommand.js';\r\nimport { TrimTrailingWhitespaceCommand } from '../../common/commands/trimTrailingWhitespaceCommand.js';\r\nimport { TypeOperations } from '../../common/controller/cursorTypeOperations.js';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { CopyLinesCommand } from './copyLinesCommand.js';\r\nimport { MoveLinesCommand } from './moveLinesCommand.js';\r\nimport { SortLinesCommand } from './sortLinesCommand.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\n// copy lines\r\nclass AbstractCopyLinesAction extends EditorAction {\r\n    constructor(down, opts) {\r\n        super(opts);\r\n        this.down = down;\r\n    }\r\n    run(_accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignore: false }));\r\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\r\n        // Remove selections that would result in copying the same line\r\n        let prev = selections[0];\r\n        for (let i = 1; i < selections.length; i++) {\r\n            const curr = selections[i];\r\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\r\n                // these two selections would copy the same line\r\n                if (prev.index < curr.index) {\r\n                    // prev wins\r\n                    curr.ignore = true;\r\n                }\r\n                else {\r\n                    // curr wins\r\n                    prev.ignore = true;\r\n                    prev = curr;\r\n                }\r\n            }\r\n        }\r\n        const commands = [];\r\n        for (const selection of selections) {\r\n            commands.push(new CopyLinesCommand(selection.selection, this.down, selection.ignore));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nclass CopyLinesUpAction extends AbstractCopyLinesAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.copyLinesUpAction',\r\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\r\n            alias: 'Copy Line Up',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n}\r\nclass CopyLinesDownAction extends AbstractCopyLinesAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.copyLinesDownAction',\r\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\r\n            alias: 'Copy Line Down',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */,\r\n                linux: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class DuplicateSelectionAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.duplicateSelection',\r\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\r\n            alias: 'Duplicate Selection',\r\n            precondition: EditorContextKeys.writable,\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\r\n                order: 5\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const commands = [];\r\n        const selections = editor.getSelections();\r\n        const model = editor.getModel();\r\n        for (const selection of selections) {\r\n            if (selection.isEmpty()) {\r\n                commands.push(new CopyLinesCommand(selection, true));\r\n            }\r\n            else {\r\n                const insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\r\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\r\n            }\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\n// move lines\r\nclass AbstractMoveLinesAction extends EditorAction {\r\n    constructor(down, opts) {\r\n        super(opts);\r\n        this.down = down;\r\n    }\r\n    run(_accessor, editor) {\r\n        let commands = [];\r\n        let selections = editor.getSelections() || [];\r\n        const autoIndent = editor.getOption(9 /* autoIndent */);\r\n        for (const selection of selections) {\r\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent));\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nclass MoveLinesUpAction extends AbstractMoveLinesAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.moveLinesUpAction',\r\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\r\n            alias: 'Move Line Up',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 16 /* UpArrow */,\r\n                linux: { primary: 512 /* Alt */ | 16 /* UpArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n}\r\nclass MoveLinesDownAction extends AbstractMoveLinesAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.moveLinesDownAction',\r\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\r\n            alias: 'Move Line Down',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 512 /* Alt */ | 18 /* DownArrow */,\r\n                linux: { primary: 512 /* Alt */ | 18 /* DownArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '2_line',\r\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\r\n                order: 4\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class AbstractSortLinesAction extends EditorAction {\r\n    constructor(descending, opts) {\r\n        super(opts);\r\n        this.descending = descending;\r\n    }\r\n    run(_accessor, editor) {\r\n        const selections = editor.getSelections() || [];\r\n        for (const selection of selections) {\r\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\r\n                return;\r\n            }\r\n        }\r\n        let commands = [];\r\n        for (let i = 0, len = selections.length; i < len; i++) {\r\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class SortLinesAscendingAction extends AbstractSortLinesAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.sortLinesAscending',\r\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\r\n            alias: 'Sort Lines Ascending',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class SortLinesDescendingAction extends AbstractSortLinesAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.sortLinesDescending',\r\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\r\n            alias: 'Sort Lines Descending',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class TrimTrailingWhitespaceAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: TrimTrailingWhitespaceAction.ID,\r\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\r\n            alias: 'Trim Trailing Whitespace',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 54 /* KEY_X */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor, args) {\r\n        let cursors = [];\r\n        if (args.reason === 'auto-save') {\r\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\r\n            // It is very convenient for the editor config extension to invoke this action.\r\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\r\n            cursors = (editor.getSelections() || []).map(s => new Position(s.positionLineNumber, s.positionColumn));\r\n        }\r\n        let selection = editor.getSelection();\r\n        if (selection === null) {\r\n            return;\r\n        }\r\n        let command = new TrimTrailingWhitespaceCommand(selection, cursors);\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, [command]);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nTrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\r\nexport class DeleteLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.deleteLines',\r\n            label: nls.localize('lines.delete', \"Delete Line\"),\r\n            alias: 'Delete Line',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 41 /* KEY_K */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        let ops = this._getLinesToRemove(editor);\r\n        let model = editor.getModel();\r\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\r\n            // Model is empty\r\n            return;\r\n        }\r\n        let linesDeleted = 0;\r\n        let edits = [];\r\n        let cursorState = [];\r\n        for (let i = 0, len = ops.length; i < len; i++) {\r\n            const op = ops[i];\r\n            let startLineNumber = op.startLineNumber;\r\n            let endLineNumber = op.endLineNumber;\r\n            let startColumn = 1;\r\n            let endColumn = model.getLineMaxColumn(endLineNumber);\r\n            if (endLineNumber < model.getLineCount()) {\r\n                endLineNumber += 1;\r\n                endColumn = 1;\r\n            }\r\n            else if (startLineNumber > 1) {\r\n                startLineNumber -= 1;\r\n                startColumn = model.getLineMaxColumn(startLineNumber);\r\n            }\r\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\r\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\r\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, edits, cursorState);\r\n        editor.pushUndoStop();\r\n    }\r\n    _getLinesToRemove(editor) {\r\n        // Construct delete operations\r\n        let operations = editor.getSelections().map((s) => {\r\n            let endLineNumber = s.endLineNumber;\r\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\r\n                endLineNumber -= 1;\r\n            }\r\n            return {\r\n                startLineNumber: s.startLineNumber,\r\n                selectionStartColumn: s.selectionStartColumn,\r\n                endLineNumber: endLineNumber,\r\n                positionColumn: s.positionColumn\r\n            };\r\n        });\r\n        // Sort delete operations\r\n        operations.sort((a, b) => {\r\n            if (a.startLineNumber === b.startLineNumber) {\r\n                return a.endLineNumber - b.endLineNumber;\r\n            }\r\n            return a.startLineNumber - b.startLineNumber;\r\n        });\r\n        // Merge delete operations which are adjacent or overlapping\r\n        let mergedOperations = [];\r\n        let previousOperation = operations[0];\r\n        for (let i = 1; i < operations.length; i++) {\r\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\r\n                // Merge current operations into the previous one\r\n                previousOperation.endLineNumber = operations[i].endLineNumber;\r\n            }\r\n            else {\r\n                // Push previous operation\r\n                mergedOperations.push(previousOperation);\r\n                previousOperation = operations[i];\r\n            }\r\n        }\r\n        // Push the last operation\r\n        mergedOperations.push(previousOperation);\r\n        return mergedOperations;\r\n    }\r\n}\r\nexport class IndentLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.indentLines',\r\n            label: nls.localize('lines.indent', \"Indent Line\"),\r\n            alias: 'Indent Line',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 89 /* US_CLOSE_SQUARE_BRACKET */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        const viewModel = editor._getViewModel();\r\n        if (!viewModel) {\r\n            return;\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, TypeOperations.indent(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nclass OutdentLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.outdentLines',\r\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\r\n            alias: 'Outdent Line',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 87 /* US_OPEN_SQUARE_BRACKET */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\r\n    }\r\n}\r\nexport class InsertLineBeforeAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.insertLineBefore',\r\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\r\n            alias: 'Insert Line Above',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 3 /* Enter */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        const viewModel = editor._getViewModel();\r\n        if (!viewModel) {\r\n            return;\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\r\n    }\r\n}\r\nexport class InsertLineAfterAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.insertLineAfter',\r\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\r\n            alias: 'Insert Line Below',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        const viewModel = editor._getViewModel();\r\n        if (!viewModel) {\r\n            return;\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\r\n    }\r\n}\r\nexport class AbstractDeleteAllToBoundaryAction extends EditorAction {\r\n    run(_accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const primaryCursor = editor.getSelection();\r\n        let rangesToDelete = this._getRangesToDelete(editor);\r\n        // merge overlapping selections\r\n        let effectiveRanges = [];\r\n        for (let i = 0, count = rangesToDelete.length - 1; i < count; i++) {\r\n            let range = rangesToDelete[i];\r\n            let nextRange = rangesToDelete[i + 1];\r\n            if (Range.intersectRanges(range, nextRange) === null) {\r\n                effectiveRanges.push(range);\r\n            }\r\n            else {\r\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\r\n            }\r\n        }\r\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\r\n        let endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\r\n        let edits = effectiveRanges.map(range => {\r\n            return EditOperation.replace(range, '');\r\n        });\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, edits, endCursorState);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class DeleteAllLeftAction extends AbstractDeleteAllToBoundaryAction {\r\n    constructor() {\r\n        super({\r\n            id: 'deleteAllLeft',\r\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\r\n            alias: 'Delete All Left',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 2048 /* CtrlCmd */ | 1 /* Backspace */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _getEndCursorState(primaryCursor, rangesToDelete) {\r\n        let endPrimaryCursor = null;\r\n        let endCursorState = [];\r\n        let deletedLines = 0;\r\n        rangesToDelete.forEach(range => {\r\n            let endCursor;\r\n            if (range.endColumn === 1 && deletedLines > 0) {\r\n                let newStartLine = range.startLineNumber - deletedLines;\r\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\r\n            }\r\n            else {\r\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\r\n            }\r\n            deletedLines += range.endLineNumber - range.startLineNumber;\r\n            if (range.intersectRanges(primaryCursor)) {\r\n                endPrimaryCursor = endCursor;\r\n            }\r\n            else {\r\n                endCursorState.push(endCursor);\r\n            }\r\n        });\r\n        if (endPrimaryCursor) {\r\n            endCursorState.unshift(endPrimaryCursor);\r\n        }\r\n        return endCursorState;\r\n    }\r\n    _getRangesToDelete(editor) {\r\n        let selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return [];\r\n        }\r\n        let rangesToDelete = selections;\r\n        let model = editor.getModel();\r\n        if (model === null) {\r\n            return [];\r\n        }\r\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\r\n        rangesToDelete = rangesToDelete.map(selection => {\r\n            if (selection.isEmpty()) {\r\n                if (selection.startColumn === 1) {\r\n                    let deleteFromLine = Math.max(1, selection.startLineNumber - 1);\r\n                    let deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\r\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\r\n                }\r\n                else {\r\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\r\n                }\r\n            }\r\n            else {\r\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\r\n            }\r\n        });\r\n        return rangesToDelete;\r\n    }\r\n}\r\nexport class DeleteAllRightAction extends AbstractDeleteAllToBoundaryAction {\r\n    constructor() {\r\n        super({\r\n            id: 'deleteAllRight',\r\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\r\n            alias: 'Delete All Right',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 41 /* KEY_K */, secondary: [2048 /* CtrlCmd */ | 20 /* Delete */] },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _getEndCursorState(primaryCursor, rangesToDelete) {\r\n        let endPrimaryCursor = null;\r\n        let endCursorState = [];\r\n        for (let i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\r\n            let range = rangesToDelete[i];\r\n            let endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\r\n            if (range.intersectRanges(primaryCursor)) {\r\n                endPrimaryCursor = endCursor;\r\n            }\r\n            else {\r\n                endCursorState.push(endCursor);\r\n            }\r\n        }\r\n        if (endPrimaryCursor) {\r\n            endCursorState.unshift(endPrimaryCursor);\r\n        }\r\n        return endCursorState;\r\n    }\r\n    _getRangesToDelete(editor) {\r\n        let model = editor.getModel();\r\n        if (model === null) {\r\n            return [];\r\n        }\r\n        let selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return [];\r\n        }\r\n        let rangesToDelete = selections.map((sel) => {\r\n            if (sel.isEmpty()) {\r\n                const maxColumn = model.getLineMaxColumn(sel.startLineNumber);\r\n                if (sel.startColumn === maxColumn) {\r\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\r\n                }\r\n                else {\r\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\r\n                }\r\n            }\r\n            return sel;\r\n        });\r\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\r\n        return rangesToDelete;\r\n    }\r\n}\r\nexport class JoinLinesAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.joinLines',\r\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\r\n            alias: 'Join Lines',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 40 /* KEY_J */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        let selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        let primaryCursor = editor.getSelection();\r\n        if (primaryCursor === null) {\r\n            return;\r\n        }\r\n        selections.sort(Range.compareRangesUsingStarts);\r\n        let reducedSelections = [];\r\n        let lastSelection = selections.reduce((previousValue, currentValue) => {\r\n            if (previousValue.isEmpty()) {\r\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\r\n                    if (primaryCursor.equalsSelection(previousValue)) {\r\n                        primaryCursor = currentValue;\r\n                    }\r\n                    return currentValue;\r\n                }\r\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\r\n                    reducedSelections.push(previousValue);\r\n                    return currentValue;\r\n                }\r\n                else {\r\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\r\n                }\r\n            }\r\n            else {\r\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\r\n                    reducedSelections.push(previousValue);\r\n                    return currentValue;\r\n                }\r\n                else {\r\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\r\n                }\r\n            }\r\n        });\r\n        reducedSelections.push(lastSelection);\r\n        let model = editor.getModel();\r\n        if (model === null) {\r\n            return;\r\n        }\r\n        let edits = [];\r\n        let endCursorState = [];\r\n        let endPrimaryCursor = primaryCursor;\r\n        let lineOffset = 0;\r\n        for (let i = 0, len = reducedSelections.length; i < len; i++) {\r\n            let selection = reducedSelections[i];\r\n            let startLineNumber = selection.startLineNumber;\r\n            let startColumn = 1;\r\n            let columnDeltaOffset = 0;\r\n            let endLineNumber, endColumn;\r\n            let selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\r\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\r\n                let position = selection.getStartPosition();\r\n                if (position.lineNumber < model.getLineCount()) {\r\n                    endLineNumber = startLineNumber + 1;\r\n                    endColumn = model.getLineMaxColumn(endLineNumber);\r\n                }\r\n                else {\r\n                    endLineNumber = position.lineNumber;\r\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\r\n                }\r\n            }\r\n            else {\r\n                endLineNumber = selection.endLineNumber;\r\n                endColumn = model.getLineMaxColumn(endLineNumber);\r\n            }\r\n            let trimmedLinesContent = model.getLineContent(startLineNumber);\r\n            for (let i = startLineNumber + 1; i <= endLineNumber; i++) {\r\n                let lineText = model.getLineContent(i);\r\n                let firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i);\r\n                if (firstNonWhitespaceIdx >= 1) {\r\n                    let insertSpace = true;\r\n                    if (trimmedLinesContent === '') {\r\n                        insertSpace = false;\r\n                    }\r\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\r\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\r\n                        insertSpace = false;\r\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\r\n                    }\r\n                    let lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\r\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\r\n                    if (insertSpace) {\r\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\r\n                    }\r\n                    else {\r\n                        columnDeltaOffset = lineTextWithoutIndent.length;\r\n                    }\r\n                }\r\n                else {\r\n                    columnDeltaOffset = 0;\r\n                }\r\n            }\r\n            let deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\r\n            if (!deleteSelection.isEmpty()) {\r\n                let resultSelection;\r\n                if (selection.isEmpty()) {\r\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\r\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\r\n                }\r\n                else {\r\n                    if (selection.startLineNumber === selection.endLineNumber) {\r\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\r\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\r\n                    }\r\n                    else {\r\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\r\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\r\n                    }\r\n                }\r\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\r\n                    endPrimaryCursor = resultSelection;\r\n                }\r\n                else {\r\n                    endCursorState.push(resultSelection);\r\n                }\r\n            }\r\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\r\n        }\r\n        endCursorState.unshift(endPrimaryCursor);\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, edits, endCursorState);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class TransposeAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transpose',\r\n            label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\r\n            alias: 'Transpose characters around the cursor',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    run(_accessor, editor) {\r\n        let selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        let model = editor.getModel();\r\n        if (model === null) {\r\n            return;\r\n        }\r\n        let commands = [];\r\n        for (let i = 0, len = selections.length; i < len; i++) {\r\n            let selection = selections[i];\r\n            if (!selection.isEmpty()) {\r\n                continue;\r\n            }\r\n            let cursor = selection.getStartPosition();\r\n            let maxColumn = model.getLineMaxColumn(cursor.lineNumber);\r\n            if (cursor.column >= maxColumn) {\r\n                if (cursor.lineNumber === model.getLineCount()) {\r\n                    continue;\r\n                }\r\n                // The cursor is at the end of current line and current line is not empty\r\n                // then we transpose the character before the cursor and the line break if there is any following line.\r\n                let deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\r\n                let chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\r\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\r\n            }\r\n            else {\r\n                let deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\r\n                let chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\r\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\r\n            }\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class AbstractCaseAction extends EditorAction {\r\n    run(_accessor, editor) {\r\n        const selections = editor.getSelections();\r\n        if (selections === null) {\r\n            return;\r\n        }\r\n        const model = editor.getModel();\r\n        if (model === null) {\r\n            return;\r\n        }\r\n        const wordSeparators = editor.getOption(114 /* wordSeparators */);\r\n        const textEdits = [];\r\n        for (const selection of selections) {\r\n            if (selection.isEmpty()) {\r\n                const cursor = selection.getStartPosition();\r\n                const word = editor.getConfiguredWordAtPosition(cursor);\r\n                if (!word) {\r\n                    continue;\r\n                }\r\n                const wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\r\n                const text = model.getValueInRange(wordRange);\r\n                textEdits.push(EditOperation.replace(wordRange, this._modifyText(text, wordSeparators)));\r\n            }\r\n            else {\r\n                const text = model.getValueInRange(selection);\r\n                textEdits.push(EditOperation.replace(selection, this._modifyText(text, wordSeparators)));\r\n            }\r\n        }\r\n        editor.pushUndoStop();\r\n        editor.executeEdits(this.id, textEdits);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class UpperCaseAction extends AbstractCaseAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transformToUppercase',\r\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\r\n            alias: 'Transform to Uppercase',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    _modifyText(text, wordSeparators) {\r\n        return text.toLocaleUpperCase();\r\n    }\r\n}\r\nexport class LowerCaseAction extends AbstractCaseAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transformToLowercase',\r\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\r\n            alias: 'Transform to Lowercase',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    _modifyText(text, wordSeparators) {\r\n        return text.toLocaleLowerCase();\r\n    }\r\n}\r\nexport class TitleCaseAction extends AbstractCaseAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transformToTitlecase',\r\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\r\n            alias: 'Transform to Title Case',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    _modifyText(text, wordSeparators) {\r\n        const separators = '\\r\\n\\t ' + wordSeparators;\r\n        const excludedChars = separators.split('');\r\n        let title = '';\r\n        let startUpperCase = true;\r\n        for (let i = 0; i < text.length; i++) {\r\n            let currentChar = text[i];\r\n            if (excludedChars.indexOf(currentChar) >= 0) {\r\n                startUpperCase = true;\r\n                title += currentChar;\r\n            }\r\n            else if (startUpperCase) {\r\n                startUpperCase = false;\r\n                title += currentChar.toLocaleUpperCase();\r\n            }\r\n            else {\r\n                title += currentChar.toLocaleLowerCase();\r\n            }\r\n        }\r\n        return title;\r\n    }\r\n}\r\nclass BackwardsCompatibleRegExp {\r\n    constructor(_pattern, _flags) {\r\n        this._pattern = _pattern;\r\n        this._flags = _flags;\r\n        this._actual = null;\r\n        this._evaluated = false;\r\n    }\r\n    get() {\r\n        if (!this._evaluated) {\r\n            this._evaluated = true;\r\n            try {\r\n                this._actual = new RegExp(this._pattern, this._flags);\r\n            }\r\n            catch (err) {\r\n                // this browser does not support this regular expression\r\n            }\r\n        }\r\n        return this._actual;\r\n    }\r\n    isSupported() {\r\n        return (this.get() !== null);\r\n    }\r\n}\r\nexport class SnakeCaseAction extends AbstractCaseAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.transformToSnakecase',\r\n            label: nls.localize('editor.transformToSnakecase', \"Transform to Snake Case\"),\r\n            alias: 'Transform to Snake Case',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n    _modifyText(text, wordSeparators) {\r\n        const regExp1 = SnakeCaseAction.regExp1.get();\r\n        const regExp2 = SnakeCaseAction.regExp2.get();\r\n        if (!regExp1 || !regExp2) {\r\n            // cannot support this\r\n            return text;\r\n        }\r\n        return (text\r\n            .replace(regExp1, '$1_$2')\r\n            .replace(regExp2, '$1_$2$3')\r\n            .toLocaleLowerCase());\r\n    }\r\n}\r\nSnakeCaseAction.regExp1 = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\r\nSnakeCaseAction.regExp2 = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu})(\\\\p{Ll})', 'gmu');\r\nregisterEditorAction(CopyLinesUpAction);\r\nregisterEditorAction(CopyLinesDownAction);\r\nregisterEditorAction(DuplicateSelectionAction);\r\nregisterEditorAction(MoveLinesUpAction);\r\nregisterEditorAction(MoveLinesDownAction);\r\nregisterEditorAction(SortLinesAscendingAction);\r\nregisterEditorAction(SortLinesDescendingAction);\r\nregisterEditorAction(TrimTrailingWhitespaceAction);\r\nregisterEditorAction(DeleteLinesAction);\r\nregisterEditorAction(IndentLinesAction);\r\nregisterEditorAction(OutdentLinesAction);\r\nregisterEditorAction(InsertLineBeforeAction);\r\nregisterEditorAction(InsertLineAfterAction);\r\nregisterEditorAction(DeleteAllLeftAction);\r\nregisterEditorAction(DeleteAllRightAction);\r\nregisterEditorAction(JoinLinesAction);\r\nregisterEditorAction(TransposeAction);\r\nregisterEditorAction(UpperCaseAction);\r\nregisterEditorAction(LowerCaseAction);\r\nregisterEditorAction(TitleCaseAction);\r\nif (SnakeCaseAction.regExp1.isSupported() && SnakeCaseAction.regExp2.isSupported()) {\r\n    registerEditorAction(SnakeCaseAction);\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { registerEditorContribution, registerModelAndPositionCommand, EditorAction, EditorCommand, registerEditorAction, registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { LinkedEditingRangeProviderRegistry } from '../../common/modes.js';\r\nimport { first, createCancelablePromise, Delayer } from '../../../base/common/async.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { ContextKeyExpr, RawContextKey, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { isPromiseCanceledError, onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { registerColor } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { Color } from '../../../base/common/color.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nexport const CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE = new RawContextKey('LinkedEditingInputVisible', false);\r\nconst DECORATION_CLASS_NAME = 'linked-editing-decoration';\r\nlet LinkedEditingContribution = class LinkedEditingContribution extends Disposable {\r\n    constructor(editor, contextKeyService) {\r\n        super();\r\n        this._debounceDuration = 200;\r\n        this._localToDispose = this._register(new DisposableStore());\r\n        this._editor = editor;\r\n        this._enabled = false;\r\n        this._visibleContextKey = CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\r\n        this._currentDecorations = [];\r\n        this._languageWordPattern = null;\r\n        this._currentWordPattern = null;\r\n        this._ignoreChangeEvent = false;\r\n        this._localToDispose = this._register(new DisposableStore());\r\n        this._rangeUpdateTriggerPromise = null;\r\n        this._rangeSyncTriggerPromise = null;\r\n        this._currentRequest = null;\r\n        this._currentRequestPosition = null;\r\n        this._currentRequestModelVersion = null;\r\n        this._register(this._editor.onDidChangeModel(() => this.reinitialize(true)));\r\n        this._register(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(59 /* linkedEditing */) || e.hasChanged(79 /* renameOnType */)) {\r\n                this.reinitialize(false);\r\n            }\r\n        }));\r\n        this._register(LinkedEditingRangeProviderRegistry.onDidChange(() => this.reinitialize(false)));\r\n        this._register(this._editor.onDidChangeModelLanguage(() => this.reinitialize(true)));\r\n        this.reinitialize(true);\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(LinkedEditingContribution.ID);\r\n    }\r\n    reinitialize(forceRefresh) {\r\n        const model = this._editor.getModel();\r\n        const isEnabled = model !== null && (this._editor.getOption(59 /* linkedEditing */) || this._editor.getOption(79 /* renameOnType */)) && LinkedEditingRangeProviderRegistry.has(model);\r\n        if (isEnabled === this._enabled && !forceRefresh) {\r\n            return;\r\n        }\r\n        this._enabled = isEnabled;\r\n        this.clearRanges();\r\n        this._localToDispose.clear();\r\n        if (!isEnabled || model === null) {\r\n            return;\r\n        }\r\n        this._languageWordPattern = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\r\n        this._localToDispose.add(model.onDidChangeLanguageConfiguration(() => {\r\n            this._languageWordPattern = LanguageConfigurationRegistry.getWordDefinition(model.getLanguageIdentifier().id);\r\n        }));\r\n        const rangeUpdateScheduler = new Delayer(this._debounceDuration);\r\n        const triggerRangeUpdate = () => {\r\n            this._rangeUpdateTriggerPromise = rangeUpdateScheduler.trigger(() => this.updateRanges(), this._debounceDuration);\r\n        };\r\n        const rangeSyncScheduler = new Delayer(0);\r\n        const triggerRangeSync = (decorations) => {\r\n            this._rangeSyncTriggerPromise = rangeSyncScheduler.trigger(() => this._syncRanges(decorations));\r\n        };\r\n        this._localToDispose.add(this._editor.onDidChangeCursorPosition(() => {\r\n            triggerRangeUpdate();\r\n        }));\r\n        this._localToDispose.add(this._editor.onDidChangeModelContent((e) => {\r\n            if (!this._ignoreChangeEvent) {\r\n                if (this._currentDecorations.length > 0) {\r\n                    const referenceRange = model.getDecorationRange(this._currentDecorations[0]);\r\n                    if (referenceRange && e.changes.every(c => referenceRange.intersectRanges(c.range))) {\r\n                        triggerRangeSync(this._currentDecorations);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            triggerRangeUpdate();\r\n        }));\r\n        this._localToDispose.add({\r\n            dispose: () => {\r\n                rangeUpdateScheduler.cancel();\r\n                rangeSyncScheduler.cancel();\r\n            }\r\n        });\r\n        this.updateRanges();\r\n    }\r\n    _syncRanges(decorations) {\r\n        // dalayed invocation, make sure we're still on\r\n        if (!this._editor.hasModel() || decorations !== this._currentDecorations || decorations.length === 0) {\r\n            // nothing to do\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        const referenceRange = model.getDecorationRange(decorations[0]);\r\n        if (!referenceRange || referenceRange.startLineNumber !== referenceRange.endLineNumber) {\r\n            return this.clearRanges();\r\n        }\r\n        const referenceValue = model.getValueInRange(referenceRange);\r\n        if (this._currentWordPattern) {\r\n            const match = referenceValue.match(this._currentWordPattern);\r\n            const matchLength = match ? match[0].length : 0;\r\n            if (matchLength !== referenceValue.length) {\r\n                return this.clearRanges();\r\n            }\r\n        }\r\n        let edits = [];\r\n        for (let i = 1, len = decorations.length; i < len; i++) {\r\n            const mirrorRange = model.getDecorationRange(decorations[i]);\r\n            if (!mirrorRange) {\r\n                continue;\r\n            }\r\n            if (mirrorRange.startLineNumber !== mirrorRange.endLineNumber) {\r\n                edits.push({\r\n                    range: mirrorRange,\r\n                    text: referenceValue\r\n                });\r\n            }\r\n            else {\r\n                let oldValue = model.getValueInRange(mirrorRange);\r\n                let newValue = referenceValue;\r\n                let rangeStartColumn = mirrorRange.startColumn;\r\n                let rangeEndColumn = mirrorRange.endColumn;\r\n                const commonPrefixLength = strings.commonPrefixLength(oldValue, newValue);\r\n                rangeStartColumn += commonPrefixLength;\r\n                oldValue = oldValue.substr(commonPrefixLength);\r\n                newValue = newValue.substr(commonPrefixLength);\r\n                const commonSuffixLength = strings.commonSuffixLength(oldValue, newValue);\r\n                rangeEndColumn -= commonSuffixLength;\r\n                oldValue = oldValue.substr(0, oldValue.length - commonSuffixLength);\r\n                newValue = newValue.substr(0, newValue.length - commonSuffixLength);\r\n                if (rangeStartColumn !== rangeEndColumn || newValue.length !== 0) {\r\n                    edits.push({\r\n                        range: new Range(mirrorRange.startLineNumber, rangeStartColumn, mirrorRange.endLineNumber, rangeEndColumn),\r\n                        text: newValue\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if (edits.length === 0) {\r\n            return;\r\n        }\r\n        try {\r\n            this._editor.popUndoStop();\r\n            this._ignoreChangeEvent = true;\r\n            const prevEditOperationType = this._editor._getViewModel().getPrevEditOperationType();\r\n            this._editor.executeEdits('linkedEditing', edits);\r\n            this._editor._getViewModel().setPrevEditOperationType(prevEditOperationType);\r\n        }\r\n        finally {\r\n            this._ignoreChangeEvent = false;\r\n        }\r\n    }\r\n    dispose() {\r\n        this.clearRanges();\r\n        super.dispose();\r\n    }\r\n    clearRanges() {\r\n        this._visibleContextKey.set(false);\r\n        this._currentDecorations = this._editor.deltaDecorations(this._currentDecorations, []);\r\n        if (this._currentRequest) {\r\n            this._currentRequest.cancel();\r\n            this._currentRequest = null;\r\n            this._currentRequestPosition = null;\r\n        }\r\n    }\r\n    updateRanges(force = false) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel()) {\r\n                this.clearRanges();\r\n                return;\r\n            }\r\n            const position = this._editor.getPosition();\r\n            if (!this._enabled && !force || this._editor.getSelections().length > 1) {\r\n                // disabled or multicursor\r\n                this.clearRanges();\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            const modelVersionId = model.getVersionId();\r\n            if (this._currentRequestPosition && this._currentRequestModelVersion === modelVersionId) {\r\n                if (position.equals(this._currentRequestPosition)) {\r\n                    return; // same position\r\n                }\r\n                if (this._currentDecorations && this._currentDecorations.length > 0) {\r\n                    const range = model.getDecorationRange(this._currentDecorations[0]);\r\n                    if (range && range.containsPosition(position)) {\r\n                        return; // just moving inside the existing primary range\r\n                    }\r\n                }\r\n            }\r\n            this._currentRequestPosition = position;\r\n            this._currentRequestModelVersion = modelVersionId;\r\n            const request = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\r\n                try {\r\n                    const response = yield getLinkedEditingRanges(model, position, token);\r\n                    if (request !== this._currentRequest) {\r\n                        return;\r\n                    }\r\n                    this._currentRequest = null;\r\n                    if (modelVersionId !== model.getVersionId()) {\r\n                        return;\r\n                    }\r\n                    let ranges = [];\r\n                    if (response === null || response === void 0 ? void 0 : response.ranges) {\r\n                        ranges = response.ranges;\r\n                    }\r\n                    this._currentWordPattern = (response === null || response === void 0 ? void 0 : response.wordPattern) || this._languageWordPattern;\r\n                    let foundReferenceRange = false;\r\n                    for (let i = 0, len = ranges.length; i < len; i++) {\r\n                        if (Range.containsPosition(ranges[i], position)) {\r\n                            foundReferenceRange = true;\r\n                            if (i !== 0) {\r\n                                const referenceRange = ranges[i];\r\n                                ranges.splice(i, 1);\r\n                                ranges.unshift(referenceRange);\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!foundReferenceRange) {\r\n                        // Cannot do linked editing if the ranges are not where the cursor is...\r\n                        this.clearRanges();\r\n                        return;\r\n                    }\r\n                    const decorations = ranges.map(range => ({ range: range, options: LinkedEditingContribution.DECORATION }));\r\n                    this._visibleContextKey.set(true);\r\n                    this._currentDecorations = this._editor.deltaDecorations(this._currentDecorations, decorations);\r\n                }\r\n                catch (err) {\r\n                    if (!isPromiseCanceledError(err)) {\r\n                        onUnexpectedError(err);\r\n                    }\r\n                    if (this._currentRequest === request || !this._currentRequest) {\r\n                        // stop if we are still the latest request\r\n                        this.clearRanges();\r\n                    }\r\n                }\r\n            }));\r\n            this._currentRequest = request;\r\n            return request;\r\n        });\r\n    }\r\n};\r\nLinkedEditingContribution.ID = 'editor.contrib.linkedEditing';\r\nLinkedEditingContribution.DECORATION = ModelDecorationOptions.register({\r\n    description: 'linked-editing',\r\n    stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */,\r\n    className: DECORATION_CLASS_NAME\r\n});\r\nLinkedEditingContribution = __decorate([\r\n    __param(1, IContextKeyService)\r\n], LinkedEditingContribution);\r\nexport { LinkedEditingContribution };\r\nexport class LinkedEditingAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.linkedEditing',\r\n            label: nls.localize('linkedEditing.label', \"Start Linked Editing\"),\r\n            alias: 'Start Linked Editing',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 60 /* F2 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    runCommand(accessor, args) {\r\n        const editorService = accessor.get(ICodeEditorService);\r\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\r\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\r\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\r\n                if (!editor) {\r\n                    return;\r\n                }\r\n                editor.setPosition(pos);\r\n                editor.invokeWithinContext(accessor => {\r\n                    this.reportTelemetry(accessor, editor);\r\n                    return this.run(accessor, editor);\r\n                });\r\n            }, onUnexpectedError);\r\n        }\r\n        return super.runCommand(accessor, args);\r\n    }\r\n    run(_accessor, editor) {\r\n        const controller = LinkedEditingContribution.get(editor);\r\n        if (controller) {\r\n            return Promise.resolve(controller.updateRanges(true));\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n}\r\nconst LinkedEditingCommand = EditorCommand.bindToContribution(LinkedEditingContribution.get);\r\nregisterEditorCommand(new LinkedEditingCommand({\r\n    id: 'cancelLinkedEditingInput',\r\n    precondition: CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE,\r\n    handler: x => x.clearRanges(),\r\n    kbOpts: {\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        weight: 100 /* EditorContrib */ + 99,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nfunction getLinkedEditingRanges(model, position, token) {\r\n    const orderedByScore = LinkedEditingRangeProviderRegistry.ordered(model);\r\n    // in order of score ask the linked editing range provider\r\n    // until someone response with a good result\r\n    // (good = not null)\r\n    return first(orderedByScore.map(provider => () => __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            return yield provider.provideLinkedEditingRanges(model, position, token);\r\n        }\r\n        catch (e) {\r\n            onUnexpectedExternalError(e);\r\n            return undefined;\r\n        }\r\n    })), result => !!result && arrays.isNonEmptyArray(result === null || result === void 0 ? void 0 : result.ranges));\r\n}\r\nexport const editorLinkedEditingBackground = registerColor('editor.linkedEditingBackground', { dark: Color.fromHex('#f00').transparent(0.3), light: Color.fromHex('#f00').transparent(0.3), hc: Color.fromHex('#f00').transparent(0.3) }, nls.localize('editorLinkedEditingBackground', 'Background color when the editor auto renames on type.'));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const editorLinkedEditingBackgroundColor = theme.getColor(editorLinkedEditingBackground);\r\n    if (editorLinkedEditingBackgroundColor) {\r\n        collector.addRule(`.monaco-editor .${DECORATION_CLASS_NAME} { background: ${editorLinkedEditingBackgroundColor}; border-left-color: ${editorLinkedEditingBackgroundColor}; }`);\r\n    }\r\n});\r\nregisterModelAndPositionCommand('_executeLinkedEditingProvider', (model, position) => getLinkedEditingRanges(model, position, CancellationToken.None));\r\nregisterEditorContribution(LinkedEditingContribution.ID, LinkedEditingContribution);\r\nregisterEditorAction(LinkedEditingAction);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport './links.css';\r\nimport * as nls from '../../../nls.js';\r\nimport * as async from '../../../base/common/async.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { MarkdownString } from '../../../base/common/htmlContent.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport * as platform from '../../../base/common/platform.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { LinkProviderRegistry } from '../../common/modes.js';\r\nimport { ClickLinkGesture } from '../gotoSymbol/link/clickLinkGesture.js';\r\nimport { getLinks } from './getLinks.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { editorActiveLinkForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Schemas } from '../../../base/common/network.js';\r\nimport * as resources from '../../../base/common/resources.js';\r\nfunction getHoverMessage(link, useMetaKey) {\r\n    const executeCmd = link.url && /^command:/i.test(link.url.toString());\r\n    const label = link.tooltip\r\n        ? link.tooltip\r\n        : executeCmd\r\n            ? nls.localize('links.navigate.executeCmd', 'Execute command')\r\n            : nls.localize('links.navigate.follow', 'Follow link');\r\n    const kb = useMetaKey\r\n        ? platform.isMacintosh\r\n            ? nls.localize('links.navigate.kb.meta.mac', \"cmd + click\")\r\n            : nls.localize('links.navigate.kb.meta', \"ctrl + click\")\r\n        : platform.isMacintosh\r\n            ? nls.localize('links.navigate.kb.alt.mac', \"option + click\")\r\n            : nls.localize('links.navigate.kb.alt', \"alt + click\");\r\n    if (link.url) {\r\n        let nativeLabel = '';\r\n        if (/^command:/i.test(link.url.toString())) {\r\n            // Don't show complete command arguments in the native tooltip\r\n            const match = link.url.toString().match(/^command:([^?#]+)/);\r\n            if (match) {\r\n                const commandId = match[1];\r\n                const nativeLabelText = nls.localize('tooltip.explanation', \"Execute command {0}\", commandId);\r\n                nativeLabel = ` \"${nativeLabelText}\"`;\r\n            }\r\n        }\r\n        const hoverMessage = new MarkdownString('', true).appendMarkdown(`[${label}](${link.url.toString(true)}${nativeLabel}) (${kb})`);\r\n        return hoverMessage;\r\n    }\r\n    else {\r\n        return new MarkdownString().appendText(`${label} (${kb})`);\r\n    }\r\n}\r\nconst decoration = {\r\n    general: ModelDecorationOptions.register({\r\n        description: 'detected-link',\r\n        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n        collapseOnReplaceEdit: true,\r\n        inlineClassName: 'detected-link'\r\n    }),\r\n    active: ModelDecorationOptions.register({\r\n        description: 'detected-link-active',\r\n        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n        collapseOnReplaceEdit: true,\r\n        inlineClassName: 'detected-link-active'\r\n    })\r\n};\r\nclass LinkOccurrence {\r\n    constructor(link, decorationId) {\r\n        this.link = link;\r\n        this.decorationId = decorationId;\r\n    }\r\n    static decoration(link, useMetaKey) {\r\n        return {\r\n            range: link.range,\r\n            options: LinkOccurrence._getOptions(link, useMetaKey, false)\r\n        };\r\n    }\r\n    static _getOptions(link, useMetaKey, isActive) {\r\n        const options = Object.assign({}, (isActive ? decoration.active : decoration.general));\r\n        options.hoverMessage = getHoverMessage(link, useMetaKey);\r\n        return options;\r\n    }\r\n    activate(changeAccessor, useMetaKey) {\r\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, true));\r\n    }\r\n    deactivate(changeAccessor, useMetaKey) {\r\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, false));\r\n    }\r\n}\r\nlet LinkDetector = class LinkDetector {\r\n    constructor(editor, openerService, notificationService) {\r\n        this.listenersToRemove = new DisposableStore();\r\n        this.editor = editor;\r\n        this.openerService = openerService;\r\n        this.notificationService = notificationService;\r\n        let clickLinkGesture = new ClickLinkGesture(editor);\r\n        this.listenersToRemove.add(clickLinkGesture);\r\n        this.listenersToRemove.add(clickLinkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\r\n            this._onEditorMouseMove(mouseEvent, keyboardEvent);\r\n        }));\r\n        this.listenersToRemove.add(clickLinkGesture.onExecute((e) => {\r\n            this.onEditorMouseUp(e);\r\n        }));\r\n        this.listenersToRemove.add(clickLinkGesture.onCancel((e) => {\r\n            this.cleanUpActiveLinkDecoration();\r\n        }));\r\n        this.enabled = editor.getOption(60 /* links */);\r\n        this.listenersToRemove.add(editor.onDidChangeConfiguration((e) => {\r\n            const enabled = editor.getOption(60 /* links */);\r\n            if (this.enabled === enabled) {\r\n                // No change in our configuration option\r\n                return;\r\n            }\r\n            this.enabled = enabled;\r\n            // Remove any links (for the getting disabled case)\r\n            this.updateDecorations([]);\r\n            // Stop any computation (for the getting disabled case)\r\n            this.stop();\r\n            // Start computing (for the getting enabled case)\r\n            this.beginCompute();\r\n        }));\r\n        this.listenersToRemove.add(editor.onDidChangeModelContent((e) => this.onChange()));\r\n        this.listenersToRemove.add(editor.onDidChangeModel((e) => this.onModelChanged()));\r\n        this.listenersToRemove.add(editor.onDidChangeModelLanguage((e) => this.onModelModeChanged()));\r\n        this.listenersToRemove.add(LinkProviderRegistry.onDidChange((e) => this.onModelModeChanged()));\r\n        this.timeout = new async.TimeoutTimer();\r\n        this.computePromise = null;\r\n        this.activeLinksList = null;\r\n        this.currentOccurrences = {};\r\n        this.activeLinkDecorationId = null;\r\n        this.beginCompute();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(LinkDetector.ID);\r\n    }\r\n    onModelChanged() {\r\n        this.currentOccurrences = {};\r\n        this.activeLinkDecorationId = null;\r\n        this.stop();\r\n        this.beginCompute();\r\n    }\r\n    onModelModeChanged() {\r\n        this.stop();\r\n        this.beginCompute();\r\n    }\r\n    onChange() {\r\n        this.timeout.setIfNotSet(() => this.beginCompute(), LinkDetector.RECOMPUTE_TIME);\r\n    }\r\n    beginCompute() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this.editor.hasModel() || !this.enabled) {\r\n                return;\r\n            }\r\n            const model = this.editor.getModel();\r\n            if (!LinkProviderRegistry.has(model)) {\r\n                return;\r\n            }\r\n            if (this.activeLinksList) {\r\n                this.activeLinksList.dispose();\r\n                this.activeLinksList = null;\r\n            }\r\n            this.computePromise = async.createCancelablePromise(token => getLinks(model, token));\r\n            try {\r\n                this.activeLinksList = yield this.computePromise;\r\n                this.updateDecorations(this.activeLinksList.links);\r\n            }\r\n            catch (err) {\r\n                onUnexpectedError(err);\r\n            }\r\n            finally {\r\n                this.computePromise = null;\r\n            }\r\n        });\r\n    }\r\n    updateDecorations(links) {\r\n        const useMetaKey = (this.editor.getOption(67 /* multiCursorModifier */) === 'altKey');\r\n        let oldDecorations = [];\r\n        let keys = Object.keys(this.currentOccurrences);\r\n        for (let i = 0, len = keys.length; i < len; i++) {\r\n            let decorationId = keys[i];\r\n            let occurance = this.currentOccurrences[decorationId];\r\n            oldDecorations.push(occurance.decorationId);\r\n        }\r\n        let newDecorations = [];\r\n        if (links) {\r\n            // Not sure why this is sometimes null\r\n            for (const link of links) {\r\n                newDecorations.push(LinkOccurrence.decoration(link, useMetaKey));\r\n            }\r\n        }\r\n        let decorations = this.editor.deltaDecorations(oldDecorations, newDecorations);\r\n        this.currentOccurrences = {};\r\n        this.activeLinkDecorationId = null;\r\n        for (let i = 0, len = decorations.length; i < len; i++) {\r\n            let occurance = new LinkOccurrence(links[i], decorations[i]);\r\n            this.currentOccurrences[occurance.decorationId] = occurance;\r\n        }\r\n    }\r\n    _onEditorMouseMove(mouseEvent, withKey) {\r\n        const useMetaKey = (this.editor.getOption(67 /* multiCursorModifier */) === 'altKey');\r\n        if (this.isEnabled(mouseEvent, withKey)) {\r\n            this.cleanUpActiveLinkDecoration(); // always remove previous link decoration as their can only be one\r\n            const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\r\n            if (occurrence) {\r\n                this.editor.changeDecorations((changeAccessor) => {\r\n                    occurrence.activate(changeAccessor, useMetaKey);\r\n                    this.activeLinkDecorationId = occurrence.decorationId;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.cleanUpActiveLinkDecoration();\r\n        }\r\n    }\r\n    cleanUpActiveLinkDecoration() {\r\n        const useMetaKey = (this.editor.getOption(67 /* multiCursorModifier */) === 'altKey');\r\n        if (this.activeLinkDecorationId) {\r\n            const occurrence = this.currentOccurrences[this.activeLinkDecorationId];\r\n            if (occurrence) {\r\n                this.editor.changeDecorations((changeAccessor) => {\r\n                    occurrence.deactivate(changeAccessor, useMetaKey);\r\n                });\r\n            }\r\n            this.activeLinkDecorationId = null;\r\n        }\r\n    }\r\n    onEditorMouseUp(mouseEvent) {\r\n        if (!this.isEnabled(mouseEvent)) {\r\n            return;\r\n        }\r\n        const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\r\n        if (!occurrence) {\r\n            return;\r\n        }\r\n        this.openLinkOccurrence(occurrence, mouseEvent.hasSideBySideModifier, true /* from user gesture */);\r\n    }\r\n    openLinkOccurrence(occurrence, openToSide, fromUserGesture = false) {\r\n        if (!this.openerService) {\r\n            return;\r\n        }\r\n        const { link } = occurrence;\r\n        link.resolve(CancellationToken.None).then(uri => {\r\n            // Support for relative file URIs of the shape file://./relativeFile.txt or file:///./relativeFile.txt\r\n            if (typeof uri === 'string' && this.editor.hasModel()) {\r\n                const modelUri = this.editor.getModel().uri;\r\n                if (modelUri.scheme === Schemas.file && uri.startsWith(`${Schemas.file}:`)) {\r\n                    const parsedUri = URI.parse(uri);\r\n                    if (parsedUri.scheme === Schemas.file) {\r\n                        const fsPath = resources.originalFSPath(parsedUri);\r\n                        let relativePath = null;\r\n                        if (fsPath.startsWith('/./')) {\r\n                            relativePath = `.${fsPath.substr(1)}`;\r\n                        }\r\n                        else if (fsPath.startsWith('//./')) {\r\n                            relativePath = `.${fsPath.substr(2)}`;\r\n                        }\r\n                        if (relativePath) {\r\n                            uri = resources.joinPath(modelUri, relativePath);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return this.openerService.open(uri, { openToSide, fromUserGesture, allowContributedOpeners: true, allowCommands: true });\r\n        }, err => {\r\n            const messageOrError = err instanceof Error ? err.message : err;\r\n            // different error cases\r\n            if (messageOrError === 'invalid') {\r\n                this.notificationService.warn(nls.localize('invalid.url', 'Failed to open this link because it is not well-formed: {0}', link.url.toString()));\r\n            }\r\n            else if (messageOrError === 'missing') {\r\n                this.notificationService.warn(nls.localize('missing.url', 'Failed to open this link because its target is missing.'));\r\n            }\r\n            else {\r\n                onUnexpectedError(err);\r\n            }\r\n        });\r\n    }\r\n    getLinkOccurrence(position) {\r\n        if (!this.editor.hasModel() || !position) {\r\n            return null;\r\n        }\r\n        const decorations = this.editor.getModel().getDecorationsInRange({\r\n            startLineNumber: position.lineNumber,\r\n            startColumn: position.column,\r\n            endLineNumber: position.lineNumber,\r\n            endColumn: position.column\r\n        }, 0, true);\r\n        for (const decoration of decorations) {\r\n            const currentOccurrence = this.currentOccurrences[decoration.id];\r\n            if (currentOccurrence) {\r\n                return currentOccurrence;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    isEnabled(mouseEvent, withKey) {\r\n        return Boolean((mouseEvent.target.type === 6 /* CONTENT_TEXT */)\r\n            && (mouseEvent.hasTriggerModifier || (withKey && withKey.keyCodeIsTriggerKey)));\r\n    }\r\n    stop() {\r\n        var _a;\r\n        this.timeout.cancel();\r\n        if (this.activeLinksList) {\r\n            (_a = this.activeLinksList) === null || _a === void 0 ? void 0 : _a.dispose();\r\n            this.activeLinksList = null;\r\n        }\r\n        if (this.computePromise) {\r\n            this.computePromise.cancel();\r\n            this.computePromise = null;\r\n        }\r\n    }\r\n    dispose() {\r\n        this.listenersToRemove.dispose();\r\n        this.stop();\r\n        this.timeout.dispose();\r\n    }\r\n};\r\nLinkDetector.ID = 'editor.linkDetector';\r\nLinkDetector.RECOMPUTE_TIME = 1000; // ms\r\nLinkDetector = __decorate([\r\n    __param(1, IOpenerService),\r\n    __param(2, INotificationService)\r\n], LinkDetector);\r\nexport { LinkDetector };\r\nclass OpenLinkAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.openLink',\r\n            label: nls.localize('label', \"Open Link\"),\r\n            alias: 'Open Link',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let linkDetector = LinkDetector.get(editor);\r\n        if (!linkDetector) {\r\n            return;\r\n        }\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        let selections = editor.getSelections();\r\n        for (let sel of selections) {\r\n            let link = linkDetector.getLinkOccurrence(sel.getEndPosition());\r\n            if (link) {\r\n                linkDetector.openLinkOccurrence(link, false);\r\n            }\r\n        }\r\n    }\r\n}\r\nregisterEditorContribution(LinkDetector.ID, LinkDetector);\r\nregisterEditorAction(OpenLinkAction);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\r\n    if (activeLinkForeground) {\r\n        collector.addRule(`.monaco-editor .detected-link-active { color: ${activeLinkForeground} !important; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { LinkProviderRegistry } from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { isDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { coalesce } from '../../../base/common/arrays.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nexport class Link {\r\n    constructor(link, provider) {\r\n        this._link = link;\r\n        this._provider = provider;\r\n    }\r\n    toJSON() {\r\n        return {\r\n            range: this.range,\r\n            url: this.url,\r\n            tooltip: this.tooltip\r\n        };\r\n    }\r\n    get range() {\r\n        return this._link.range;\r\n    }\r\n    get url() {\r\n        return this._link.url;\r\n    }\r\n    get tooltip() {\r\n        return this._link.tooltip;\r\n    }\r\n    resolve(token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._link.url) {\r\n                return this._link.url;\r\n            }\r\n            if (typeof this._provider.resolveLink === 'function') {\r\n                return Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\r\n                    this._link = value || this._link;\r\n                    if (this._link.url) {\r\n                        // recurse\r\n                        return this.resolve(token);\r\n                    }\r\n                    return Promise.reject(new Error('missing'));\r\n                });\r\n            }\r\n            return Promise.reject(new Error('missing'));\r\n        });\r\n    }\r\n}\r\nexport class LinksList {\r\n    constructor(tuples) {\r\n        this._disposables = new DisposableStore();\r\n        let links = [];\r\n        for (const [list, provider] of tuples) {\r\n            // merge all links\r\n            const newLinks = list.links.map(link => new Link(link, provider));\r\n            links = LinksList._union(links, newLinks);\r\n            // register disposables\r\n            if (isDisposable(list)) {\r\n                this._disposables.add(list);\r\n            }\r\n        }\r\n        this.links = links;\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this.links.length = 0;\r\n    }\r\n    static _union(oldLinks, newLinks) {\r\n        // reunite oldLinks with newLinks and remove duplicates\r\n        let result = [];\r\n        let oldIndex;\r\n        let oldLen;\r\n        let newIndex;\r\n        let newLen;\r\n        for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\r\n            const oldLink = oldLinks[oldIndex];\r\n            const newLink = newLinks[newIndex];\r\n            if (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\r\n                // Remove the oldLink\r\n                oldIndex++;\r\n                continue;\r\n            }\r\n            const comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\r\n            if (comparisonResult < 0) {\r\n                // oldLink is before\r\n                result.push(oldLink);\r\n                oldIndex++;\r\n            }\r\n            else {\r\n                // newLink is before\r\n                result.push(newLink);\r\n                newIndex++;\r\n            }\r\n        }\r\n        for (; oldIndex < oldLen; oldIndex++) {\r\n            result.push(oldLinks[oldIndex]);\r\n        }\r\n        for (; newIndex < newLen; newIndex++) {\r\n            result.push(newLinks[newIndex]);\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexport function getLinks(model, token) {\r\n    const lists = [];\r\n    // ask all providers for links in parallel\r\n    const promises = LinkProviderRegistry.ordered(model).reverse().map((provider, i) => {\r\n        return Promise.resolve(provider.provideLinks(model, token)).then(result => {\r\n            if (result) {\r\n                lists[i] = [result, provider];\r\n            }\r\n        }, onUnexpectedExternalError);\r\n    });\r\n    return Promise.all(promises).then(() => {\r\n        const result = new LinksList(coalesce(lists));\r\n        if (!token.isCancellationRequested) {\r\n            return result;\r\n        }\r\n        result.dispose();\r\n        return new LinksList([]);\r\n    });\r\n}\r\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    let [uri, resolveCount] = args;\r\n    assertType(uri instanceof URI);\r\n    if (typeof resolveCount !== 'number') {\r\n        resolveCount = 0;\r\n    }\r\n    const model = accessor.get(IModelService).getModel(uri);\r\n    if (!model) {\r\n        return [];\r\n    }\r\n    const list = yield getLinks(model, CancellationToken.None);\r\n    if (!list) {\r\n        return [];\r\n    }\r\n    // resolve links\r\n    for (let i = 0; i < Math.min(resolveCount, list.links.length); i++) {\r\n        yield list.links[i].resolve(CancellationToken.None);\r\n    }\r\n    const result = list.links.slice(0);\r\n    list.dispose();\r\n    return result;\r\n}));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { RunOnceScheduler } from '../../../base/common/async.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { status } from '../../../base/browser/ui/aria/aria.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { CursorMoveCommands } from '../../common/controller/cursorMoveCommands.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { OverviewRulerLane } from '../../common/model.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { DocumentHighlightProviderRegistry } from '../../common/modes.js';\r\nimport { CommonFindController } from '../find/findController.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { overviewRulerSelectionHighlightForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nfunction announceCursorChange(previousCursorState, cursorState) {\r\n    const cursorDiff = cursorState.filter(cs => !previousCursorState.find(pcs => pcs.equals(cs)));\r\n    if (cursorDiff.length >= 1) {\r\n        const cursorPositions = cursorDiff.map(cs => `line ${cs.viewState.position.lineNumber} column ${cs.viewState.position.column}`).join(', ');\r\n        const msg = cursorDiff.length === 1 ? nls.localize('cursorAdded', \"Cursor added: {0}\", cursorPositions) : nls.localize('cursorsAdded', \"Cursors added: {0}\", cursorPositions);\r\n        status(msg);\r\n    }\r\n}\r\nexport class InsertCursorAbove extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.insertCursorAbove',\r\n            label: nls.localize('mutlicursor.insertAbove', \"Add Cursor Above\"),\r\n            alias: 'Add Cursor Above',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 16 /* UpArrow */,\r\n                linux: {\r\n                    primary: 1024 /* Shift */ | 512 /* Alt */ | 16 /* UpArrow */,\r\n                    secondary: [2048 /* CtrlCmd */ | 1024 /* Shift */ | 16 /* UpArrow */]\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miInsertCursorAbove', comment: ['&& denotes a mnemonic'] }, \"&&Add Cursor Above\"),\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const useLogicalLine = (args && args.logicalLine === true);\r\n        const viewModel = editor._getViewModel();\r\n        if (viewModel.cursorConfig.readOnly) {\r\n            return;\r\n        }\r\n        viewModel.pushStackElement();\r\n        const previousCursorState = viewModel.getCursorStates();\r\n        viewModel.setCursorStates(args.source, 3 /* Explicit */, CursorMoveCommands.addCursorUp(viewModel, previousCursorState, useLogicalLine));\r\n        viewModel.revealTopMostCursor(args.source);\r\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n    }\r\n}\r\nexport class InsertCursorBelow extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.insertCursorBelow',\r\n            label: nls.localize('mutlicursor.insertBelow', \"Add Cursor Below\"),\r\n            alias: 'Add Cursor Below',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 18 /* DownArrow */,\r\n                linux: {\r\n                    primary: 1024 /* Shift */ | 512 /* Alt */ | 18 /* DownArrow */,\r\n                    secondary: [2048 /* CtrlCmd */ | 1024 /* Shift */ | 18 /* DownArrow */]\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miInsertCursorBelow', comment: ['&& denotes a mnemonic'] }, \"A&&dd Cursor Below\"),\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const useLogicalLine = (args && args.logicalLine === true);\r\n        const viewModel = editor._getViewModel();\r\n        if (viewModel.cursorConfig.readOnly) {\r\n            return;\r\n        }\r\n        viewModel.pushStackElement();\r\n        const previousCursorState = viewModel.getCursorStates();\r\n        viewModel.setCursorStates(args.source, 3 /* Explicit */, CursorMoveCommands.addCursorDown(viewModel, previousCursorState, useLogicalLine));\r\n        viewModel.revealBottomMostCursor(args.source);\r\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n    }\r\n}\r\nclass InsertCursorAtEndOfEachLineSelected extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.insertCursorAtEndOfEachLineSelected',\r\n            label: nls.localize('mutlicursor.insertAtEndOfEachLineSelected', \"Add Cursors to Line Ends\"),\r\n            alias: 'Add Cursors to Line Ends',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 39 /* KEY_I */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miInsertCursorAtEndOfEachLineSelected', comment: ['&& denotes a mnemonic'] }, \"Add C&&ursors to Line Ends\"),\r\n                order: 4\r\n            }\r\n        });\r\n    }\r\n    getCursorsForSelection(selection, model, result) {\r\n        if (selection.isEmpty()) {\r\n            return;\r\n        }\r\n        for (let i = selection.startLineNumber; i < selection.endLineNumber; i++) {\r\n            let currentLineMaxColumn = model.getLineMaxColumn(i);\r\n            result.push(new Selection(i, currentLineMaxColumn, i, currentLineMaxColumn));\r\n        }\r\n        if (selection.endColumn > 1) {\r\n            result.push(new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn));\r\n        }\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = editor.getModel();\r\n        const selections = editor.getSelections();\r\n        const viewModel = editor._getViewModel();\r\n        const previousCursorState = viewModel.getCursorStates();\r\n        let newSelections = [];\r\n        selections.forEach((sel) => this.getCursorsForSelection(sel, model, newSelections));\r\n        if (newSelections.length > 0) {\r\n            editor.setSelections(newSelections);\r\n        }\r\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n    }\r\n}\r\nclass InsertCursorAtEndOfLineSelected extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.addCursorsToBottom',\r\n            label: nls.localize('mutlicursor.addCursorsToBottom', \"Add Cursors To Bottom\"),\r\n            alias: 'Add Cursors To Bottom',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const selections = editor.getSelections();\r\n        const lineCount = editor.getModel().getLineCount();\r\n        let newSelections = [];\r\n        for (let i = selections[0].startLineNumber; i <= lineCount; i++) {\r\n            newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\r\n        }\r\n        const viewModel = editor._getViewModel();\r\n        const previousCursorState = viewModel.getCursorStates();\r\n        if (newSelections.length > 0) {\r\n            editor.setSelections(newSelections);\r\n        }\r\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n    }\r\n}\r\nclass InsertCursorAtTopOfLineSelected extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.addCursorsToTop',\r\n            label: nls.localize('mutlicursor.addCursorsToTop', \"Add Cursors To Top\"),\r\n            alias: 'Add Cursors To Top',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const selections = editor.getSelections();\r\n        let newSelections = [];\r\n        for (let i = selections[0].startLineNumber; i >= 1; i--) {\r\n            newSelections.push(new Selection(i, selections[0].startColumn, i, selections[0].endColumn));\r\n        }\r\n        const viewModel = editor._getViewModel();\r\n        const previousCursorState = viewModel.getCursorStates();\r\n        if (newSelections.length > 0) {\r\n            editor.setSelections(newSelections);\r\n        }\r\n        announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n    }\r\n}\r\nexport class MultiCursorSessionResult {\r\n    constructor(selections, revealRange, revealScrollType) {\r\n        this.selections = selections;\r\n        this.revealRange = revealRange;\r\n        this.revealScrollType = revealScrollType;\r\n    }\r\n}\r\nexport class MultiCursorSession {\r\n    constructor(_editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch) {\r\n        this._editor = _editor;\r\n        this.findController = findController;\r\n        this.isDisconnectedFromFindController = isDisconnectedFromFindController;\r\n        this.searchText = searchText;\r\n        this.wholeWord = wholeWord;\r\n        this.matchCase = matchCase;\r\n        this.currentMatch = currentMatch;\r\n    }\r\n    static create(editor, findController) {\r\n        if (!editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const findState = findController.getState();\r\n        // Find widget owns entirely what we search for if:\r\n        //  - focus is not in the editor (i.e. it is in the find widget)\r\n        //  - and the search widget is visible\r\n        //  - and the search string is non-empty\r\n        if (!editor.hasTextFocus() && findState.isRevealed && findState.searchString.length > 0) {\r\n            // Find widget owns what is searched for\r\n            return new MultiCursorSession(editor, findController, false, findState.searchString, findState.wholeWord, findState.matchCase, null);\r\n        }\r\n        // Otherwise, the selection gives the search text, and the find widget gives the search settings\r\n        // The exception is the find state disassociation case: when beginning with a single, collapsed selection\r\n        let isDisconnectedFromFindController = false;\r\n        let wholeWord;\r\n        let matchCase;\r\n        const selections = editor.getSelections();\r\n        if (selections.length === 1 && selections[0].isEmpty()) {\r\n            isDisconnectedFromFindController = true;\r\n            wholeWord = true;\r\n            matchCase = true;\r\n        }\r\n        else {\r\n            wholeWord = findState.wholeWord;\r\n            matchCase = findState.matchCase;\r\n        }\r\n        // Selection owns what is searched for\r\n        const s = editor.getSelection();\r\n        let searchText;\r\n        let currentMatch = null;\r\n        if (s.isEmpty()) {\r\n            // selection is empty => expand to current word\r\n            const word = editor.getConfiguredWordAtPosition(s.getStartPosition());\r\n            if (!word) {\r\n                return null;\r\n            }\r\n            searchText = word.word;\r\n            currentMatch = new Selection(s.startLineNumber, word.startColumn, s.startLineNumber, word.endColumn);\r\n        }\r\n        else {\r\n            searchText = editor.getModel().getValueInRange(s).replace(/\\r\\n/g, '\\n');\r\n        }\r\n        return new MultiCursorSession(editor, findController, isDisconnectedFromFindController, searchText, wholeWord, matchCase, currentMatch);\r\n    }\r\n    addSelectionToNextFindMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const nextMatch = this._getNextMatch();\r\n        if (!nextMatch) {\r\n            return null;\r\n        }\r\n        const allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.concat(nextMatch), nextMatch, 0 /* Smooth */);\r\n    }\r\n    moveSelectionToNextFindMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const nextMatch = this._getNextMatch();\r\n        if (!nextMatch) {\r\n            return null;\r\n        }\r\n        const allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(nextMatch), nextMatch, 0 /* Smooth */);\r\n    }\r\n    _getNextMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        if (this.currentMatch) {\r\n            const result = this.currentMatch;\r\n            this.currentMatch = null;\r\n            return result;\r\n        }\r\n        this.findController.highlightFindOptions();\r\n        const allSelections = this._editor.getSelections();\r\n        const lastAddedSelection = allSelections[allSelections.length - 1];\r\n        const nextMatch = this._editor.getModel().findNextMatch(this.searchText, lastAddedSelection.getEndPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(114 /* wordSeparators */) : null, false);\r\n        if (!nextMatch) {\r\n            return null;\r\n        }\r\n        return new Selection(nextMatch.range.startLineNumber, nextMatch.range.startColumn, nextMatch.range.endLineNumber, nextMatch.range.endColumn);\r\n    }\r\n    addSelectionToPreviousFindMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const previousMatch = this._getPreviousMatch();\r\n        if (!previousMatch) {\r\n            return null;\r\n        }\r\n        const allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.concat(previousMatch), previousMatch, 0 /* Smooth */);\r\n    }\r\n    moveSelectionToPreviousFindMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const previousMatch = this._getPreviousMatch();\r\n        if (!previousMatch) {\r\n            return null;\r\n        }\r\n        const allSelections = this._editor.getSelections();\r\n        return new MultiCursorSessionResult(allSelections.slice(0, allSelections.length - 1).concat(previousMatch), previousMatch, 0 /* Smooth */);\r\n    }\r\n    _getPreviousMatch() {\r\n        if (!this._editor.hasModel()) {\r\n            return null;\r\n        }\r\n        if (this.currentMatch) {\r\n            const result = this.currentMatch;\r\n            this.currentMatch = null;\r\n            return result;\r\n        }\r\n        this.findController.highlightFindOptions();\r\n        const allSelections = this._editor.getSelections();\r\n        const lastAddedSelection = allSelections[allSelections.length - 1];\r\n        const previousMatch = this._editor.getModel().findPreviousMatch(this.searchText, lastAddedSelection.getStartPosition(), false, this.matchCase, this.wholeWord ? this._editor.getOption(114 /* wordSeparators */) : null, false);\r\n        if (!previousMatch) {\r\n            return null;\r\n        }\r\n        return new Selection(previousMatch.range.startLineNumber, previousMatch.range.startColumn, previousMatch.range.endLineNumber, previousMatch.range.endColumn);\r\n    }\r\n    selectAll() {\r\n        if (!this._editor.hasModel()) {\r\n            return [];\r\n        }\r\n        this.findController.highlightFindOptions();\r\n        return this._editor.getModel().findMatches(this.searchText, true, false, this.matchCase, this.wholeWord ? this._editor.getOption(114 /* wordSeparators */) : null, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n    }\r\n}\r\nexport class MultiCursorSelectionController extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this._sessionDispose = this._register(new DisposableStore());\r\n        this._editor = editor;\r\n        this._ignoreSelectionChange = false;\r\n        this._session = null;\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(MultiCursorSelectionController.ID);\r\n    }\r\n    dispose() {\r\n        this._endSession();\r\n        super.dispose();\r\n    }\r\n    _beginSessionIfNeeded(findController) {\r\n        if (!this._session) {\r\n            // Create a new session\r\n            const session = MultiCursorSession.create(this._editor, findController);\r\n            if (!session) {\r\n                return;\r\n            }\r\n            this._session = session;\r\n            const newState = { searchString: this._session.searchText };\r\n            if (this._session.isDisconnectedFromFindController) {\r\n                newState.wholeWordOverride = 1 /* True */;\r\n                newState.matchCaseOverride = 1 /* True */;\r\n                newState.isRegexOverride = 2 /* False */;\r\n            }\r\n            findController.getState().change(newState, false);\r\n            this._sessionDispose.add(this._editor.onDidChangeCursorSelection((e) => {\r\n                if (this._ignoreSelectionChange) {\r\n                    return;\r\n                }\r\n                this._endSession();\r\n            }));\r\n            this._sessionDispose.add(this._editor.onDidBlurEditorText(() => {\r\n                this._endSession();\r\n            }));\r\n            this._sessionDispose.add(findController.getState().onFindReplaceStateChange((e) => {\r\n                if (e.matchCase || e.wholeWord) {\r\n                    this._endSession();\r\n                }\r\n            }));\r\n        }\r\n    }\r\n    _endSession() {\r\n        this._sessionDispose.clear();\r\n        if (this._session && this._session.isDisconnectedFromFindController) {\r\n            const newState = {\r\n                wholeWordOverride: 0 /* NotSet */,\r\n                matchCaseOverride: 0 /* NotSet */,\r\n                isRegexOverride: 0 /* NotSet */,\r\n            };\r\n            this._session.findController.getState().change(newState, false);\r\n        }\r\n        this._session = null;\r\n    }\r\n    _setSelections(selections) {\r\n        this._ignoreSelectionChange = true;\r\n        this._editor.setSelections(selections);\r\n        this._ignoreSelectionChange = false;\r\n    }\r\n    _expandEmptyToWord(model, selection) {\r\n        if (!selection.isEmpty()) {\r\n            return selection;\r\n        }\r\n        const word = this._editor.getConfiguredWordAtPosition(selection.getStartPosition());\r\n        if (!word) {\r\n            return selection;\r\n        }\r\n        return new Selection(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\r\n    }\r\n    _applySessionResult(result) {\r\n        if (!result) {\r\n            return;\r\n        }\r\n        this._setSelections(result.selections);\r\n        if (result.revealRange) {\r\n            this._editor.revealRangeInCenterIfOutsideViewport(result.revealRange, result.revealScrollType);\r\n        }\r\n    }\r\n    getSession(findController) {\r\n        return this._session;\r\n    }\r\n    addSelectionToNextFindMatch(findController) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        if (!this._session) {\r\n            // If there are multiple cursors, handle the case where they do not all select the same text.\r\n            const allSelections = this._editor.getSelections();\r\n            if (allSelections.length > 1) {\r\n                const findState = findController.getState();\r\n                const matchCase = findState.matchCase;\r\n                const selectionsContainSameText = modelRangesContainSameText(this._editor.getModel(), allSelections, matchCase);\r\n                if (!selectionsContainSameText) {\r\n                    const model = this._editor.getModel();\r\n                    let resultingSelections = [];\r\n                    for (let i = 0, len = allSelections.length; i < len; i++) {\r\n                        resultingSelections[i] = this._expandEmptyToWord(model, allSelections[i]);\r\n                    }\r\n                    this._editor.setSelections(resultingSelections);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.addSelectionToNextFindMatch());\r\n        }\r\n    }\r\n    addSelectionToPreviousFindMatch(findController) {\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.addSelectionToPreviousFindMatch());\r\n        }\r\n    }\r\n    moveSelectionToNextFindMatch(findController) {\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.moveSelectionToNextFindMatch());\r\n        }\r\n    }\r\n    moveSelectionToPreviousFindMatch(findController) {\r\n        this._beginSessionIfNeeded(findController);\r\n        if (this._session) {\r\n            this._applySessionResult(this._session.moveSelectionToPreviousFindMatch());\r\n        }\r\n    }\r\n    selectAll(findController) {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        let matches = null;\r\n        const findState = findController.getState();\r\n        // Special case: find widget owns entirely what we search for if:\r\n        // - focus is not in the editor (i.e. it is in the find widget)\r\n        // - and the search widget is visible\r\n        // - and the search string is non-empty\r\n        // - and we're searching for a regex\r\n        if (findState.isRevealed && findState.searchString.length > 0 && findState.isRegex) {\r\n            matches = this._editor.getModel().findMatches(findState.searchString, true, findState.isRegex, findState.matchCase, findState.wholeWord ? this._editor.getOption(114 /* wordSeparators */) : null, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\r\n        }\r\n        else {\r\n            this._beginSessionIfNeeded(findController);\r\n            if (!this._session) {\r\n                return;\r\n            }\r\n            matches = this._session.selectAll();\r\n        }\r\n        if (findState.searchScope) {\r\n            const states = findState.searchScope;\r\n            let inSelection = [];\r\n            matches.forEach((match) => {\r\n                states.forEach((state) => {\r\n                    if (match.range.endLineNumber <= state.endLineNumber && match.range.startLineNumber >= state.startLineNumber) {\r\n                        inSelection.push(match);\r\n                    }\r\n                });\r\n            });\r\n            matches = inSelection;\r\n        }\r\n        if (matches.length > 0) {\r\n            const editorSelection = this._editor.getSelection();\r\n            // Have the primary cursor remain the one where the action was invoked\r\n            for (let i = 0, len = matches.length; i < len; i++) {\r\n                const match = matches[i];\r\n                const intersection = match.range.intersectRanges(editorSelection);\r\n                if (intersection) {\r\n                    // bingo!\r\n                    matches[i] = matches[0];\r\n                    matches[0] = match;\r\n                    break;\r\n                }\r\n            }\r\n            this._setSelections(matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn)));\r\n        }\r\n    }\r\n}\r\nMultiCursorSelectionController.ID = 'editor.contrib.multiCursorController';\r\nexport class MultiCursorSelectionControllerAction extends EditorAction {\r\n    run(accessor, editor) {\r\n        const multiCursorController = MultiCursorSelectionController.get(editor);\r\n        if (!multiCursorController) {\r\n            return;\r\n        }\r\n        const findController = CommonFindController.get(editor);\r\n        if (!findController) {\r\n            return;\r\n        }\r\n        const viewModel = editor._getViewModel();\r\n        if (viewModel) {\r\n            const previousCursorState = viewModel.getCursorStates();\r\n            this._run(multiCursorController, findController);\r\n            announceCursorChange(previousCursorState, viewModel.getCursorStates());\r\n        }\r\n    }\r\n}\r\nexport class AddSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.addSelectionToNextFindMatch',\r\n            label: nls.localize('addSelectionToNextFindMatch', \"Add Selection To Next Find Match\"),\r\n            alias: 'Add Selection To Next Find Match',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 34 /* KEY_D */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miAddSelectionToNextFindMatch', comment: ['&& denotes a mnemonic'] }, \"Add &&Next Occurrence\"),\r\n                order: 5\r\n            }\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.addSelectionToNextFindMatch(findController);\r\n    }\r\n}\r\nexport class AddSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.addSelectionToPreviousFindMatch',\r\n            label: nls.localize('addSelectionToPreviousFindMatch', \"Add Selection To Previous Find Match\"),\r\n            alias: 'Add Selection To Previous Find Match',\r\n            precondition: undefined,\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miAddSelectionToPreviousFindMatch', comment: ['&& denotes a mnemonic'] }, \"Add P&&revious Occurrence\"),\r\n                order: 6\r\n            }\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.addSelectionToPreviousFindMatch(findController);\r\n    }\r\n}\r\nexport class MoveSelectionToNextFindMatchAction extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.moveSelectionToNextFindMatch',\r\n            label: nls.localize('moveSelectionToNextFindMatch', \"Move Last Selection To Next Find Match\"),\r\n            alias: 'Move Last Selection To Next Find Match',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KEY_K */, 2048 /* CtrlCmd */ | 34 /* KEY_D */),\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.moveSelectionToNextFindMatch(findController);\r\n    }\r\n}\r\nexport class MoveSelectionToPreviousFindMatchAction extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.moveSelectionToPreviousFindMatch',\r\n            label: nls.localize('moveSelectionToPreviousFindMatch', \"Move Last Selection To Previous Find Match\"),\r\n            alias: 'Move Last Selection To Previous Find Match',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.moveSelectionToPreviousFindMatch(findController);\r\n    }\r\n}\r\nexport class SelectHighlightsAction extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.selectHighlights',\r\n            label: nls.localize('selectAllOccurrencesOfFindMatch', \"Select All Occurrences of Find Match\"),\r\n            alias: 'Select All Occurrences of Find Match',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 42 /* KEY_L */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '3_multi',\r\n                title: nls.localize({ key: 'miSelectHighlights', comment: ['&& denotes a mnemonic'] }, \"Select All &&Occurrences\"),\r\n                order: 7\r\n            }\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.selectAll(findController);\r\n    }\r\n}\r\nexport class CompatChangeAll extends MultiCursorSelectionControllerAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.changeAll',\r\n            label: nls.localize('changeAll.label', \"Change All Occurrences\"),\r\n            alias: 'Change All Occurrences',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.editorTextFocus),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 60 /* F2 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 1.2\r\n            }\r\n        });\r\n    }\r\n    _run(multiCursorController, findController) {\r\n        multiCursorController.selectAll(findController);\r\n    }\r\n}\r\nclass SelectionHighlighterState {\r\n    constructor(searchText, matchCase, wordSeparators, modelVersionId) {\r\n        this.searchText = searchText;\r\n        this.matchCase = matchCase;\r\n        this.wordSeparators = wordSeparators;\r\n        this.modelVersionId = modelVersionId;\r\n    }\r\n    /**\r\n     * Everything equals except for `lastWordUnderCursor`\r\n     */\r\n    static softEquals(a, b) {\r\n        if (!a && !b) {\r\n            return true;\r\n        }\r\n        if (!a || !b) {\r\n            return false;\r\n        }\r\n        return (a.searchText === b.searchText\r\n            && a.matchCase === b.matchCase\r\n            && a.wordSeparators === b.wordSeparators\r\n            && a.modelVersionId === b.modelVersionId);\r\n    }\r\n}\r\nexport class SelectionHighlighter extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this.editor = editor;\r\n        this._isEnabled = editor.getOption(95 /* selectionHighlight */);\r\n        this.decorations = [];\r\n        this.updateSoon = this._register(new RunOnceScheduler(() => this._update(), 300));\r\n        this.state = null;\r\n        this._register(editor.onDidChangeConfiguration((e) => {\r\n            this._isEnabled = editor.getOption(95 /* selectionHighlight */);\r\n        }));\r\n        this._register(editor.onDidChangeCursorSelection((e) => {\r\n            if (!this._isEnabled) {\r\n                // Early exit if nothing needs to be done!\r\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n                return;\r\n            }\r\n            if (e.selection.isEmpty()) {\r\n                if (e.reason === 3 /* Explicit */) {\r\n                    if (this.state) {\r\n                        // no longer valid\r\n                        this._setState(null);\r\n                    }\r\n                    this.updateSoon.schedule();\r\n                }\r\n                else {\r\n                    this._setState(null);\r\n                }\r\n            }\r\n            else {\r\n                this._update();\r\n            }\r\n        }));\r\n        this._register(editor.onDidChangeModel((e) => {\r\n            this._setState(null);\r\n        }));\r\n        this._register(editor.onDidChangeModelContent((e) => {\r\n            if (this._isEnabled) {\r\n                this.updateSoon.schedule();\r\n            }\r\n        }));\r\n        this._register(CommonFindController.get(editor).getState().onFindReplaceStateChange((e) => {\r\n            this._update();\r\n        }));\r\n    }\r\n    _update() {\r\n        this._setState(SelectionHighlighter._createState(this._isEnabled, this.editor));\r\n    }\r\n    static _createState(isEnabled, editor) {\r\n        if (!isEnabled) {\r\n            return null;\r\n        }\r\n        if (!editor.hasModel()) {\r\n            return null;\r\n        }\r\n        const s = editor.getSelection();\r\n        if (s.startLineNumber !== s.endLineNumber) {\r\n            // multiline forbidden for perf reasons\r\n            return null;\r\n        }\r\n        const multiCursorController = MultiCursorSelectionController.get(editor);\r\n        if (!multiCursorController) {\r\n            return null;\r\n        }\r\n        const findController = CommonFindController.get(editor);\r\n        if (!findController) {\r\n            return null;\r\n        }\r\n        let r = multiCursorController.getSession(findController);\r\n        if (!r) {\r\n            const allSelections = editor.getSelections();\r\n            if (allSelections.length > 1) {\r\n                const findState = findController.getState();\r\n                const matchCase = findState.matchCase;\r\n                const selectionsContainSameText = modelRangesContainSameText(editor.getModel(), allSelections, matchCase);\r\n                if (!selectionsContainSameText) {\r\n                    return null;\r\n                }\r\n            }\r\n            r = MultiCursorSession.create(editor, findController);\r\n        }\r\n        if (!r) {\r\n            return null;\r\n        }\r\n        if (r.currentMatch) {\r\n            // This is an empty selection\r\n            // Do not interfere with semantic word highlighting in the no selection case\r\n            return null;\r\n        }\r\n        if (/^[ \\t]+$/.test(r.searchText)) {\r\n            // whitespace only selection\r\n            return null;\r\n        }\r\n        if (r.searchText.length > 200) {\r\n            // very long selection\r\n            return null;\r\n        }\r\n        // TODO: better handling of this case\r\n        const findState = findController.getState();\r\n        const caseSensitive = findState.matchCase;\r\n        // Return early if the find widget shows the exact same matches\r\n        if (findState.isRevealed) {\r\n            let findStateSearchString = findState.searchString;\r\n            if (!caseSensitive) {\r\n                findStateSearchString = findStateSearchString.toLowerCase();\r\n            }\r\n            let mySearchString = r.searchText;\r\n            if (!caseSensitive) {\r\n                mySearchString = mySearchString.toLowerCase();\r\n            }\r\n            if (findStateSearchString === mySearchString && r.matchCase === findState.matchCase && r.wholeWord === findState.wholeWord && !findState.isRegex) {\r\n                return null;\r\n            }\r\n        }\r\n        return new SelectionHighlighterState(r.searchText, r.matchCase, r.wholeWord ? editor.getOption(114 /* wordSeparators */) : null, editor.getModel().getVersionId());\r\n    }\r\n    _setState(state) {\r\n        if (SelectionHighlighterState.softEquals(this.state, state)) {\r\n            this.state = state;\r\n            return;\r\n        }\r\n        this.state = state;\r\n        if (!this.state) {\r\n            this.decorations = this.editor.deltaDecorations(this.decorations, []);\r\n            return;\r\n        }\r\n        if (!this.editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this.editor.getModel();\r\n        if (model.isTooLargeForTokenization()) {\r\n            // the file is too large, so searching word under cursor in the whole document takes is blocking the UI.\r\n            return;\r\n        }\r\n        const hasFindOccurrences = DocumentHighlightProviderRegistry.has(model) && this.editor.getOption(69 /* occurrencesHighlight */);\r\n        let allMatches = model.findMatches(this.state.searchText, true, false, this.state.matchCase, this.state.wordSeparators, false).map(m => m.range);\r\n        allMatches.sort(Range.compareRangesUsingStarts);\r\n        let selections = this.editor.getSelections();\r\n        selections.sort(Range.compareRangesUsingStarts);\r\n        // do not overlap with selection (issue #64 and #512)\r\n        let matches = [];\r\n        for (let i = 0, j = 0, len = allMatches.length, lenJ = selections.length; i < len;) {\r\n            const match = allMatches[i];\r\n            if (j >= lenJ) {\r\n                // finished all editor selections\r\n                matches.push(match);\r\n                i++;\r\n            }\r\n            else {\r\n                const cmp = Range.compareRangesUsingStarts(match, selections[j]);\r\n                if (cmp < 0) {\r\n                    // match is before sel\r\n                    if (selections[j].isEmpty() || !Range.areIntersecting(match, selections[j])) {\r\n                        matches.push(match);\r\n                    }\r\n                    i++;\r\n                }\r\n                else if (cmp > 0) {\r\n                    // sel is before match\r\n                    j++;\r\n                }\r\n                else {\r\n                    // sel is equal to match\r\n                    i++;\r\n                    j++;\r\n                }\r\n            }\r\n        }\r\n        const decorations = matches.map(r => {\r\n            return {\r\n                range: r,\r\n                // Show in overviewRuler only if model has no semantic highlighting\r\n                options: (hasFindOccurrences ? SelectionHighlighter._SELECTION_HIGHLIGHT : SelectionHighlighter._SELECTION_HIGHLIGHT_OVERVIEW)\r\n            };\r\n        });\r\n        this.decorations = this.editor.deltaDecorations(this.decorations, decorations);\r\n    }\r\n    dispose() {\r\n        this._setState(null);\r\n        super.dispose();\r\n    }\r\n}\r\nSelectionHighlighter.ID = 'editor.contrib.selectionHighlighter';\r\nSelectionHighlighter._SELECTION_HIGHLIGHT_OVERVIEW = ModelDecorationOptions.register({\r\n    description: 'selection-highlight-overview',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'selectionHighlight',\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerSelectionHighlightForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nSelectionHighlighter._SELECTION_HIGHLIGHT = ModelDecorationOptions.register({\r\n    description: 'selection-highlight',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'selectionHighlight',\r\n});\r\nfunction modelRangesContainSameText(model, ranges, matchCase) {\r\n    const selectedText = getValueInRange(model, ranges[0], !matchCase);\r\n    for (let i = 1, len = ranges.length; i < len; i++) {\r\n        const range = ranges[i];\r\n        if (range.isEmpty()) {\r\n            return false;\r\n        }\r\n        const thisSelectedText = getValueInRange(model, range, !matchCase);\r\n        if (selectedText !== thisSelectedText) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getValueInRange(model, range, toLowerCase) {\r\n    const text = model.getValueInRange(range);\r\n    return (toLowerCase ? text.toLowerCase() : text);\r\n}\r\nregisterEditorContribution(MultiCursorSelectionController.ID, MultiCursorSelectionController);\r\nregisterEditorContribution(SelectionHighlighter.ID, SelectionHighlighter);\r\nregisterEditorAction(InsertCursorAbove);\r\nregisterEditorAction(InsertCursorBelow);\r\nregisterEditorAction(InsertCursorAtEndOfEachLineSelected);\r\nregisterEditorAction(AddSelectionToNextFindMatchAction);\r\nregisterEditorAction(AddSelectionToPreviousFindMatchAction);\r\nregisterEditorAction(MoveSelectionToNextFindMatchAction);\r\nregisterEditorAction(MoveSelectionToPreviousFindMatchAction);\r\nregisterEditorAction(SelectHighlightsAction);\r\nregisterEditorAction(CompatChangeAll);\r\nregisterEditorAction(InsertCursorAtEndOfLineSelected);\r\nregisterEditorAction(InsertCursorAtTopOfLineSelected);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as dom from '../../../base/browser/dom.js';\r\nimport * as aria from '../../../base/browser/ui/aria/aria.js';\r\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\r\nimport { Event } from '../../../base/common/event.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport './parameterHints.css';\r\nimport { IModeService } from '../../common/services/modeService.js';\r\nimport { MarkdownRenderer } from '../../browser/core/markdownRenderer.js';\r\nimport { Context } from './provideSignatureHelp.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\r\nimport { editorHoverBackground, editorHoverBorder, textCodeBlockBackground, textLinkForeground, editorHoverForeground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\r\nimport { ParameterHintsModel } from './parameterHintsModel.js';\r\nimport { escapeRegExpCharacters } from '../../../base/common/strings.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nimport { assertIsDefined } from '../../../base/common/types.js';\r\nimport { ColorScheme } from '../../../platform/theme/common/theme.js';\r\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\r\nconst $ = dom.$;\r\nconst parameterHintsNextIcon = registerIcon('parameter-hints-next', Codicon.chevronDown, nls.localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\r\nconst parameterHintsPreviousIcon = registerIcon('parameter-hints-previous', Codicon.chevronUp, nls.localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\r\nlet ParameterHintsWidget = class ParameterHintsWidget extends Disposable {\r\n    constructor(editor, contextKeyService, openerService, modeService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.renderDisposeables = this._register(new DisposableStore());\r\n        this.visible = false;\r\n        this.announcedLabel = null;\r\n        // Editor.IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = true;\r\n        this.markdownRenderer = this._register(new MarkdownRenderer({ editor }, modeService, openerService));\r\n        this.model = this._register(new ParameterHintsModel(editor));\r\n        this.keyVisible = Context.Visible.bindTo(contextKeyService);\r\n        this.keyMultipleSignatures = Context.MultipleSignatures.bindTo(contextKeyService);\r\n        this._register(this.model.onChangedHints(newParameterHints => {\r\n            if (newParameterHints) {\r\n                this.show();\r\n                this.render(newParameterHints);\r\n            }\r\n            else {\r\n                this.hide();\r\n            }\r\n        }));\r\n    }\r\n    createParamaterHintDOMNodes() {\r\n        const element = $('.editor-widget.parameter-hints-widget');\r\n        const wrapper = dom.append(element, $('.phwrapper'));\r\n        wrapper.tabIndex = -1;\r\n        const controls = dom.append(wrapper, $('.controls'));\r\n        const previous = dom.append(controls, $('.button' + ThemeIcon.asCSSSelector(parameterHintsPreviousIcon)));\r\n        const overloads = dom.append(controls, $('.overloads'));\r\n        const next = dom.append(controls, $('.button' + ThemeIcon.asCSSSelector(parameterHintsNextIcon)));\r\n        this._register(dom.addDisposableListener(previous, 'click', e => {\r\n            dom.EventHelper.stop(e);\r\n            this.previous();\r\n        }));\r\n        this._register(dom.addDisposableListener(next, 'click', e => {\r\n            dom.EventHelper.stop(e);\r\n            this.next();\r\n        }));\r\n        const body = $('.body');\r\n        const scrollbar = new DomScrollableElement(body, {});\r\n        this._register(scrollbar);\r\n        wrapper.appendChild(scrollbar.getDomNode());\r\n        const signature = dom.append(body, $('.signature'));\r\n        const docs = dom.append(body, $('.docs'));\r\n        element.style.userSelect = 'text';\r\n        this.domNodes = {\r\n            element,\r\n            signature,\r\n            overloads,\r\n            docs,\r\n            scrollbar,\r\n        };\r\n        this.editor.addContentWidget(this);\r\n        this.hide();\r\n        this._register(this.editor.onDidChangeCursorSelection(e => {\r\n            if (this.visible) {\r\n                this.editor.layoutContentWidget(this);\r\n            }\r\n        }));\r\n        const updateFont = () => {\r\n            if (!this.domNodes) {\r\n                return;\r\n            }\r\n            const fontInfo = this.editor.getOption(40 /* fontInfo */);\r\n            this.domNodes.element.style.fontSize = `${fontInfo.fontSize}px`;\r\n        };\r\n        updateFont();\r\n        this._register(Event.chain(this.editor.onDidChangeConfiguration.bind(this.editor))\r\n            .filter(e => e.hasChanged(40 /* fontInfo */))\r\n            .on(updateFont, null));\r\n        this._register(this.editor.onDidLayoutChange(e => this.updateMaxHeight()));\r\n        this.updateMaxHeight();\r\n    }\r\n    show() {\r\n        if (this.visible) {\r\n            return;\r\n        }\r\n        if (!this.domNodes) {\r\n            this.createParamaterHintDOMNodes();\r\n        }\r\n        this.keyVisible.set(true);\r\n        this.visible = true;\r\n        setTimeout(() => {\r\n            if (this.domNodes) {\r\n                this.domNodes.element.classList.add('visible');\r\n            }\r\n        }, 100);\r\n        this.editor.layoutContentWidget(this);\r\n    }\r\n    hide() {\r\n        this.renderDisposeables.clear();\r\n        if (!this.visible) {\r\n            return;\r\n        }\r\n        this.keyVisible.reset();\r\n        this.visible = false;\r\n        this.announcedLabel = null;\r\n        if (this.domNodes) {\r\n            this.domNodes.element.classList.remove('visible');\r\n        }\r\n        this.editor.layoutContentWidget(this);\r\n    }\r\n    getPosition() {\r\n        if (this.visible) {\r\n            return {\r\n                position: this.editor.getPosition(),\r\n                preference: [1 /* ABOVE */, 2 /* BELOW */]\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n    render(hints) {\r\n        var _a;\r\n        this.renderDisposeables.clear();\r\n        if (!this.domNodes) {\r\n            return;\r\n        }\r\n        const multiple = hints.signatures.length > 1;\r\n        this.domNodes.element.classList.toggle('multiple', multiple);\r\n        this.keyMultipleSignatures.set(multiple);\r\n        this.domNodes.signature.innerText = '';\r\n        this.domNodes.docs.innerText = '';\r\n        const signature = hints.signatures[hints.activeSignature];\r\n        if (!signature) {\r\n            return;\r\n        }\r\n        const code = dom.append(this.domNodes.signature, $('.code'));\r\n        const fontInfo = this.editor.getOption(40 /* fontInfo */);\r\n        code.style.fontSize = `${fontInfo.fontSize}px`;\r\n        code.style.fontFamily = fontInfo.fontFamily;\r\n        const hasParameters = signature.parameters.length > 0;\r\n        const activeParameterIndex = (_a = signature.activeParameter) !== null && _a !== void 0 ? _a : hints.activeParameter;\r\n        if (!hasParameters) {\r\n            const label = dom.append(code, $('span'));\r\n            label.textContent = signature.label;\r\n        }\r\n        else {\r\n            this.renderParameters(code, signature, activeParameterIndex);\r\n        }\r\n        const activeParameter = signature.parameters[activeParameterIndex];\r\n        if (activeParameter === null || activeParameter === void 0 ? void 0 : activeParameter.documentation) {\r\n            const documentation = $('span.documentation');\r\n            if (typeof activeParameter.documentation === 'string') {\r\n                documentation.textContent = activeParameter.documentation;\r\n            }\r\n            else {\r\n                const renderedContents = this.renderMarkdownDocs(activeParameter.documentation);\r\n                documentation.appendChild(renderedContents.element);\r\n            }\r\n            dom.append(this.domNodes.docs, $('p', {}, documentation));\r\n        }\r\n        if (signature.documentation === undefined) {\r\n            /** no op */\r\n        }\r\n        else if (typeof signature.documentation === 'string') {\r\n            dom.append(this.domNodes.docs, $('p', {}, signature.documentation));\r\n        }\r\n        else {\r\n            const renderedContents = this.renderMarkdownDocs(signature.documentation);\r\n            dom.append(this.domNodes.docs, renderedContents.element);\r\n        }\r\n        const hasDocs = this.hasDocs(signature, activeParameter);\r\n        this.domNodes.signature.classList.toggle('has-docs', hasDocs);\r\n        this.domNodes.docs.classList.toggle('empty', !hasDocs);\r\n        this.domNodes.overloads.textContent =\r\n            String(hints.activeSignature + 1).padStart(hints.signatures.length.toString().length, '0') + '/' + hints.signatures.length;\r\n        if (activeParameter) {\r\n            const labelToAnnounce = this.getParameterLabel(signature, activeParameterIndex);\r\n            // Select method gets called on every user type while parameter hints are visible.\r\n            // We do not want to spam the user with same announcements, so we only announce if the current parameter changed.\r\n            if (this.announcedLabel !== labelToAnnounce) {\r\n                aria.alert(nls.localize('hint', \"{0}, hint\", labelToAnnounce));\r\n                this.announcedLabel = labelToAnnounce;\r\n            }\r\n        }\r\n        this.editor.layoutContentWidget(this);\r\n        this.domNodes.scrollbar.scanDomNode();\r\n    }\r\n    renderMarkdownDocs(markdown) {\r\n        const renderedContents = this.renderDisposeables.add(this.markdownRenderer.render(markdown, {\r\n            asyncRenderCallback: () => {\r\n                var _a;\r\n                (_a = this.domNodes) === null || _a === void 0 ? void 0 : _a.scrollbar.scanDomNode();\r\n            }\r\n        }));\r\n        renderedContents.element.classList.add('markdown-docs');\r\n        return renderedContents;\r\n    }\r\n    hasDocs(signature, activeParameter) {\r\n        if (activeParameter && typeof activeParameter.documentation === 'string' && assertIsDefined(activeParameter.documentation).length > 0) {\r\n            return true;\r\n        }\r\n        if (activeParameter && typeof activeParameter.documentation === 'object' && assertIsDefined(activeParameter.documentation).value.length > 0) {\r\n            return true;\r\n        }\r\n        if (signature.documentation && typeof signature.documentation === 'string' && assertIsDefined(signature.documentation).length > 0) {\r\n            return true;\r\n        }\r\n        if (signature.documentation && typeof signature.documentation === 'object' && assertIsDefined(signature.documentation.value).length > 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    renderParameters(parent, signature, activeParameterIndex) {\r\n        const [start, end] = this.getParameterLabelOffsets(signature, activeParameterIndex);\r\n        const beforeSpan = document.createElement('span');\r\n        beforeSpan.textContent = signature.label.substring(0, start);\r\n        const paramSpan = document.createElement('span');\r\n        paramSpan.textContent = signature.label.substring(start, end);\r\n        paramSpan.className = 'parameter active';\r\n        const afterSpan = document.createElement('span');\r\n        afterSpan.textContent = signature.label.substring(end);\r\n        dom.append(parent, beforeSpan, paramSpan, afterSpan);\r\n    }\r\n    getParameterLabel(signature, paramIdx) {\r\n        const param = signature.parameters[paramIdx];\r\n        if (Array.isArray(param.label)) {\r\n            return signature.label.substring(param.label[0], param.label[1]);\r\n        }\r\n        else {\r\n            return param.label;\r\n        }\r\n    }\r\n    getParameterLabelOffsets(signature, paramIdx) {\r\n        const param = signature.parameters[paramIdx];\r\n        if (!param) {\r\n            return [0, 0];\r\n        }\r\n        else if (Array.isArray(param.label)) {\r\n            return param.label;\r\n        }\r\n        else if (!param.label.length) {\r\n            return [0, 0];\r\n        }\r\n        else {\r\n            const regex = new RegExp(`(\\\\W|^)${escapeRegExpCharacters(param.label)}(?=\\\\W|$)`, 'g');\r\n            regex.test(signature.label);\r\n            const idx = regex.lastIndex - param.label.length;\r\n            return idx >= 0\r\n                ? [idx, regex.lastIndex]\r\n                : [0, 0];\r\n        }\r\n    }\r\n    next() {\r\n        this.editor.focus();\r\n        this.model.next();\r\n    }\r\n    previous() {\r\n        this.editor.focus();\r\n        this.model.previous();\r\n    }\r\n    cancel() {\r\n        this.model.cancel();\r\n    }\r\n    getDomNode() {\r\n        if (!this.domNodes) {\r\n            this.createParamaterHintDOMNodes();\r\n        }\r\n        return this.domNodes.element;\r\n    }\r\n    getId() {\r\n        return ParameterHintsWidget.ID;\r\n    }\r\n    trigger(context) {\r\n        this.model.trigger(context, 0);\r\n    }\r\n    updateMaxHeight() {\r\n        if (!this.domNodes) {\r\n            return;\r\n        }\r\n        const height = Math.max(this.editor.getLayoutInfo().height / 4, 250);\r\n        const maxHeight = `${height}px`;\r\n        this.domNodes.element.style.maxHeight = maxHeight;\r\n        const wrapper = this.domNodes.element.getElementsByClassName('phwrapper');\r\n        if (wrapper.length) {\r\n            wrapper[0].style.maxHeight = maxHeight;\r\n        }\r\n    }\r\n};\r\nParameterHintsWidget.ID = 'editor.widget.parameterHintsWidget';\r\nParameterHintsWidget = __decorate([\r\n    __param(1, IContextKeyService),\r\n    __param(2, IOpenerService),\r\n    __param(3, IModeService)\r\n], ParameterHintsWidget);\r\nexport { ParameterHintsWidget };\r\nregisterThemingParticipant((theme, collector) => {\r\n    const border = theme.getColor(editorHoverBorder);\r\n    if (border) {\r\n        const borderWidth = theme.type === ColorScheme.HIGH_CONTRAST ? 2 : 1;\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget { border: ${borderWidth}px solid ${border}; }`);\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget.multiple .body { border-left: 1px solid ${border.transparent(0.5)}; }`);\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget .signature.has-docs { border-bottom: 1px solid ${border.transparent(0.5)}; }`);\r\n    }\r\n    const background = theme.getColor(editorHoverBackground);\r\n    if (background) {\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget { background-color: ${background}; }`);\r\n    }\r\n    const link = theme.getColor(textLinkForeground);\r\n    if (link) {\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget a { color: ${link}; }`);\r\n    }\r\n    const foreground = theme.getColor(editorHoverForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget { color: ${foreground}; }`);\r\n    }\r\n    const codeBackground = theme.getColor(textCodeBlockBackground);\r\n    if (codeBackground) {\r\n        collector.addRule(`.monaco-editor .parameter-hints-widget code { background-color: ${codeBackground}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nimport { ITextModelService } from '../../common/services/resolverService.js';\r\nexport const Context = {\r\n    Visible: new RawContextKey('parameterHintsVisible', false),\r\n    MultipleSignatures: new RawContextKey('parameterHintsMultipleSignatures', false),\r\n};\r\nexport function provideSignatureHelp(model, position, context, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const supports = modes.SignatureHelpProviderRegistry.ordered(model);\r\n        for (const support of supports) {\r\n            try {\r\n                const result = yield support.provideSignatureHelp(model, position, token, context);\r\n                if (result) {\r\n                    return result;\r\n                }\r\n            }\r\n            catch (err) {\r\n                onUnexpectedExternalError(err);\r\n            }\r\n        }\r\n        return undefined;\r\n    });\r\n}\r\nCommandsRegistry.registerCommand('_executeSignatureHelpProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const [uri, position, triggerCharacter] = args;\r\n    assertType(URI.isUri(uri));\r\n    assertType(Position.isIPosition(position));\r\n    assertType(typeof triggerCharacter === 'string' || !triggerCharacter);\r\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\r\n    try {\r\n        const result = yield provideSignatureHelp(ref.object.textEditorModel, Position.lift(position), {\r\n            triggerKind: modes.SignatureHelpTriggerKind.Invoke,\r\n            isRetrigger: false,\r\n            triggerCharacter,\r\n        }, CancellationToken.None);\r\n        if (!result) {\r\n            return undefined;\r\n        }\r\n        setTimeout(() => result.dispose(), 0);\r\n        return result.value;\r\n    }\r\n    finally {\r\n        ref.dispose();\r\n    }\r\n}));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { createCancelablePromise, Delayer } from '../../../base/common/async.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { CharacterSet } from '../../common/core/characterClassifier.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport { provideSignatureHelp } from './provideSignatureHelp.js';\r\nvar ParameterHintState;\r\n(function (ParameterHintState) {\r\n    ParameterHintState.Default = { type: 0 /* Default */ };\r\n    class Pending {\r\n        constructor(request, previouslyActiveHints) {\r\n            this.request = request;\r\n            this.previouslyActiveHints = previouslyActiveHints;\r\n            this.type = 2 /* Pending */;\r\n        }\r\n    }\r\n    ParameterHintState.Pending = Pending;\r\n    class Active {\r\n        constructor(hints) {\r\n            this.hints = hints;\r\n            this.type = 1 /* Active */;\r\n        }\r\n    }\r\n    ParameterHintState.Active = Active;\r\n})(ParameterHintState || (ParameterHintState = {}));\r\nexport class ParameterHintsModel extends Disposable {\r\n    constructor(editor, delay = ParameterHintsModel.DEFAULT_DELAY) {\r\n        super();\r\n        this._onChangedHints = this._register(new Emitter());\r\n        this.onChangedHints = this._onChangedHints.event;\r\n        this.triggerOnType = false;\r\n        this._state = ParameterHintState.Default;\r\n        this._pendingTriggers = [];\r\n        this._lastSignatureHelpResult = this._register(new MutableDisposable());\r\n        this.triggerChars = new CharacterSet();\r\n        this.retriggerChars = new CharacterSet();\r\n        this.triggerId = 0;\r\n        this.editor = editor;\r\n        this.throttledDelayer = new Delayer(delay);\r\n        this._register(this.editor.onDidBlurEditorWidget(() => this.cancel()));\r\n        this._register(this.editor.onDidChangeConfiguration(() => this.onEditorConfigurationChange()));\r\n        this._register(this.editor.onDidChangeModel(e => this.onModelChanged()));\r\n        this._register(this.editor.onDidChangeModelLanguage(_ => this.onModelChanged()));\r\n        this._register(this.editor.onDidChangeCursorSelection(e => this.onCursorChange(e)));\r\n        this._register(this.editor.onDidChangeModelContent(e => this.onModelContentChange()));\r\n        this._register(modes.SignatureHelpProviderRegistry.onDidChange(this.onModelChanged, this));\r\n        this._register(this.editor.onDidType(text => this.onDidType(text)));\r\n        this.onEditorConfigurationChange();\r\n        this.onModelChanged();\r\n    }\r\n    get state() { return this._state; }\r\n    set state(value) {\r\n        if (this._state.type === 2 /* Pending */) {\r\n            this._state.request.cancel();\r\n        }\r\n        this._state = value;\r\n    }\r\n    cancel(silent = false) {\r\n        this.state = ParameterHintState.Default;\r\n        this.throttledDelayer.cancel();\r\n        if (!silent) {\r\n            this._onChangedHints.fire(undefined);\r\n        }\r\n    }\r\n    trigger(context, delay) {\r\n        const model = this.editor.getModel();\r\n        if (!model || !modes.SignatureHelpProviderRegistry.has(model)) {\r\n            return;\r\n        }\r\n        const triggerId = ++this.triggerId;\r\n        this._pendingTriggers.push(context);\r\n        this.throttledDelayer.trigger(() => {\r\n            return this.doTrigger(triggerId);\r\n        }, delay)\r\n            .catch(onUnexpectedError);\r\n    }\r\n    next() {\r\n        if (this.state.type !== 1 /* Active */) {\r\n            return;\r\n        }\r\n        const length = this.state.hints.signatures.length;\r\n        const activeSignature = this.state.hints.activeSignature;\r\n        const last = (activeSignature % length) === (length - 1);\r\n        const cycle = this.editor.getOption(73 /* parameterHints */).cycle;\r\n        // If there is only one signature, or we're on last signature of list\r\n        if ((length < 2 || last) && !cycle) {\r\n            this.cancel();\r\n            return;\r\n        }\r\n        this.updateActiveSignature(last && cycle ? 0 : activeSignature + 1);\r\n    }\r\n    previous() {\r\n        if (this.state.type !== 1 /* Active */) {\r\n            return;\r\n        }\r\n        const length = this.state.hints.signatures.length;\r\n        const activeSignature = this.state.hints.activeSignature;\r\n        const first = activeSignature === 0;\r\n        const cycle = this.editor.getOption(73 /* parameterHints */).cycle;\r\n        // If there is only one signature, or we're on first signature of list\r\n        if ((length < 2 || first) && !cycle) {\r\n            this.cancel();\r\n            return;\r\n        }\r\n        this.updateActiveSignature(first && cycle ? length - 1 : activeSignature - 1);\r\n    }\r\n    updateActiveSignature(activeSignature) {\r\n        if (this.state.type !== 1 /* Active */) {\r\n            return;\r\n        }\r\n        this.state = new ParameterHintState.Active(Object.assign(Object.assign({}, this.state.hints), { activeSignature }));\r\n        this._onChangedHints.fire(this.state.hints);\r\n    }\r\n    doTrigger(triggerId) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const isRetrigger = this.state.type === 1 /* Active */ || this.state.type === 2 /* Pending */;\r\n            const activeSignatureHelp = this.getLastActiveHints();\r\n            this.cancel(true);\r\n            if (this._pendingTriggers.length === 0) {\r\n                return false;\r\n            }\r\n            const context = this._pendingTriggers.reduce(mergeTriggerContexts);\r\n            this._pendingTriggers = [];\r\n            const triggerContext = {\r\n                triggerKind: context.triggerKind,\r\n                triggerCharacter: context.triggerCharacter,\r\n                isRetrigger: isRetrigger,\r\n                activeSignatureHelp: activeSignatureHelp\r\n            };\r\n            if (!this.editor.hasModel()) {\r\n                return false;\r\n            }\r\n            const model = this.editor.getModel();\r\n            const position = this.editor.getPosition();\r\n            this.state = new ParameterHintState.Pending(createCancelablePromise(token => provideSignatureHelp(model, position, triggerContext, token)), activeSignatureHelp);\r\n            try {\r\n                const result = yield this.state.request;\r\n                // Check that we are still resolving the correct signature help\r\n                if (triggerId !== this.triggerId) {\r\n                    result === null || result === void 0 ? void 0 : result.dispose();\r\n                    return false;\r\n                }\r\n                if (!result || !result.value.signatures || result.value.signatures.length === 0) {\r\n                    result === null || result === void 0 ? void 0 : result.dispose();\r\n                    this._lastSignatureHelpResult.clear();\r\n                    this.cancel();\r\n                    return false;\r\n                }\r\n                else {\r\n                    this.state = new ParameterHintState.Active(result.value);\r\n                    this._lastSignatureHelpResult.value = result;\r\n                    this._onChangedHints.fire(this.state.hints);\r\n                    return true;\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (triggerId === this.triggerId) {\r\n                    this.state = ParameterHintState.Default;\r\n                }\r\n                onUnexpectedError(error);\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n    getLastActiveHints() {\r\n        switch (this.state.type) {\r\n            case 1 /* Active */: return this.state.hints;\r\n            case 2 /* Pending */: return this.state.previouslyActiveHints;\r\n            default: return undefined;\r\n        }\r\n    }\r\n    get isTriggered() {\r\n        return this.state.type === 1 /* Active */\r\n            || this.state.type === 2 /* Pending */\r\n            || this.throttledDelayer.isTriggered();\r\n    }\r\n    onModelChanged() {\r\n        this.cancel();\r\n        // Update trigger characters\r\n        this.triggerChars = new CharacterSet();\r\n        this.retriggerChars = new CharacterSet();\r\n        const model = this.editor.getModel();\r\n        if (!model) {\r\n            return;\r\n        }\r\n        for (const support of modes.SignatureHelpProviderRegistry.ordered(model)) {\r\n            for (const ch of support.signatureHelpTriggerCharacters || []) {\r\n                this.triggerChars.add(ch.charCodeAt(0));\r\n                // All trigger characters are also considered retrigger characters\r\n                this.retriggerChars.add(ch.charCodeAt(0));\r\n            }\r\n            for (const ch of support.signatureHelpRetriggerCharacters || []) {\r\n                this.retriggerChars.add(ch.charCodeAt(0));\r\n            }\r\n        }\r\n    }\r\n    onDidType(text) {\r\n        if (!this.triggerOnType) {\r\n            return;\r\n        }\r\n        const lastCharIndex = text.length - 1;\r\n        const triggerCharCode = text.charCodeAt(lastCharIndex);\r\n        if (this.triggerChars.has(triggerCharCode) || this.isTriggered && this.retriggerChars.has(triggerCharCode)) {\r\n            this.trigger({\r\n                triggerKind: modes.SignatureHelpTriggerKind.TriggerCharacter,\r\n                triggerCharacter: text.charAt(lastCharIndex),\r\n            });\r\n        }\r\n    }\r\n    onCursorChange(e) {\r\n        if (e.source === 'mouse') {\r\n            this.cancel();\r\n        }\r\n        else if (this.isTriggered) {\r\n            this.trigger({ triggerKind: modes.SignatureHelpTriggerKind.ContentChange });\r\n        }\r\n    }\r\n    onModelContentChange() {\r\n        if (this.isTriggered) {\r\n            this.trigger({ triggerKind: modes.SignatureHelpTriggerKind.ContentChange });\r\n        }\r\n    }\r\n    onEditorConfigurationChange() {\r\n        this.triggerOnType = this.editor.getOption(73 /* parameterHints */).enabled;\r\n        if (!this.triggerOnType) {\r\n            this.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        this.cancel(true);\r\n        super.dispose();\r\n    }\r\n}\r\nParameterHintsModel.DEFAULT_DELAY = 120; // ms\r\nfunction mergeTriggerContexts(previous, current) {\r\n    switch (current.triggerKind) {\r\n        case modes.SignatureHelpTriggerKind.Invoke:\r\n            // Invoke overrides previous triggers.\r\n            return current;\r\n        case modes.SignatureHelpTriggerKind.ContentChange:\r\n            // Ignore content changes triggers\r\n            return previous;\r\n        case modes.SignatureHelpTriggerKind.TriggerCharacter:\r\n        default:\r\n            return current;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { registerEditorAction, registerEditorContribution, EditorAction, EditorCommand, registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport { ParameterHintsWidget } from './parameterHintsWidget.js';\r\nimport { Context } from './provideSignatureHelp.js';\r\nimport * as modes from '../../common/modes.js';\r\nlet ParameterHintsController = class ParameterHintsController extends Disposable {\r\n    constructor(editor, instantiationService) {\r\n        super();\r\n        this.editor = editor;\r\n        this.widget = this._register(instantiationService.createInstance(ParameterHintsWidget, this.editor));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(ParameterHintsController.ID);\r\n    }\r\n    cancel() {\r\n        this.widget.cancel();\r\n    }\r\n    previous() {\r\n        this.widget.previous();\r\n    }\r\n    next() {\r\n        this.widget.next();\r\n    }\r\n    trigger(context) {\r\n        this.widget.trigger(context);\r\n    }\r\n};\r\nParameterHintsController.ID = 'editor.controller.parameterHints';\r\nParameterHintsController = __decorate([\r\n    __param(1, IInstantiationService)\r\n], ParameterHintsController);\r\nexport class TriggerParameterHintsAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.triggerParameterHints',\r\n            label: nls.localize('parameterHints.trigger.label', \"Trigger Parameter Hints\"),\r\n            alias: 'Trigger Parameter Hints',\r\n            precondition: EditorContextKeys.hasSignatureHelpProvider,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 10 /* Space */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = ParameterHintsController.get(editor);\r\n        if (controller) {\r\n            controller.trigger({\r\n                triggerKind: modes.SignatureHelpTriggerKind.Invoke\r\n            });\r\n        }\r\n    }\r\n}\r\nregisterEditorContribution(ParameterHintsController.ID, ParameterHintsController);\r\nregisterEditorAction(TriggerParameterHintsAction);\r\nconst weight = 100 /* EditorContrib */ + 75;\r\nconst ParameterHintsCommand = EditorCommand.bindToContribution(ParameterHintsController.get);\r\nregisterEditorCommand(new ParameterHintsCommand({\r\n    id: 'closeParameterHints',\r\n    precondition: Context.Visible,\r\n    handler: x => x.cancel(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new ParameterHintsCommand({\r\n    id: 'showPrevParameterHint',\r\n    precondition: ContextKeyExpr.and(Context.Visible, Context.MultipleSignatures),\r\n    handler: x => x.previous(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 16 /* UpArrow */,\r\n        secondary: [512 /* Alt */ | 16 /* UpArrow */],\r\n        mac: { primary: 16 /* UpArrow */, secondary: [512 /* Alt */ | 16 /* UpArrow */, 256 /* WinCtrl */ | 46 /* KEY_P */] }\r\n    }\r\n}));\r\nregisterEditorCommand(new ParameterHintsCommand({\r\n    id: 'showNextParameterHint',\r\n    precondition: ContextKeyExpr.and(Context.Visible, Context.MultipleSignatures),\r\n    handler: x => x.next(),\r\n    kbOpts: {\r\n        weight: weight,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 18 /* DownArrow */,\r\n        secondary: [512 /* Alt */ | 18 /* DownArrow */],\r\n        mac: { primary: 18 /* DownArrow */, secondary: [512 /* Alt */ | 18 /* DownArrow */, 256 /* WinCtrl */ | 44 /* KEY_N */] }\r\n    }\r\n}));\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './renameInputField.css';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { inputBackground, inputBorder, inputForeground, widgetShadow, editorWidgetBackground } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\r\nexport const CONTEXT_RENAME_INPUT_VISIBLE = new RawContextKey('renameInputVisible', false, localize('renameInputVisible', \"Whether the rename input widget is visible\"));\r\nlet RenameInputField = class RenameInputField {\r\n    constructor(_editor, _acceptKeybindings, _themeService, _keybindingService, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._acceptKeybindings = _acceptKeybindings;\r\n        this._themeService = _themeService;\r\n        this._keybindingService = _keybindingService;\r\n        this._disposables = new DisposableStore();\r\n        this.allowEditorOverflow = true;\r\n        this._visibleContextKey = CONTEXT_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\r\n        this._editor.addContentWidget(this);\r\n        this._disposables.add(this._editor.onDidChangeConfiguration(e => {\r\n            if (e.hasChanged(40 /* fontInfo */)) {\r\n                this._updateFont();\r\n            }\r\n        }));\r\n        this._disposables.add(_themeService.onDidColorThemeChange(this._updateStyles, this));\r\n    }\r\n    dispose() {\r\n        this._disposables.dispose();\r\n        this._editor.removeContentWidget(this);\r\n    }\r\n    getId() {\r\n        return '__renameInputWidget';\r\n    }\r\n    getDomNode() {\r\n        if (!this._domNode) {\r\n            this._domNode = document.createElement('div');\r\n            this._domNode.className = 'monaco-editor rename-box';\r\n            this._input = document.createElement('input');\r\n            this._input.className = 'rename-input';\r\n            this._input.type = 'text';\r\n            this._input.setAttribute('aria-label', localize('renameAriaLabel', \"Rename input. Type new name and press Enter to commit.\"));\r\n            this._domNode.appendChild(this._input);\r\n            this._label = document.createElement('div');\r\n            this._label.className = 'rename-label';\r\n            this._domNode.appendChild(this._label);\r\n            const updateLabel = () => {\r\n                var _a, _b;\r\n                const [accept, preview] = this._acceptKeybindings;\r\n                this._keybindingService.lookupKeybinding(accept);\r\n                this._label.innerText = localize({ key: 'label', comment: ['placeholders are keybindings, e.g \"F2 to Rename, Shift+F2 to Preview\"'] }, \"{0} to Rename, {1} to Preview\", (_a = this._keybindingService.lookupKeybinding(accept)) === null || _a === void 0 ? void 0 : _a.getLabel(), (_b = this._keybindingService.lookupKeybinding(preview)) === null || _b === void 0 ? void 0 : _b.getLabel());\r\n            };\r\n            updateLabel();\r\n            this._disposables.add(this._keybindingService.onDidUpdateKeybindings(updateLabel));\r\n            this._updateFont();\r\n            this._updateStyles(this._themeService.getColorTheme());\r\n        }\r\n        return this._domNode;\r\n    }\r\n    _updateStyles(theme) {\r\n        var _a, _b, _c, _d;\r\n        if (!this._input || !this._domNode) {\r\n            return;\r\n        }\r\n        const widgetShadowColor = theme.getColor(widgetShadow);\r\n        this._domNode.style.backgroundColor = String((_a = theme.getColor(editorWidgetBackground)) !== null && _a !== void 0 ? _a : '');\r\n        this._domNode.style.boxShadow = widgetShadowColor ? ` 0 0 8px 2px ${widgetShadowColor}` : '';\r\n        this._domNode.style.color = String((_b = theme.getColor(inputForeground)) !== null && _b !== void 0 ? _b : '');\r\n        this._input.style.backgroundColor = String((_c = theme.getColor(inputBackground)) !== null && _c !== void 0 ? _c : '');\r\n        // this._input.style.color = String(theme.getColor(inputForeground) ?? '');\r\n        const border = theme.getColor(inputBorder);\r\n        this._input.style.borderWidth = border ? '1px' : '0px';\r\n        this._input.style.borderStyle = border ? 'solid' : 'none';\r\n        this._input.style.borderColor = (_d = border === null || border === void 0 ? void 0 : border.toString()) !== null && _d !== void 0 ? _d : 'none';\r\n    }\r\n    _updateFont() {\r\n        if (!this._input || !this._label) {\r\n            return;\r\n        }\r\n        const fontInfo = this._editor.getOption(40 /* fontInfo */);\r\n        this._input.style.fontFamily = fontInfo.fontFamily;\r\n        this._input.style.fontWeight = fontInfo.fontWeight;\r\n        this._input.style.fontSize = `${fontInfo.fontSize}px`;\r\n        this._label.style.fontSize = `${fontInfo.fontSize * 0.8}px`;\r\n    }\r\n    getPosition() {\r\n        if (!this._visible) {\r\n            return null;\r\n        }\r\n        return {\r\n            position: this._position,\r\n            preference: [2 /* BELOW */, 1 /* ABOVE */]\r\n        };\r\n    }\r\n    afterRender(position) {\r\n        if (!position) {\r\n            // cancel rename when input widget isn't rendered anymore\r\n            this.cancelInput(true);\r\n        }\r\n    }\r\n    acceptInput(wantsPreview) {\r\n        if (this._currentAcceptInput) {\r\n            this._currentAcceptInput(wantsPreview);\r\n        }\r\n    }\r\n    cancelInput(focusEditor) {\r\n        if (this._currentCancelInput) {\r\n            this._currentCancelInput(focusEditor);\r\n        }\r\n    }\r\n    getInput(where, value, selectionStart, selectionEnd, supportPreview, token) {\r\n        this._domNode.classList.toggle('preview', supportPreview);\r\n        this._position = new Position(where.startLineNumber, where.startColumn);\r\n        this._input.value = value;\r\n        this._input.setAttribute('selectionStart', selectionStart.toString());\r\n        this._input.setAttribute('selectionEnd', selectionEnd.toString());\r\n        this._input.size = Math.max((where.endColumn - where.startColumn) * 1.1, 20);\r\n        const disposeOnDone = new DisposableStore();\r\n        return new Promise(resolve => {\r\n            this._currentCancelInput = (focusEditor) => {\r\n                this._currentAcceptInput = undefined;\r\n                this._currentCancelInput = undefined;\r\n                resolve(focusEditor);\r\n                return true;\r\n            };\r\n            this._currentAcceptInput = (wantsPreview) => {\r\n                if (this._input.value.trim().length === 0 || this._input.value === value) {\r\n                    // empty or whitespace only or not changed\r\n                    this.cancelInput(true);\r\n                    return;\r\n                }\r\n                this._currentAcceptInput = undefined;\r\n                this._currentCancelInput = undefined;\r\n                resolve({\r\n                    newName: this._input.value,\r\n                    wantsPreview: supportPreview && wantsPreview\r\n                });\r\n            };\r\n            token.onCancellationRequested(() => this.cancelInput(true));\r\n            disposeOnDone.add(this._editor.onDidBlurEditorWidget(() => this.cancelInput(false)));\r\n            this._show();\r\n        }).finally(() => {\r\n            disposeOnDone.dispose();\r\n            this._hide();\r\n        });\r\n    }\r\n    _show() {\r\n        this._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber, 0 /* Smooth */);\r\n        this._visible = true;\r\n        this._visibleContextKey.set(true);\r\n        this._editor.layoutContentWidget(this);\r\n        setTimeout(() => {\r\n            this._input.focus();\r\n            this._input.setSelectionRange(parseInt(this._input.getAttribute('selectionStart')), parseInt(this._input.getAttribute('selectionEnd')));\r\n        }, 100);\r\n    }\r\n    _hide() {\r\n        this._visible = false;\r\n        this._visibleContextKey.reset();\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n};\r\nRenameInputField = __decorate([\r\n    __param(2, IThemeService),\r\n    __param(3, IKeybindingService),\r\n    __param(4, IContextKeyService)\r\n], RenameInputField);\r\nexport { RenameInputField };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { onUnexpectedError } from '../../../base/common/errors.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\r\nimport { registerEditorAction, registerEditorContribution, EditorAction, EditorCommand, registerEditorCommand, registerModelAndPositionCommand } from '../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { RenameInputField, CONTEXT_RENAME_INPUT_VISIBLE } from './renameInputField.js';\r\nimport { RenameProviderRegistry } from '../../common/modes.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { MessageController } from '../message/messageController.js';\r\nimport { EditorStateCancellationTokenSource } from '../../browser/core/editorState.js';\r\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\r\nimport { IBulkEditService, ResourceEdit } from '../../browser/services/bulkEditService.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { CancellationToken, CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { IdleValue, raceCancellation } from '../../../base/common/async.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { Registry } from '../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../platform/configuration/common/configurationRegistry.js';\r\nimport { ITextResourceConfigurationService } from '../../common/services/textResourceConfigurationService.js';\r\nimport { assertType } from '../../../base/common/types.js';\r\nclass RenameSkeleton {\r\n    constructor(model, position) {\r\n        this.model = model;\r\n        this.position = position;\r\n        this._providerRenameIdx = 0;\r\n        this._providers = RenameProviderRegistry.ordered(model);\r\n    }\r\n    hasProvider() {\r\n        return this._providers.length > 0;\r\n    }\r\n    resolveRenameLocation(token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const rejects = [];\r\n            for (this._providerRenameIdx = 0; this._providerRenameIdx < this._providers.length; this._providerRenameIdx++) {\r\n                const provider = this._providers[this._providerRenameIdx];\r\n                if (!provider.resolveRenameLocation) {\r\n                    break;\r\n                }\r\n                let res = yield provider.resolveRenameLocation(this.model, this.position, token);\r\n                if (!res) {\r\n                    continue;\r\n                }\r\n                if (res.rejectReason) {\r\n                    rejects.push(res.rejectReason);\r\n                    continue;\r\n                }\r\n                return res;\r\n            }\r\n            const word = this.model.getWordAtPosition(this.position);\r\n            if (!word) {\r\n                return {\r\n                    range: Range.fromPositions(this.position),\r\n                    text: '',\r\n                    rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\r\n                };\r\n            }\r\n            return {\r\n                range: new Range(this.position.lineNumber, word.startColumn, this.position.lineNumber, word.endColumn),\r\n                text: word.word,\r\n                rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\r\n            };\r\n        });\r\n    }\r\n    provideRenameEdits(newName, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this._provideRenameEdits(newName, this._providerRenameIdx, [], token);\r\n        });\r\n    }\r\n    _provideRenameEdits(newName, i, rejects, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const provider = this._providers[i];\r\n            if (!provider) {\r\n                return {\r\n                    edits: [],\r\n                    rejectReason: rejects.join('\\n')\r\n                };\r\n            }\r\n            const result = yield provider.provideRenameEdits(this.model, this.position, newName, token);\r\n            if (!result) {\r\n                return this._provideRenameEdits(newName, i + 1, rejects.concat(nls.localize('no result', \"No result.\")), token);\r\n            }\r\n            else if (result.rejectReason) {\r\n                return this._provideRenameEdits(newName, i + 1, rejects.concat(result.rejectReason), token);\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n}\r\nexport function rename(model, position, newName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const skeleton = new RenameSkeleton(model, position);\r\n        const loc = yield skeleton.resolveRenameLocation(CancellationToken.None);\r\n        if (loc === null || loc === void 0 ? void 0 : loc.rejectReason) {\r\n            return { edits: [], rejectReason: loc.rejectReason };\r\n        }\r\n        return skeleton.provideRenameEdits(newName, CancellationToken.None);\r\n    });\r\n}\r\n// ---  register actions and commands\r\nlet RenameController = class RenameController {\r\n    constructor(editor, _instaService, _notificationService, _bulkEditService, _progressService, _logService, _configService) {\r\n        this.editor = editor;\r\n        this._instaService = _instaService;\r\n        this._notificationService = _notificationService;\r\n        this._bulkEditService = _bulkEditService;\r\n        this._progressService = _progressService;\r\n        this._logService = _logService;\r\n        this._configService = _configService;\r\n        this._dispoableStore = new DisposableStore();\r\n        this._cts = new CancellationTokenSource();\r\n        this._renameInputField = this._dispoableStore.add(new IdleValue(() => this._dispoableStore.add(this._instaService.createInstance(RenameInputField, this.editor, ['acceptRenameInput', 'acceptRenameInputWithPreview']))));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(RenameController.ID);\r\n    }\r\n    dispose() {\r\n        this._dispoableStore.dispose();\r\n        this._cts.dispose(true);\r\n    }\r\n    run() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this._cts.dispose(true);\r\n            if (!this.editor.hasModel()) {\r\n                return undefined;\r\n            }\r\n            const position = this.editor.getPosition();\r\n            const skeleton = new RenameSkeleton(this.editor.getModel(), position);\r\n            if (!skeleton.hasProvider()) {\r\n                return undefined;\r\n            }\r\n            this._cts = new EditorStateCancellationTokenSource(this.editor, 4 /* Position */ | 1 /* Value */);\r\n            // resolve rename location\r\n            let loc;\r\n            try {\r\n                const resolveLocationOperation = skeleton.resolveRenameLocation(this._cts.token);\r\n                this._progressService.showWhile(resolveLocationOperation, 250);\r\n                loc = yield resolveLocationOperation;\r\n            }\r\n            catch (e) {\r\n                MessageController.get(this.editor).showMessage(e || nls.localize('resolveRenameLocationFailed', \"An unknown error occurred while resolving rename location\"), position);\r\n                return undefined;\r\n            }\r\n            if (!loc) {\r\n                return undefined;\r\n            }\r\n            if (loc.rejectReason) {\r\n                MessageController.get(this.editor).showMessage(loc.rejectReason, position);\r\n                return undefined;\r\n            }\r\n            if (this._cts.token.isCancellationRequested) {\r\n                return undefined;\r\n            }\r\n            this._cts.dispose();\r\n            this._cts = new EditorStateCancellationTokenSource(this.editor, 4 /* Position */ | 1 /* Value */, loc.range);\r\n            // do rename at location\r\n            let selection = this.editor.getSelection();\r\n            let selectionStart = 0;\r\n            let selectionEnd = loc.text.length;\r\n            if (!Range.isEmpty(selection) && !Range.spansMultipleLines(selection) && Range.containsRange(loc.range, selection)) {\r\n                selectionStart = Math.max(0, selection.startColumn - loc.range.startColumn);\r\n                selectionEnd = Math.min(loc.range.endColumn, selection.endColumn) - loc.range.startColumn;\r\n            }\r\n            const supportPreview = this._bulkEditService.hasPreviewHandler() && this._configService.getValue(this.editor.getModel().uri, 'editor.rename.enablePreview');\r\n            const inputFieldResult = yield this._renameInputField.value.getInput(loc.range, loc.text, selectionStart, selectionEnd, supportPreview, this._cts.token);\r\n            // no result, only hint to focus the editor or not\r\n            if (typeof inputFieldResult === 'boolean') {\r\n                if (inputFieldResult) {\r\n                    this.editor.focus();\r\n                }\r\n                return undefined;\r\n            }\r\n            this.editor.focus();\r\n            const renameOperation = raceCancellation(skeleton.provideRenameEdits(inputFieldResult.newName, this._cts.token), this._cts.token).then((renameResult) => __awaiter(this, void 0, void 0, function* () {\r\n                if (!renameResult || !this.editor.hasModel()) {\r\n                    return;\r\n                }\r\n                if (renameResult.rejectReason) {\r\n                    this._notificationService.info(renameResult.rejectReason);\r\n                    return;\r\n                }\r\n                this._bulkEditService.apply(ResourceEdit.convert(renameResult), {\r\n                    editor: this.editor,\r\n                    showPreview: inputFieldResult.wantsPreview,\r\n                    label: nls.localize('label', \"Renaming '{0}'\", loc === null || loc === void 0 ? void 0 : loc.text),\r\n                    quotableLabel: nls.localize('quotableLabel', \"Renaming {0}\", loc === null || loc === void 0 ? void 0 : loc.text),\r\n                }).then(result => {\r\n                    if (result.ariaSummary) {\r\n                        alert(nls.localize('aria', \"Successfully renamed '{0}' to '{1}'. Summary: {2}\", loc.text, inputFieldResult.newName, result.ariaSummary));\r\n                    }\r\n                }).catch(err => {\r\n                    this._notificationService.error(nls.localize('rename.failedApply', \"Rename failed to apply edits\"));\r\n                    this._logService.error(err);\r\n                });\r\n            }), err => {\r\n                this._notificationService.error(nls.localize('rename.failed', \"Rename failed to compute edits\"));\r\n                this._logService.error(err);\r\n            });\r\n            this._progressService.showWhile(renameOperation, 250);\r\n            return renameOperation;\r\n        });\r\n    }\r\n    acceptRenameInput(wantsPreview) {\r\n        this._renameInputField.value.acceptInput(wantsPreview);\r\n    }\r\n    cancelRenameInput() {\r\n        this._renameInputField.value.cancelInput(true);\r\n    }\r\n};\r\nRenameController.ID = 'editor.contrib.renameController';\r\nRenameController = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, INotificationService),\r\n    __param(3, IBulkEditService),\r\n    __param(4, IEditorProgressService),\r\n    __param(5, ILogService),\r\n    __param(6, ITextResourceConfigurationService)\r\n], RenameController);\r\n// ---- action implementation\r\nexport class RenameAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.rename',\r\n            label: nls.localize('rename.label', \"Rename Symbol\"),\r\n            alias: 'Rename Symbol',\r\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 60 /* F2 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: '1_modification',\r\n                order: 1.1\r\n            }\r\n        });\r\n    }\r\n    runCommand(accessor, args) {\r\n        const editorService = accessor.get(ICodeEditorService);\r\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\r\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\r\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\r\n                if (!editor) {\r\n                    return;\r\n                }\r\n                editor.setPosition(pos);\r\n                editor.invokeWithinContext(accessor => {\r\n                    this.reportTelemetry(accessor, editor);\r\n                    return this.run(accessor, editor);\r\n                });\r\n            }, onUnexpectedError);\r\n        }\r\n        return super.runCommand(accessor, args);\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = RenameController.get(editor);\r\n        if (controller) {\r\n            return controller.run();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n}\r\nregisterEditorContribution(RenameController.ID, RenameController);\r\nregisterEditorAction(RenameAction);\r\nconst RenameCommand = EditorCommand.bindToContribution(RenameController.get);\r\nregisterEditorCommand(new RenameCommand({\r\n    id: 'acceptRenameInput',\r\n    precondition: CONTEXT_RENAME_INPUT_VISIBLE,\r\n    handler: x => x.acceptRenameInput(false),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 99,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new RenameCommand({\r\n    id: 'acceptRenameInputWithPreview',\r\n    precondition: ContextKeyExpr.and(CONTEXT_RENAME_INPUT_VISIBLE, ContextKeyExpr.has('config.editor.rename.enablePreview')),\r\n    handler: x => x.acceptRenameInput(true),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 99,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 1024 /* Shift */ + 3 /* Enter */\r\n    }\r\n}));\r\nregisterEditorCommand(new RenameCommand({\r\n    id: 'cancelRenameInput',\r\n    precondition: CONTEXT_RENAME_INPUT_VISIBLE,\r\n    handler: x => x.cancelRenameInput(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 99,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\n// ---- api bridge command\r\nregisterModelAndPositionCommand('_executeDocumentRenameProvider', function (model, position, ...args) {\r\n    const [newName] = args;\r\n    assertType(typeof newName === 'string');\r\n    return rename(model, position, newName);\r\n});\r\n//todo@jrieken use editor options world\r\nRegistry.as(Extensions.Configuration).registerConfiguration({\r\n    id: 'editor',\r\n    properties: {\r\n        'editor.rename.enablePreview': {\r\n            scope: 5 /* LANGUAGE_OVERRIDABLE */,\r\n            description: nls.localize('enablePreview', \"Enable/disable the ability to preview changes before renaming\"),\r\n            default: true,\r\n            type: 'boolean'\r\n        }\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../../common/core/range.js';\r\nimport { isUpperAsciiLetter, isLowerAsciiLetter } from '../../../base/common/strings.js';\r\nexport class WordSelectionRangeProvider {\r\n    provideSelectionRanges(model, positions) {\r\n        const result = [];\r\n        for (const position of positions) {\r\n            const bucket = [];\r\n            result.push(bucket);\r\n            this._addInWordRanges(bucket, model, position);\r\n            this._addWordRanges(bucket, model, position);\r\n            this._addWhitespaceLine(bucket, model, position);\r\n            bucket.push({ range: model.getFullModelRange() });\r\n        }\r\n        return result;\r\n    }\r\n    _addInWordRanges(bucket, model, pos) {\r\n        const obj = model.getWordAtPosition(pos);\r\n        if (!obj) {\r\n            return;\r\n        }\r\n        let { word, startColumn } = obj;\r\n        let offset = pos.column - startColumn;\r\n        let start = offset;\r\n        let end = offset;\r\n        let lastCh = 0;\r\n        // LEFT anchor (start)\r\n        for (; start >= 0; start--) {\r\n            let ch = word.charCodeAt(start);\r\n            if ((start !== offset) && (ch === 95 /* Underline */ || ch === 45 /* Dash */)) {\r\n                // foo-bar OR foo_bar\r\n                break;\r\n            }\r\n            else if (isLowerAsciiLetter(ch) && isUpperAsciiLetter(lastCh)) {\r\n                // fooBar\r\n                break;\r\n            }\r\n            lastCh = ch;\r\n        }\r\n        start += 1;\r\n        // RIGHT anchor (end)\r\n        for (; end < word.length; end++) {\r\n            let ch = word.charCodeAt(end);\r\n            if (isUpperAsciiLetter(ch) && isLowerAsciiLetter(lastCh)) {\r\n                // fooBar\r\n                break;\r\n            }\r\n            else if (ch === 95 /* Underline */ || ch === 45 /* Dash */) {\r\n                // foo-bar OR foo_bar\r\n                break;\r\n            }\r\n            lastCh = ch;\r\n        }\r\n        if (start < end) {\r\n            bucket.push({ range: new Range(pos.lineNumber, startColumn + start, pos.lineNumber, startColumn + end) });\r\n        }\r\n    }\r\n    _addWordRanges(bucket, model, pos) {\r\n        const word = model.getWordAtPosition(pos);\r\n        if (word) {\r\n            bucket.push({ range: new Range(pos.lineNumber, word.startColumn, pos.lineNumber, word.endColumn) });\r\n        }\r\n    }\r\n    _addWhitespaceLine(bucket, model, pos) {\r\n        if (model.getLineLength(pos.lineNumber) > 0\r\n            && model.getLineFirstNonWhitespaceColumn(pos.lineNumber) === 0\r\n            && model.getLineLastNonWhitespaceColumn(pos.lineNumber) === 0) {\r\n            bucket.push({ range: new Range(pos.lineNumber, 1, pos.lineNumber, model.getLineMaxColumn(pos.lineNumber)) });\r\n        }\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution, registerModelCommand } from '../../browser/editorExtensions.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport * as modes from '../../common/modes.js';\r\nimport * as nls from '../../../nls.js';\r\nimport { MenuId } from '../../../platform/actions/common/actions.js';\r\nimport { WordSelectionRangeProvider } from './wordSelections.js';\r\nimport { BracketSelectionRangeProvider } from './bracketSelections.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nimport { onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nclass SelectionRanges {\r\n    constructor(index, ranges) {\r\n        this.index = index;\r\n        this.ranges = ranges;\r\n    }\r\n    mov(fwd) {\r\n        let index = this.index + (fwd ? 1 : -1);\r\n        if (index < 0 || index >= this.ranges.length) {\r\n            return this;\r\n        }\r\n        const res = new SelectionRanges(index, this.ranges);\r\n        if (res.ranges[index].equalsRange(this.ranges[this.index])) {\r\n            // next range equals this range, retry with next-next\r\n            return res.mov(fwd);\r\n        }\r\n        return res;\r\n    }\r\n}\r\nclass SmartSelectController {\r\n    constructor(_editor) {\r\n        this._editor = _editor;\r\n        this._ignoreSelection = false;\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(SmartSelectController.ID);\r\n    }\r\n    dispose() {\r\n        var _a;\r\n        (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n    }\r\n    run(forward) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            const selections = this._editor.getSelections();\r\n            const model = this._editor.getModel();\r\n            if (!modes.SelectionRangeRegistry.has(model)) {\r\n                return;\r\n            }\r\n            if (!this._state) {\r\n                yield provideSelectionRanges(model, selections.map(s => s.getPosition()), this._editor.getOption(100 /* smartSelect */), CancellationToken.None).then(ranges => {\r\n                    var _a;\r\n                    if (!arrays.isNonEmptyArray(ranges) || ranges.length !== selections.length) {\r\n                        // invalid result\r\n                        return;\r\n                    }\r\n                    if (!this._editor.hasModel() || !arrays.equals(this._editor.getSelections(), selections, (a, b) => a.equalsSelection(b))) {\r\n                        // invalid editor state\r\n                        return;\r\n                    }\r\n                    for (let i = 0; i < ranges.length; i++) {\r\n                        ranges[i] = ranges[i].filter(range => {\r\n                            // filter ranges inside the selection\r\n                            return range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());\r\n                        });\r\n                        // prepend current selection\r\n                        ranges[i].unshift(selections[i]);\r\n                    }\r\n                    this._state = ranges.map(ranges => new SelectionRanges(0, ranges));\r\n                    // listen to caret move and forget about state\r\n                    (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n                    this._selectionListener = this._editor.onDidChangeCursorPosition(() => {\r\n                        var _a;\r\n                        if (!this._ignoreSelection) {\r\n                            (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\r\n                            this._state = undefined;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n            if (!this._state) {\r\n                // no state\r\n                return;\r\n            }\r\n            this._state = this._state.map(state => state.mov(forward));\r\n            const newSelections = this._state.map(state => Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition()));\r\n            this._ignoreSelection = true;\r\n            try {\r\n                this._editor.setSelections(newSelections);\r\n            }\r\n            finally {\r\n                this._ignoreSelection = false;\r\n            }\r\n        });\r\n    }\r\n}\r\nSmartSelectController.ID = 'editor.contrib.smartSelectController';\r\nclass AbstractSmartSelect extends EditorAction {\r\n    constructor(forward, opts) {\r\n        super(opts);\r\n        this._forward = forward;\r\n    }\r\n    run(_accessor, editor) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let controller = SmartSelectController.get(editor);\r\n            if (controller) {\r\n                yield controller.run(this._forward);\r\n            }\r\n        });\r\n    }\r\n}\r\nclass GrowSelectionAction extends AbstractSmartSelect {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.smartSelect.expand',\r\n            label: nls.localize('smartSelect.expand', \"Expand Selection\"),\r\n            alias: 'Expand Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 17 /* RightArrow */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 256 /* WinCtrl */ | 1024 /* Shift */ | 17 /* RightArrow */,\r\n                    secondary: [256 /* WinCtrl */ | 1024 /* Shift */ | 17 /* RightArrow */],\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '1_basic',\r\n                title: nls.localize({ key: 'miSmartSelectGrow', comment: ['&& denotes a mnemonic'] }, \"&&Expand Selection\"),\r\n                order: 2\r\n            }\r\n        });\r\n    }\r\n}\r\n// renamed command id\r\nCommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');\r\nclass ShrinkSelectionAction extends AbstractSmartSelect {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.smartSelect.shrink',\r\n            label: nls.localize('smartSelect.shrink', \"Shrink Selection\"),\r\n            alias: 'Shrink Selection',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 512 /* Alt */ | 15 /* LeftArrow */,\r\n                mac: {\r\n                    primary: 2048 /* CtrlCmd */ | 256 /* WinCtrl */ | 1024 /* Shift */ | 15 /* LeftArrow */,\r\n                    secondary: [256 /* WinCtrl */ | 1024 /* Shift */ | 15 /* LeftArrow */],\r\n                },\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            menuOpts: {\r\n                menuId: MenuId.MenubarSelectionMenu,\r\n                group: '1_basic',\r\n                title: nls.localize({ key: 'miSmartSelectShrink', comment: ['&& denotes a mnemonic'] }, \"&&Shrink Selection\"),\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorContribution(SmartSelectController.ID, SmartSelectController);\r\nregisterEditorAction(GrowSelectionAction);\r\nregisterEditorAction(ShrinkSelectionAction);\r\n// word selection\r\nmodes.SelectionRangeRegistry.register('*', new WordSelectionRangeProvider());\r\nexport function provideSelectionRanges(model, positions, options, token) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const providers = modes.SelectionRangeRegistry.all(model);\r\n        if (providers.length === 1) {\r\n            // add word selection and bracket selection when no provider exists\r\n            providers.unshift(new BracketSelectionRangeProvider());\r\n        }\r\n        let work = [];\r\n        let allRawRanges = [];\r\n        for (const provider of providers) {\r\n            work.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then(allProviderRanges => {\r\n                if (arrays.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) {\r\n                    for (let i = 0; i < positions.length; i++) {\r\n                        if (!allRawRanges[i]) {\r\n                            allRawRanges[i] = [];\r\n                        }\r\n                        for (const oneProviderRanges of allProviderRanges[i]) {\r\n                            if (Range.isIRange(oneProviderRanges.range) && Range.containsPosition(oneProviderRanges.range, positions[i])) {\r\n                                allRawRanges[i].push(Range.lift(oneProviderRanges.range));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }, onUnexpectedExternalError));\r\n        }\r\n        yield Promise.all(work);\r\n        return allRawRanges.map(oneRawRanges => {\r\n            if (oneRawRanges.length === 0) {\r\n                return [];\r\n            }\r\n            // sort all by start/end position\r\n            oneRawRanges.sort((a, b) => {\r\n                if (Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\r\n                    return 1;\r\n                }\r\n                else if (Position.isBefore(b.getStartPosition(), a.getStartPosition())) {\r\n                    return -1;\r\n                }\r\n                else if (Position.isBefore(a.getEndPosition(), b.getEndPosition())) {\r\n                    return -1;\r\n                }\r\n                else if (Position.isBefore(b.getEndPosition(), a.getEndPosition())) {\r\n                    return 1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            // remove ranges that don't contain the former range or that are equal to the\r\n            // former range\r\n            let oneRanges = [];\r\n            let last;\r\n            for (const range of oneRawRanges) {\r\n                if (!last || (Range.containsRange(range, last) && !Range.equalsRange(range, last))) {\r\n                    oneRanges.push(range);\r\n                    last = range;\r\n                }\r\n            }\r\n            if (!options.selectLeadingAndTrailingWhitespace) {\r\n                return oneRanges;\r\n            }\r\n            // add ranges that expand trivia at line starts and ends whenever a range\r\n            // wraps onto the a new line\r\n            let oneRangesWithTrivia = [oneRanges[0]];\r\n            for (let i = 1; i < oneRanges.length; i++) {\r\n                const prev = oneRanges[i - 1];\r\n                const cur = oneRanges[i];\r\n                if (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {\r\n                    // add line/block range without leading/failing whitespace\r\n                    const rangeNoWhitespace = new Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));\r\n                    if (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev) && cur.containsRange(rangeNoWhitespace) && !cur.equalsRange(rangeNoWhitespace)) {\r\n                        oneRangesWithTrivia.push(rangeNoWhitespace);\r\n                    }\r\n                    // add line/block range\r\n                    const rangeFull = new Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));\r\n                    if (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace) && cur.containsRange(rangeFull) && !cur.equalsRange(rangeFull)) {\r\n                        oneRangesWithTrivia.push(rangeFull);\r\n                    }\r\n                }\r\n                oneRangesWithTrivia.push(cur);\r\n            }\r\n            return oneRangesWithTrivia;\r\n        });\r\n    });\r\n}\r\nregisterModelCommand('_executeSelectionRangeProvider', function (model, ...args) {\r\n    const [positions] = args;\r\n    return provideSelectionRanges(model, positions, { selectLeadingAndTrailingWhitespace: true }, CancellationToken.None);\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { StopWatch } from '../../../base/common/stopwatch.js';\r\nclass ForceRetokenizeAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.forceRetokenize',\r\n            label: nls.localize('forceRetokenize', \"Developer: Force Retokenize\"),\r\n            alias: 'Developer: Force Retokenize',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = editor.getModel();\r\n        model.resetTokenization();\r\n        const sw = new StopWatch(true);\r\n        model.forceTokenization(model.getLineCount());\r\n        sw.stop();\r\n        console.log(`tokenization took ${sw.elapsed()}`);\r\n    }\r\n}\r\nregisterEditorAction(ForceRetokenizeAction);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nimport { EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { TabFocus } from '../../common/config/commonEditorConfig.js';\r\nexport class ToggleTabFocusModeAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: ToggleTabFocusModeAction.ID,\r\n            label: nls.localize({ key: 'toggle.tabMovesFocus', comment: ['Turn on/off use of tab key for moving focus around VS Code'] }, \"Toggle Tab Key Moves Focus\"),\r\n            alias: 'Toggle Tab Key Moves Focus',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: null,\r\n                primary: 2048 /* CtrlCmd */ | 43 /* KEY_M */,\r\n                mac: { primary: 256 /* WinCtrl */ | 1024 /* Shift */ | 43 /* KEY_M */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        const oldValue = TabFocus.getTabFocusMode();\r\n        const newValue = !oldValue;\r\n        TabFocus.setTabFocusMode(newValue);\r\n        if (newValue) {\r\n            alert(nls.localize('toggle.tabMovesFocus.on', \"Pressing Tab will now move focus to the next focusable element\"));\r\n        }\r\n        else {\r\n            alert(nls.localize('toggle.tabMovesFocus.off', \"Pressing Tab will now insert the tab character\"));\r\n        }\r\n    }\r\n}\r\nToggleTabFocusModeAction.ID = 'editor.action.toggleTabFocusMode';\r\nregisterEditorAction(ToggleTabFocusModeAction);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\r\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\r\nimport { basename } from '../../../base/common/resources.js';\r\nconst ignoreUnusualLineTerminators = 'ignoreUnusualLineTerminators';\r\nfunction writeIgnoreState(codeEditorService, model, state) {\r\n    codeEditorService.setModelProperty(model.uri, ignoreUnusualLineTerminators, state);\r\n}\r\nfunction readIgnoreState(codeEditorService, model) {\r\n    return codeEditorService.getModelProperty(model.uri, ignoreUnusualLineTerminators);\r\n}\r\nlet UnusualLineTerminatorsDetector = class UnusualLineTerminatorsDetector extends Disposable {\r\n    constructor(_editor, _dialogService, _codeEditorService) {\r\n        super();\r\n        this._editor = _editor;\r\n        this._dialogService = _dialogService;\r\n        this._codeEditorService = _codeEditorService;\r\n        this._config = this._editor.getOption(111 /* unusualLineTerminators */);\r\n        this._register(this._editor.onDidChangeConfiguration((e) => {\r\n            if (e.hasChanged(111 /* unusualLineTerminators */)) {\r\n                this._config = this._editor.getOption(111 /* unusualLineTerminators */);\r\n                this._checkForUnusualLineTerminators();\r\n            }\r\n        }));\r\n        this._register(this._editor.onDidChangeModel(() => {\r\n            this._checkForUnusualLineTerminators();\r\n        }));\r\n        this._register(this._editor.onDidChangeModelContent((e) => {\r\n            if (e.isUndoing) {\r\n                // skip checking in case of undoing\r\n                return;\r\n            }\r\n            this._checkForUnusualLineTerminators();\r\n        }));\r\n    }\r\n    _checkForUnusualLineTerminators() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (this._config === 'off') {\r\n                return;\r\n            }\r\n            if (!this._editor.hasModel()) {\r\n                return;\r\n            }\r\n            const model = this._editor.getModel();\r\n            if (!model.mightContainUnusualLineTerminators()) {\r\n                return;\r\n            }\r\n            const ignoreState = readIgnoreState(this._codeEditorService, model);\r\n            if (ignoreState === true) {\r\n                // this model should be ignored\r\n                return;\r\n            }\r\n            if (this._editor.getOption(78 /* readOnly */)) {\r\n                // read only editor => sorry!\r\n                return;\r\n            }\r\n            if (this._config === 'auto') {\r\n                // just do it!\r\n                model.removeUnusualLineTerminators(this._editor.getSelections());\r\n                return;\r\n            }\r\n            const result = yield this._dialogService.confirm({\r\n                title: nls.localize('unusualLineTerminators.title', \"Unusual Line Terminators\"),\r\n                message: nls.localize('unusualLineTerminators.message', \"Detected unusual line terminators\"),\r\n                detail: nls.localize('unusualLineTerminators.detail', \"The file '{0}' contains one or more unusual line terminator characters, like Line Separator (LS) or Paragraph Separator (PS).\\n\\nIt is recommended to remove them from the file. This can be configured via `editor.unusualLineTerminators`.\", basename(model.uri)),\r\n                primaryButton: nls.localize('unusualLineTerminators.fix', \"Remove Unusual Line Terminators\"),\r\n                secondaryButton: nls.localize('unusualLineTerminators.ignore', \"Ignore\")\r\n            });\r\n            if (!result.confirmed) {\r\n                // this model should be ignored\r\n                writeIgnoreState(this._codeEditorService, model, true);\r\n                return;\r\n            }\r\n            model.removeUnusualLineTerminators(this._editor.getSelections());\r\n        });\r\n    }\r\n};\r\nUnusualLineTerminatorsDetector.ID = 'editor.contrib.unusualLineTerminatorsDetector';\r\nUnusualLineTerminatorsDetector = __decorate([\r\n    __param(1, IDialogService),\r\n    __param(2, ICodeEditorService)\r\n], UnusualLineTerminatorsDetector);\r\nregisterEditorContribution(UnusualLineTerminatorsDetector.ID, UnusualLineTerminatorsDetector);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { RunOnceScheduler, createCancelablePromise } from '../../../base/common/async.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { DocumentRangeSemanticTokensProviderRegistry } from '../../common/modes.js';\r\nimport { IModelService } from '../../common/services/modelService.js';\r\nimport { toMultilineTokens2 } from '../../common/services/semanticTokensProviderStyling.js';\r\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\r\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\r\nimport { isSemanticColoringEnabled, SEMANTIC_HIGHLIGHTING_SETTING_ID } from '../../common/services/modelServiceImpl.js';\r\nimport { getDocumentRangeSemanticTokensProvider } from '../../common/services/getSemanticTokens.js';\r\nlet ViewportSemanticTokensContribution = class ViewportSemanticTokensContribution extends Disposable {\r\n    constructor(editor, _modelService, _themeService, _configurationService) {\r\n        super();\r\n        this._modelService = _modelService;\r\n        this._themeService = _themeService;\r\n        this._configurationService = _configurationService;\r\n        this._editor = editor;\r\n        this._tokenizeViewport = new RunOnceScheduler(() => this._tokenizeViewportNow(), 100);\r\n        this._outstandingRequests = [];\r\n        this._register(this._editor.onDidScrollChange(() => {\r\n            this._tokenizeViewport.schedule();\r\n        }));\r\n        this._register(this._editor.onDidChangeModel(() => {\r\n            this._cancelAll();\r\n            this._tokenizeViewport.schedule();\r\n        }));\r\n        this._register(this._editor.onDidChangeModelContent((e) => {\r\n            this._cancelAll();\r\n            this._tokenizeViewport.schedule();\r\n        }));\r\n        this._register(DocumentRangeSemanticTokensProviderRegistry.onDidChange(() => {\r\n            this._cancelAll();\r\n            this._tokenizeViewport.schedule();\r\n        }));\r\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\r\n            if (e.affectsConfiguration(SEMANTIC_HIGHLIGHTING_SETTING_ID)) {\r\n                this._cancelAll();\r\n                this._tokenizeViewport.schedule();\r\n            }\r\n        }));\r\n        this._register(this._themeService.onDidColorThemeChange(() => {\r\n            this._cancelAll();\r\n            this._tokenizeViewport.schedule();\r\n        }));\r\n    }\r\n    _cancelAll() {\r\n        for (const request of this._outstandingRequests) {\r\n            request.cancel();\r\n        }\r\n        this._outstandingRequests = [];\r\n    }\r\n    _removeOutstandingRequest(req) {\r\n        for (let i = 0, len = this._outstandingRequests.length; i < len; i++) {\r\n            if (this._outstandingRequests[i] === req) {\r\n                this._outstandingRequests.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    _tokenizeViewportNow() {\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        const model = this._editor.getModel();\r\n        if (model.hasCompleteSemanticTokens()) {\r\n            return;\r\n        }\r\n        if (!isSemanticColoringEnabled(model, this._themeService, this._configurationService)) {\r\n            if (model.hasSomeSemanticTokens()) {\r\n                model.setSemanticTokens(null, false);\r\n            }\r\n            return;\r\n        }\r\n        const provider = getDocumentRangeSemanticTokensProvider(model);\r\n        if (!provider) {\r\n            if (model.hasSomeSemanticTokens()) {\r\n                model.setSemanticTokens(null, false);\r\n            }\r\n            return;\r\n        }\r\n        const styling = this._modelService.getSemanticTokensProviderStyling(provider);\r\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\r\n        this._outstandingRequests = this._outstandingRequests.concat(visibleRanges.map(range => this._requestRange(model, range, provider, styling)));\r\n    }\r\n    _requestRange(model, range, provider, styling) {\r\n        const requestVersionId = model.getVersionId();\r\n        const request = createCancelablePromise(token => Promise.resolve(provider.provideDocumentRangeSemanticTokens(model, range, token)));\r\n        request.then((r) => {\r\n            if (!r || model.isDisposed() || model.getVersionId() !== requestVersionId) {\r\n                return;\r\n            }\r\n            model.setPartialSemanticTokens(range, toMultilineTokens2(r, styling, model.getLanguageIdentifier()));\r\n        }).then(() => this._removeOutstandingRequest(request), () => this._removeOutstandingRequest(request));\r\n        return request;\r\n    }\r\n};\r\nViewportSemanticTokensContribution.ID = 'editor.contrib.viewportSemanticTokens';\r\nViewportSemanticTokensContribution = __decorate([\r\n    __param(1, IModelService),\r\n    __param(2, IThemeService),\r\n    __param(3, IConfigurationService)\r\n], ViewportSemanticTokensContribution);\r\nregisterEditorContribution(ViewportSemanticTokensContribution.ID, ViewportSemanticTokensContribution);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport * as nls from '../../../nls.js';\r\nimport * as arrays from '../../../base/common/arrays.js';\r\nimport { createCancelablePromise, first, timeout } from '../../../base/common/async.js';\r\nimport { CancellationToken } from '../../../base/common/cancellation.js';\r\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../base/common/errors.js';\r\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution, registerModelAndPositionCommand } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { OverviewRulerLane } from '../../common/model.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { DocumentHighlightKind, DocumentHighlightProviderRegistry } from '../../common/modes.js';\r\nimport { IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { activeContrastBorder, editorSelectionHighlight, editorSelectionHighlightBorder, overviewRulerSelectionHighlightForeground, registerColor } from '../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant, themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nimport { alert } from '../../../base/browser/ui/aria/aria.js';\r\nconst editorWordHighlight = registerColor('editor.wordHighlightBackground', { dark: '#575757B8', light: '#57575740', hc: null }, nls.localize('wordHighlight', 'Background color of a symbol during read-access, like reading a variable. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nconst editorWordHighlightStrong = registerColor('editor.wordHighlightStrongBackground', { dark: '#004972B8', light: '#0e639c40', hc: null }, nls.localize('wordHighlightStrong', 'Background color of a symbol during write-access, like writing to a variable. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nconst editorWordHighlightBorder = registerColor('editor.wordHighlightBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('wordHighlightBorder', 'Border color of a symbol during read-access, like reading a variable.'));\r\nconst editorWordHighlightStrongBorder = registerColor('editor.wordHighlightStrongBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('wordHighlightStrongBorder', 'Border color of a symbol during write-access, like writing to a variable.'));\r\nconst overviewRulerWordHighlightForeground = registerColor('editorOverviewRuler.wordHighlightForeground', { dark: '#A0A0A0CC', light: '#A0A0A0CC', hc: '#A0A0A0CC' }, nls.localize('overviewRulerWordHighlightForeground', 'Overview ruler marker color for symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nconst overviewRulerWordHighlightStrongForeground = registerColor('editorOverviewRuler.wordHighlightStrongForeground', { dark: '#C0A0C0CC', light: '#C0A0C0CC', hc: '#C0A0C0CC' }, nls.localize('overviewRulerWordHighlightStrongForeground', 'Overview ruler marker color for write-access symbol highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\r\nconst ctxHasWordHighlights = new RawContextKey('hasWordHighlights', false);\r\nexport function getOccurrencesAtPosition(model, position, token) {\r\n    const orderedByScore = DocumentHighlightProviderRegistry.ordered(model);\r\n    // in order of score ask the occurrences provider\r\n    // until someone response with a good result\r\n    // (good = none empty array)\r\n    return first(orderedByScore.map(provider => () => {\r\n        return Promise.resolve(provider.provideDocumentHighlights(model, position, token))\r\n            .then(undefined, onUnexpectedExternalError);\r\n    }), arrays.isNonEmptyArray);\r\n}\r\nclass OccurenceAtPositionRequest {\r\n    constructor(model, selection, wordSeparators) {\r\n        this._wordRange = this._getCurrentWordRange(model, selection);\r\n        this.result = createCancelablePromise(token => this._compute(model, selection, wordSeparators, token));\r\n    }\r\n    _getCurrentWordRange(model, selection) {\r\n        const word = model.getWordAtPosition(selection.getPosition());\r\n        if (word) {\r\n            return new Range(selection.startLineNumber, word.startColumn, selection.startLineNumber, word.endColumn);\r\n        }\r\n        return null;\r\n    }\r\n    isValid(model, selection, decorationIds) {\r\n        const lineNumber = selection.startLineNumber;\r\n        const startColumn = selection.startColumn;\r\n        const endColumn = selection.endColumn;\r\n        const currentWordRange = this._getCurrentWordRange(model, selection);\r\n        let requestIsValid = Boolean(this._wordRange && this._wordRange.equalsRange(currentWordRange));\r\n        // Even if we are on a different word, if that word is in the decorations ranges, the request is still valid\r\n        // (Same symbol)\r\n        for (let i = 0, len = decorationIds.length; !requestIsValid && i < len; i++) {\r\n            let range = model.getDecorationRange(decorationIds[i]);\r\n            if (range && range.startLineNumber === lineNumber) {\r\n                if (range.startColumn <= startColumn && range.endColumn >= endColumn) {\r\n                    requestIsValid = true;\r\n                }\r\n            }\r\n        }\r\n        return requestIsValid;\r\n    }\r\n    cancel() {\r\n        this.result.cancel();\r\n    }\r\n}\r\nclass SemanticOccurenceAtPositionRequest extends OccurenceAtPositionRequest {\r\n    _compute(model, selection, wordSeparators, token) {\r\n        return getOccurrencesAtPosition(model, selection.getPosition(), token).then(value => value || []);\r\n    }\r\n}\r\nclass TextualOccurenceAtPositionRequest extends OccurenceAtPositionRequest {\r\n    constructor(model, selection, wordSeparators) {\r\n        super(model, selection, wordSeparators);\r\n        this._selectionIsEmpty = selection.isEmpty();\r\n    }\r\n    _compute(model, selection, wordSeparators, token) {\r\n        return timeout(250, token).then(() => {\r\n            if (!selection.isEmpty()) {\r\n                return [];\r\n            }\r\n            const word = model.getWordAtPosition(selection.getPosition());\r\n            if (!word || word.word.length > 1000) {\r\n                return [];\r\n            }\r\n            const matches = model.findMatches(word.word, true, false, true, wordSeparators, false);\r\n            return matches.map(m => {\r\n                return {\r\n                    range: m.range,\r\n                    kind: DocumentHighlightKind.Text\r\n                };\r\n            });\r\n        });\r\n    }\r\n    isValid(model, selection, decorationIds) {\r\n        const currentSelectionIsEmpty = selection.isEmpty();\r\n        if (this._selectionIsEmpty !== currentSelectionIsEmpty) {\r\n            return false;\r\n        }\r\n        return super.isValid(model, selection, decorationIds);\r\n    }\r\n}\r\nfunction computeOccurencesAtPosition(model, selection, wordSeparators) {\r\n    if (DocumentHighlightProviderRegistry.has(model)) {\r\n        return new SemanticOccurenceAtPositionRequest(model, selection, wordSeparators);\r\n    }\r\n    return new TextualOccurenceAtPositionRequest(model, selection, wordSeparators);\r\n}\r\nregisterModelAndPositionCommand('_executeDocumentHighlights', (model, position) => getOccurrencesAtPosition(model, position, CancellationToken.None));\r\nclass WordHighlighter {\r\n    constructor(editor, contextKeyService) {\r\n        this.toUnhook = new DisposableStore();\r\n        this.workerRequestTokenId = 0;\r\n        this.workerRequestCompleted = false;\r\n        this.workerRequestValue = [];\r\n        this.lastCursorPositionChangeTime = 0;\r\n        this.renderDecorationsTimer = -1;\r\n        this.editor = editor;\r\n        this._hasWordHighlights = ctxHasWordHighlights.bindTo(contextKeyService);\r\n        this._ignorePositionChangeEvent = false;\r\n        this.occurrencesHighlight = this.editor.getOption(69 /* occurrencesHighlight */);\r\n        this.model = this.editor.getModel();\r\n        this.toUnhook.add(editor.onDidChangeCursorPosition((e) => {\r\n            if (this._ignorePositionChangeEvent) {\r\n                // We are changing the position => ignore this event\r\n                return;\r\n            }\r\n            if (!this.occurrencesHighlight) {\r\n                // Early exit if nothing needs to be done!\r\n                // Leave some form of early exit check here if you wish to continue being a cursor position change listener ;)\r\n                return;\r\n            }\r\n            this._onPositionChanged(e);\r\n        }));\r\n        this.toUnhook.add(editor.onDidChangeModelContent((e) => {\r\n            this._stopAll();\r\n        }));\r\n        this.toUnhook.add(editor.onDidChangeConfiguration((e) => {\r\n            let newValue = this.editor.getOption(69 /* occurrencesHighlight */);\r\n            if (this.occurrencesHighlight !== newValue) {\r\n                this.occurrencesHighlight = newValue;\r\n                this._stopAll();\r\n            }\r\n        }));\r\n        this._decorationIds = [];\r\n        this.workerRequestTokenId = 0;\r\n        this.workerRequest = null;\r\n        this.workerRequestCompleted = false;\r\n        this.lastCursorPositionChangeTime = 0;\r\n        this.renderDecorationsTimer = -1;\r\n    }\r\n    hasDecorations() {\r\n        return (this._decorationIds.length > 0);\r\n    }\r\n    restore() {\r\n        if (!this.occurrencesHighlight) {\r\n            return;\r\n        }\r\n        this._run();\r\n    }\r\n    _getSortedHighlights() {\r\n        return arrays.coalesce(this._decorationIds\r\n            .map((id) => this.model.getDecorationRange(id))\r\n            .sort(Range.compareRangesUsingStarts));\r\n    }\r\n    moveNext() {\r\n        let highlights = this._getSortedHighlights();\r\n        let index = highlights.findIndex((range) => range.containsPosition(this.editor.getPosition()));\r\n        let newIndex = ((index + 1) % highlights.length);\r\n        let dest = highlights[newIndex];\r\n        try {\r\n            this._ignorePositionChangeEvent = true;\r\n            this.editor.setPosition(dest.getStartPosition());\r\n            this.editor.revealRangeInCenterIfOutsideViewport(dest);\r\n            const word = this._getWord();\r\n            if (word) {\r\n                const lineContent = this.editor.getModel().getLineContent(dest.startLineNumber);\r\n                alert(`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`);\r\n            }\r\n        }\r\n        finally {\r\n            this._ignorePositionChangeEvent = false;\r\n        }\r\n    }\r\n    moveBack() {\r\n        let highlights = this._getSortedHighlights();\r\n        let index = highlights.findIndex((range) => range.containsPosition(this.editor.getPosition()));\r\n        let newIndex = ((index - 1 + highlights.length) % highlights.length);\r\n        let dest = highlights[newIndex];\r\n        try {\r\n            this._ignorePositionChangeEvent = true;\r\n            this.editor.setPosition(dest.getStartPosition());\r\n            this.editor.revealRangeInCenterIfOutsideViewport(dest);\r\n            const word = this._getWord();\r\n            if (word) {\r\n                const lineContent = this.editor.getModel().getLineContent(dest.startLineNumber);\r\n                alert(`${lineContent}, ${newIndex + 1} of ${highlights.length} for '${word.word}'`);\r\n            }\r\n        }\r\n        finally {\r\n            this._ignorePositionChangeEvent = false;\r\n        }\r\n    }\r\n    _removeDecorations() {\r\n        if (this._decorationIds.length > 0) {\r\n            // remove decorations\r\n            this._decorationIds = this.editor.deltaDecorations(this._decorationIds, []);\r\n            this._hasWordHighlights.set(false);\r\n        }\r\n    }\r\n    _stopAll() {\r\n        // Remove any existing decorations\r\n        this._removeDecorations();\r\n        // Cancel any renderDecorationsTimer\r\n        if (this.renderDecorationsTimer !== -1) {\r\n            clearTimeout(this.renderDecorationsTimer);\r\n            this.renderDecorationsTimer = -1;\r\n        }\r\n        // Cancel any worker request\r\n        if (this.workerRequest !== null) {\r\n            this.workerRequest.cancel();\r\n            this.workerRequest = null;\r\n        }\r\n        // Invalidate any worker request callback\r\n        if (!this.workerRequestCompleted) {\r\n            this.workerRequestTokenId++;\r\n            this.workerRequestCompleted = true;\r\n        }\r\n    }\r\n    _onPositionChanged(e) {\r\n        // disabled\r\n        if (!this.occurrencesHighlight) {\r\n            this._stopAll();\r\n            return;\r\n        }\r\n        // ignore typing & other\r\n        if (e.reason !== 3 /* Explicit */) {\r\n            this._stopAll();\r\n            return;\r\n        }\r\n        this._run();\r\n    }\r\n    _getWord() {\r\n        let editorSelection = this.editor.getSelection();\r\n        let lineNumber = editorSelection.startLineNumber;\r\n        let startColumn = editorSelection.startColumn;\r\n        return this.model.getWordAtPosition({\r\n            lineNumber: lineNumber,\r\n            column: startColumn\r\n        });\r\n    }\r\n    _run() {\r\n        let editorSelection = this.editor.getSelection();\r\n        // ignore multiline selection\r\n        if (editorSelection.startLineNumber !== editorSelection.endLineNumber) {\r\n            this._stopAll();\r\n            return;\r\n        }\r\n        let startColumn = editorSelection.startColumn;\r\n        let endColumn = editorSelection.endColumn;\r\n        const word = this._getWord();\r\n        // The selection must be inside a word or surround one word at most\r\n        if (!word || word.startColumn > startColumn || word.endColumn < endColumn) {\r\n            this._stopAll();\r\n            return;\r\n        }\r\n        // All the effort below is trying to achieve this:\r\n        // - when cursor is moved to a word, trigger immediately a findOccurrences request\r\n        // - 250ms later after the last cursor move event, render the occurrences\r\n        // - no flickering!\r\n        const workerRequestIsValid = (this.workerRequest && this.workerRequest.isValid(this.model, editorSelection, this._decorationIds));\r\n        // There are 4 cases:\r\n        // a) old workerRequest is valid & completed, renderDecorationsTimer fired\r\n        // b) old workerRequest is valid & completed, renderDecorationsTimer not fired\r\n        // c) old workerRequest is valid, but not completed\r\n        // d) old workerRequest is not valid\r\n        // For a) no action is needed\r\n        // For c), member 'lastCursorPositionChangeTime' will be used when installing the timer so no action is needed\r\n        this.lastCursorPositionChangeTime = (new Date()).getTime();\r\n        if (workerRequestIsValid) {\r\n            if (this.workerRequestCompleted && this.renderDecorationsTimer !== -1) {\r\n                // case b)\r\n                // Delay the firing of renderDecorationsTimer by an extra 250 ms\r\n                clearTimeout(this.renderDecorationsTimer);\r\n                this.renderDecorationsTimer = -1;\r\n                this._beginRenderDecorations();\r\n            }\r\n        }\r\n        else {\r\n            // case d)\r\n            // Stop all previous actions and start fresh\r\n            this._stopAll();\r\n            let myRequestId = ++this.workerRequestTokenId;\r\n            this.workerRequestCompleted = false;\r\n            this.workerRequest = computeOccurencesAtPosition(this.model, this.editor.getSelection(), this.editor.getOption(114 /* wordSeparators */));\r\n            this.workerRequest.result.then(data => {\r\n                if (myRequestId === this.workerRequestTokenId) {\r\n                    this.workerRequestCompleted = true;\r\n                    this.workerRequestValue = data || [];\r\n                    this._beginRenderDecorations();\r\n                }\r\n            }, onUnexpectedError);\r\n        }\r\n    }\r\n    _beginRenderDecorations() {\r\n        let currentTime = (new Date()).getTime();\r\n        let minimumRenderTime = this.lastCursorPositionChangeTime + 250;\r\n        if (currentTime >= minimumRenderTime) {\r\n            // Synchronous\r\n            this.renderDecorationsTimer = -1;\r\n            this.renderDecorations();\r\n        }\r\n        else {\r\n            // Asynchronous\r\n            this.renderDecorationsTimer = setTimeout(() => {\r\n                this.renderDecorations();\r\n            }, (minimumRenderTime - currentTime));\r\n        }\r\n    }\r\n    renderDecorations() {\r\n        this.renderDecorationsTimer = -1;\r\n        let decorations = [];\r\n        for (const info of this.workerRequestValue) {\r\n            if (info.range) {\r\n                decorations.push({\r\n                    range: info.range,\r\n                    options: WordHighlighter._getDecorationOptions(info.kind)\r\n                });\r\n            }\r\n        }\r\n        this._decorationIds = this.editor.deltaDecorations(this._decorationIds, decorations);\r\n        this._hasWordHighlights.set(this.hasDecorations());\r\n    }\r\n    static _getDecorationOptions(kind) {\r\n        if (kind === DocumentHighlightKind.Write) {\r\n            return this._WRITE_OPTIONS;\r\n        }\r\n        else if (kind === DocumentHighlightKind.Text) {\r\n            return this._TEXT_OPTIONS;\r\n        }\r\n        else {\r\n            return this._REGULAR_OPTIONS;\r\n        }\r\n    }\r\n    dispose() {\r\n        this._stopAll();\r\n        this.toUnhook.dispose();\r\n    }\r\n}\r\nWordHighlighter._WRITE_OPTIONS = ModelDecorationOptions.register({\r\n    description: 'word-highlight-strong',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'wordHighlightStrong',\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerWordHighlightStrongForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nWordHighlighter._TEXT_OPTIONS = ModelDecorationOptions.register({\r\n    description: 'selection-highlight',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'selectionHighlight',\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerSelectionHighlightForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nWordHighlighter._REGULAR_OPTIONS = ModelDecorationOptions.register({\r\n    description: 'word-highlight',\r\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\r\n    className: 'wordHighlight',\r\n    overviewRuler: {\r\n        color: themeColorFromId(overviewRulerWordHighlightForeground),\r\n        position: OverviewRulerLane.Center\r\n    }\r\n});\r\nlet WordHighlighterContribution = class WordHighlighterContribution extends Disposable {\r\n    constructor(editor, contextKeyService) {\r\n        super();\r\n        this.wordHighlighter = null;\r\n        const createWordHighlighterIfPossible = () => {\r\n            if (editor.hasModel()) {\r\n                this.wordHighlighter = new WordHighlighter(editor, contextKeyService);\r\n            }\r\n        };\r\n        this._register(editor.onDidChangeModel((e) => {\r\n            if (this.wordHighlighter) {\r\n                this.wordHighlighter.dispose();\r\n                this.wordHighlighter = null;\r\n            }\r\n            createWordHighlighterIfPossible();\r\n        }));\r\n        createWordHighlighterIfPossible();\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(WordHighlighterContribution.ID);\r\n    }\r\n    saveViewState() {\r\n        if (this.wordHighlighter && this.wordHighlighter.hasDecorations()) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    moveNext() {\r\n        if (this.wordHighlighter) {\r\n            this.wordHighlighter.moveNext();\r\n        }\r\n    }\r\n    moveBack() {\r\n        if (this.wordHighlighter) {\r\n            this.wordHighlighter.moveBack();\r\n        }\r\n    }\r\n    restoreViewState(state) {\r\n        if (this.wordHighlighter && state) {\r\n            this.wordHighlighter.restore();\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this.wordHighlighter) {\r\n            this.wordHighlighter.dispose();\r\n            this.wordHighlighter = null;\r\n        }\r\n        super.dispose();\r\n    }\r\n};\r\nWordHighlighterContribution.ID = 'editor.contrib.wordHighlighter';\r\nWordHighlighterContribution = __decorate([\r\n    __param(1, IContextKeyService)\r\n], WordHighlighterContribution);\r\nclass WordHighlightNavigationAction extends EditorAction {\r\n    constructor(next, opts) {\r\n        super(opts);\r\n        this._isNext = next;\r\n    }\r\n    run(accessor, editor) {\r\n        const controller = WordHighlighterContribution.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        if (this._isNext) {\r\n            controller.moveNext();\r\n        }\r\n        else {\r\n            controller.moveBack();\r\n        }\r\n    }\r\n}\r\nclass NextWordHighlightAction extends WordHighlightNavigationAction {\r\n    constructor() {\r\n        super(true, {\r\n            id: 'editor.action.wordHighlight.next',\r\n            label: nls.localize('wordHighlight.next.label', \"Go to Next Symbol Highlight\"),\r\n            alias: 'Go to Next Symbol Highlight',\r\n            precondition: ctxHasWordHighlights,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 65 /* F7 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nclass PrevWordHighlightAction extends WordHighlightNavigationAction {\r\n    constructor() {\r\n        super(false, {\r\n            id: 'editor.action.wordHighlight.prev',\r\n            label: nls.localize('wordHighlight.previous.label', \"Go to Previous Symbol Highlight\"),\r\n            alias: 'Go to Previous Symbol Highlight',\r\n            precondition: ctxHasWordHighlights,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 1024 /* Shift */ | 65 /* F7 */,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nclass TriggerWordHighlightAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.wordHighlight.trigger',\r\n            label: nls.localize('wordHighlight.trigger.label', \"Trigger Symbol Highlight\"),\r\n            alias: 'Trigger Symbol Highlight',\r\n            precondition: ctxHasWordHighlights.toNegated(),\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.editorTextFocus,\r\n                primary: 0,\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        const controller = WordHighlighterContribution.get(editor);\r\n        if (!controller) {\r\n            return;\r\n        }\r\n        controller.restoreViewState(true);\r\n    }\r\n}\r\nregisterEditorContribution(WordHighlighterContribution.ID, WordHighlighterContribution);\r\nregisterEditorAction(NextWordHighlightAction);\r\nregisterEditorAction(PrevWordHighlightAction);\r\nregisterEditorAction(TriggerWordHighlightAction);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const selectionHighlight = theme.getColor(editorSelectionHighlight);\r\n    if (selectionHighlight) {\r\n        collector.addRule(`.monaco-editor .focused .selectionHighlight { background-color: ${selectionHighlight}; }`);\r\n        collector.addRule(`.monaco-editor .selectionHighlight { background-color: ${selectionHighlight.transparent(0.5)}; }`);\r\n    }\r\n    const wordHighlight = theme.getColor(editorWordHighlight);\r\n    if (wordHighlight) {\r\n        collector.addRule(`.monaco-editor .wordHighlight { background-color: ${wordHighlight}; }`);\r\n    }\r\n    const wordHighlightStrong = theme.getColor(editorWordHighlightStrong);\r\n    if (wordHighlightStrong) {\r\n        collector.addRule(`.monaco-editor .wordHighlightStrong { background-color: ${wordHighlightStrong}; }`);\r\n    }\r\n    const selectionHighlightBorder = theme.getColor(editorSelectionHighlightBorder);\r\n    if (selectionHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .selectionHighlight { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${selectionHighlightBorder}; box-sizing: border-box; }`);\r\n    }\r\n    const wordHighlightBorder = theme.getColor(editorWordHighlightBorder);\r\n    if (wordHighlightBorder) {\r\n        collector.addRule(`.monaco-editor .wordHighlight { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${wordHighlightBorder}; box-sizing: border-box; }`);\r\n    }\r\n    const wordHighlightStrongBorder = theme.getColor(editorWordHighlightStrongBorder);\r\n    if (wordHighlightStrongBorder) {\r\n        collector.addRule(`.monaco-editor .wordHighlightStrong { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${wordHighlightStrongBorder}; box-sizing: border-box; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport { EditorCommand, registerEditorCommand, EditorAction, registerEditorAction } from '../../browser/editorExtensions.js';\r\nimport { ReplaceCommand } from '../../common/commands/replaceCommand.js';\r\nimport { CursorState } from '../../common/controller/cursorCommon.js';\r\nimport { WordOperations } from '../../common/controller/cursorWordOperations.js';\r\nimport { getMapForWordSeparators } from '../../common/controller/wordCharacterClassifier.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../../../platform/accessibility/common/accessibility.js';\r\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { EditorOptions } from '../../common/config/editorOptions.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { IsWindowsContext } from '../../../platform/contextkey/common/contextkeys.js';\r\nexport class MoveWordCommand extends EditorCommand {\r\n    constructor(opts) {\r\n        super(opts);\r\n        this._inSelectionMode = opts.inSelectionMode;\r\n        this._wordNavigationType = opts.wordNavigationType;\r\n    }\r\n    runEditorCommand(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const wordSeparators = getMapForWordSeparators(editor.getOption(114 /* wordSeparators */));\r\n        const model = editor.getModel();\r\n        const selections = editor.getSelections();\r\n        const result = selections.map((sel) => {\r\n            const inPosition = new Position(sel.positionLineNumber, sel.positionColumn);\r\n            const outPosition = this._move(wordSeparators, model, inPosition, this._wordNavigationType);\r\n            return this._moveTo(sel, outPosition, this._inSelectionMode);\r\n        });\r\n        model.pushStackElement();\r\n        editor._getViewModel().setCursorStates('moveWordCommand', 3 /* Explicit */, result.map(r => CursorState.fromModelSelection(r)));\r\n        if (result.length === 1) {\r\n            const pos = new Position(result[0].positionLineNumber, result[0].positionColumn);\r\n            editor.revealPosition(pos, 0 /* Smooth */);\r\n        }\r\n    }\r\n    _moveTo(from, to, inSelectionMode) {\r\n        if (inSelectionMode) {\r\n            // move just position\r\n            return new Selection(from.selectionStartLineNumber, from.selectionStartColumn, to.lineNumber, to.column);\r\n        }\r\n        else {\r\n            // move everything\r\n            return new Selection(to.lineNumber, to.column, to.lineNumber, to.column);\r\n        }\r\n    }\r\n}\r\nexport class WordLeftCommand extends MoveWordCommand {\r\n    _move(wordSeparators, model, position, wordNavigationType) {\r\n        return WordOperations.moveWordLeft(wordSeparators, model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class WordRightCommand extends MoveWordCommand {\r\n    _move(wordSeparators, model, position, wordNavigationType) {\r\n        return WordOperations.moveWordRight(wordSeparators, model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class CursorWordStartLeft extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordStartLeft',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordEndLeft extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordEndLeft',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordLeft extends WordLeftCommand {\r\n    constructor() {\r\n        var _a;\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 1 /* WordStartFast */,\r\n            id: 'cursorWordLeft',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, (_a = ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),\r\n                primary: 2048 /* CtrlCmd */ | 15 /* LeftArrow */,\r\n                mac: { primary: 512 /* Alt */ | 15 /* LeftArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class CursorWordStartLeftSelect extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordStartLeftSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordEndLeftSelect extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordEndLeftSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordLeftSelect extends WordLeftCommand {\r\n    constructor() {\r\n        var _a;\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 1 /* WordStartFast */,\r\n            id: 'cursorWordLeftSelect',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, (_a = ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 15 /* LeftArrow */,\r\n                mac: { primary: 512 /* Alt */ | 1024 /* Shift */ | 15 /* LeftArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\n// Accessibility navigation commands should only be enabled on windows since they are tuned to what NVDA expects\r\nexport class CursorWordAccessibilityLeft extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 3 /* WordAccessibility */,\r\n            id: 'cursorWordAccessibilityLeft',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    _move(_, model, position, wordNavigationType) {\r\n        return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class CursorWordAccessibilityLeftSelect extends WordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 3 /* WordAccessibility */,\r\n            id: 'cursorWordAccessibilityLeftSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    _move(_, model, position, wordNavigationType) {\r\n        return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class CursorWordStartRight extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordStartRight',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordEndRight extends WordRightCommand {\r\n    constructor() {\r\n        var _a;\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordEndRight',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, (_a = ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),\r\n                primary: 2048 /* CtrlCmd */ | 17 /* RightArrow */,\r\n                mac: { primary: 512 /* Alt */ | 17 /* RightArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class CursorWordRight extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordRight',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordStartRightSelect extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordStartRightSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordEndRightSelect extends WordRightCommand {\r\n    constructor() {\r\n        var _a;\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordEndRightSelect',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.textInputFocus, (_a = ContextKeyExpr.and(CONTEXT_ACCESSIBILITY_MODE_ENABLED, IsWindowsContext)) === null || _a === void 0 ? void 0 : _a.negate()),\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 17 /* RightArrow */,\r\n                mac: { primary: 512 /* Alt */ | 1024 /* Shift */ | 17 /* RightArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class CursorWordRightSelect extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordRightSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n}\r\nexport class CursorWordAccessibilityRight extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 3 /* WordAccessibility */,\r\n            id: 'cursorWordAccessibilityRight',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    _move(_, model, position, wordNavigationType) {\r\n        return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class CursorWordAccessibilityRightSelect extends WordRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 3 /* WordAccessibility */,\r\n            id: 'cursorWordAccessibilityRightSelect',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    _move(_, model, position, wordNavigationType) {\r\n        return super._move(getMapForWordSeparators(EditorOptions.wordSeparators.defaultValue), model, position, wordNavigationType);\r\n    }\r\n}\r\nexport class DeleteWordCommand extends EditorCommand {\r\n    constructor(opts) {\r\n        super(opts);\r\n        this._whitespaceHeuristics = opts.whitespaceHeuristics;\r\n        this._wordNavigationType = opts.wordNavigationType;\r\n    }\r\n    runEditorCommand(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const wordSeparators = getMapForWordSeparators(editor.getOption(114 /* wordSeparators */));\r\n        const model = editor.getModel();\r\n        const selections = editor.getSelections();\r\n        const autoClosingBrackets = editor.getOption(5 /* autoClosingBrackets */);\r\n        const autoClosingQuotes = editor.getOption(8 /* autoClosingQuotes */);\r\n        const autoClosingPairs = LanguageConfigurationRegistry.getAutoClosingPairs(model.getLanguageIdentifier().id);\r\n        const viewModel = editor._getViewModel();\r\n        const commands = selections.map((sel) => {\r\n            const deleteRange = this._delete({\r\n                wordSeparators,\r\n                model,\r\n                selection: sel,\r\n                whitespaceHeuristics: this._whitespaceHeuristics,\r\n                autoClosingDelete: editor.getOption(6 /* autoClosingDelete */),\r\n                autoClosingBrackets,\r\n                autoClosingQuotes,\r\n                autoClosingPairs,\r\n                autoClosedCharacters: viewModel.getCursorAutoClosedCharacters()\r\n            }, this._wordNavigationType);\r\n            return new ReplaceCommand(deleteRange, '');\r\n        });\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nexport class DeleteWordLeftCommand extends DeleteWordCommand {\r\n    _delete(ctx, wordNavigationType) {\r\n        let r = WordOperations.deleteWordLeft(ctx, wordNavigationType);\r\n        if (r) {\r\n            return r;\r\n        }\r\n        return new Range(1, 1, 1, 1);\r\n    }\r\n}\r\nexport class DeleteWordRightCommand extends DeleteWordCommand {\r\n    _delete(ctx, wordNavigationType) {\r\n        let r = WordOperations.deleteWordRight(ctx, wordNavigationType);\r\n        if (r) {\r\n            return r;\r\n        }\r\n        const lineCount = ctx.model.getLineCount();\r\n        const maxColumn = ctx.model.getLineMaxColumn(lineCount);\r\n        return new Range(lineCount, maxColumn, lineCount, maxColumn);\r\n    }\r\n}\r\nexport class DeleteWordStartLeft extends DeleteWordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'deleteWordStartLeft',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class DeleteWordEndLeft extends DeleteWordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'deleteWordEndLeft',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class DeleteWordLeft extends DeleteWordLeftCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'deleteWordLeft',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 1 /* Backspace */,\r\n                mac: { primary: 512 /* Alt */ | 1 /* Backspace */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class DeleteWordStartRight extends DeleteWordRightCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'deleteWordStartRight',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class DeleteWordEndRight extends DeleteWordRightCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'deleteWordEndRight',\r\n            precondition: EditorContextKeys.writable\r\n        });\r\n    }\r\n}\r\nexport class DeleteWordRight extends DeleteWordRightCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'deleteWordRight',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 2048 /* CtrlCmd */ | 20 /* Delete */,\r\n                mac: { primary: 512 /* Alt */ | 20 /* Delete */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class DeleteInsideWord extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'deleteInsideWord',\r\n            precondition: EditorContextKeys.writable,\r\n            label: nls.localize('deleteInsideWord', \"Delete Word\"),\r\n            alias: 'Delete Word'\r\n        });\r\n    }\r\n    run(accessor, editor, args) {\r\n        if (!editor.hasModel()) {\r\n            return;\r\n        }\r\n        const wordSeparators = getMapForWordSeparators(editor.getOption(114 /* wordSeparators */));\r\n        const model = editor.getModel();\r\n        const selections = editor.getSelections();\r\n        const commands = selections.map((sel) => {\r\n            const deleteRange = WordOperations.deleteInsideWord(wordSeparators, model, sel);\r\n            return new ReplaceCommand(deleteRange, '');\r\n        });\r\n        editor.pushUndoStop();\r\n        editor.executeCommands(this.id, commands);\r\n        editor.pushUndoStop();\r\n    }\r\n}\r\nregisterEditorCommand(new CursorWordStartLeft());\r\nregisterEditorCommand(new CursorWordEndLeft());\r\nregisterEditorCommand(new CursorWordLeft());\r\nregisterEditorCommand(new CursorWordStartLeftSelect());\r\nregisterEditorCommand(new CursorWordEndLeftSelect());\r\nregisterEditorCommand(new CursorWordLeftSelect());\r\nregisterEditorCommand(new CursorWordStartRight());\r\nregisterEditorCommand(new CursorWordEndRight());\r\nregisterEditorCommand(new CursorWordRight());\r\nregisterEditorCommand(new CursorWordStartRightSelect());\r\nregisterEditorCommand(new CursorWordEndRightSelect());\r\nregisterEditorCommand(new CursorWordRightSelect());\r\nregisterEditorCommand(new CursorWordAccessibilityLeft());\r\nregisterEditorCommand(new CursorWordAccessibilityLeftSelect());\r\nregisterEditorCommand(new CursorWordAccessibilityRight());\r\nregisterEditorCommand(new CursorWordAccessibilityRightSelect());\r\nregisterEditorCommand(new DeleteWordStartLeft());\r\nregisterEditorCommand(new DeleteWordEndLeft());\r\nregisterEditorCommand(new DeleteWordLeft());\r\nregisterEditorCommand(new DeleteWordStartRight());\r\nregisterEditorCommand(new DeleteWordEndRight());\r\nregisterEditorCommand(new DeleteWordRight());\r\nregisterEditorAction(DeleteInsideWord);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { registerEditorCommand } from '../../browser/editorExtensions.js';\r\nimport { WordPartOperations } from '../../common/controller/cursorWordOperations.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { DeleteWordCommand, MoveWordCommand } from '../wordOperations/wordOperations.js';\r\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\r\nexport class DeleteWordPartLeft extends DeleteWordCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'deleteWordPartLeft',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1 /* Backspace */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _delete(ctx, wordNavigationType) {\r\n        let r = WordPartOperations.deleteWordPartLeft(ctx);\r\n        if (r) {\r\n            return r;\r\n        }\r\n        return new Range(1, 1, 1, 1);\r\n    }\r\n}\r\nexport class DeleteWordPartRight extends DeleteWordCommand {\r\n    constructor() {\r\n        super({\r\n            whitespaceHeuristics: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'deleteWordPartRight',\r\n            precondition: EditorContextKeys.writable,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 20 /* Delete */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    _delete(ctx, wordNavigationType) {\r\n        let r = WordPartOperations.deleteWordPartRight(ctx);\r\n        if (r) {\r\n            return r;\r\n        }\r\n        const lineCount = ctx.model.getLineCount();\r\n        const maxColumn = ctx.model.getLineMaxColumn(lineCount);\r\n        return new Range(lineCount, maxColumn, lineCount, maxColumn);\r\n    }\r\n}\r\nexport class WordPartLeftCommand extends MoveWordCommand {\r\n    _move(wordSeparators, model, position, wordNavigationType) {\r\n        return WordPartOperations.moveWordPartLeft(wordSeparators, model, position);\r\n    }\r\n}\r\nexport class CursorWordPartLeft extends WordPartLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordPartLeft',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 15 /* LeftArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\n// Register previous id for compatibility purposes\r\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeft', 'cursorWordPartLeft');\r\nexport class CursorWordPartLeftSelect extends WordPartLeftCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 0 /* WordStart */,\r\n            id: 'cursorWordPartLeftSelect',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1024 /* Shift */ | 15 /* LeftArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\n// Register previous id for compatibility purposes\r\nCommandsRegistry.registerCommandAlias('cursorWordPartStartLeftSelect', 'cursorWordPartLeftSelect');\r\nexport class WordPartRightCommand extends MoveWordCommand {\r\n    _move(wordSeparators, model, position, wordNavigationType) {\r\n        return WordPartOperations.moveWordPartRight(wordSeparators, model, position);\r\n    }\r\n}\r\nexport class CursorWordPartRight extends WordPartRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: false,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordPartRight',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 17 /* RightArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nexport class CursorWordPartRightSelect extends WordPartRightCommand {\r\n    constructor() {\r\n        super({\r\n            inSelectionMode: true,\r\n            wordNavigationType: 2 /* WordEnd */,\r\n            id: 'cursorWordPartRightSelect',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.textInputFocus,\r\n                primary: 0,\r\n                mac: { primary: 256 /* WinCtrl */ | 512 /* Alt */ | 1024 /* Shift */ | 17 /* RightArrow */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n}\r\nregisterEditorCommand(new DeleteWordPartLeft());\r\nregisterEditorCommand(new DeleteWordPartRight());\r\nregisterEditorCommand(new CursorWordPartLeft());\r\nregisterEditorCommand(new CursorWordPartLeftSelect());\r\nregisterEditorCommand(new CursorWordPartRight());\r\nregisterEditorCommand(new CursorWordPartRightSelect());\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './accessibilityHelp.css';\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { createFastDomNode } from '../../../../base/browser/fastDomNode.js';\r\nimport { renderFormattedText } from '../../../../base/browser/formattedTextRenderer.js';\r\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\r\nimport { Widget } from '../../../../base/browser/ui/widget.js';\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport * as platform from '../../../../base/common/platform.js';\r\nimport * as strings from '../../../../base/common/strings.js';\r\nimport { URI } from '../../../../base/common/uri.js';\r\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { ToggleTabFocusModeAction } from '../../../contrib/toggleTabFocusMode/toggleTabFocusMode.js';\r\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\r\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\r\nimport { contrastBorder, editorWidgetBackground, widgetShadow, editorWidgetForeground } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport { AccessibilityHelpNLS } from '../../../common/standaloneStrings.js';\r\nconst CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE = new RawContextKey('accessibilityHelpWidgetVisible', false);\r\nlet AccessibilityHelpController = class AccessibilityHelpController extends Disposable {\r\n    constructor(editor, instantiationService) {\r\n        super();\r\n        this._editor = editor;\r\n        this._widget = this._register(instantiationService.createInstance(AccessibilityHelpWidget, this._editor));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(AccessibilityHelpController.ID);\r\n    }\r\n    show() {\r\n        this._widget.show();\r\n    }\r\n    hide() {\r\n        this._widget.hide();\r\n    }\r\n};\r\nAccessibilityHelpController.ID = 'editor.contrib.accessibilityHelpController';\r\nAccessibilityHelpController = __decorate([\r\n    __param(1, IInstantiationService)\r\n], AccessibilityHelpController);\r\nfunction getSelectionLabel(selections, charactersSelected) {\r\n    if (!selections || selections.length === 0) {\r\n        return AccessibilityHelpNLS.noSelection;\r\n    }\r\n    if (selections.length === 1) {\r\n        if (charactersSelected) {\r\n            return strings.format(AccessibilityHelpNLS.singleSelectionRange, selections[0].positionLineNumber, selections[0].positionColumn, charactersSelected);\r\n        }\r\n        return strings.format(AccessibilityHelpNLS.singleSelection, selections[0].positionLineNumber, selections[0].positionColumn);\r\n    }\r\n    if (charactersSelected) {\r\n        return strings.format(AccessibilityHelpNLS.multiSelectionRange, selections.length, charactersSelected);\r\n    }\r\n    if (selections.length > 0) {\r\n        return strings.format(AccessibilityHelpNLS.multiSelection, selections.length);\r\n    }\r\n    return '';\r\n}\r\nlet AccessibilityHelpWidget = class AccessibilityHelpWidget extends Widget {\r\n    constructor(editor, _contextKeyService, _keybindingService, _openerService) {\r\n        super();\r\n        this._contextKeyService = _contextKeyService;\r\n        this._keybindingService = _keybindingService;\r\n        this._openerService = _openerService;\r\n        this._editor = editor;\r\n        this._isVisibleKey = CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE.bindTo(this._contextKeyService);\r\n        this._domNode = createFastDomNode(document.createElement('div'));\r\n        this._domNode.setClassName('accessibilityHelpWidget');\r\n        this._domNode.setDisplay('none');\r\n        this._domNode.setAttribute('role', 'dialog');\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        this._contentDomNode = createFastDomNode(document.createElement('div'));\r\n        this._contentDomNode.setAttribute('role', 'document');\r\n        this._domNode.appendChild(this._contentDomNode);\r\n        this._isVisible = false;\r\n        this._register(this._editor.onDidLayoutChange(() => {\r\n            if (this._isVisible) {\r\n                this._layout();\r\n            }\r\n        }));\r\n        // Intentionally not configurable!\r\n        this._register(dom.addStandardDisposableListener(this._contentDomNode.domNode, 'keydown', (e) => {\r\n            if (!this._isVisible) {\r\n                return;\r\n            }\r\n            if (e.equals(2048 /* CtrlCmd */ | 35 /* KEY_E */)) {\r\n                alert(AccessibilityHelpNLS.emergencyConfOn);\r\n                this._editor.updateOptions({\r\n                    accessibilitySupport: 'on'\r\n                });\r\n                dom.clearNode(this._contentDomNode.domNode);\r\n                this._buildContent();\r\n                this._contentDomNode.domNode.focus();\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n            if (e.equals(2048 /* CtrlCmd */ | 38 /* KEY_H */)) {\r\n                alert(AccessibilityHelpNLS.openingDocs);\r\n                let url = this._editor.getRawOptions().accessibilityHelpUrl;\r\n                if (typeof url === 'undefined') {\r\n                    url = 'https://go.microsoft.com/fwlink/?linkid=852450';\r\n                }\r\n                this._openerService.open(URI.parse(url));\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n            }\r\n        }));\r\n        this.onblur(this._contentDomNode.domNode, () => {\r\n            this.hide();\r\n        });\r\n        this._editor.addOverlayWidget(this);\r\n    }\r\n    dispose() {\r\n        this._editor.removeOverlayWidget(this);\r\n        super.dispose();\r\n    }\r\n    getId() {\r\n        return AccessibilityHelpWidget.ID;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode.domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            preference: null\r\n        };\r\n    }\r\n    show() {\r\n        if (this._isVisible) {\r\n            return;\r\n        }\r\n        this._isVisible = true;\r\n        this._isVisibleKey.set(true);\r\n        this._layout();\r\n        this._domNode.setDisplay('block');\r\n        this._domNode.setAttribute('aria-hidden', 'false');\r\n        this._contentDomNode.domNode.tabIndex = 0;\r\n        this._buildContent();\r\n        this._contentDomNode.domNode.focus();\r\n    }\r\n    _descriptionForCommand(commandId, msg, noKbMsg) {\r\n        let kb = this._keybindingService.lookupKeybinding(commandId);\r\n        if (kb) {\r\n            return strings.format(msg, kb.getAriaLabel());\r\n        }\r\n        return strings.format(noKbMsg, commandId);\r\n    }\r\n    _buildContent() {\r\n        const options = this._editor.getOptions();\r\n        const selections = this._editor.getSelections();\r\n        let charactersSelected = 0;\r\n        if (selections) {\r\n            const model = this._editor.getModel();\r\n            if (model) {\r\n                selections.forEach((selection) => {\r\n                    charactersSelected += model.getValueLengthInRange(selection);\r\n                });\r\n            }\r\n        }\r\n        let text = getSelectionLabel(selections, charactersSelected);\r\n        if (options.get(51 /* inDiffEditor */)) {\r\n            if (options.get(78 /* readOnly */)) {\r\n                text += AccessibilityHelpNLS.readonlyDiffEditor;\r\n            }\r\n            else {\r\n                text += AccessibilityHelpNLS.editableDiffEditor;\r\n            }\r\n        }\r\n        else {\r\n            if (options.get(78 /* readOnly */)) {\r\n                text += AccessibilityHelpNLS.readonlyEditor;\r\n            }\r\n            else {\r\n                text += AccessibilityHelpNLS.editableEditor;\r\n            }\r\n        }\r\n        const turnOnMessage = (platform.isMacintosh\r\n            ? AccessibilityHelpNLS.changeConfigToOnMac\r\n            : AccessibilityHelpNLS.changeConfigToOnWinLinux);\r\n        switch (options.get(2 /* accessibilitySupport */)) {\r\n            case 0 /* Unknown */:\r\n                text += '\\n\\n - ' + turnOnMessage;\r\n                break;\r\n            case 2 /* Enabled */:\r\n                text += '\\n\\n - ' + AccessibilityHelpNLS.auto_on;\r\n                break;\r\n            case 1 /* Disabled */:\r\n                text += '\\n\\n - ' + AccessibilityHelpNLS.auto_off;\r\n                text += ' ' + turnOnMessage;\r\n                break;\r\n        }\r\n        if (options.get(127 /* tabFocusMode */)) {\r\n            text += '\\n\\n - ' + this._descriptionForCommand(ToggleTabFocusModeAction.ID, AccessibilityHelpNLS.tabFocusModeOnMsg, AccessibilityHelpNLS.tabFocusModeOnMsgNoKb);\r\n        }\r\n        else {\r\n            text += '\\n\\n - ' + this._descriptionForCommand(ToggleTabFocusModeAction.ID, AccessibilityHelpNLS.tabFocusModeOffMsg, AccessibilityHelpNLS.tabFocusModeOffMsgNoKb);\r\n        }\r\n        const openDocMessage = (platform.isMacintosh\r\n            ? AccessibilityHelpNLS.openDocMac\r\n            : AccessibilityHelpNLS.openDocWinLinux);\r\n        text += '\\n\\n - ' + openDocMessage;\r\n        text += '\\n\\n' + AccessibilityHelpNLS.outroMsg;\r\n        this._contentDomNode.domNode.appendChild(renderFormattedText(text));\r\n        // Per https://www.w3.org/TR/wai-aria/roles#document, Authors SHOULD provide a title or label for documents\r\n        this._contentDomNode.domNode.setAttribute('aria-label', text);\r\n    }\r\n    hide() {\r\n        if (!this._isVisible) {\r\n            return;\r\n        }\r\n        this._isVisible = false;\r\n        this._isVisibleKey.reset();\r\n        this._domNode.setDisplay('none');\r\n        this._domNode.setAttribute('aria-hidden', 'true');\r\n        this._contentDomNode.domNode.tabIndex = -1;\r\n        dom.clearNode(this._contentDomNode.domNode);\r\n        this._editor.focus();\r\n    }\r\n    _layout() {\r\n        let editorLayout = this._editor.getLayoutInfo();\r\n        let w = Math.max(5, Math.min(AccessibilityHelpWidget.WIDTH, editorLayout.width - 40));\r\n        let h = Math.max(5, Math.min(AccessibilityHelpWidget.HEIGHT, editorLayout.height - 40));\r\n        this._domNode.setWidth(w);\r\n        this._domNode.setHeight(h);\r\n        let top = Math.round((editorLayout.height - h) / 2);\r\n        this._domNode.setTop(top);\r\n        let left = Math.round((editorLayout.width - w) / 2);\r\n        this._domNode.setLeft(left);\r\n    }\r\n};\r\nAccessibilityHelpWidget.ID = 'editor.contrib.accessibilityHelpWidget';\r\nAccessibilityHelpWidget.WIDTH = 500;\r\nAccessibilityHelpWidget.HEIGHT = 300;\r\nAccessibilityHelpWidget = __decorate([\r\n    __param(1, IContextKeyService),\r\n    __param(2, IKeybindingService),\r\n    __param(3, IOpenerService)\r\n], AccessibilityHelpWidget);\r\nclass ShowAccessibilityHelpAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.showAccessibilityHelp',\r\n            label: AccessibilityHelpNLS.showAccessibilityHelpAction,\r\n            alias: 'Show Accessibility Help',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                primary: 512 /* Alt */ | 59 /* F1 */,\r\n                weight: 100 /* EditorContrib */,\r\n                linux: {\r\n                    primary: 512 /* Alt */ | 1024 /* Shift */ | 59 /* F1 */,\r\n                    secondary: [512 /* Alt */ | 59 /* F1 */]\r\n                }\r\n            }\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let controller = AccessibilityHelpController.get(editor);\r\n        if (controller) {\r\n            controller.show();\r\n        }\r\n    }\r\n}\r\nregisterEditorContribution(AccessibilityHelpController.ID, AccessibilityHelpController);\r\nregisterEditorAction(ShowAccessibilityHelpAction);\r\nconst AccessibilityHelpCommand = EditorCommand.bindToContribution(AccessibilityHelpController.get);\r\nregisterEditorCommand(new AccessibilityHelpCommand({\r\n    id: 'closeAccessibilityHelp',\r\n    precondition: CONTEXT_ACCESSIBILITY_WIDGET_VISIBLE,\r\n    handler: x => x.hide(),\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 100,\r\n        kbExpr: EditorContextKeys.focus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterThemingParticipant((theme, collector) => {\r\n    const widgetBackground = theme.getColor(editorWidgetBackground);\r\n    if (widgetBackground) {\r\n        collector.addRule(`.monaco-editor .accessibilityHelpWidget { background-color: ${widgetBackground}; }`);\r\n    }\r\n    const widgetForeground = theme.getColor(editorWidgetForeground);\r\n    if (widgetForeground) {\r\n        collector.addRule(`.monaco-editor .accessibilityHelpWidget { color: ${widgetForeground}; }`);\r\n    }\r\n    const widgetShadowColor = theme.getColor(widgetShadow);\r\n    if (widgetShadowColor) {\r\n        collector.addRule(`.monaco-editor .accessibilityHelpWidget { box-shadow: 0 2px 8px ${widgetShadowColor}; }`);\r\n    }\r\n    const hcBorder = theme.getColor(contrastBorder);\r\n    if (hcBorder) {\r\n        collector.addRule(`.monaco-editor .accessibilityHelpWidget { border: 2px solid ${hcBorder}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './iPadShowKeyboard.css';\r\nimport * as dom from '../../../../base/browser/dom.js';\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { isIOS } from '../../../../base/common/platform.js';\r\nexport class IPadShowKeyboard extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this.editor = editor;\r\n        this.widget = null;\r\n        if (isIOS) {\r\n            this._register(editor.onDidChangeConfiguration(() => this.update()));\r\n            this.update();\r\n        }\r\n    }\r\n    update() {\r\n        const shouldHaveWidget = (!this.editor.getOption(78 /* readOnly */));\r\n        if (!this.widget && shouldHaveWidget) {\r\n            this.widget = new ShowKeyboardWidget(this.editor);\r\n        }\r\n        else if (this.widget && !shouldHaveWidget) {\r\n            this.widget.dispose();\r\n            this.widget = null;\r\n        }\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        if (this.widget) {\r\n            this.widget.dispose();\r\n            this.widget = null;\r\n        }\r\n    }\r\n}\r\nIPadShowKeyboard.ID = 'editor.contrib.iPadShowKeyboard';\r\nclass ShowKeyboardWidget extends Disposable {\r\n    constructor(editor) {\r\n        super();\r\n        this.editor = editor;\r\n        this._domNode = document.createElement('textarea');\r\n        this._domNode.className = 'iPadShowKeyboard';\r\n        this._register(dom.addDisposableListener(this._domNode, 'touchstart', (e) => {\r\n            this.editor.focus();\r\n        }));\r\n        this._register(dom.addDisposableListener(this._domNode, 'focus', (e) => {\r\n            this.editor.focus();\r\n        }));\r\n        this.editor.addOverlayWidget(this);\r\n    }\r\n    dispose() {\r\n        this.editor.removeOverlayWidget(this);\r\n        super.dispose();\r\n    }\r\n    // ----- IOverlayWidget API\r\n    getId() {\r\n        return ShowKeyboardWidget.ID;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            preference: 1 /* BOTTOM_RIGHT_CORNER */\r\n        };\r\n    }\r\n}\r\nShowKeyboardWidget.ID = 'editor.contrib.ShowKeyboardWidget';\r\nregisterEditorContribution(IPadShowKeyboard.ID, IPadShowKeyboard);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport './inspectTokens.css';\r\nimport { $, append, reset } from '../../../../base/browser/dom.js';\r\nimport { Color } from '../../../../base/common/color.js';\r\nimport { Disposable } from '../../../../base/common/lifecycle.js';\r\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { TokenMetadata, TokenizationRegistry } from '../../../common/modes.js';\r\nimport { NULL_STATE, nullTokenize, nullTokenize2 } from '../../../common/modes/nullMode.js';\r\nimport { IModeService } from '../../../common/services/modeService.js';\r\nimport { IStandaloneThemeService } from '../../common/standaloneThemeService.js';\r\nimport { editorHoverBackground, editorHoverBorder, editorHoverForeground } from '../../../../platform/theme/common/colorRegistry.js';\r\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\r\nimport { InspectTokensNLS } from '../../../common/standaloneStrings.js';\r\nimport { ColorScheme } from '../../../../platform/theme/common/theme.js';\r\nlet InspectTokensController = class InspectTokensController extends Disposable {\r\n    constructor(editor, standaloneColorService, modeService) {\r\n        super();\r\n        this._editor = editor;\r\n        this._modeService = modeService;\r\n        this._widget = null;\r\n        this._register(this._editor.onDidChangeModel((e) => this.stop()));\r\n        this._register(this._editor.onDidChangeModelLanguage((e) => this.stop()));\r\n        this._register(TokenizationRegistry.onDidChange((e) => this.stop()));\r\n        this._register(this._editor.onKeyUp((e) => e.keyCode === 9 /* Escape */ && this.stop()));\r\n    }\r\n    static get(editor) {\r\n        return editor.getContribution(InspectTokensController.ID);\r\n    }\r\n    dispose() {\r\n        this.stop();\r\n        super.dispose();\r\n    }\r\n    launch() {\r\n        if (this._widget) {\r\n            return;\r\n        }\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        this._widget = new InspectTokensWidget(this._editor, this._modeService);\r\n    }\r\n    stop() {\r\n        if (this._widget) {\r\n            this._widget.dispose();\r\n            this._widget = null;\r\n        }\r\n    }\r\n};\r\nInspectTokensController.ID = 'editor.contrib.inspectTokens';\r\nInspectTokensController = __decorate([\r\n    __param(1, IStandaloneThemeService),\r\n    __param(2, IModeService)\r\n], InspectTokensController);\r\nclass InspectTokens extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.inspectTokens',\r\n            label: InspectTokensNLS.inspectTokensAction,\r\n            alias: 'Developer: Inspect Tokens',\r\n            precondition: undefined\r\n        });\r\n    }\r\n    run(accessor, editor) {\r\n        let controller = InspectTokensController.get(editor);\r\n        if (controller) {\r\n            controller.launch();\r\n        }\r\n    }\r\n}\r\nfunction renderTokenText(tokenText) {\r\n    let result = '';\r\n    for (let charIndex = 0, len = tokenText.length; charIndex < len; charIndex++) {\r\n        let charCode = tokenText.charCodeAt(charIndex);\r\n        switch (charCode) {\r\n            case 9 /* Tab */:\r\n                result += '\\u2192'; // &rarr;\r\n                break;\r\n            case 32 /* Space */:\r\n                result += '\\u00B7'; // &middot;\r\n                break;\r\n            default:\r\n                result += String.fromCharCode(charCode);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction getSafeTokenizationSupport(languageIdentifier) {\r\n    let tokenizationSupport = TokenizationRegistry.get(languageIdentifier.language);\r\n    if (tokenizationSupport) {\r\n        return tokenizationSupport;\r\n    }\r\n    return {\r\n        getInitialState: () => NULL_STATE,\r\n        tokenize: (line, hasEOL, state, deltaOffset) => nullTokenize(languageIdentifier.language, line, state, deltaOffset),\r\n        tokenize2: (line, hasEOL, state, deltaOffset) => nullTokenize2(languageIdentifier.id, line, state, deltaOffset)\r\n    };\r\n}\r\nclass InspectTokensWidget extends Disposable {\r\n    constructor(editor, modeService) {\r\n        super();\r\n        // Editor.IContentWidget.allowEditorOverflow\r\n        this.allowEditorOverflow = true;\r\n        this._editor = editor;\r\n        this._modeService = modeService;\r\n        this._model = this._editor.getModel();\r\n        this._domNode = document.createElement('div');\r\n        this._domNode.className = 'tokens-inspect-widget';\r\n        this._tokenizationSupport = getSafeTokenizationSupport(this._model.getLanguageIdentifier());\r\n        this._compute(this._editor.getPosition());\r\n        this._register(this._editor.onDidChangeCursorPosition((e) => this._compute(this._editor.getPosition())));\r\n        this._editor.addContentWidget(this);\r\n    }\r\n    dispose() {\r\n        this._editor.removeContentWidget(this);\r\n        super.dispose();\r\n    }\r\n    getId() {\r\n        return InspectTokensWidget._ID;\r\n    }\r\n    _compute(position) {\r\n        let data = this._getTokensAtLine(position.lineNumber);\r\n        let token1Index = 0;\r\n        for (let i = data.tokens1.length - 1; i >= 0; i--) {\r\n            let t = data.tokens1[i];\r\n            if (position.column - 1 >= t.offset) {\r\n                token1Index = i;\r\n                break;\r\n            }\r\n        }\r\n        let token2Index = 0;\r\n        for (let i = (data.tokens2.length >>> 1); i >= 0; i--) {\r\n            if (position.column - 1 >= data.tokens2[(i << 1)]) {\r\n                token2Index = i;\r\n                break;\r\n            }\r\n        }\r\n        let lineContent = this._model.getLineContent(position.lineNumber);\r\n        let tokenText = '';\r\n        if (token1Index < data.tokens1.length) {\r\n            let tokenStartIndex = data.tokens1[token1Index].offset;\r\n            let tokenEndIndex = token1Index + 1 < data.tokens1.length ? data.tokens1[token1Index + 1].offset : lineContent.length;\r\n            tokenText = lineContent.substring(tokenStartIndex, tokenEndIndex);\r\n        }\r\n        reset(this._domNode, $('h2.tm-token', undefined, renderTokenText(tokenText), $('span.tm-token-length', undefined, `${tokenText.length} ${tokenText.length === 1 ? 'char' : 'chars'}`)));\r\n        append(this._domNode, $('hr.tokens-inspect-separator', { 'style': 'clear:both' }));\r\n        const metadata = (token2Index << 1) + 1 < data.tokens2.length ? this._decodeMetadata(data.tokens2[(token2Index << 1) + 1]) : null;\r\n        append(this._domNode, $('table.tm-metadata-table', undefined, $('tbody', undefined, $('tr', undefined, $('td.tm-metadata-key', undefined, 'language'), $('td.tm-metadata-value', undefined, `${metadata ? metadata.languageIdentifier.language : '-?-'}`)), $('tr', undefined, $('td.tm-metadata-key', undefined, 'token type'), $('td.tm-metadata-value', undefined, `${metadata ? this._tokenTypeToString(metadata.tokenType) : '-?-'}`)), $('tr', undefined, $('td.tm-metadata-key', undefined, 'font style'), $('td.tm-metadata-value', undefined, `${metadata ? this._fontStyleToString(metadata.fontStyle) : '-?-'}`)), $('tr', undefined, $('td.tm-metadata-key', undefined, 'foreground'), $('td.tm-metadata-value', undefined, `${metadata ? Color.Format.CSS.formatHex(metadata.foreground) : '-?-'}`)), $('tr', undefined, $('td.tm-metadata-key', undefined, 'background'), $('td.tm-metadata-value', undefined, `${metadata ? Color.Format.CSS.formatHex(metadata.background) : '-?-'}`)))));\r\n        append(this._domNode, $('hr.tokens-inspect-separator'));\r\n        if (token1Index < data.tokens1.length) {\r\n            append(this._domNode, $('span.tm-token-type', undefined, data.tokens1[token1Index].type));\r\n        }\r\n        this._editor.layoutContentWidget(this);\r\n    }\r\n    _decodeMetadata(metadata) {\r\n        let colorMap = TokenizationRegistry.getColorMap();\r\n        let languageId = TokenMetadata.getLanguageId(metadata);\r\n        let tokenType = TokenMetadata.getTokenType(metadata);\r\n        let fontStyle = TokenMetadata.getFontStyle(metadata);\r\n        let foreground = TokenMetadata.getForeground(metadata);\r\n        let background = TokenMetadata.getBackground(metadata);\r\n        return {\r\n            languageIdentifier: this._modeService.getLanguageIdentifier(languageId),\r\n            tokenType: tokenType,\r\n            fontStyle: fontStyle,\r\n            foreground: colorMap[foreground],\r\n            background: colorMap[background]\r\n        };\r\n    }\r\n    _tokenTypeToString(tokenType) {\r\n        switch (tokenType) {\r\n            case 0 /* Other */: return 'Other';\r\n            case 1 /* Comment */: return 'Comment';\r\n            case 2 /* String */: return 'String';\r\n            case 4 /* RegEx */: return 'RegEx';\r\n            default: return '??';\r\n        }\r\n    }\r\n    _fontStyleToString(fontStyle) {\r\n        let r = '';\r\n        if (fontStyle & 1 /* Italic */) {\r\n            r += 'italic ';\r\n        }\r\n        if (fontStyle & 2 /* Bold */) {\r\n            r += 'bold ';\r\n        }\r\n        if (fontStyle & 4 /* Underline */) {\r\n            r += 'underline ';\r\n        }\r\n        if (r.length === 0) {\r\n            r = '---';\r\n        }\r\n        return r;\r\n    }\r\n    _getTokensAtLine(lineNumber) {\r\n        let stateBeforeLine = this._getStateBeforeLine(lineNumber);\r\n        let tokenizationResult1 = this._tokenizationSupport.tokenize(this._model.getLineContent(lineNumber), true, stateBeforeLine, 0);\r\n        let tokenizationResult2 = this._tokenizationSupport.tokenize2(this._model.getLineContent(lineNumber), true, stateBeforeLine, 0);\r\n        return {\r\n            startState: stateBeforeLine,\r\n            tokens1: tokenizationResult1.tokens,\r\n            tokens2: tokenizationResult2.tokens,\r\n            endState: tokenizationResult1.endState\r\n        };\r\n    }\r\n    _getStateBeforeLine(lineNumber) {\r\n        let state = this._tokenizationSupport.getInitialState();\r\n        for (let i = 1; i < lineNumber; i++) {\r\n            let tokenizationResult = this._tokenizationSupport.tokenize(this._model.getLineContent(i), true, state, 0);\r\n            state = tokenizationResult.endState;\r\n        }\r\n        return state;\r\n    }\r\n    getDomNode() {\r\n        return this._domNode;\r\n    }\r\n    getPosition() {\r\n        return {\r\n            position: this._editor.getPosition(),\r\n            preference: [2 /* BELOW */, 1 /* ABOVE */]\r\n        };\r\n    }\r\n}\r\nInspectTokensWidget._ID = 'editor.contrib.inspectTokensWidget';\r\nregisterEditorContribution(InspectTokensController.ID, InspectTokensController);\r\nregisterEditorAction(InspectTokens);\r\nregisterThemingParticipant((theme, collector) => {\r\n    const border = theme.getColor(editorHoverBorder);\r\n    if (border) {\r\n        let borderWidth = theme.type === ColorScheme.HIGH_CONTRAST ? 2 : 1;\r\n        collector.addRule(`.monaco-editor .tokens-inspect-widget { border: ${borderWidth}px solid ${border}; }`);\r\n        collector.addRule(`.monaco-editor .tokens-inspect-widget .tokens-inspect-separator { background-color: ${border}; }`);\r\n    }\r\n    const background = theme.getColor(editorHoverBackground);\r\n    if (background) {\r\n        collector.addRule(`.monaco-editor .tokens-inspect-widget { background-color: ${background}; }`);\r\n    }\r\n    const foreground = theme.getColor(editorHoverForeground);\r\n    if (foreground) {\r\n        collector.addRule(`.monaco-editor .tokens-inspect-widget { color: ${foreground}; }`);\r\n    }\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { IQuickInputService } from '../common/quickInput.js';\r\nimport { Extensions } from '../common/quickAccess.js';\r\nimport { Registry } from '../../registry/common/platform.js';\r\nimport { localize } from '../../../nls.js';\r\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\r\nlet HelpQuickAccessProvider = class HelpQuickAccessProvider {\r\n    constructor(quickInputService) {\r\n        this.quickInputService = quickInputService;\r\n        this.registry = Registry.as(Extensions.Quickaccess);\r\n    }\r\n    provide(picker) {\r\n        const disposables = new DisposableStore();\r\n        // Open a picker with the selected value if picked\r\n        disposables.add(picker.onDidAccept(() => {\r\n            const [item] = picker.selectedItems;\r\n            if (item) {\r\n                this.quickInputService.quickAccess.show(item.prefix, { preserveValue: true });\r\n            }\r\n        }));\r\n        // Also open a picker when we detect the user typed the exact\r\n        // name of a provider (e.g. `?term` for terminals)\r\n        disposables.add(picker.onDidChangeValue(value => {\r\n            const providerDescriptor = this.registry.getQuickAccessProvider(value.substr(HelpQuickAccessProvider.PREFIX.length));\r\n            if (providerDescriptor && providerDescriptor.prefix && providerDescriptor.prefix !== HelpQuickAccessProvider.PREFIX) {\r\n                this.quickInputService.quickAccess.show(providerDescriptor.prefix, { preserveValue: true });\r\n            }\r\n        }));\r\n        // Fill in all providers separated by editor/global scope\r\n        const { editorProviders, globalProviders } = this.getQuickAccessProviders();\r\n        picker.items = editorProviders.length === 0 || globalProviders.length === 0 ?\r\n            // Without groups\r\n            [\r\n                ...(editorProviders.length === 0 ? globalProviders : editorProviders)\r\n            ] :\r\n            // With groups\r\n            [\r\n                { label: localize('globalCommands', \"global commands\"), type: 'separator' },\r\n                ...globalProviders,\r\n                { label: localize('editorCommands', \"editor commands\"), type: 'separator' },\r\n                ...editorProviders\r\n            ];\r\n        return disposables;\r\n    }\r\n    getQuickAccessProviders() {\r\n        const globalProviders = [];\r\n        const editorProviders = [];\r\n        for (const provider of this.registry.getQuickAccessProviders().sort((providerA, providerB) => providerA.prefix.localeCompare(providerB.prefix))) {\r\n            if (provider.prefix === HelpQuickAccessProvider.PREFIX) {\r\n                continue; // exclude help which is already active\r\n            }\r\n            for (const helpEntry of provider.helpEntries) {\r\n                const prefix = helpEntry.prefix || provider.prefix;\r\n                const label = prefix || '\\u2026' /* ... */;\r\n                (helpEntry.needsEditor ? editorProviders : globalProviders).push({\r\n                    prefix,\r\n                    label,\r\n                    ariaLabel: localize('helpPickAriaLabel', \"{0}, {1}\", label, helpEntry.description),\r\n                    description: helpEntry.description\r\n                });\r\n            }\r\n        }\r\n        return { editorProviders, globalProviders };\r\n    }\r\n};\r\nHelpQuickAccessProvider.PREFIX = '?';\r\nHelpQuickAccessProvider = __decorate([\r\n    __param(0, IQuickInputService)\r\n], HelpQuickAccessProvider);\r\nexport { HelpQuickAccessProvider };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Registry } from '../../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\r\nimport { QuickHelpNLS } from '../../../common/standaloneStrings.js';\r\nimport { HelpQuickAccessProvider } from '../../../../platform/quickinput/browser/helpQuickAccess.js';\r\nRegistry.as(Extensions.Quickaccess).registerQuickAccessProvider({\r\n    ctor: HelpQuickAccessProvider,\r\n    prefix: '',\r\n    helpEntries: [{ description: QuickHelpNLS.helpQuickAccessActionLabel, needsEditor: true }]\r\n});\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { OverviewRulerLane } from '../../common/model.js';\r\nimport { themeColorFromId } from '../../../platform/theme/common/themeService.js';\r\nimport { overviewRulerRangeHighlight } from '../../common/view/editorColorRegistry.js';\r\nimport { DisposableStore, toDisposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { isDiffEditor, getCodeEditor } from '../../browser/editorBrowser.js';\r\nimport { withNullAsUndefined } from '../../../base/common/types.js';\r\nimport { once } from '../../../base/common/functional.js';\r\n/**\r\n * A reusable quick access provider for the editor with support\r\n * for adding decorations for navigating in the currently active file\r\n * (for example \"Go to line\", \"Go to symbol\").\r\n */\r\nexport class AbstractEditorNavigationQuickAccessProvider {\r\n    constructor(options) {\r\n        this.options = options;\r\n        //#endregion\r\n        //#region Decorations Utils\r\n        this.rangeHighlightDecorationId = undefined;\r\n    }\r\n    //#region Provider methods\r\n    provide(picker, token) {\r\n        var _a;\r\n        const disposables = new DisposableStore();\r\n        // Apply options if any\r\n        picker.canAcceptInBackground = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.canAcceptInBackground);\r\n        // Disable filtering & sorting, we control the results\r\n        picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\r\n        // Provide based on current active editor\r\n        const pickerDisposable = disposables.add(new MutableDisposable());\r\n        pickerDisposable.value = this.doProvide(picker, token);\r\n        // Re-create whenever the active editor changes\r\n        disposables.add(this.onDidActiveTextEditorControlChange(() => {\r\n            // Clear old\r\n            pickerDisposable.value = undefined;\r\n            // Add new\r\n            pickerDisposable.value = this.doProvide(picker, token);\r\n        }));\r\n        return disposables;\r\n    }\r\n    doProvide(picker, token) {\r\n        const disposables = new DisposableStore();\r\n        // With text control\r\n        const editor = this.activeTextEditorControl;\r\n        if (editor && this.canProvideWithTextEditor(editor)) {\r\n            const context = { editor };\r\n            // Restore any view state if this picker was closed\r\n            // without actually going to a line\r\n            const codeEditor = getCodeEditor(editor);\r\n            if (codeEditor) {\r\n                // Remember view state and update it when the cursor position\r\n                // changes even later because it could be that the user has\r\n                // configured quick access to remain open when focus is lost and\r\n                // we always want to restore the current location.\r\n                let lastKnownEditorViewState = withNullAsUndefined(editor.saveViewState());\r\n                disposables.add(codeEditor.onDidChangeCursorPosition(() => {\r\n                    lastKnownEditorViewState = withNullAsUndefined(editor.saveViewState());\r\n                }));\r\n                context.restoreViewState = () => {\r\n                    if (lastKnownEditorViewState && editor === this.activeTextEditorControl) {\r\n                        editor.restoreViewState(lastKnownEditorViewState);\r\n                    }\r\n                };\r\n                disposables.add(once(token.onCancellationRequested)(() => { var _a; return (_a = context.restoreViewState) === null || _a === void 0 ? void 0 : _a.call(context); }));\r\n            }\r\n            // Clean up decorations on dispose\r\n            disposables.add(toDisposable(() => this.clearDecorations(editor)));\r\n            // Ask subclass for entries\r\n            disposables.add(this.provideWithTextEditor(context, picker, token));\r\n        }\r\n        // Without text control\r\n        else {\r\n            disposables.add(this.provideWithoutTextEditor(picker, token));\r\n        }\r\n        return disposables;\r\n    }\r\n    /**\r\n     * Subclasses to implement if they can operate on the text editor.\r\n     */\r\n    canProvideWithTextEditor(editor) {\r\n        return true;\r\n    }\r\n    gotoLocation({ editor }, options) {\r\n        editor.setSelection(options.range);\r\n        editor.revealRangeInCenter(options.range, 0 /* Smooth */);\r\n        if (!options.preserveFocus) {\r\n            editor.focus();\r\n        }\r\n    }\r\n    getModel(editor) {\r\n        var _a;\r\n        return isDiffEditor(editor) ?\r\n            (_a = editor.getModel()) === null || _a === void 0 ? void 0 : _a.modified :\r\n            editor.getModel();\r\n    }\r\n    addDecorations(editor, range) {\r\n        editor.changeDecorations(changeAccessor => {\r\n            // Reset old decorations if any\r\n            const deleteDecorations = [];\r\n            if (this.rangeHighlightDecorationId) {\r\n                deleteDecorations.push(this.rangeHighlightDecorationId.overviewRulerDecorationId);\r\n                deleteDecorations.push(this.rangeHighlightDecorationId.rangeHighlightId);\r\n                this.rangeHighlightDecorationId = undefined;\r\n            }\r\n            // Add new decorations for the range\r\n            const newDecorations = [\r\n                // highlight the entire line on the range\r\n                {\r\n                    range,\r\n                    options: {\r\n                        description: 'quick-access-range-highlight',\r\n                        className: 'rangeHighlight',\r\n                        isWholeLine: true\r\n                    }\r\n                },\r\n                // also add overview ruler highlight\r\n                {\r\n                    range,\r\n                    options: {\r\n                        description: 'quick-access-range-highlight-overview',\r\n                        overviewRuler: {\r\n                            color: themeColorFromId(overviewRulerRangeHighlight),\r\n                            position: OverviewRulerLane.Full\r\n                        }\r\n                    }\r\n                }\r\n            ];\r\n            const [rangeHighlightId, overviewRulerDecorationId] = changeAccessor.deltaDecorations(deleteDecorations, newDecorations);\r\n            this.rangeHighlightDecorationId = { rangeHighlightId, overviewRulerDecorationId };\r\n        });\r\n    }\r\n    clearDecorations(editor) {\r\n        const rangeHighlightDecorationId = this.rangeHighlightDecorationId;\r\n        if (rangeHighlightDecorationId) {\r\n            editor.changeDecorations(changeAccessor => {\r\n                changeAccessor.deltaDecorations([\r\n                    rangeHighlightDecorationId.overviewRulerDecorationId,\r\n                    rangeHighlightDecorationId.rangeHighlightId\r\n                ], []);\r\n            });\r\n            this.rangeHighlightDecorationId = undefined;\r\n        }\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { localize } from '../../../nls.js';\r\nimport { DisposableStore, Disposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { AbstractEditorNavigationQuickAccessProvider } from './editorNavigationQuickAccess.js';\r\nimport { getCodeEditor } from '../../browser/editorBrowser.js';\r\nexport class AbstractGotoLineQuickAccessProvider extends AbstractEditorNavigationQuickAccessProvider {\r\n    constructor() {\r\n        super({ canAcceptInBackground: true });\r\n    }\r\n    provideWithoutTextEditor(picker) {\r\n        const label = localize('cannotRunGotoLine', \"Open a text editor first to go to a line.\");\r\n        picker.items = [{ label }];\r\n        picker.ariaLabel = label;\r\n        return Disposable.None;\r\n    }\r\n    provideWithTextEditor(context, picker, token) {\r\n        const editor = context.editor;\r\n        const disposables = new DisposableStore();\r\n        // Goto line once picked\r\n        disposables.add(picker.onDidAccept(event => {\r\n            const [item] = picker.selectedItems;\r\n            if (item) {\r\n                if (!this.isValidLineNumber(editor, item.lineNumber)) {\r\n                    return;\r\n                }\r\n                this.gotoLocation(context, { range: this.toRange(item.lineNumber, item.column), keyMods: picker.keyMods, preserveFocus: event.inBackground });\r\n                if (!event.inBackground) {\r\n                    picker.hide();\r\n                }\r\n            }\r\n        }));\r\n        // React to picker changes\r\n        const updatePickerAndEditor = () => {\r\n            const position = this.parsePosition(editor, picker.value.trim().substr(AbstractGotoLineQuickAccessProvider.PREFIX.length));\r\n            const label = this.getPickLabel(editor, position.lineNumber, position.column);\r\n            // Picker\r\n            picker.items = [{\r\n                    lineNumber: position.lineNumber,\r\n                    column: position.column,\r\n                    label\r\n                }];\r\n            // ARIA Label\r\n            picker.ariaLabel = label;\r\n            // Clear decorations for invalid range\r\n            if (!this.isValidLineNumber(editor, position.lineNumber)) {\r\n                this.clearDecorations(editor);\r\n                return;\r\n            }\r\n            // Reveal\r\n            const range = this.toRange(position.lineNumber, position.column);\r\n            editor.revealRangeInCenter(range, 0 /* Smooth */);\r\n            // Decorate\r\n            this.addDecorations(editor, range);\r\n        };\r\n        updatePickerAndEditor();\r\n        disposables.add(picker.onDidChangeValue(() => updatePickerAndEditor()));\r\n        // Adjust line number visibility as needed\r\n        const codeEditor = getCodeEditor(editor);\r\n        if (codeEditor) {\r\n            const options = codeEditor.getOptions();\r\n            const lineNumbers = options.get(57 /* lineNumbers */);\r\n            if (lineNumbers.renderType === 2 /* Relative */) {\r\n                codeEditor.updateOptions({ lineNumbers: 'on' });\r\n                disposables.add(toDisposable(() => codeEditor.updateOptions({ lineNumbers: 'relative' })));\r\n            }\r\n        }\r\n        return disposables;\r\n    }\r\n    toRange(lineNumber = 1, column = 1) {\r\n        return {\r\n            startLineNumber: lineNumber,\r\n            startColumn: column,\r\n            endLineNumber: lineNumber,\r\n            endColumn: column\r\n        };\r\n    }\r\n    parsePosition(editor, value) {\r\n        // Support line-col formats of `line,col`, `line:col`, `line#col`\r\n        const numbers = value.split(/,|:|#/).map(part => parseInt(part, 10)).filter(part => !isNaN(part));\r\n        const endLine = this.lineCount(editor) + 1;\r\n        return {\r\n            lineNumber: numbers[0] > 0 ? numbers[0] : endLine + numbers[0],\r\n            column: numbers[1]\r\n        };\r\n    }\r\n    getPickLabel(editor, lineNumber, column) {\r\n        // Location valid: indicate this as picker label\r\n        if (this.isValidLineNumber(editor, lineNumber)) {\r\n            if (this.isValidColumn(editor, lineNumber, column)) {\r\n                return localize('gotoLineColumnLabel', \"Go to line {0} and character {1}.\", lineNumber, column);\r\n            }\r\n            return localize('gotoLineLabel', \"Go to line {0}.\", lineNumber);\r\n        }\r\n        // Location invalid: show generic label\r\n        const position = editor.getPosition() || { lineNumber: 1, column: 1 };\r\n        const lineCount = this.lineCount(editor);\r\n        if (lineCount > 1) {\r\n            return localize('gotoLineLabelEmptyWithLimit', \"Current Line: {0}, Character: {1}. Type a line number between 1 and {2} to navigate to.\", position.lineNumber, position.column, lineCount);\r\n        }\r\n        return localize('gotoLineLabelEmpty', \"Current Line: {0}, Character: {1}. Type a line number to navigate to.\", position.lineNumber, position.column);\r\n    }\r\n    isValidLineNumber(editor, lineNumber) {\r\n        if (!lineNumber || typeof lineNumber !== 'number') {\r\n            return false;\r\n        }\r\n        return lineNumber > 0 && lineNumber <= this.lineCount(editor);\r\n    }\r\n    isValidColumn(editor, lineNumber, column) {\r\n        if (!column || typeof column !== 'number') {\r\n            return false;\r\n        }\r\n        const model = this.getModel(editor);\r\n        if (!model) {\r\n            return false;\r\n        }\r\n        const positionCandidate = { lineNumber, column };\r\n        return model.validatePosition(positionCandidate).equals(positionCandidate);\r\n    }\r\n    lineCount(editor) {\r\n        var _a, _b;\r\n        return (_b = (_a = this.getModel(editor)) === null || _a === void 0 ? void 0 : _a.getLineCount()) !== null && _b !== void 0 ? _b : 0;\r\n    }\r\n}\r\nAbstractGotoLineQuickAccessProvider.PREFIX = ':';\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { AbstractGotoLineQuickAccessProvider } from '../../../contrib/quickAccess/gotoLineQuickAccess.js';\r\nimport { Registry } from '../../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\r\nimport { GoToLineNLS } from '../../../common/standaloneStrings.js';\r\nimport { Event } from '../../../../base/common/event.js';\r\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\r\nlet StandaloneGotoLineQuickAccessProvider = class StandaloneGotoLineQuickAccessProvider extends AbstractGotoLineQuickAccessProvider {\r\n    constructor(editorService) {\r\n        super();\r\n        this.editorService = editorService;\r\n        this.onDidActiveTextEditorControlChange = Event.None;\r\n    }\r\n    get activeTextEditorControl() {\r\n        return withNullAsUndefined(this.editorService.getFocusedCodeEditor());\r\n    }\r\n};\r\nStandaloneGotoLineQuickAccessProvider = __decorate([\r\n    __param(0, ICodeEditorService)\r\n], StandaloneGotoLineQuickAccessProvider);\r\nexport { StandaloneGotoLineQuickAccessProvider };\r\nRegistry.as(Extensions.Quickaccess).registerQuickAccessProvider({\r\n    ctor: StandaloneGotoLineQuickAccessProvider,\r\n    prefix: StandaloneGotoLineQuickAccessProvider.PREFIX,\r\n    helpEntries: [{ description: GoToLineNLS.gotoLineActionLabel, needsEditor: true }]\r\n});\r\nexport class GotoLineAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.gotoLine',\r\n            label: GoToLineNLS.gotoLineActionLabel,\r\n            alias: 'Go to Line/Column...',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 37 /* KEY_G */,\r\n                mac: { primary: 256 /* WinCtrl */ | 37 /* KEY_G */ },\r\n                weight: 100 /* EditorContrib */\r\n            }\r\n        });\r\n    }\r\n    run(accessor) {\r\n        accessor.get(IQuickInputService).quickAccess.show(StandaloneGotoLineQuickAccessProvider.PREFIX);\r\n    }\r\n}\r\nregisterEditorAction(GotoLineAction);\r\n", "import { fuzzyScore, createMatches as createFuzzyMatches } from './filters.js';\r\nimport { sep } from './path.js';\r\nimport { isWindows } from './platform.js';\r\nimport { stripWildcards } from './strings.js';\r\nconst NO_SCORE2 = [undefined, []];\r\nexport function scoreFuzzy2(target, query, patternStart = 0, wordStart = 0) {\r\n    // Score: multiple inputs\r\n    const preparedQuery = query;\r\n    if (preparedQuery.values && preparedQuery.values.length > 1) {\r\n        return doScoreFuzzy2Multiple(target, preparedQuery.values, patternStart, wordStart);\r\n    }\r\n    // Score: single input\r\n    return doScoreFuzzy2Single(target, query, patternStart, wordStart);\r\n}\r\nfunction doScoreFuzzy2Multiple(target, query, patternStart, wordStart) {\r\n    let totalScore = 0;\r\n    const totalMatches = [];\r\n    for (const queryPiece of query) {\r\n        const [score, matches] = doScoreFuzzy2Single(target, queryPiece, patternStart, wordStart);\r\n        if (typeof score !== 'number') {\r\n            // if a single query value does not match, return with\r\n            // no score entirely, we require all queries to match\r\n            return NO_SCORE2;\r\n        }\r\n        totalScore += score;\r\n        totalMatches.push(...matches);\r\n    }\r\n    // if we have a score, ensure that the positions are\r\n    // sorted in ascending order and distinct\r\n    return [totalScore, normalizeMatches(totalMatches)];\r\n}\r\nfunction doScoreFuzzy2Single(target, query, patternStart, wordStart) {\r\n    const score = fuzzyScore(query.original, query.originalLowercase, patternStart, target, target.toLowerCase(), wordStart, true);\r\n    if (!score) {\r\n        return NO_SCORE2;\r\n    }\r\n    return [score[0], createFuzzyMatches(score)];\r\n}\r\nfunction normalizeMatches(matches) {\r\n    // sort matches by start to be able to normalize\r\n    const sortedMatches = matches.sort((matchA, matchB) => {\r\n        return matchA.start - matchB.start;\r\n    });\r\n    // merge matches that overlap\r\n    const normalizedMatches = [];\r\n    let currentMatch = undefined;\r\n    for (const match of sortedMatches) {\r\n        // if we have no current match or the matches\r\n        // do not overlap, we take it as is and remember\r\n        // it for future merging\r\n        if (!currentMatch || !matchOverlaps(currentMatch, match)) {\r\n            currentMatch = match;\r\n            normalizedMatches.push(match);\r\n        }\r\n        // otherwise we merge the matches\r\n        else {\r\n            currentMatch.start = Math.min(currentMatch.start, match.start);\r\n            currentMatch.end = Math.max(currentMatch.end, match.end);\r\n        }\r\n    }\r\n    return normalizedMatches;\r\n}\r\nfunction matchOverlaps(matchA, matchB) {\r\n    if (matchA.end < matchB.start) {\r\n        return false; // A ends before B starts\r\n    }\r\n    if (matchB.end < matchA.start) {\r\n        return false; // B ends before A starts\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Helper function to prepare a search value for scoring by removing unwanted characters\r\n * and allowing to score on multiple pieces separated by whitespace character.\r\n */\r\nconst MULTIPLE_QUERY_VALUES_SEPARATOR = ' ';\r\nexport function prepareQuery(original) {\r\n    if (typeof original !== 'string') {\r\n        original = '';\r\n    }\r\n    const originalLowercase = original.toLowerCase();\r\n    const { pathNormalized, normalized, normalizedLowercase } = normalizeQuery(original);\r\n    const containsPathSeparator = pathNormalized.indexOf(sep) >= 0;\r\n    let values = undefined;\r\n    const originalSplit = original.split(MULTIPLE_QUERY_VALUES_SEPARATOR);\r\n    if (originalSplit.length > 1) {\r\n        for (const originalPiece of originalSplit) {\r\n            const { pathNormalized: pathNormalizedPiece, normalized: normalizedPiece, normalizedLowercase: normalizedLowercasePiece } = normalizeQuery(originalPiece);\r\n            if (normalizedPiece) {\r\n                if (!values) {\r\n                    values = [];\r\n                }\r\n                values.push({\r\n                    original: originalPiece,\r\n                    originalLowercase: originalPiece.toLowerCase(),\r\n                    pathNormalized: pathNormalizedPiece,\r\n                    normalized: normalizedPiece,\r\n                    normalizedLowercase: normalizedLowercasePiece\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return { original, originalLowercase, pathNormalized, normalized, normalizedLowercase, values, containsPathSeparator };\r\n}\r\nfunction normalizeQuery(original) {\r\n    let pathNormalized;\r\n    if (isWindows) {\r\n        pathNormalized = original.replace(/\\//g, sep); // Help Windows users to search for paths when using slash\r\n    }\r\n    else {\r\n        pathNormalized = original.replace(/\\\\/g, sep); // Help macOS/Linux users to search for paths when using backslash\r\n    }\r\n    const normalized = stripWildcards(pathNormalized).replace(/\\s/g, '');\r\n    return {\r\n        pathNormalized,\r\n        normalized,\r\n        normalizedLowercase: normalized.toLowerCase()\r\n    };\r\n}\r\nexport function pieceToQuery(arg1) {\r\n    if (Array.isArray(arg1)) {\r\n        return prepareQuery(arg1.map(piece => piece.original).join(MULTIPLE_QUERY_VALUES_SEPARATOR));\r\n    }\r\n    return prepareQuery(arg1.original);\r\n}\r\n//#endregion\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { localize } from '../../../nls.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { DisposableStore, Disposable, toDisposable } from '../../../base/common/lifecycle.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { AbstractEditorNavigationQuickAccessProvider } from './editorNavigationQuickAccess.js';\r\nimport { SymbolKinds, DocumentSymbolProviderRegistry } from '../../common/modes.js';\r\nimport { OutlineModel } from '../documentSymbols/outlineModel.js';\r\nimport { trim, format } from '../../../base/common/strings.js';\r\nimport { prepareQuery, pieceToQuery, scoreFuzzy2 } from '../../../base/common/fuzzyScorer.js';\r\nimport { Codicon } from '../../../base/common/codicons.js';\r\nexport class AbstractGotoSymbolQuickAccessProvider extends AbstractEditorNavigationQuickAccessProvider {\r\n    constructor(options = Object.create(null)) {\r\n        super(options);\r\n        this.options = options;\r\n        this.options.canAcceptInBackground = true;\r\n    }\r\n    provideWithoutTextEditor(picker) {\r\n        this.provideLabelPick(picker, localize('cannotRunGotoSymbolWithoutEditor', \"To go to a symbol, first open a text editor with symbol information.\"));\r\n        return Disposable.None;\r\n    }\r\n    provideWithTextEditor(context, picker, token) {\r\n        const editor = context.editor;\r\n        const model = this.getModel(editor);\r\n        if (!model) {\r\n            return Disposable.None;\r\n        }\r\n        // Provide symbols from model if available in registry\r\n        if (DocumentSymbolProviderRegistry.has(model)) {\r\n            return this.doProvideWithEditorSymbols(context, model, picker, token);\r\n        }\r\n        // Otherwise show an entry for a model without registry\r\n        // But give a chance to resolve the symbols at a later\r\n        // point if possible\r\n        return this.doProvideWithoutEditorSymbols(context, model, picker, token);\r\n    }\r\n    doProvideWithoutEditorSymbols(context, model, picker, token) {\r\n        const disposables = new DisposableStore();\r\n        // Generic pick for not having any symbol information\r\n        this.provideLabelPick(picker, localize('cannotRunGotoSymbolWithoutSymbolProvider', \"The active text editor does not provide symbol information.\"));\r\n        // Wait for changes to the registry and see if eventually\r\n        // we do get symbols. This can happen if the picker is opened\r\n        // very early after the model has loaded but before the\r\n        // language registry is ready.\r\n        // https://github.com/microsoft/vscode/issues/70607\r\n        (() => __awaiter(this, void 0, void 0, function* () {\r\n            const result = yield this.waitForLanguageSymbolRegistry(model, disposables);\r\n            if (!result || token.isCancellationRequested) {\r\n                return;\r\n            }\r\n            disposables.add(this.doProvideWithEditorSymbols(context, model, picker, token));\r\n        }))();\r\n        return disposables;\r\n    }\r\n    provideLabelPick(picker, label) {\r\n        picker.items = [{ label, index: 0, kind: 14 /* String */ }];\r\n        picker.ariaLabel = label;\r\n    }\r\n    waitForLanguageSymbolRegistry(model, disposables) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (DocumentSymbolProviderRegistry.has(model)) {\r\n                return true;\r\n            }\r\n            let symbolProviderRegistryPromiseResolve;\r\n            const symbolProviderRegistryPromise = new Promise(resolve => symbolProviderRegistryPromiseResolve = resolve);\r\n            // Resolve promise when registry knows model\r\n            const symbolProviderListener = disposables.add(DocumentSymbolProviderRegistry.onDidChange(() => {\r\n                if (DocumentSymbolProviderRegistry.has(model)) {\r\n                    symbolProviderListener.dispose();\r\n                    symbolProviderRegistryPromiseResolve(true);\r\n                }\r\n            }));\r\n            // Resolve promise when we get disposed too\r\n            disposables.add(toDisposable(() => symbolProviderRegistryPromiseResolve(false)));\r\n            return symbolProviderRegistryPromise;\r\n        });\r\n    }\r\n    doProvideWithEditorSymbols(context, model, picker, token) {\r\n        const editor = context.editor;\r\n        const disposables = new DisposableStore();\r\n        // Goto symbol once picked\r\n        disposables.add(picker.onDidAccept(event => {\r\n            const [item] = picker.selectedItems;\r\n            if (item && item.range) {\r\n                this.gotoLocation(context, { range: item.range.selection, keyMods: picker.keyMods, preserveFocus: event.inBackground });\r\n                if (!event.inBackground) {\r\n                    picker.hide();\r\n                }\r\n            }\r\n        }));\r\n        // Goto symbol side by side if enabled\r\n        disposables.add(picker.onDidTriggerItemButton(({ item }) => {\r\n            if (item && item.range) {\r\n                this.gotoLocation(context, { range: item.range.selection, keyMods: picker.keyMods, forceSideBySide: true });\r\n                picker.hide();\r\n            }\r\n        }));\r\n        // Resolve symbols from document once and reuse this\r\n        // request for all filtering and typing then on\r\n        const symbolsPromise = this.getDocumentSymbols(model, token);\r\n        // Set initial picks and update on type\r\n        let picksCts = undefined;\r\n        const updatePickerItems = () => __awaiter(this, void 0, void 0, function* () {\r\n            // Cancel any previous ask for picks and busy\r\n            picksCts === null || picksCts === void 0 ? void 0 : picksCts.dispose(true);\r\n            picker.busy = false;\r\n            // Create new cancellation source for this run\r\n            picksCts = new CancellationTokenSource(token);\r\n            // Collect symbol picks\r\n            picker.busy = true;\r\n            try {\r\n                const query = prepareQuery(picker.value.substr(AbstractGotoSymbolQuickAccessProvider.PREFIX.length).trim());\r\n                const items = yield this.doGetSymbolPicks(symbolsPromise, query, undefined, picksCts.token);\r\n                if (token.isCancellationRequested) {\r\n                    return;\r\n                }\r\n                if (items.length > 0) {\r\n                    picker.items = items;\r\n                }\r\n                else {\r\n                    if (query.original.length > 0) {\r\n                        this.provideLabelPick(picker, localize('noMatchingSymbolResults', \"No matching editor symbols\"));\r\n                    }\r\n                    else {\r\n                        this.provideLabelPick(picker, localize('noSymbolResults', \"No editor symbols\"));\r\n                    }\r\n                }\r\n            }\r\n            finally {\r\n                if (!token.isCancellationRequested) {\r\n                    picker.busy = false;\r\n                }\r\n            }\r\n        });\r\n        disposables.add(picker.onDidChangeValue(() => updatePickerItems()));\r\n        updatePickerItems();\r\n        // Reveal and decorate when active item changes\r\n        // However, ignore the very first event so that\r\n        // opening the picker is not immediately revealing\r\n        // and decorating the first entry.\r\n        let ignoreFirstActiveEvent = true;\r\n        disposables.add(picker.onDidChangeActive(() => {\r\n            const [item] = picker.activeItems;\r\n            if (item && item.range) {\r\n                if (ignoreFirstActiveEvent) {\r\n                    ignoreFirstActiveEvent = false;\r\n                    return;\r\n                }\r\n                // Reveal\r\n                editor.revealRangeInCenter(item.range.selection, 0 /* Smooth */);\r\n                // Decorate\r\n                this.addDecorations(editor, item.range.decoration);\r\n            }\r\n        }));\r\n        return disposables;\r\n    }\r\n    doGetSymbolPicks(symbolsPromise, query, options, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const symbols = yield symbolsPromise;\r\n            if (token.isCancellationRequested) {\r\n                return [];\r\n            }\r\n            const filterBySymbolKind = query.original.indexOf(AbstractGotoSymbolQuickAccessProvider.SCOPE_PREFIX) === 0;\r\n            const filterPos = filterBySymbolKind ? 1 : 0;\r\n            // Split between symbol and container query\r\n            let symbolQuery;\r\n            let containerQuery;\r\n            if (query.values && query.values.length > 1) {\r\n                symbolQuery = pieceToQuery(query.values[0]); // symbol: only match on first part\r\n                containerQuery = pieceToQuery(query.values.slice(1)); // container: match on all but first parts\r\n            }\r\n            else {\r\n                symbolQuery = query;\r\n            }\r\n            // Convert to symbol picks and apply filtering\r\n            const filteredSymbolPicks = [];\r\n            for (let index = 0; index < symbols.length; index++) {\r\n                const symbol = symbols[index];\r\n                const symbolLabel = trim(symbol.name);\r\n                const symbolLabelWithIcon = `$(symbol-${SymbolKinds.toString(symbol.kind) || 'property'}) ${symbolLabel}`;\r\n                const symbolLabelIconOffset = symbolLabelWithIcon.length - symbolLabel.length;\r\n                let containerLabel = symbol.containerName;\r\n                if (options === null || options === void 0 ? void 0 : options.extraContainerLabel) {\r\n                    if (containerLabel) {\r\n                        containerLabel = `${options.extraContainerLabel} \u2022 ${containerLabel}`;\r\n                    }\r\n                    else {\r\n                        containerLabel = options.extraContainerLabel;\r\n                    }\r\n                }\r\n                let symbolScore = undefined;\r\n                let symbolMatches = undefined;\r\n                let containerScore = undefined;\r\n                let containerMatches = undefined;\r\n                if (query.original.length > filterPos) {\r\n                    // First: try to score on the entire query, it is possible that\r\n                    // the symbol matches perfectly (e.g. searching for \"change log\"\r\n                    // can be a match on a markdown symbol \"change log\"). In that\r\n                    // case we want to skip the container query altogether.\r\n                    let skipContainerQuery = false;\r\n                    if (symbolQuery !== query) {\r\n                        [symbolScore, symbolMatches] = scoreFuzzy2(symbolLabelWithIcon, Object.assign(Object.assign({}, query), { values: undefined /* disable multi-query support */ }), filterPos, symbolLabelIconOffset);\r\n                        if (typeof symbolScore === 'number') {\r\n                            skipContainerQuery = true; // since we consumed the query, skip any container matching\r\n                        }\r\n                    }\r\n                    // Otherwise: score on the symbol query and match on the container later\r\n                    if (typeof symbolScore !== 'number') {\r\n                        [symbolScore, symbolMatches] = scoreFuzzy2(symbolLabelWithIcon, symbolQuery, filterPos, symbolLabelIconOffset);\r\n                        if (typeof symbolScore !== 'number') {\r\n                            continue;\r\n                        }\r\n                    }\r\n                    // Score by container if specified\r\n                    if (!skipContainerQuery && containerQuery) {\r\n                        if (containerLabel && containerQuery.original.length > 0) {\r\n                            [containerScore, containerMatches] = scoreFuzzy2(containerLabel, containerQuery);\r\n                        }\r\n                        if (typeof containerScore !== 'number') {\r\n                            continue;\r\n                        }\r\n                        if (typeof symbolScore === 'number') {\r\n                            symbolScore += containerScore; // boost symbolScore by containerScore\r\n                        }\r\n                    }\r\n                }\r\n                const deprecated = symbol.tags && symbol.tags.indexOf(1 /* Deprecated */) >= 0;\r\n                filteredSymbolPicks.push({\r\n                    index,\r\n                    kind: symbol.kind,\r\n                    score: symbolScore,\r\n                    label: symbolLabelWithIcon,\r\n                    ariaLabel: symbolLabel,\r\n                    description: containerLabel,\r\n                    highlights: deprecated ? undefined : {\r\n                        label: symbolMatches,\r\n                        description: containerMatches\r\n                    },\r\n                    range: {\r\n                        selection: Range.collapseToStart(symbol.selectionRange),\r\n                        decoration: symbol.range\r\n                    },\r\n                    strikethrough: deprecated,\r\n                    buttons: (() => {\r\n                        var _a, _b;\r\n                        const openSideBySideDirection = ((_a = this.options) === null || _a === void 0 ? void 0 : _a.openSideBySideDirection) ? (_b = this.options) === null || _b === void 0 ? void 0 : _b.openSideBySideDirection() : undefined;\r\n                        if (!openSideBySideDirection) {\r\n                            return undefined;\r\n                        }\r\n                        return [\r\n                            {\r\n                                iconClass: openSideBySideDirection === 'right' ? Codicon.splitHorizontal.classNames : Codicon.splitVertical.classNames,\r\n                                tooltip: openSideBySideDirection === 'right' ? localize('openToSide', \"Open to the Side\") : localize('openToBottom', \"Open to the Bottom\")\r\n                            }\r\n                        ];\r\n                    })()\r\n                });\r\n            }\r\n            // Sort by score\r\n            const sortedFilteredSymbolPicks = filteredSymbolPicks.sort((symbolA, symbolB) => filterBySymbolKind ?\r\n                this.compareByKindAndScore(symbolA, symbolB) :\r\n                this.compareByScore(symbolA, symbolB));\r\n            // Add separator for types\r\n            // - @  only total number of symbols\r\n            // - @: grouped by symbol kind\r\n            let symbolPicks = [];\r\n            if (filterBySymbolKind) {\r\n                let lastSymbolKind = undefined;\r\n                let lastSeparator = undefined;\r\n                let lastSymbolKindCounter = 0;\r\n                function updateLastSeparatorLabel() {\r\n                    if (lastSeparator && typeof lastSymbolKind === 'number' && lastSymbolKindCounter > 0) {\r\n                        lastSeparator.label = format(NLS_SYMBOL_KIND_CACHE[lastSymbolKind] || FALLBACK_NLS_SYMBOL_KIND, lastSymbolKindCounter);\r\n                    }\r\n                }\r\n                for (const symbolPick of sortedFilteredSymbolPicks) {\r\n                    // Found new kind\r\n                    if (lastSymbolKind !== symbolPick.kind) {\r\n                        // Update last separator with number of symbols we found for kind\r\n                        updateLastSeparatorLabel();\r\n                        lastSymbolKind = symbolPick.kind;\r\n                        lastSymbolKindCounter = 1;\r\n                        // Add new separator for new kind\r\n                        lastSeparator = { type: 'separator' };\r\n                        symbolPicks.push(lastSeparator);\r\n                    }\r\n                    // Existing kind, keep counting\r\n                    else {\r\n                        lastSymbolKindCounter++;\r\n                    }\r\n                    // Add to final result\r\n                    symbolPicks.push(symbolPick);\r\n                }\r\n                // Update last separator with number of symbols we found for kind\r\n                updateLastSeparatorLabel();\r\n            }\r\n            else if (sortedFilteredSymbolPicks.length > 0) {\r\n                symbolPicks = [\r\n                    { label: localize('symbols', \"symbols ({0})\", filteredSymbolPicks.length), type: 'separator' },\r\n                    ...sortedFilteredSymbolPicks\r\n                ];\r\n            }\r\n            return symbolPicks;\r\n        });\r\n    }\r\n    compareByScore(symbolA, symbolB) {\r\n        if (typeof symbolA.score !== 'number' && typeof symbolB.score === 'number') {\r\n            return 1;\r\n        }\r\n        else if (typeof symbolA.score === 'number' && typeof symbolB.score !== 'number') {\r\n            return -1;\r\n        }\r\n        if (typeof symbolA.score === 'number' && typeof symbolB.score === 'number') {\r\n            if (symbolA.score > symbolB.score) {\r\n                return -1;\r\n            }\r\n            else if (symbolA.score < symbolB.score) {\r\n                return 1;\r\n            }\r\n        }\r\n        if (symbolA.index < symbolB.index) {\r\n            return -1;\r\n        }\r\n        else if (symbolA.index > symbolB.index) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    compareByKindAndScore(symbolA, symbolB) {\r\n        const kindA = NLS_SYMBOL_KIND_CACHE[symbolA.kind] || FALLBACK_NLS_SYMBOL_KIND;\r\n        const kindB = NLS_SYMBOL_KIND_CACHE[symbolB.kind] || FALLBACK_NLS_SYMBOL_KIND;\r\n        // Sort by type first if scoped search\r\n        const result = kindA.localeCompare(kindB);\r\n        if (result === 0) {\r\n            return this.compareByScore(symbolA, symbolB);\r\n        }\r\n        return result;\r\n    }\r\n    getDocumentSymbols(document, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const model = yield OutlineModel.create(document, token);\r\n            return token.isCancellationRequested ? [] : model.asListOfDocumentSymbols();\r\n        });\r\n    }\r\n}\r\nAbstractGotoSymbolQuickAccessProvider.PREFIX = '@';\r\nAbstractGotoSymbolQuickAccessProvider.SCOPE_PREFIX = ':';\r\nAbstractGotoSymbolQuickAccessProvider.PREFIX_BY_CATEGORY = `${AbstractGotoSymbolQuickAccessProvider.PREFIX}${AbstractGotoSymbolQuickAccessProvider.SCOPE_PREFIX}`;\r\n// #region NLS Helpers\r\nconst FALLBACK_NLS_SYMBOL_KIND = localize('property', \"properties ({0})\");\r\nconst NLS_SYMBOL_KIND_CACHE = {\r\n    [5 /* Method */]: localize('method', \"methods ({0})\"),\r\n    [11 /* Function */]: localize('function', \"functions ({0})\"),\r\n    [8 /* Constructor */]: localize('_constructor', \"constructors ({0})\"),\r\n    [12 /* Variable */]: localize('variable', \"variables ({0})\"),\r\n    [4 /* Class */]: localize('class', \"classes ({0})\"),\r\n    [22 /* Struct */]: localize('struct', \"structs ({0})\"),\r\n    [23 /* Event */]: localize('event', \"events ({0})\"),\r\n    [24 /* Operator */]: localize('operator', \"operators ({0})\"),\r\n    [10 /* Interface */]: localize('interface', \"interfaces ({0})\"),\r\n    [2 /* Namespace */]: localize('namespace', \"namespaces ({0})\"),\r\n    [3 /* Package */]: localize('package', \"packages ({0})\"),\r\n    [25 /* TypeParameter */]: localize('typeParameter', \"type parameters ({0})\"),\r\n    [1 /* Module */]: localize('modules', \"modules ({0})\"),\r\n    [6 /* Property */]: localize('property', \"properties ({0})\"),\r\n    [9 /* Enum */]: localize('enum', \"enumerations ({0})\"),\r\n    [21 /* EnumMember */]: localize('enumMember', \"enumeration members ({0})\"),\r\n    [14 /* String */]: localize('string', \"strings ({0})\"),\r\n    [0 /* File */]: localize('file', \"files ({0})\"),\r\n    [17 /* Array */]: localize('array', \"arrays ({0})\"),\r\n    [15 /* Number */]: localize('number', \"numbers ({0})\"),\r\n    [16 /* Boolean */]: localize('boolean', \"booleans ({0})\"),\r\n    [18 /* Object */]: localize('object', \"objects ({0})\"),\r\n    [19 /* Key */]: localize('key', \"keys ({0})\"),\r\n    [7 /* Field */]: localize('field', \"fields ({0})\"),\r\n    [13 /* Constant */]: localize('constant', \"constants ({0})\")\r\n};\r\n//#endregion\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport '../../../../base/browser/ui/codicons/codiconStyles.js'; // The codicon symbol styles are defined here and must be loaded\r\nimport '../../../contrib/symbolIcons/symbolIcons.js'; // The codicon symbol colors are defined here and must be loaded to get colors\r\nimport { AbstractGotoSymbolQuickAccessProvider } from '../../../contrib/quickAccess/gotoSymbolQuickAccess.js';\r\nimport { Registry } from '../../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\r\nimport { QuickOutlineNLS } from '../../../common/standaloneStrings.js';\r\nimport { Event } from '../../../../base/common/event.js';\r\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\r\nlet StandaloneGotoSymbolQuickAccessProvider = class StandaloneGotoSymbolQuickAccessProvider extends AbstractGotoSymbolQuickAccessProvider {\r\n    constructor(editorService) {\r\n        super();\r\n        this.editorService = editorService;\r\n        this.onDidActiveTextEditorControlChange = Event.None;\r\n    }\r\n    get activeTextEditorControl() {\r\n        return withNullAsUndefined(this.editorService.getFocusedCodeEditor());\r\n    }\r\n};\r\nStandaloneGotoSymbolQuickAccessProvider = __decorate([\r\n    __param(0, ICodeEditorService)\r\n], StandaloneGotoSymbolQuickAccessProvider);\r\nexport { StandaloneGotoSymbolQuickAccessProvider };\r\nRegistry.as(Extensions.Quickaccess).registerQuickAccessProvider({\r\n    ctor: StandaloneGotoSymbolQuickAccessProvider,\r\n    prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX,\r\n    helpEntries: [\r\n        { description: QuickOutlineNLS.quickOutlineActionLabel, prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX, needsEditor: true },\r\n        { description: QuickOutlineNLS.quickOutlineByCategoryActionLabel, prefix: AbstractGotoSymbolQuickAccessProvider.PREFIX_BY_CATEGORY, needsEditor: true }\r\n    ]\r\n});\r\nexport class GotoLineAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.quickOutline',\r\n            label: QuickOutlineNLS.quickOutlineActionLabel,\r\n            alias: 'Go to Symbol...',\r\n            precondition: EditorContextKeys.hasDocumentSymbolProvider,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 45 /* KEY_O */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: 'navigation',\r\n                order: 3\r\n            }\r\n        });\r\n    }\r\n    run(accessor) {\r\n        accessor.get(IQuickInputService).quickAccess.show(AbstractGotoSymbolQuickAccessProvider.PREFIX);\r\n    }\r\n}\r\nregisterEditorAction(GotoLineAction);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { DisposableStore, Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\r\nimport { timeout } from '../../../base/common/async.js';\r\nexport var TriggerAction;\r\n(function (TriggerAction) {\r\n    /**\r\n     * Do nothing after the button was clicked.\r\n     */\r\n    TriggerAction[TriggerAction[\"NO_ACTION\"] = 0] = \"NO_ACTION\";\r\n    /**\r\n     * Close the picker.\r\n     */\r\n    TriggerAction[TriggerAction[\"CLOSE_PICKER\"] = 1] = \"CLOSE_PICKER\";\r\n    /**\r\n     * Update the results of the picker.\r\n     */\r\n    TriggerAction[TriggerAction[\"REFRESH_PICKER\"] = 2] = \"REFRESH_PICKER\";\r\n    /**\r\n     * Remove the item from the picker.\r\n     */\r\n    TriggerAction[TriggerAction[\"REMOVE_ITEM\"] = 3] = \"REMOVE_ITEM\";\r\n})(TriggerAction || (TriggerAction = {}));\r\nfunction isPicksWithActive(obj) {\r\n    const candidate = obj;\r\n    return Array.isArray(candidate.items);\r\n}\r\nfunction isFastAndSlowPicks(obj) {\r\n    const candidate = obj;\r\n    return !!candidate.picks && candidate.additionalPicks instanceof Promise;\r\n}\r\nexport class PickerQuickAccessProvider extends Disposable {\r\n    constructor(prefix, options) {\r\n        super();\r\n        this.prefix = prefix;\r\n        this.options = options;\r\n    }\r\n    provide(picker, token) {\r\n        var _a;\r\n        const disposables = new DisposableStore();\r\n        // Apply options if any\r\n        picker.canAcceptInBackground = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.canAcceptInBackground);\r\n        // Disable filtering & sorting, we control the results\r\n        picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\r\n        // Set initial picks and update on type\r\n        let picksCts = undefined;\r\n        const picksDisposable = disposables.add(new MutableDisposable());\r\n        const updatePickerItems = () => __awaiter(this, void 0, void 0, function* () {\r\n            const picksDisposables = picksDisposable.value = new DisposableStore();\r\n            // Cancel any previous ask for picks and busy\r\n            picksCts === null || picksCts === void 0 ? void 0 : picksCts.dispose(true);\r\n            picker.busy = false;\r\n            // Create new cancellation source for this run\r\n            picksCts = new CancellationTokenSource(token);\r\n            // Collect picks and support both long running and short or combined\r\n            const picksToken = picksCts.token;\r\n            const picksFilter = picker.value.substr(this.prefix.length).trim();\r\n            const providedPicks = this._getPicks(picksFilter, picksDisposables, picksToken);\r\n            const applyPicks = (picks, skipEmpty) => {\r\n                var _a;\r\n                let items;\r\n                let activeItem = undefined;\r\n                if (isPicksWithActive(picks)) {\r\n                    items = picks.items;\r\n                    activeItem = picks.active;\r\n                }\r\n                else {\r\n                    items = picks;\r\n                }\r\n                if (items.length === 0) {\r\n                    if (skipEmpty) {\r\n                        return false;\r\n                    }\r\n                    if (picksFilter.length > 0 && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.noResultsPick)) {\r\n                        items = [this.options.noResultsPick];\r\n                    }\r\n                }\r\n                picker.items = items;\r\n                if (activeItem) {\r\n                    picker.activeItems = [activeItem];\r\n                }\r\n                return true;\r\n            };\r\n            // No Picks\r\n            if (providedPicks === null) {\r\n                // Ignore\r\n            }\r\n            // Fast and Slow Picks\r\n            else if (isFastAndSlowPicks(providedPicks)) {\r\n                let fastPicksApplied = false;\r\n                let slowPicksApplied = false;\r\n                yield Promise.all([\r\n                    // Fast Picks: to reduce amount of flicker, we race against\r\n                    // the slow picks over 500ms and then set the fast picks.\r\n                    // If the slow picks are faster, we reduce the flicker by\r\n                    // only setting the items once.\r\n                    (() => __awaiter(this, void 0, void 0, function* () {\r\n                        yield timeout(PickerQuickAccessProvider.FAST_PICKS_RACE_DELAY);\r\n                        if (picksToken.isCancellationRequested) {\r\n                            return;\r\n                        }\r\n                        if (!slowPicksApplied) {\r\n                            fastPicksApplied = applyPicks(providedPicks.picks, true /* skip over empty to reduce flicker */);\r\n                        }\r\n                    }))(),\r\n                    // Slow Picks: we await the slow picks and then set them at\r\n                    // once together with the fast picks, but only if we actually\r\n                    // have additional results.\r\n                    (() => __awaiter(this, void 0, void 0, function* () {\r\n                        picker.busy = true;\r\n                        try {\r\n                            const awaitedAdditionalPicks = yield providedPicks.additionalPicks;\r\n                            if (picksToken.isCancellationRequested) {\r\n                                return;\r\n                            }\r\n                            let picks;\r\n                            let activePick = undefined;\r\n                            if (isPicksWithActive(providedPicks.picks)) {\r\n                                picks = providedPicks.picks.items;\r\n                                activePick = providedPicks.picks.active;\r\n                            }\r\n                            else {\r\n                                picks = providedPicks.picks;\r\n                            }\r\n                            let additionalPicks;\r\n                            let additionalActivePick = undefined;\r\n                            if (isPicksWithActive(awaitedAdditionalPicks)) {\r\n                                additionalPicks = awaitedAdditionalPicks.items;\r\n                                additionalActivePick = awaitedAdditionalPicks.active;\r\n                            }\r\n                            else {\r\n                                additionalPicks = awaitedAdditionalPicks;\r\n                            }\r\n                            if (additionalPicks.length > 0 || !fastPicksApplied) {\r\n                                // If we do not have any activePick or additionalActivePick\r\n                                // we try to preserve the currently active pick from the\r\n                                // fast results. This fixes an issue where the user might\r\n                                // have made a pick active before the additional results\r\n                                // kick in.\r\n                                // See https://github.com/microsoft/vscode/issues/102480\r\n                                let fallbackActivePick = undefined;\r\n                                if (!activePick && !additionalActivePick) {\r\n                                    const fallbackActivePickCandidate = picker.activeItems[0];\r\n                                    if (fallbackActivePickCandidate && picks.indexOf(fallbackActivePickCandidate) !== -1) {\r\n                                        fallbackActivePick = fallbackActivePickCandidate;\r\n                                    }\r\n                                }\r\n                                applyPicks({\r\n                                    items: [...picks, ...additionalPicks],\r\n                                    active: activePick || additionalActivePick || fallbackActivePick\r\n                                });\r\n                            }\r\n                        }\r\n                        finally {\r\n                            if (!picksToken.isCancellationRequested) {\r\n                                picker.busy = false;\r\n                            }\r\n                            slowPicksApplied = true;\r\n                        }\r\n                    }))()\r\n                ]);\r\n            }\r\n            // Fast Picks\r\n            else if (!(providedPicks instanceof Promise)) {\r\n                applyPicks(providedPicks);\r\n            }\r\n            // Slow Picks\r\n            else {\r\n                picker.busy = true;\r\n                try {\r\n                    const awaitedPicks = yield providedPicks;\r\n                    if (picksToken.isCancellationRequested) {\r\n                        return;\r\n                    }\r\n                    applyPicks(awaitedPicks);\r\n                }\r\n                finally {\r\n                    if (!picksToken.isCancellationRequested) {\r\n                        picker.busy = false;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        disposables.add(picker.onDidChangeValue(() => updatePickerItems()));\r\n        updatePickerItems();\r\n        // Accept the pick on accept and hide picker\r\n        disposables.add(picker.onDidAccept(event => {\r\n            const [item] = picker.selectedItems;\r\n            if (typeof (item === null || item === void 0 ? void 0 : item.accept) === 'function') {\r\n                if (!event.inBackground) {\r\n                    picker.hide(); // hide picker unless we accept in background\r\n                }\r\n                item.accept(picker.keyMods, event);\r\n            }\r\n        }));\r\n        // Trigger the pick with button index if button triggered\r\n        disposables.add(picker.onDidTriggerItemButton(({ button, item }) => __awaiter(this, void 0, void 0, function* () {\r\n            var _b, _c;\r\n            if (typeof item.trigger === 'function') {\r\n                const buttonIndex = (_c = (_b = item.buttons) === null || _b === void 0 ? void 0 : _b.indexOf(button)) !== null && _c !== void 0 ? _c : -1;\r\n                if (buttonIndex >= 0) {\r\n                    const result = item.trigger(buttonIndex, picker.keyMods);\r\n                    const action = (typeof result === 'number') ? result : yield result;\r\n                    if (token.isCancellationRequested) {\r\n                        return;\r\n                    }\r\n                    switch (action) {\r\n                        case TriggerAction.NO_ACTION:\r\n                            break;\r\n                        case TriggerAction.CLOSE_PICKER:\r\n                            picker.hide();\r\n                            break;\r\n                        case TriggerAction.REFRESH_PICKER:\r\n                            updatePickerItems();\r\n                            break;\r\n                        case TriggerAction.REMOVE_ITEM:\r\n                            const index = picker.items.indexOf(item);\r\n                            if (index !== -1) {\r\n                                const items = picker.items.slice();\r\n                                items.splice(index, 1);\r\n                                picker.items = items;\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n        })));\r\n        return disposables;\r\n    }\r\n}\r\nPickerQuickAccessProvider.FAST_PICKS_RACE_DELAY = 200; // timeout before we accept fast results before slow results are present\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../nls.js';\r\nimport * as types from './types.js';\r\nimport * as arrays from './arrays.js';\r\nfunction exceptionToErrorMessage(exception, verbose) {\r\n    if (verbose && (exception.stack || exception.stacktrace)) {\r\n        return nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\r\n    }\r\n    return detectSystemErrorMessage(exception);\r\n}\r\nfunction stackToString(stack) {\r\n    if (Array.isArray(stack)) {\r\n        return stack.join('\\n');\r\n    }\r\n    return stack;\r\n}\r\nfunction detectSystemErrorMessage(exception) {\r\n    // See https://nodejs.org/api/errors.html#errors_class_system_error\r\n    if (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\r\n        return nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\r\n    }\r\n    return exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\r\n}\r\n/**\r\n * Tries to generate a human readable error message out of the error. If the verbose parameter\r\n * is set to true, the error message will include stacktrace details if provided.\r\n *\r\n * @returns A string containing the error message.\r\n */\r\nexport function toErrorMessage(error = null, verbose = false) {\r\n    if (!error) {\r\n        return nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\r\n    }\r\n    if (Array.isArray(error)) {\r\n        const errors = arrays.coalesce(error);\r\n        const msg = toErrorMessage(errors[0], verbose);\r\n        if (errors.length > 1) {\r\n            return nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\r\n        }\r\n        return msg;\r\n    }\r\n    if (types.isString(error)) {\r\n        return error;\r\n    }\r\n    if (error.detail) {\r\n        const detail = error.detail;\r\n        if (detail.error) {\r\n            return exceptionToErrorMessage(detail.error, verbose);\r\n        }\r\n        if (detail.exception) {\r\n            return exceptionToErrorMessage(detail.exception, verbose);\r\n        }\r\n    }\r\n    if (error.stack) {\r\n        return exceptionToErrorMessage(error, verbose);\r\n    }\r\n    if (error.message) {\r\n        return error.message;\r\n    }\r\n    return nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { localize } from '../../../nls.js';\r\nimport { PickerQuickAccessProvider } from './pickerQuickAccess.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { or, matchesPrefix, matchesWords, matchesContiguousSubString } from '../../../base/common/filters.js';\r\nimport { withNullAsUndefined } from '../../../base/common/types.js';\r\nimport { LRUCache } from '../../../base/common/map.js';\r\nimport { IStorageService } from '../../storage/common/storage.js';\r\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\r\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\r\nimport { ICommandService } from '../../commands/common/commands.js';\r\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\r\nimport { isPromiseCanceledError } from '../../../base/common/errors.js';\r\nimport { IDialogService } from '../../dialogs/common/dialogs.js';\r\nimport Severity from '../../../base/common/severity.js';\r\nimport { toErrorMessage } from '../../../base/common/errorMessage.js';\r\nlet AbstractCommandsQuickAccessProvider = class AbstractCommandsQuickAccessProvider extends PickerQuickAccessProvider {\r\n    constructor(options, instantiationService, keybindingService, commandService, telemetryService, dialogService) {\r\n        super(AbstractCommandsQuickAccessProvider.PREFIX, options);\r\n        this.instantiationService = instantiationService;\r\n        this.keybindingService = keybindingService;\r\n        this.commandService = commandService;\r\n        this.telemetryService = telemetryService;\r\n        this.dialogService = dialogService;\r\n        this.commandsHistory = this._register(this.instantiationService.createInstance(CommandsHistory));\r\n        this.options = options;\r\n    }\r\n    _getPicks(filter, disposables, token) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // Ask subclass for all command picks\r\n            const allCommandPicks = yield this.getCommandPicks(disposables, token);\r\n            if (token.isCancellationRequested) {\r\n                return [];\r\n            }\r\n            // Filter\r\n            const filteredCommandPicks = [];\r\n            for (const commandPick of allCommandPicks) {\r\n                const labelHighlights = withNullAsUndefined(AbstractCommandsQuickAccessProvider.WORD_FILTER(filter, commandPick.label));\r\n                const aliasHighlights = commandPick.commandAlias ? withNullAsUndefined(AbstractCommandsQuickAccessProvider.WORD_FILTER(filter, commandPick.commandAlias)) : undefined;\r\n                // Add if matching in label or alias\r\n                if (labelHighlights || aliasHighlights) {\r\n                    commandPick.highlights = {\r\n                        label: labelHighlights,\r\n                        detail: this.options.showAlias ? aliasHighlights : undefined\r\n                    };\r\n                    filteredCommandPicks.push(commandPick);\r\n                }\r\n                // Also add if we have a 100% command ID match\r\n                else if (filter === commandPick.commandId) {\r\n                    filteredCommandPicks.push(commandPick);\r\n                }\r\n            }\r\n            // Add description to commands that have duplicate labels\r\n            const mapLabelToCommand = new Map();\r\n            for (const commandPick of filteredCommandPicks) {\r\n                const existingCommandForLabel = mapLabelToCommand.get(commandPick.label);\r\n                if (existingCommandForLabel) {\r\n                    commandPick.description = commandPick.commandId;\r\n                    existingCommandForLabel.description = existingCommandForLabel.commandId;\r\n                }\r\n                else {\r\n                    mapLabelToCommand.set(commandPick.label, commandPick);\r\n                }\r\n            }\r\n            // Sort by MRU order and fallback to name otherwise\r\n            filteredCommandPicks.sort((commandPickA, commandPickB) => {\r\n                const commandACounter = this.commandsHistory.peek(commandPickA.commandId);\r\n                const commandBCounter = this.commandsHistory.peek(commandPickB.commandId);\r\n                if (commandACounter && commandBCounter) {\r\n                    return commandACounter > commandBCounter ? -1 : 1; // use more recently used command before older\r\n                }\r\n                if (commandACounter) {\r\n                    return -1; // first command was used, so it wins over the non used one\r\n                }\r\n                if (commandBCounter) {\r\n                    return 1; // other command was used so it wins over the command\r\n                }\r\n                // both commands were never used, so we sort by name\r\n                return commandPickA.label.localeCompare(commandPickB.label);\r\n            });\r\n            const commandPicks = [];\r\n            let addSeparator = false;\r\n            for (let i = 0; i < filteredCommandPicks.length; i++) {\r\n                const commandPick = filteredCommandPicks[i];\r\n                const keybinding = this.keybindingService.lookupKeybinding(commandPick.commandId);\r\n                const ariaLabel = keybinding ?\r\n                    localize('commandPickAriaLabelWithKeybinding', \"{0}, {1}\", commandPick.label, keybinding.getAriaLabel()) :\r\n                    commandPick.label;\r\n                // Separator: recently used\r\n                if (i === 0 && this.commandsHistory.peek(commandPick.commandId)) {\r\n                    commandPicks.push({ type: 'separator', label: localize('recentlyUsed', \"recently used\") });\r\n                    addSeparator = true;\r\n                }\r\n                // Separator: other commands\r\n                if (i !== 0 && addSeparator && !this.commandsHistory.peek(commandPick.commandId)) {\r\n                    commandPicks.push({ type: 'separator', label: localize('morecCommands', \"other commands\") });\r\n                    addSeparator = false; // only once\r\n                }\r\n                // Command\r\n                commandPicks.push(Object.assign(Object.assign({}, commandPick), { ariaLabel, detail: this.options.showAlias && commandPick.commandAlias !== commandPick.label ? commandPick.commandAlias : undefined, keybinding, accept: () => __awaiter(this, void 0, void 0, function* () {\r\n                        // Add to history\r\n                        this.commandsHistory.push(commandPick.commandId);\r\n                        // Telementry\r\n                        this.telemetryService.publicLog2('workbenchActionExecuted', {\r\n                            id: commandPick.commandId,\r\n                            from: 'quick open'\r\n                        });\r\n                        // Run\r\n                        try {\r\n                            yield this.commandService.executeCommand(commandPick.commandId);\r\n                        }\r\n                        catch (error) {\r\n                            if (!isPromiseCanceledError(error)) {\r\n                                this.dialogService.show(Severity.Error, localize('canNotRun', \"Command '{0}' resulted in an error ({1})\", commandPick.label, toErrorMessage(error)));\r\n                            }\r\n                        }\r\n                    }) }));\r\n            }\r\n            return commandPicks;\r\n        });\r\n    }\r\n};\r\nAbstractCommandsQuickAccessProvider.PREFIX = '>';\r\nAbstractCommandsQuickAccessProvider.WORD_FILTER = or(matchesPrefix, matchesWords, matchesContiguousSubString);\r\nAbstractCommandsQuickAccessProvider = __decorate([\r\n    __param(1, IInstantiationService),\r\n    __param(2, IKeybindingService),\r\n    __param(3, ICommandService),\r\n    __param(4, ITelemetryService),\r\n    __param(5, IDialogService)\r\n], AbstractCommandsQuickAccessProvider);\r\nexport { AbstractCommandsQuickAccessProvider };\r\nlet CommandsHistory = class CommandsHistory extends Disposable {\r\n    constructor(storageService, configurationService) {\r\n        super();\r\n        this.storageService = storageService;\r\n        this.configurationService = configurationService;\r\n        this.configuredCommandsHistoryLength = 0;\r\n        this.updateConfiguration();\r\n        this.load();\r\n        this.registerListeners();\r\n    }\r\n    registerListeners() {\r\n        this._register(this.configurationService.onDidChangeConfiguration(() => this.updateConfiguration()));\r\n    }\r\n    updateConfiguration() {\r\n        this.configuredCommandsHistoryLength = CommandsHistory.getConfiguredCommandHistoryLength(this.configurationService);\r\n        if (CommandsHistory.cache && CommandsHistory.cache.limit !== this.configuredCommandsHistoryLength) {\r\n            CommandsHistory.cache.limit = this.configuredCommandsHistoryLength;\r\n            CommandsHistory.saveState(this.storageService);\r\n        }\r\n    }\r\n    load() {\r\n        const raw = this.storageService.get(CommandsHistory.PREF_KEY_CACHE, 0 /* GLOBAL */);\r\n        let serializedCache;\r\n        if (raw) {\r\n            try {\r\n                serializedCache = JSON.parse(raw);\r\n            }\r\n            catch (error) {\r\n                // invalid data\r\n            }\r\n        }\r\n        const cache = CommandsHistory.cache = new LRUCache(this.configuredCommandsHistoryLength, 1);\r\n        if (serializedCache) {\r\n            let entries;\r\n            if (serializedCache.usesLRU) {\r\n                entries = serializedCache.entries;\r\n            }\r\n            else {\r\n                entries = serializedCache.entries.sort((a, b) => a.value - b.value);\r\n            }\r\n            entries.forEach(entry => cache.set(entry.key, entry.value));\r\n        }\r\n        CommandsHistory.counter = this.storageService.getNumber(CommandsHistory.PREF_KEY_COUNTER, 0 /* GLOBAL */, CommandsHistory.counter);\r\n    }\r\n    push(commandId) {\r\n        if (!CommandsHistory.cache) {\r\n            return;\r\n        }\r\n        CommandsHistory.cache.set(commandId, CommandsHistory.counter++); // set counter to command\r\n        CommandsHistory.saveState(this.storageService);\r\n    }\r\n    peek(commandId) {\r\n        var _a;\r\n        return (_a = CommandsHistory.cache) === null || _a === void 0 ? void 0 : _a.peek(commandId);\r\n    }\r\n    static saveState(storageService) {\r\n        if (!CommandsHistory.cache) {\r\n            return;\r\n        }\r\n        const serializedCache = { usesLRU: true, entries: [] };\r\n        CommandsHistory.cache.forEach((value, key) => serializedCache.entries.push({ key, value }));\r\n        storageService.store(CommandsHistory.PREF_KEY_CACHE, JSON.stringify(serializedCache), 0 /* GLOBAL */, 0 /* USER */);\r\n        storageService.store(CommandsHistory.PREF_KEY_COUNTER, CommandsHistory.counter, 0 /* GLOBAL */, 0 /* USER */);\r\n    }\r\n    static getConfiguredCommandHistoryLength(configurationService) {\r\n        var _a, _b;\r\n        const config = configurationService.getValue();\r\n        const configuredCommandHistoryLength = (_b = (_a = config.workbench) === null || _a === void 0 ? void 0 : _a.commandPalette) === null || _b === void 0 ? void 0 : _b.history;\r\n        if (typeof configuredCommandHistoryLength === 'number') {\r\n            return configuredCommandHistoryLength;\r\n        }\r\n        return CommandsHistory.DEFAULT_COMMANDS_HISTORY_LENGTH;\r\n    }\r\n};\r\nCommandsHistory.DEFAULT_COMMANDS_HISTORY_LENGTH = 50;\r\nCommandsHistory.PREF_KEY_CACHE = 'commandPalette.mru.cache';\r\nCommandsHistory.PREF_KEY_COUNTER = 'commandPalette.mru.counter';\r\nCommandsHistory.counter = 1;\r\nCommandsHistory = __decorate([\r\n    __param(0, IStorageService),\r\n    __param(1, IConfigurationService)\r\n], CommandsHistory);\r\nexport { CommandsHistory };\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { AbstractCommandsQuickAccessProvider } from '../../../platform/quickinput/browser/commandsQuickAccess.js';\r\nimport { stripIcons } from '../../../base/common/iconLabels.js';\r\nexport class AbstractEditorCommandsQuickAccessProvider extends AbstractCommandsQuickAccessProvider {\r\n    constructor(options, instantiationService, keybindingService, commandService, telemetryService, dialogService) {\r\n        super(options, instantiationService, keybindingService, commandService, telemetryService, dialogService);\r\n    }\r\n    getCodeEditorCommandPicks() {\r\n        const activeTextEditorControl = this.activeTextEditorControl;\r\n        if (!activeTextEditorControl) {\r\n            return [];\r\n        }\r\n        const editorCommandPicks = [];\r\n        for (const editorAction of activeTextEditorControl.getSupportedActions()) {\r\n            editorCommandPicks.push({\r\n                commandId: editorAction.id,\r\n                commandAlias: editorAction.alias,\r\n                label: stripIcons(editorAction.label) || editorAction.id,\r\n            });\r\n        }\r\n        return editorCommandPicks;\r\n    }\r\n}\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { Registry } from '../../../../platform/registry/common/platform.js';\r\nimport { Extensions } from '../../../../platform/quickinput/common/quickAccess.js';\r\nimport { QuickCommandNLS } from '../../../common/standaloneStrings.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { AbstractEditorCommandsQuickAccessProvider } from '../../../contrib/quickAccess/commandsQuickAccess.js';\r\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\r\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\r\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\r\nimport { IDialogService } from '../../../../platform/dialogs/common/dialogs.js';\r\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\r\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\r\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\r\nlet StandaloneCommandsQuickAccessProvider = class StandaloneCommandsQuickAccessProvider extends AbstractEditorCommandsQuickAccessProvider {\r\n    constructor(instantiationService, codeEditorService, keybindingService, commandService, telemetryService, dialogService) {\r\n        super({ showAlias: false }, instantiationService, keybindingService, commandService, telemetryService, dialogService);\r\n        this.codeEditorService = codeEditorService;\r\n    }\r\n    get activeTextEditorControl() { return withNullAsUndefined(this.codeEditorService.getFocusedCodeEditor()); }\r\n    getCommandPicks() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.getCodeEditorCommandPicks();\r\n        });\r\n    }\r\n};\r\nStandaloneCommandsQuickAccessProvider = __decorate([\r\n    __param(0, IInstantiationService),\r\n    __param(1, ICodeEditorService),\r\n    __param(2, IKeybindingService),\r\n    __param(3, ICommandService),\r\n    __param(4, ITelemetryService),\r\n    __param(5, IDialogService)\r\n], StandaloneCommandsQuickAccessProvider);\r\nexport { StandaloneCommandsQuickAccessProvider };\r\nRegistry.as(Extensions.Quickaccess).registerQuickAccessProvider({\r\n    ctor: StandaloneCommandsQuickAccessProvider,\r\n    prefix: StandaloneCommandsQuickAccessProvider.PREFIX,\r\n    helpEntries: [{ description: QuickCommandNLS.quickCommandHelp, needsEditor: true }]\r\n});\r\nexport class GotoLineAction extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.quickCommand',\r\n            label: QuickCommandNLS.quickCommandActionLabel,\r\n            alias: 'Command Palette',\r\n            precondition: undefined,\r\n            kbOpts: {\r\n                kbExpr: EditorContextKeys.focus,\r\n                primary: 59 /* F1 */,\r\n                weight: 100 /* EditorContrib */\r\n            },\r\n            contextMenuOpts: {\r\n                group: 'z_commands',\r\n                order: 1\r\n            }\r\n        });\r\n    }\r\n    run(accessor) {\r\n        accessor.get(IQuickInputService).quickAccess.show(StandaloneCommandsQuickAccessProvider.PREFIX);\r\n    }\r\n}\r\nregisterEditorAction(GotoLineAction);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\r\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\r\nimport { ReferencesController } from '../../../contrib/gotoSymbol/peek/referencesController.js';\r\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\r\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\r\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\r\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\r\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\r\nlet StandaloneReferencesController = class StandaloneReferencesController extends ReferencesController {\r\n    constructor(editor, contextKeyService, editorService, notificationService, instantiationService, storageService, configurationService) {\r\n        super(true, editor, contextKeyService, editorService, notificationService, instantiationService, storageService, configurationService);\r\n    }\r\n};\r\nStandaloneReferencesController = __decorate([\r\n    __param(1, IContextKeyService),\r\n    __param(2, ICodeEditorService),\r\n    __param(3, INotificationService),\r\n    __param(4, IInstantiationService),\r\n    __param(5, IStorageService),\r\n    __param(6, IConfigurationService)\r\n], StandaloneReferencesController);\r\nexport { StandaloneReferencesController };\r\nregisterEditorContribution(ReferencesController.ID, StandaloneReferencesController);\r\n", "/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\r\nimport { IStandaloneThemeService } from '../../common/standaloneThemeService.js';\r\nimport { ToggleHighContrastNLS } from '../../../common/standaloneStrings.js';\r\nclass ToggleHighContrast extends EditorAction {\r\n    constructor() {\r\n        super({\r\n            id: 'editor.action.toggleHighContrast',\r\n            label: ToggleHighContrastNLS.toggleHighContrast,\r\n            alias: 'Toggle High Contrast Theme',\r\n            precondition: undefined\r\n        });\r\n        this._originalThemeName = null;\r\n    }\r\n    run(accessor, editor) {\r\n        const standaloneThemeService = accessor.get(IStandaloneThemeService);\r\n        if (this._originalThemeName) {\r\n            // We must toggle back to the integrator's theme\r\n            standaloneThemeService.setTheme(this._originalThemeName);\r\n            this._originalThemeName = null;\r\n        }\r\n        else {\r\n            this._originalThemeName = standaloneThemeService.getColorTheme().themeName;\r\n            standaloneThemeService.setTheme('hc-black');\r\n        }\r\n    }\r\n}\r\nregisterEditorAction(ToggleHighContrast);\r\n"],
  "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",
  "names": []
}
