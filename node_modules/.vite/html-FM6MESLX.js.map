{
  "version": 3,
  "sources": ["../monaco-editor/esm/vs/basic-languages/html/html.js"],
  "sourcesContent": ["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { languages } from '../fillers/monaco-editor-core.js';\r\nvar EMPTY_ELEMENTS = [\r\n    'area',\r\n    'base',\r\n    'br',\r\n    'col',\r\n    'embed',\r\n    'hr',\r\n    'img',\r\n    'input',\r\n    'keygen',\r\n    'link',\r\n    'menuitem',\r\n    'meta',\r\n    'param',\r\n    'source',\r\n    'track',\r\n    'wbr'\r\n];\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\r\n    comments: {\r\n        blockComment: ['<!--', '-->']\r\n    },\r\n    brackets: [\r\n        ['<!--', '-->'],\r\n        ['<', '>'],\r\n        ['{', '}'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" },\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '<', close: '>' }\r\n    ],\r\n    onEnterRules: [\r\n        {\r\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n            afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\r\n            action: {\r\n                indentAction: languages.IndentAction.IndentOutdent\r\n            }\r\n        },\r\n        {\r\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n            action: { indentAction: languages.IndentAction.Indent }\r\n        }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*<!--\\\\s*#region\\\\b.*-->'),\r\n            end: new RegExp('^\\\\s*<!--\\\\s*#endregion\\\\b.*-->')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.html',\r\n    ignoreCase: true,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            [/<!DOCTYPE/, 'metatag', '@doctype'],\r\n            [/<!--/, 'comment', '@comment'],\r\n            [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, ['delimiter', 'tag', '', 'delimiter']],\r\n            [/(<)(script)/, ['delimiter', { token: 'tag', next: '@script' }]],\r\n            [/(<)(style)/, ['delimiter', { token: 'tag', next: '@style' }]],\r\n            [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, ['delimiter', { token: 'tag', next: '@otherTag' }]],\r\n            [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, ['delimiter', { token: 'tag', next: '@otherTag' }]],\r\n            [/</, 'delimiter'],\r\n            [/[^<]+/] // text\r\n        ],\r\n        doctype: [\r\n            [/[^>]+/, 'metatag.content'],\r\n            [/>/, 'metatag', '@pop']\r\n        ],\r\n        comment: [\r\n            [/-->/, 'comment', '@pop'],\r\n            [/[^-]+/, 'comment.content'],\r\n            [/./, 'comment.content']\r\n        ],\r\n        otherTag: [\r\n            [/\\/?>/, 'delimiter', '@pop'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/] // whitespace\r\n        ],\r\n        // -- BEGIN <script> tags handling\r\n        // After <script\r\n        script: [\r\n            [/type/, 'attribute.name', '@scriptAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@scriptEmbedded',\r\n                    nextEmbedded: 'text/javascript'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(script\\s*)(>)/, ['delimiter', 'tag', { token: 'delimiter', next: '@pop' }]]\r\n        ],\r\n        // After <script ... type\r\n        scriptAfterType: [\r\n            [/=/, 'delimiter', '@scriptAfterTypeEquals'],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@scriptEmbedded',\r\n                    nextEmbedded: 'text/javascript'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type =\r\n        scriptAfterTypeEquals: [\r\n            [\r\n                /\"([^\"]*)\"/,\r\n                {\r\n                    token: 'attribute.value',\r\n                    switchTo: '@scriptWithCustomType.$1'\r\n                }\r\n            ],\r\n            [\r\n                /'([^']*)'/,\r\n                {\r\n                    token: 'attribute.value',\r\n                    switchTo: '@scriptWithCustomType.$1'\r\n                }\r\n            ],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@scriptEmbedded',\r\n                    nextEmbedded: 'text/javascript'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <script ... type = $S2\r\n        scriptWithCustomType: [\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@scriptEmbedded.$S2',\r\n                    nextEmbedded: '$S2'\r\n                }\r\n            ],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/script\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        scriptEmbedded: [\r\n            [/<\\/script/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\r\n            [/[^<]+/, '']\r\n        ],\r\n        // -- END <script> tags handling\r\n        // -- BEGIN <style> tags handling\r\n        // After <style\r\n        style: [\r\n            [/type/, 'attribute.name', '@styleAfterType'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@styleEmbedded',\r\n                    nextEmbedded: 'text/css'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/(<\\/)(style\\s*)(>)/, ['delimiter', 'tag', { token: 'delimiter', next: '@pop' }]]\r\n        ],\r\n        // After <style ... type\r\n        styleAfterType: [\r\n            [/=/, 'delimiter', '@styleAfterTypeEquals'],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@styleEmbedded',\r\n                    nextEmbedded: 'text/css'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type =\r\n        styleAfterTypeEquals: [\r\n            [\r\n                /\"([^\"]*)\"/,\r\n                {\r\n                    token: 'attribute.value',\r\n                    switchTo: '@styleWithCustomType.$1'\r\n                }\r\n            ],\r\n            [\r\n                /'([^']*)'/,\r\n                {\r\n                    token: 'attribute.value',\r\n                    switchTo: '@styleWithCustomType.$1'\r\n                }\r\n            ],\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@styleEmbedded',\r\n                    nextEmbedded: 'text/css'\r\n                }\r\n            ],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        // After <style ... type = $S2\r\n        styleWithCustomType: [\r\n            [\r\n                />/,\r\n                {\r\n                    token: 'delimiter',\r\n                    next: '@styleEmbedded.$S2',\r\n                    nextEmbedded: '$S2'\r\n                }\r\n            ],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/],\r\n            [/<\\/style\\s*>/, { token: '@rematch', next: '@pop' }]\r\n        ],\r\n        styleEmbedded: [\r\n            [/<\\/style/, { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\r\n            [/[^<]+/, '']\r\n        ]\r\n        // -- END <style> tags handling\r\n    }\r\n};\r\n// TESTED WITH:\r\n// <!DOCTYPE html>\r\n// <html>\r\n// <head>\r\n//   <title>Monarch Workbench</title>\r\n//   <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n//   <!----\r\n//   -- -- -- a comment -- -- --\r\n//   ---->\r\n//   <style bah=\"bah\">\r\n//     body { font-family: Consolas; } /* nice */\r\n//   </style>\r\n// </head\r\n// >\r\n// a = \"asd\"\r\n// <body>\r\n//   <br/>\r\n//   <div\r\n//   class\r\n//   =\r\n//   \"test\"\r\n//   >\r\n//     <script>\r\n//       function() {\r\n//         alert(\"hi </ script>\"); // javascript\r\n//       };\r\n//     </script>\r\n//     <script\r\n// \tbah=\"asdfg\"\r\n// \ttype=\"text/css\"\r\n// \t>\r\n//   .bar { text-decoration: underline; }\r\n//     </script>\r\n//   </div>\r\n// </body>\r\n// </html>\r\n"],
  "mappings": "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",
  "names": []
}
